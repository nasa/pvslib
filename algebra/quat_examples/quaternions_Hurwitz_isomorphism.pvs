%------------------------------------------------------------------------------
% Authors:	
%		Bruno Berto de Oliveira Ribeiro
%		Universidade de Brasília - Brazil
%
%		Mauricio Ayala-Rincón
%		Universidade de Brasília - Brazil
%
% 		Thaynara Arielly de Lima
% 		Universidade Federal de Goiás - Brazil
%
%               Mariano M. Moscato
%               AMA @ NASA LaRC - USA
%
%------------------------------------------------------------------------------

quaternions_Hurwitz_isomorphism: THEORY

  BEGIN

  IMPORTING quaternions_Hurwitz_rings,
  	    algebra@ring_with_one_homomorphism,
	    algebra@ring_with_one_maximal_extra[quat,+,*,zero_q,one_q],
  	    quaternions_zp,
	    numbers@fermats_little_theorem,
	    algebra@ring_1st_isomorphism_theorem
	    
   p: VAR (prime?)

   % Homormorphism (phi) components
   
   phi_Hx(q: Hurwitz_ring, p: (prime?)): int = expt(2, p-1) * q`x
   phi_Hy(q: Hurwitz_ring, p: (prime?)): int = phi_Hx(q, p) + q`y - q`x
   phi_Hz(q: Hurwitz_ring, p: (prime?)): int = phi_Hx(q, p) + q`z - q`x
   phi_Ht(q: Hurwitz_ring, p: (prime?)): int = phi_Hx(q, p) + q`t - q`x

   % Homomorphism (phi) characterization
   phi_Hx_charac: LEMMA
    FORALL (x, y, z, t: int): rem(p)(phi_Hx(mk_Hurwitz(x, y, z, t), p)) =
    	       	     	      rem(p)(expt(2, p-2)*x)

   phi_Hy_charac: LEMMA
    FORALL (x, y, z, t: int): rem(p)(phi_Hy(mk_Hurwitz(x, y, z, t), p)) =
    	       	     	      rem(p)(expt(2, p-2)*x+y)

   phi_Hz_charac: LEMMA
    FORALL (x, y, z, t: int): rem(p)(phi_Hz(mk_Hurwitz(x, y, z, t), p)) =
    	       	     	      rem(p)(expt(2, p-2)*x+z)

   phi_Ht_charac: LEMMA
    FORALL (x, y, z, t: int): rem(p)(phi_Ht(mk_Hurwitz(x, y, z, t), p)) =
    	       	     	      rem(p)(expt(2, p-2)*x+t)

   % Auxiliary proofs
   four_prod_sum_rem_split: LEMMA
     FORALL(a1, a2, b1, b2, c1, c2, d1, d2: int):
       rem(p)(a1*a2 + b1*b2 + c1*c2 + d1*d2) =
         rem(p)(rem(p)(rem(p)(a1)*rem(p)(a2)) +
                rem(p)(rem(p)(b1)*rem(p)(b2)) +
	        rem(p)(rem(p)(c1)*rem(p)(c2)) +
		rem(p)(rem(p)(d1)*rem(p)(d2)))

   rem_neg: LEMMA
     FORALL(x: posnat, y: int): rem(x)(-y) = rem(x)(-rem(x)(y))

   rem_pow_2_id: LEMMA
     p /= 2 => rem(p)(expt(2, p-1)) = 1

   rem_prod_sum_aux1: LEMMA
     FORALL(x, y, z: int): p /= 2 => rem(p)(x+(2 * expt(2, p - 2)) *y +z) =
     	       		             rem(p)(x+y+z)

   rem_prod_sum_aux2: LEMMA
     FORALL(x, y, z: int): p /= 2 => rem(p)(x - (2 * expt(2, p - 2)) * y + z) =
     	       		             rem(p)(x - y + z)

   prod_identity_aux: LEMMA
     FORALL(x, y: int): 2 * (expt(2, p - 2) * x * y) =
     	       	  	(2 * expt(2, p - 2)) * (x * y)
 
   % Product homomorphism
   iso_quot_Hurwitz_zp_prod1: LEMMA
     FORALL(a, b: Hurwitz_ring):  p /= 2 => phi_Hx((a * b), p) + nZ(p) =
       phi_Hx(a, p) * phi_Hx(b, p) - phi_Hy(a, p) * phi_Hy(b, p) -
       phi_Hz(a, p) * phi_Hz(b, p) - phi_Ht(a, p) * phi_Ht(b, p) + nZ(p)

   iso_quot_Hurwitz_zp_prod2: LEMMA
     FORALL(a, b: Hurwitz_ring):  p /= 2 => phi_Hy((a * b), p) + nZ(p) =
       phi_Hx(a, p) * phi_Hy(b, p) + phi_Hy(a, p) * phi_Hx(b, p) +
       phi_Hz(a, p) * phi_Ht(b, p) - phi_Ht(a, p) * phi_Hz(b, p) + nZ(p)

   iso_quot_Hurwitz_zp_prod3: LEMMA
     FORALL(a, b: Hurwitz_ring):  p /= 2 => phi_Hz((a * b), p) + nZ(p) =
       phi_Hx(a, p) * phi_Hz(b, p) - phi_Hy(a, p) * phi_Ht(b, p) +
       phi_Hz(a, p) * phi_Hx(b, p) + phi_Ht(a, p) * phi_Hy(b, p) + nZ(p)

   iso_quot_Hurwitz_zp_prod4: LEMMA
     FORALL(a, b: Hurwitz_ring):  p /= 2 => phi_Ht((a * b), p) + nZ(p) =
       phi_Hx(a, p) * phi_Ht(b, p) + phi_Hy(a, p) * phi_Hz(b, p) -
       phi_Hz(a, p) * phi_Hy(b, p) + phi_Ht(a, p) * phi_Hx(b, p) + nZ(p)
   
   isomorphism_quot_Hurwitz_zp_prod: LEMMA
       FORALL(a, b: Hurwitz_ring):
         p /= 2 => (# x := (phi_Hx((a * b), p) + nZ(p)),
                      y := (phi_Hy((a * b), p) + nZ(p)),
                      z := (phi_Hz((a * b), p) + nZ(p)),
                      t := (phi_Ht((a * b), p) + nZ(p)) #) =
      (# x := phi_Hx(a, p) * phi_Hx(b, p) - phi_Hy(a, p) * phi_Hy(b, p) -
              phi_Hz(a, p) * phi_Hz(b, p) - phi_Ht(a, p) * phi_Ht(b, p) + nZ(p),
         y := phi_Hx(a, p) * phi_Hy(b, p) + phi_Hy(a, p) * phi_Hx(b, p) +
              phi_Hz(a, p) * phi_Ht(b, p) - phi_Ht(a, p) * phi_Hz(b, p) + nZ(p),
         z := phi_Hx(a, p) * phi_Hz(b, p) - phi_Hy(a, p) * phi_Ht(b, p) +
              phi_Hz(a, p) * phi_Hx(b, p) + phi_Ht(a, p) * phi_Hy(b, p) + nZ(p),
         t := phi_Hx(a, p) * phi_Ht(b, p) + phi_Hy(a, p) * phi_Hz(b, p) -
	      phi_Hz(a, p) * phi_Hy(b, p) + phi_Ht(a, p) * phi_Hx(b, p) + nZ(p) #)

    phi_Hurwitz_quat_zp(p: (prime?))(q: Hurwitz_ring): quat_coset_Zp(p) =
    			   (# x:= +(phi_Hx(q,p),nZ(p)), y:= +(phi_Hy(q,p),nZ(p)),
	                    z:= +(phi_Hz(q,p),nZ(p)), t:= +(phi_Ht(q,p),nZ(p)) #)

    isomorphism_quot_Hurwitz_zp_aux: LEMMA
    	  p /= 2 => (R_epimorphism?[quat[rational,+,*,0,1,-1,-1],+, *, zero_q,
    				   quat_coset_Zp(p),
    				   add_qcZp(p),
    		                   mul_qcZp(p),
    		                   zero_qcZp(p)]
	   (Hurwitz_ring, fullset[quat_coset_Zp(p)])(phi_Hurwitz_quat_zp(p)))


    isomorphism_quot_Hurwitz_zp_aux2: LEMMA
        p /= 2 => R_kernel[quat[rational,+,*,0,1,-1,-1],+, *, zero_q,
    				   quat_coset_Zp(p),
    				   add_qcZp(p),
    		                   mul_qcZp(p),
    		                   zero_qcZp(p)]
    	  (Hurwitz_ring, fullset[quat_coset_Zp(p)])(phi_Hurwitz_quat_zp(p)) = prime_mult_Hurwitz(p)


    isomorphism_quot_Hurwitz_zp: THEOREM
      p /= 2 =>  R_isomorphic?[coset[quat[rational,+,*,0,1,-1,-1],+](Hurwitz_ring,prime_mult_Hurwitz(p)),
                    add[quat[rational,+,*,0,1,-1,-1],+](Hurwitz_ring,prime_mult_Hurwitz(p)),
                    product[quat[rational,+,*,0,1,-1,-1],+,*](Hurwitz_ring,prime_mult_Hurwitz(p)),
                    prime_mult_Hurwitz(p),
    			           quat_coset_Zp(p),
    				   add_qcZp(p),
    		                   mul_qcZp(p),
    		                   zero_qcZp(p)]
    	  (/[quat[rational,+,*,0,1,-1,-1],+](Hurwitz_ring,prime_mult_Hurwitz(p)),
	   fullset[quat_coset_Zp(p)])
   
    quot_zp_is_not_div_ring: THEOREM
       p /= 2 IMPLIES
        NOT division_ring?[
	      coset[quat[rational,+,*,0,1,-1,-1],+](Hurwitz_ring,prime_mult_Hurwitz(p)),
              add[quat[rational,+,*,0,1,-1,-1],+](Hurwitz_ring,prime_mult_Hurwitz(p)),
              product[quat[rational,+,*,0,1,-1,-1],+,*](Hurwitz_ring,prime_mult_Hurwitz(p)),
              prime_mult_Hurwitz(p),
              +[quat[rational,+,*,0,1,-1,-1],+](one_q,prime_mult_Hurwitz(p))]
              (/[quat[rational,+,*,0,1,-1,-1],+](Hurwitz_ring,prime_mult_Hurwitz(p)))

  END quaternions_Hurwitz_isomorphism
