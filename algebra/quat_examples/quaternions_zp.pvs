%------------------------------------------------------------------------------
% Authors:	
%		Bruno Berto de Oliveira Ribeiro
%		Universidade de Brasília - Brazil
%
%		Mauricio Ayala-Rincón
%		Universidade de Brasília - Brazil
%
% 		Thaynara Arielly de Lima
% 		Universidade Federal de Goiás - Brazil
%
%               Mariano M. Moscato
%               AMA @ NASA LaRC - USA
%
%------------------------------------------------------------------------------

quaternions_zp: THEORY

  BEGIN

   
  IMPORTING algebra_examples@ring_zn_extra,
	    algebra@quaternions_def, 
            algebra@quaternions,
	    zp_diophantine
  

  quat_coset_Zp(p:(prime?)):  Type = quat[(coset?(Z,nZ(p))),add[int,+](Z,nZ(p)),product[int,+,*](Z,nZ(p)),nZ(p),+(1,nZ(p)),+(p-1,nZ(p)),+(p-1,nZ(p))]

 p: VAR (prime?)

  % multiplication, addition and constants zero_q and one_a for the quaternion coset Zp
  mul_qcZp(p):  macro [quat_coset_Zp(p),quat_coset_Zp(p)->quat_coset_Zp(p)]  =
                         algebra@quaternions_def[(coset?(Z,nZ(p))),add[int,+](Z,nZ(p)),product[int,+,*](Z,nZ(p)),nZ(p),+(1,nZ(p)),+(p-1,nZ(p)),+(p-1,nZ(p))].* 
  add_qcZp(p):  macro [quat_coset_Zp(p),quat_coset_Zp(p)->quat_coset_Zp(p)]  =
                         algebra@quaternions_def[(coset?(Z,nZ(p))),add[int,+](Z,nZ(p)),product[int,+,*](Z,nZ(p)),nZ(p),+(1,nZ(p)),+(p-1,nZ(p)),+(p-1,nZ(p))].+
  zero_qcZp(p): macro quat_coset_Zp(p)  =
     		 	 algebra@quaternions_def[(coset?(Z,nZ(p))),add[int,+](Z,nZ(p)),product[int,+,*](Z,nZ(p)),nZ(p),+(1,nZ(p)),+(p-1,nZ(p)),+(p-1,nZ(p))].zero_q
  one_qcZp(p):  macro quat_coset_Zp(p)  =
   			 algebra@quaternions_def[(coset?(Z,nZ(p))),add[int,+](Z,nZ(p)),product[int,+,*](Z,nZ(p)),nZ(p),+(1,nZ(p)),+(p-1,nZ(p)),+(p-1,nZ(p))].one_q

  quat_Zp(p): set[quat_coset_Zp(p)] = fullset[quat_coset_Zp(p)]

  quat_zp_is_ring_w_one: LEMMA
    ring_with_one?[quat_coset_Zp(p),
  				   add_qcZp(p),
  		                   mul_qcZp(p),
  		                   zero_qcZp(p),
  		                   one_qcZp(p)]
  		      (quat_Zp(p))


  mk_quat_Zp(x, y, z, t: int, p: (prime?)): MACRO quat_coset_Zp(p) =
  		(# x := x+nZ(p), y := y+nZ(p), z := z+nZ(p), t := t+nZ(p) #) 

  quat_Zp_prod_charac: LEMMA
    FORALL (a1, b1, c1, d1: int, a2, b2, c2, d2: int):
       mul_qcZp(p)(mk_quat_Zp(a1, b1, c1, d1, p), mk_quat_Zp(a2, b2, c2, d2,p)) =
          mk_quat_Zp(a1*a2 - b1*b2 - c1*c2 - d1*d2,
	             a1*b2 + b1*a2 + c1*d2 - d1*c2,
	  	     a1*c2 - b1*d2 + c1*a2 + d1*b2,
	  	     a1*d2 + b1*c2 - c1*b2 + d1*a2, p)
    	     
  quat_Zp_odd_not_div_ring: LEMMA
  p /= 2 IMPLIES NOT division_ring?[quat_coset_Zp(p),
  				   add_qcZp(p),
  		                   mul_qcZp(p),
  		                   zero_qcZp(p),
  		                   one_qcZp(p)]
  		      (quat_Zp(p))


  END quaternions_zp
