(|ring_2nd_3rd_isomorphism_theorems|
 (|IMP_quotient_rings_TCC1| 0
  (|IMP_quotient_rings_TCC1-1| |nil| 3757773133
   ("" (REWRITE "fullsetT_is_ring") NIL NIL) NIL NIL
   (|IMP_quotient_rings| ASSUMING
    "quotient_rings[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*, ring_2nd_3rd_isomorphism_theorems.zero].quotient_rings"
    "fullset_is_ring: ASSUMPTION ring_def[quotient_rings.T, quotient_rings.+, quotient_rings.*, quotient_rings.zero].ring?(sets[quotient_rings.T].fullset)"
    (36 5 36 31))))
 (S_TCC1 0
  (S_TCC1-1 |nil| 3757773133 ("" (REWRITE "fullsetD_is_ring") NIL NIL) NIL NIL
   (S ASSUMING
    "ring[ring_2nd_3rd_isomorphism_theorems.D, ring_2nd_3rd_isomorphism_theorems.s, ring_2nd_3rd_isomorphism_theorems.p, ring_2nd_3rd_isomorphism_theorems.zerod].ring"
    "fullset_is_ring: ASSUMPTION ring_def[ring.T, ring.+, ring.*, ring.zero].ring?(sets[ring.T].fullset)"
    (41 8 41 25))))
 (|second_isomorphism_th_ax_TCC1| 0
  (|second_isomorphism_th_ax_TCC1-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (INST 1 "I!1")
      (("" (REWRITE "ideal_is_coset")
        (("1" (HIDE 2)
          (("1" (LEMMA "sum_is_ideal")
            (("1" (INST?) (("1" (INST -1 "R!1") (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "sum_subring_ideal")
            (("2" (INST?)
              (("2" (INST -1 "R!1")
                (("2" (ASSERT)
                  (("2" (EXPAND "subring?") (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL))
   NIL
   (|second_isomorphism_th_ax| EXISTENCE ""
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    (52 7 53 78))))
 (|second_isomorphism_th_ax_TCC2| 0
  (|second_isomorphism_th_ax_TCC2-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add")
      (("" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "sum_is_ideal")
            (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "sum_subring_ideal")
            (("3" (INST -1 "H!1" "I!1" "R!1")
              (("3" (ASSERT)
                (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL))
   NIL
   (|second_isomorphism_th_ax| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)]"
    (52 7 53 78))))
 (|second_isomorphism_th_ax_TCC3| 0
  (|second_isomorphism_th_ax_TCC3-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "sum_is_ideal")
            (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "sum_subring_ideal")
            (("3" (INST -1 "H!1" "I!1" "R!1")
              (("3" (ASSERT)
                (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL))
   NIL
   (|second_isomorphism_th_ax| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)]"
    (52 7 53 78))))
 (|second_isomorphism_th_ax_TCC4| 0
  (|second_isomorphism_th_ax_TCC4-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (REWRITE "ideal_is_coset")
      (("1" (HIDE 2)
        (("1" (LEMMA "sum_is_ideal")
          (("1" (INST -1 "H!1" "I!1" "R!1") (("1" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (LEMMA "sum_subring_ideal")
          (("2" (INST -1 "H!1" "I!1" "R!1")
            (("2" (ASSERT)
              (("2" (EXPAND "subring?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL))
   NIL
   (|second_isomorphism_th_ax| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.I"
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    (52 7 53 78))))
 (|second_isomorphism_th_ax_TCC5| 0
  (|second_isomorphism_th_ax_TCC5-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (SPLIT)
      (("1" (SKOSIMP)
        (("1" (EXPAND "restrict")
          (("1" (TYPEPRED "phi!1(x1!1)")
            (("1" (EXPAND "/" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|lproduct| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|right_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|star_closed?| CONST-DECL "bool" |groupoid_def| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   NIL
   (|second_isomorphism_th_ax| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.phi"
    "R_homomorphism[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*, ring_2nd_3rd_isomorphism_theorems.zero, coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I](ring_2nd_3rd_isomorphism_theorems.H, restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)))"
    (57 25 57 28))))
 (|second_isomorphism_th_ax| 0
  (|second_isomorphism_th_ax-2| |nil| 3807094236
   ("" (SKOSIMP)
    (("" (INST 1 "(LAMBDA (h:(H!1)): h+I!1)")
      (("1"
        (CASE "R_homomorphism?[T, +, *, zero, coset[T, +](sum(H!1, I!1), I!1),
                                      add(sum(H!1, I!1), I!1), product(sum(H!1, I!1), I!1), I!1](H!1,sum(H!1, I!1) / I!1)(LAMBDA (h: (H!1)): h + I!1)")
        (("1" (SPLIT)
          (("1" (EXPAND "R_epimorphism?")
            (("1" (SPLIT)
              (("1" (EXPAND "surjective?")
                (("1" (SKOSIMP)
                  (("1" (TYPEPRED "y!1")
                    (("1" (LEMMA "lcoset_iff_coset")
                      (("1" (INST -1 "y!1" "I!1" "sum(H!1, I!1)")
                        (("1" (ASSERT)
                          (("1" (EXPAND "left_coset?")
                            (("1" (SKOSIMP)
                              (("1" (TYPEPRED "a!1")
                                (("1" (EXPAND "sum")
                                  (("1" (SKOSIMP)
                                    (("1" (REPLACES -1)
                                      (("1" (REPLACES -1)
                                        (("1" (INST 1 "h!1")
                                          (("1" (HIDE -1 -2)
                                            (("1" (DECOMPOSE-EQUALITY)
                                              (("1" (IFF)
                                                (("1" (PROP)
                                                  (("1" (EXPAND "+")
                                                    (("1" (SKOSIMP)
                                                      (("1"
                                                        (INST 1 "inv(k!1)+h!2")
                                                        (("1"
                                                          (REWRITE
                                                           "plus_associative")
                                                          (("1"
                                                            (REWRITE
                                                             "plus_associative"
                                                             :DIR RL)
                                                            NIL NIL))
                                                          NIL)
                                                         ("2"
                                                          (REWRITE
                                                           "ideal_equiv")
                                                          (("2" (FLATTEN)
                                                            (("2" (HIDE -4 -5)
                                                              (("2"
                                                                (INST -4 "h!2"
                                                                 "k!1" "h!1")
                                                                (("1"
                                                                  (REWRITE
                                                                   "plus_commutative"
                                                                   1)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (EXPAND
                                                                   "subring?")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "subset?")
                                                                    (("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (INST
                                                                         -3
                                                                         "h!1")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE -2)
                                                    (("2" (EXPAND "+")
                                                      (("2" (SKOSIMP)
                                                        (("2"
                                                          (INST 1 "k!1 + h!2")
                                                          (("1"
                                                            (REWRITE
                                                             "plus_associative"
                                                             -1)
                                                            NIL NIL)
                                                           ("2"
                                                            (EXPAND "ideal?")
                                                            (("2"
                                                              (EXPAND
                                                               "left_ideal?")
                                                              (("2"
                                                                (EXPAND
                                                                 "subring?")
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     (-5 1))
                                                                    (("2"
                                                                      (LEMMA
                                                                       "R_sum_star_closed[T,+,*,zero]")
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "I!1"
                                                                         "k!1"
                                                                         "h!2")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (PROPAX) NIL NIL))
              NIL))
            NIL)
           ("2" (WITH-TCCS (DECOMPOSE-EQUALITY))
            (("2" (IFF)
              (("2" (PROP)
                (("1" (EXPAND "R_kernel")
                  (("1" (FLATTEN)
                    (("1" (EXPAND "intersection")
                      (("1" (HIDE -2 -4)
                        (("1" (ASSERT)
                          (("1" (LEMMA "self_coset")
                            (("1" (INST -1 "I!1" "R!1" "x!1")
                              (("1" (EXPAND "ideal?")
                                (("1" (EXPAND "left_ideal?")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -2)
                  (("2" (EXPAND "R_kernel")
                    (("2" (EXPAND "intersection")
                      (("2" (EXPAND "member")
                        (("2" (PROP)
                          (("1" (EXPAND "restrict")
                            (("1" (EXPAND "/")
                              (("1" (LEMMA "lcoset_iff_coset")
                                (("1" (INST -1 "I!1" "I!1" "sum(H!1,I!1)")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "left_coset?")
                                      (("1" (INST 1 "zero")
                                        (("1" (REWRITE "left_zero") NIL NIL)
                                         ("2" (EXPAND "sum")
                                          (("2" (INST 1 "zero" "zero")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (HIDE-ALL-BUT (-4 1))
                                              (("2" (EXPAND "ideal?")
                                                (("2" (EXPAND "left_ideal?")
                                                  (("2" (EXPAND "subring?")
                                                    (("2" (FLATTEN)
                                                      (("2"
                                                        (LEMMA
                                                         "zero_is_member_R[T,+,*,zero]")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (EXPAND "subring?")
                                              (("3" (FLATTEN)
                                                (("3" (HIDE-ALL-BUT (-4 1))
                                                  (("3"
                                                    (LEMMA
                                                     "zero_is_member_R[T,+,*,zero]")
                                                    (("3" (INST -1 "H!1")
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "self_coset")
                            (("2" (INST -1 "I!1" "R!1" "x!1")
                              (("2" (EXPAND "ideal?")
                                (("2" (EXPAND "left_ideal?")
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (EXPAND "R_homomorphism?")
            (("2" (SPLIT)
              (("1" (EXPAND "subring?")
                (("1" (EXPAND "star_closed?")
                  (("1" (EXPAND "ring?")
                    (("1" (EXPAND "abelian_group?")
                      (("1" (EXPAND "group?")
                        (("1" (EXPAND "monoid?")
                          (("1" (EXPAND "monad?")
                            (("1" (FLATTEN)
                              (("1" (HIDE-ALL-BUT (-2 1))
                                (("1" (EXPAND "star_closed?")
                                  (("1" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "subring?")
                (("2" (EXPAND "ring?") (("2" (FLATTEN) NIL NIL)) NIL)) NIL)
               ("3" (EXPAND "star_closed?")
                (("3" (SKOSIMP)
                  (("3" (EXPAND "member")
                    (("3" (EXPAND "restrict")
                      (("3" (LEMMA "quotient_group_is_abelian_group")
                        (("3" (INST -1 "sum(H!1,I!1)" "I!1")
                          (("1" (EXPAND "abelian_group?")
                            (("1" (EXPAND "group?")
                              (("1" (EXPAND "monoid?")
                                (("1" (EXPAND "monad?")
                                  (("1" (FLATTEN)
                                    (("1" (HIDE-ALL-BUT (-1 1))
                                      (("1" (EXPAND "star_closed?")
                                        (("1" (INST -1 "x!1" "y!1")
                                          (("1" (EXPAND "member")
                                            (("1" (EXPAND "restrict")
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "sum_is_ideal")
                            (("2" (INST?)
                              (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (LEMMA "sum_subring_ideal")
                            (("3" (INST?)
                              (("3" (INST -1 "R!1")
                                (("3" (ASSERT)
                                  (("3" (EXPAND "subring?")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("4" (LEMMA "quotient_group_is_ring")
                (("4" (INST -1 "sum(H!1, I!1)" "I!1")
                  (("1" (EXPAND "ring?") (("1" (FLATTEN) NIL NIL)) NIL)
                   ("2" (LEMMA "sum_is_ideal")
                    (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL)
                   ("3" (LEMMA "sum_subring_ideal")
                    (("3" (INST -1 "H!1" "I!1" "R!1")
                      (("3" (ASSERT)
                        (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("5" (EXPAND "homomorphism?")
                (("5" (LEMMA "add_charac")
                  (("5" (SKOSIMP)
                    (("5" (INST -1 "sum(H!1, I!1)" "I!1" "a!1" "b!1")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "sum")
                        (("2" (INST 1 "b!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (EXPAND "sum")
                        (("3" (INST 1 "a!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (LEMMA "sum_is_ideal")
                        (("4" (INST -1 "H!1" "I!1" "R!1")
                          (("4" (ASSERT) NIL NIL)) NIL))
                        NIL)
                       ("5" (LEMMA "sum_subring_ideal")
                        (("5" (INST -1 "H!1" "I!1" "R!1")
                          (("5" (ASSERT)
                            (("5" (EXPAND "subring?") (("5" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("6" (EXPAND "homomorphism?")
                (("6" (SKOSIMP)
                  (("6" (LEMMA "product_charac")
                    (("6" (INST -1 "sum(H!1, I!1)" "I!1" "a!1" "b!1")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "sum")
                        (("2" (INST 1 "b!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (EXPAND "sum")
                        (("3" (INST 1 "a!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (LEMMA "sum_is_ideal")
                        (("4" (INST?)
                          (("4" (INST -1 "R!1") (("4" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("5" (LEMMA "sum_subring_ideal")
                        (("5" (INST?)
                          (("5" (INST -1 "R!1")
                            (("5" (ASSERT)
                              (("5" (EXPAND "subring?")
                                (("5" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "lcoset_iff_coset")
            (("3" (INST -1 "I!1" "I!1" "sum(H!1,I!1)")
              (("3" (ASSERT)
                (("3" (EXPAND "left_coset?")
                  (("3" (INST 1 "zero")
                    (("1" (REWRITE "left_zero") NIL NIL)
                     ("2" (EXPAND "sum")
                      (("2" (INST 1 "zero" "zero")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "ideal?")
                          (("2" (EXPAND "left_ideal?")
                            (("2" (EXPAND "subring?")
                              (("2" (FLATTEN)
                                (("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "I!1")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (EXPAND "subring?")
                          (("3" (FLATTEN)
                            (("3" (LEMMA "zero_is_member_R[T,+,*,zero]")
                              (("3" (INST -1 "H!1") (("3" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (HIDE 2)
          (("4" (SKOSIMP)
            (("4" (LEMMA "coset_product")
              (("4" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                (("1" (ASSERT) NIL NIL)
                 ("2" (LEMMA "sum_is_ideal")
                  (("2" (INST?)
                    (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("3" (LEMMA "sum_subring_ideal")
                  (("3" (INST?)
                    (("3" (INST -1 "R!1")
                      (("3" (ASSERT)
                        (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("5" (HIDE 2)
          (("5" (SKOSIMP)
            (("5" (LEMMA "coset_add")
              (("5" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                (("1" (ASSERT) NIL NIL)
                 ("2" (LEMMA "sum_is_ideal")
                  (("2" (INST?)
                    (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("3" (LEMMA "sum_subring_ideal")
                  (("3" (INST?)
                    (("3" (INST -1 "R!1")
                      (("3" (ASSERT)
                        (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("6" (HIDE 2)
          (("6" (INST 1 "zero+I!1")
            (("6" (LEMMA "lcoset_iff_coset")
              (("6" (INST -1 "zero+I!1" "I!1" "sum(H!1,I!1)")
                (("6" (ASSERT)
                  (("6" (EXPAND "left_coset?")
                    (("6" (INST 1 "zero")
                      (("6" (EXPAND "sum")
                        (("6" (INST 1 "zero" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                    (("2" (INST -1 "I!1")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (EXPAND "subring?")
                            (("3" (FLATTEN)
                              (("3" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                (("3" (INST -1 "H!1") (("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("7" (HIDE 2)
          (("7" (EXPAND "/")
            (("7" (SKOSIMP)
              (("7" (LEMMA "lcoset_iff_coset")
                (("7" (INST -1 "h!1+I!1" "I!1" "sum(H!1,I!1)")
                  (("7" (ASSERT)
                    (("7" (EXPAND "left_coset?")
                      (("7" (INST 1 "h!1")
                        (("7" (EXPAND "sum")
                          (("7" (INST 1 "h!1" "zero")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "ideal?")
                              (("2" (EXPAND "left_ideal?")
                                (("2" (EXPAND "subring?")
                                  (("2" (FLATTEN)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOSIMP)
        (("2" (EXPAND "/")
          (("2" (LEMMA "lcoset_iff_coset")
            (("2" (INST -1 "h!1+I!1" "I!1" "sum(H!1,I!1)")
              (("2" (ASSERT)
                (("2" (EXPAND "left_coset?")
                  (("2" (INST 1 "h!1")
                    (("2" (EXPAND "sum")
                      (("2" (INST 1 "h!1" "zero")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "ideal?")
                          (("2" (EXPAND "left_ideal?")
                            (("2" (EXPAND "subring?")
                              (("2" (FLATTEN)
                                (("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "I!1")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((+ CONST-DECL "set[T]" |cosets_def| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|star_closed?| CONST-DECL "bool" |groupoid_def| NIL)
    (|abelian_group?| CONST-DECL "bool" |group_def| NIL)
    (|monoid?| CONST-DECL "bool" |monoid_def| NIL)
    (|monad?| CONST-DECL "bool" |monad_def| NIL)
    (|group?| CONST-DECL "bool" |group_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|quotient_group_is_abelian_group| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|add_charac| FORMULA-DECL NIL |quotient_rings| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|product_charac| FORMULA-DECL NIL |quotient_rings| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal_equiv| FORMULA-DECL NIL |ring_ideal| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|plus_commutative| FORMULA-DECL NIL |ring| NIL)
    (|plus_associative| FORMULA-DECL NIL |ring| NIL)
    (|zero_plus| FORMULA-DECL NIL |ring| NIL)
    (|negate_is_right_inv| FORMULA-DECL NIL |ring| NIL)
    (|inv| CONST-DECL "{y | x * y = one AND y * x = one}" |group| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|R_sum_star_closed| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|plus_zero| FORMULA-DECL NIL |ring| NIL)
    (|left_zero| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|self_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL))
   NIL)
  (|second_isomorphism_th_ax-1| |nil| 3758880532
   ("" (SKOSIMP)
    (("" (INST 1 "(LAMBDA (h:(H!1)): h+I!1)")
      (("1"
        (CASE "R_homomorphism?[T, +, *, zero, coset[T, +](sum(H!1, I!1), I!1),
                             add(sum(H!1, I!1), I!1), product(sum(H!1, I!1), I!1), I!1](H!1,sum(H!1, I!1) / I!1)(LAMBDA (h: (H!1)): h + I!1)")
        (("1" (SPLIT)
          (("1" (EXPAND "R_epimorphism?")
            (("1" (SPLIT)
              (("1" (EXPAND "surjective?")
                (("1" (SKOSIMP)
                  (("1" (TYPEPRED "y!1")
                    (("1" (LEMMA "lcoset_iff_coset")
                      (("1" (INST -1 "y!1" "I!1" "sum(H!1, I!1)")
                        (("1" (ASSERT)
                          (("1" (EXPAND "left_coset?")
                            (("1" (SKOSIMP)
                              (("1" (TYPEPRED "a!1")
                                (("1" (EXPAND "sum")
                                  (("1" (SKOSIMP)
                                    (("1" (REPLACES -1)
                                      (("1" (REPLACES -1)
                                        (("1" (INST 1 "h!1")
                                          (("1" (HIDE -1 -2)
                                            (("1" (DECOMPOSE-EQUALITY)
                                              (("1" (IFF)
                                                (("1" (PROP)
                                                  (("1" (EXPAND "+")
                                                    (("1" (SKOSIMP)
                                                      (("1" (INST 1 "-k!1+h!2")
                                                        (("1"
                                                          (REWRITE
                                                           "plus_associative")
                                                          (("1"
                                                            (REWRITE
                                                             "plus_associative"
                                                             :DIR RL)
                                                            NIL NIL))
                                                          NIL)
                                                         ("2"
                                                          (REWRITE
                                                           "ideal_equiv")
                                                          (("2" (FLATTEN)
                                                            (("2" (HIDE -4 -5)
                                                              (("2"
                                                                (INST -4 "h!2"
                                                                 "k!1" "h!1")
                                                                (("1"
                                                                  (REWRITE
                                                                   "plus_commutative"
                                                                   1)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (EXPAND
                                                                   "subring?")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "subset?")
                                                                    (("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (INST
                                                                         -3
                                                                         "h!1")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE -2)
                                                    (("2" (EXPAND "+")
                                                      (("2" (SKOSIMP)
                                                        (("2"
                                                          (INST 1 "k!1 + h!2")
                                                          (("1"
                                                            (REWRITE
                                                             "plus_associative"
                                                             -1)
                                                            NIL NIL)
                                                           ("2"
                                                            (EXPAND "ideal?")
                                                            (("2"
                                                              (EXPAND
                                                               "left_ideal?")
                                                              (("2"
                                                                (EXPAND
                                                                 "subring?")
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     (-5 1))
                                                                    (("2"
                                                                      (LEMMA
                                                                       "R_sum_star_closed[T,+,*,zero]")
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "I!1"
                                                                         "k!1"
                                                                         "h!2")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (PROPAX) NIL NIL))
              NIL))
            NIL)
           ("2" (DECOMPOSE-EQUALITY)
            (("1" (IFF)
              (("1" (PROP)
                (("1" (EXPAND "R_kernel")
                  (("1" (FLATTEN)
                    (("1" (EXPAND "intersection")
                      (("1" (HIDE -2 -4)
                        (("1" (ASSERT)
                          (("1" (LEMMA "self_coset")
                            (("1" (INST -1 "I!1" "R!1" "x!1")
                              (("1" (EXPAND "ideal?")
                                (("1" (EXPAND "left_ideal?")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -2)
                  (("2" (EXPAND "R_kernel")
                    (("2" (EXPAND "intersection")
                      (("2" (EXPAND "member")
                        (("2" (PROP)
                          (("1" (EXPAND "restrict")
                            (("1" (EXPAND "/")
                              (("1" (LEMMA "lcoset_iff_coset")
                                (("1" (INST -1 "I!1" "I!1" "sum(H!1,I!1)")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "left_coset?")
                                      (("1" (INST 1 "zero")
                                        (("1" (REWRITE "left_zero") NIL NIL)
                                         ("2" (EXPAND "sum")
                                          (("2" (INST 1 "zero" "zero")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (HIDE-ALL-BUT (-4 1))
                                              (("2" (EXPAND "ideal?")
                                                (("2" (EXPAND "left_ideal?")
                                                  (("2" (EXPAND "subring?")
                                                    (("2" (FLATTEN)
                                                      (("2"
                                                        (LEMMA
                                                         "zero_is_member_R[T,+,*,zero]")
                                                        (("2" (INST?)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (EXPAND "subring?")
                                              (("3" (FLATTEN)
                                                (("3" (HIDE-ALL-BUT (-4 1))
                                                  (("3"
                                                    (LEMMA
                                                     "zero_is_member_R[T,+,*,zero]")
                                                    (("3" (INST -1 "H!1")
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "self_coset")
                            (("2" (INST -1 "I!1" "R!1" "x!1")
                              (("2" (EXPAND "ideal?")
                                (("2" (EXPAND "left_ideal?")
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE -1)
              (("2" (LEMMA "lcoset_iff_coset")
                (("2" (INST -1 "I!1" "I!1" "sum(H!1,I!1)")
                  (("2" (ASSERT)
                    (("2" (EXPAND "left_coset?")
                      (("2" (INST 1 "zero")
                        (("1" (REWRITE "left_zero") NIL NIL)
                         ("2" (EXPAND "sum")
                          (("2" (INST 1 "zero" "zero")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (HIDE 2)
                              (("2" (EXPAND "ideal?")
                                (("2" (EXPAND "left_ideal?")
                                  (("2" (EXPAND "subring?")
                                    (("2" (FLATTEN)
                                      (("2"
                                        (LEMMA "zero_is_member_R[T,+,*,zero]")
                                        (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (EXPAND "subring?")
                              (("3" (FLATTEN)
                                (("3" (HIDE 2)
                                  (("3" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                    (("3" (INST -1 "H!1")
                                      (("3" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (SKOSIMP)
              (("3" (LEMMA "coset_product")
                (("3" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (LEMMA "sum_is_ideal")
                    (("2" (INST?)
                      (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("3" (HIDE -1)
                    (("3" (LEMMA "sum_subring_ideal")
                      (("3" (INST?)
                        (("3" (INST -1 "R!1")
                          (("3" (ASSERT)
                            (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("4" (SKOSIMP)
              (("4" (LEMMA "coset_add")
                (("4" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (HIDE -1 2)
                    (("2" (LEMMA "sum_is_ideal")
                      (("2" (INST?)
                        (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (HIDE -1 2)
                    (("3" (LEMMA "sum_subring_ideal")
                      (("3" (INST?)
                        (("3" (INST -1 "R!1")
                          (("3" (ASSERT)
                            (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("5" (LEMMA "lcoset_iff_coset")
              (("5" (EXPAND "restrict")
                (("5" (EXPAND "/")
                  (("5" (HIDE -1 -2)
                    (("5" (SKOSIMP)
                      (("5"
                        (CASE
                            "coset?[T, +](sum[T, +](H!1, I!1), I!1)((+[T, +])(h!1, I!1))")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (HIDE 2)
                          (("2" (REWRITE "lcoset_iff_coset" :DIR RL)
                            (("2" (EXPAND "left_coset?")
                              (("2" (INST 1 "h!1")
                                (("2" (EXPAND "sum")
                                  (("2" (TYPEPRED "h!1")
                                    (("2" (INST 1 "h!1" "zero")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (LEMMA "zero_is_member_R")
                                        (("2" (INST -1 "I!1")
                                          (("1" (EXPAND "member")
                                            (("1" (PROPAX) NIL NIL)) NIL)
                                           ("2" (EXPAND "ideal?")
                                            (("2" (EXPAND "left_ideal?")
                                              (("2" (EXPAND "subring?")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (EXPAND "R_homomorphism?")
            (("2" (SPLIT)
              (("1" (EXPAND "subring?")
                (("1" (EXPAND "star_closed?")
                  (("1" (EXPAND "ring?")
                    (("1" (EXPAND "abelian_group?")
                      (("1" (EXPAND "group?")
                        (("1" (EXPAND "monoid?")
                          (("1" (EXPAND "monad?")
                            (("1" (FLATTEN)
                              (("1" (HIDE-ALL-BUT (-2 1))
                                (("1" (EXPAND "star_closed?")
                                  (("1" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "subring?")
                (("2" (EXPAND "ring?") (("2" (FLATTEN) NIL NIL)) NIL)) NIL)
               ("3" (EXPAND "star_closed?")
                (("3" (SKOSIMP)
                  (("3" (EXPAND "member")
                    (("3" (EXPAND "restrict")
                      (("3" (LEMMA "quotient_group_is_abelian_group")
                        (("3" (INST -1 "sum(H!1,I!1)" "I!1")
                          (("1" (EXPAND "abelian_group?")
                            (("1" (EXPAND "group?")
                              (("1" (EXPAND "monoid?")
                                (("1" (EXPAND "monad?")
                                  (("1" (FLATTEN)
                                    (("1" (HIDE-ALL-BUT (-1 1))
                                      (("1" (EXPAND "star_closed?")
                                        (("1" (INST -1 "x!1" "y!1")
                                          (("1" (EXPAND "member")
                                            (("1" (EXPAND "restrict")
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "sum_is_ideal")
                            (("2" (INST?)
                              (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (LEMMA "sum_subring_ideal")
                            (("3" (INST?)
                              (("3" (INST -1 "R!1")
                                (("3" (ASSERT)
                                  (("3" (EXPAND "subring?")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("4" (LEMMA "quotient_group_is_ring")
                (("4" (INST -1 "sum(H!1, I!1)" "I!1")
                  (("1" (EXPAND "ring?") (("1" (FLATTEN) NIL NIL)) NIL)
                   ("2" (LEMMA "sum_is_ideal")
                    (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL)
                   ("3" (LEMMA "sum_subring_ideal")
                    (("3" (INST -1 "H!1" "I!1" "R!1")
                      (("3" (ASSERT)
                        (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("5" (EXPAND "homomorphism?")
                (("5" (LEMMA "add_charac")
                  (("5" (SKOSIMP)
                    (("5" (INST -1 "sum(H!1, I!1)" "I!1" "a!1" "b!1")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "sum")
                        (("2" (INST 1 "b!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (EXPAND "sum")
                        (("3" (INST 1 "a!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (LEMMA "sum_is_ideal")
                        (("4" (INST -1 "H!1" "I!1" "R!1")
                          (("4" (ASSERT) NIL NIL)) NIL))
                        NIL)
                       ("5" (LEMMA "sum_subring_ideal")
                        (("5" (INST -1 "H!1" "I!1" "R!1")
                          (("5" (ASSERT)
                            (("5" (EXPAND "subring?") (("5" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("6" (EXPAND "homomorphism?")
                (("6" (SKOSIMP)
                  (("6" (LEMMA "product_charac")
                    (("6" (INST -1 "sum(H!1, I!1)" "I!1" "a!1" "b!1")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "sum")
                        (("2" (INST 1 "b!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (EXPAND "sum")
                        (("3" (INST 1 "a!1" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -3 -5 -6)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (LEMMA "sum_is_ideal")
                        (("4" (INST?)
                          (("4" (INST -1 "R!1") (("4" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("5" (LEMMA "sum_subring_ideal")
                        (("5" (INST?)
                          (("5" (INST -1 "R!1")
                            (("5" (ASSERT)
                              (("5" (EXPAND "subring?")
                                (("5" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "lcoset_iff_coset")
            (("3" (INST -1 "I!1" "I!1" "sum(H!1,I!1)")
              (("3" (ASSERT)
                (("3" (EXPAND "left_coset?")
                  (("3" (INST 1 "zero")
                    (("1" (REWRITE "left_zero") NIL NIL)
                     ("2" (EXPAND "sum")
                      (("2" (INST 1 "zero" "zero")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "ideal?")
                          (("2" (EXPAND "left_ideal?")
                            (("2" (EXPAND "subring?")
                              (("2" (FLATTEN)
                                (("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "I!1")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (EXPAND "subring?")
                          (("3" (FLATTEN)
                            (("3" (LEMMA "zero_is_member_R[T,+,*,zero]")
                              (("3" (INST -1 "H!1") (("3" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (HIDE 2)
          (("4" (SKOSIMP)
            (("4" (LEMMA "coset_product")
              (("4" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                (("1" (ASSERT) NIL NIL)
                 ("2" (LEMMA "sum_is_ideal")
                  (("2" (INST?)
                    (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("3" (LEMMA "sum_subring_ideal")
                  (("3" (INST?)
                    (("3" (INST -1 "R!1")
                      (("3" (ASSERT)
                        (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("5" (HIDE 2)
          (("5" (SKOSIMP)
            (("5" (LEMMA "coset_add")
              (("5" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                (("1" (ASSERT) NIL NIL)
                 ("2" (LEMMA "sum_is_ideal")
                  (("2" (INST?)
                    (("2" (INST -1 "R!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("3" (LEMMA "sum_subring_ideal")
                  (("3" (INST?)
                    (("3" (INST -1 "R!1")
                      (("3" (ASSERT)
                        (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("6" (HIDE 2)
          (("6" (INST 1 "zero+I!1")
            (("6" (LEMMA "lcoset_iff_coset")
              (("6" (INST -1 "zero+I!1" "I!1" "sum(H!1,I!1)")
                (("6" (ASSERT)
                  (("6" (EXPAND "left_coset?")
                    (("6" (INST 1 "zero")
                      (("6" (EXPAND "sum")
                        (("6" (INST 1 "zero" "zero")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ideal?")
                            (("2" (EXPAND "left_ideal?")
                              (("2" (EXPAND "subring?")
                                (("2" (FLATTEN)
                                  (("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                    (("2" (INST -1 "I!1")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (EXPAND "subring?")
                            (("3" (FLATTEN)
                              (("3" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                (("3" (INST -1 "H!1") (("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("7" (HIDE 2)
          (("7" (EXPAND "/")
            (("7" (SKOSIMP)
              (("7" (LEMMA "lcoset_iff_coset")
                (("7" (INST -1 "h!1+I!1" "I!1" "sum(H!1,I!1)")
                  (("7" (ASSERT)
                    (("7" (EXPAND "left_coset?")
                      (("7" (INST 1 "h!1")
                        (("7" (EXPAND "sum")
                          (("7" (INST 1 "h!1" "zero")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "ideal?")
                              (("2" (EXPAND "left_ideal?")
                                (("2" (EXPAND "subring?")
                                  (("2" (FLATTEN)
                                    (("2"
                                      (LEMMA "zero_is_member_R[T,+,*,zero]")
                                      (("2" (INST -1 "I!1")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOSIMP)
        (("2" (EXPAND "/")
          (("2" (LEMMA "lcoset_iff_coset")
            (("2" (INST -1 "h!1+I!1" "I!1" "sum(H!1,I!1)")
              (("2" (ASSERT)
                (("2" (EXPAND "left_coset?")
                  (("2" (INST 1 "h!1")
                    (("2" (EXPAND "sum")
                      (("2" (INST 1 "h!1" "zero")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "ideal?")
                          (("2" (EXPAND "left_ideal?")
                            (("2" (EXPAND "subring?")
                              (("2" (FLATTEN)
                                (("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "I!1")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|quotient_group_is_abelian_group| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|add_charac| FORMULA-DECL NIL |quotient_rings| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|product_charac| FORMULA-DECL NIL |quotient_rings| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal_equiv| FORMULA-DECL NIL |ring_ideal| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|R_sum_star_closed| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|left_zero| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|self_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL))
   NIL))
 (|second_isomorphism_th_TCC1| 0
  (|second_isomorphism_th_TCC1-1| |nil| 3757773133
   ("" (SKOSIMP)
    (("" (INST 1 " intersection(H!1, I!1)")
      (("" (REWRITE "ideal_is_coset")
        (("1" (HIDE 2)
          (("1" (LEMMA "intersection_subring_ideal")
            (("1" (INST -1 "H!1" "I!1" "R!1") (("1" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (HIDE 2) (("2" (EXPAND "subring?") (("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|intersection_subring_ideal| FORMULA-DECL NIL |ring_ideal| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL))
   NIL
   (|second_isomorphism_th| EXISTENCE ""
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))"
    (66 7 68 63))))
 (|second_isomorphism_th_TCC2| 0
  (|second_isomorphism_th_TCC2-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add")
      (("" (INST -1 "H!1" "intersection(H!1, I!1)" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "intersection_subring_ideal")
            (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (EXPAND "subring?") (("3" (FLATTEN) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|intersection_subring_ideal| FORMULA-DECL NIL |ring_ideal| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL))
   NIL
   (|second_isomorphism_th| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I)), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))]"
    (66 7 68 63))))
 (|second_isomorphism_th_TCC3| 0
  (|second_isomorphism_th_TCC3-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST -1 "H!1" "intersection(H!1, I!1)" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "intersection_subring_ideal")
            (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (HIDE 2) (("3" (EXPAND "subring?") (("3" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|intersection_subring_ideal| FORMULA-DECL NIL |ring_ideal| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL))
   NIL
   (|second_isomorphism_th| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I)), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))]"
    (66 7 68 63))))
 (|second_isomorphism_th_TCC4| 0
  (|second_isomorphism_th_TCC4-1| |nil| 3757773133
   ("" (SKOSIMP)
    (("" (REWRITE "ideal_is_coset")
      (("1" (HIDE 2)
        (("1" (LEMMA "intersection_subring_ideal")
          (("1" (INST -1 "H!1" "I!1" "R!1") (("1" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (HIDE 2) (("2" (EXPAND "subring?") (("2" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|intersection_subring_ideal| FORMULA-DECL NIL |ring_ideal| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL))
   NIL
   (|second_isomorphism_th| SUBTYPE
    "sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I)"
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.H, sets[ring_2nd_3rd_isomorphism_theorems.T].intersection(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I))"
    (66 7 68 63))))
 (|second_isomorphism_th_TCC5| 0
  (|second_isomorphism_th_TCC6-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add")
      (("" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "sum_is_ideal")
            (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "sum_subring_ideal")
            (("3" (INST -1 "H!1" "I!1" "R!1")
              (("3" (ASSERT)
                (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL))
   NIL
   (|second_isomorphism_th| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)]"
    (66 7 68 63))))
 (|second_isomorphism_th_TCC6| 0
  (|second_isomorphism_th_TCC7-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "sum_is_ideal")
            (("2" (INST -1 "H!1" "I!1" "R!1") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "sum_subring_ideal")
            (("3" (INST -1 "H!1" "I!1" "R!1")
              (("3" (ASSERT)
                (("3" (EXPAND "subring?") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL))
   NIL
   (|second_isomorphism_th| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)]"
    (66 7 68 63))))
 (|second_isomorphism_th_TCC7| 0
  (|second_isomorphism_th_TCC8-1| |nil| 3757773133
   ("" (SKOSIMP)
    (("" (REWRITE "ideal_is_coset")
      (("1" (HIDE 2)
        (("1" (LEMMA "sum_is_ideal")
          (("1" (INST?) (("1" (INST -1 "R!1") (("1" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (LEMMA "sum_subring_ideal")
          (("2" (INST?)
            (("2" (INST -1 "R!1")
              (("2" (ASSERT)
                (("2" (EXPAND "subring?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL))
   NIL
   (|second_isomorphism_th| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.I"
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].sum(ring_2nd_3rd_isomorphism_theorems.H, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I)"
    (66 7 68 63))))
 (|second_isomorphism_th| 0
  (|second_isomorphism_th-1| |nil| 3757773174
   ("" (SKOSIMP)
    ((""
      (NAME-REPLACE "A" "restrict
                   [set[T], coset[T, +](H!1, intersection(H!1, I!1)), boolean]
                   (H!1 / intersection(H!1, I!1))"
       :HIDE? NIL)
      ((""
        (NAME-REPLACE "B"
         "restrict[set[T], coset[T, +](sum(H!1, I!1), I!1), boolean]
                   (sum(H!1, I!1) / I!1)"
         :HIDE? NIL)
        (("" (LEMMA "second_isomorphism_th_ax")
          (("" (INST -1 "H!1" "I!1" "R!1")
            (("" (ASSERT)
              (("" (SKOSIMP)
                (("" (REPLACE -3)
                  ((""
                    (LEMMA
                     "first_isomorphism_th[T, +, *, zero, coset[T, +](sum(H!1, I!1), I!1),
               add(sum(H!1, I!1), I!1), product(sum(H!1, I!1), I!1), I!1]")
                    (("1" (INST -1 "H!1" "B" "phi!1")
                      (("1" (REPLACE -3 -1)
                        (("1" (EXPAND "R_isomorphic?")
                          (("1" (SKOSIMP)
                            (("1" (INST 1 "phi!2")
                              (("1" (EXPAND "R_isomorphism?")
                                (("1" (EXPAND "R_monomorphism?")
                                  (("1" (EXPAND "R_epimorphism?")
                                    (("1"
                                      (CASE
                                          "R_homomorphism?[coset(H!1,intersection(H!1,I!1)),add(H!1,intersection(H!1,I!1)),product(H!1,intersection(H!1,I!1)),intersection(H!1,I!1),coset(sum(H!1,I!1),I!1),add(sum(H!1,I!1),I!1),product(sum(H!1,I!1),I!1),I!1](A, B)(phi!2)")
                                      (("1" (ASSERT)
                                        (("1" (FLATTEN)
                                          (("1" (SPLIT)
                                            (("1" (HIDE-ALL-BUT (-2 1))
                                              (("1" (EXPAND "injective?")
                                                (("1" (SKOSIMP)
                                                  (("1" (INST -2 "x1!1" "x2!1")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE-ALL-BUT (-4 -6 1))
                                              (("2" (EXPAND "surjective?")
                                                (("2" (SKOSIMP)
                                                  (("2" (INST -1 "y!1")
                                                    (("1" (HIDE -2)
                                                      (("1" (SKOSIMP)
                                                        (("1" (INST 1 "x!1")
                                                          (("1"
                                                            (TYPEPRED "x!1")
                                                            (("1"
                                                              (EXPAND
                                                               "restrict")
                                                              (("1"
                                                                (EXPAND "A")
                                                                (("1"
                                                                  (EXPAND
                                                                   "restrict")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (EXPAND "extend")
                                                      (("2" (EXPAND "image")
                                                        (("2" (EXPAND "image")
                                                          (("2" (INST -1 "y!1")
                                                            (("2" (SKOSIMP)
                                                              (("2"
                                                                (INST 1 "x!1")
                                                                (("1" (ASSERT)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (EXPAND
                                                                   "restrict")
                                                                  (("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2"
                                          (HIDE-ALL-BUT
                                           (-2 -5 -6 -7 -10 -11 1))
                                          (("2" (EXPAND "R_homomorphism?")
                                            (("2" (FLATTEN)
                                              (("2" (SPLIT)
                                                (("1"
                                                  (HIDE-ALL-BUT
                                                   (-1 -7 -14 -15 -16 1))
                                                  (("1" (EXPAND "star_closed?")
                                                    (("1" (SKOSIMP)
                                                      (("1"
                                                        (INST -1 "x!1" "y!1")
                                                        (("1" (EXPAND "member")
                                                          (("1"
                                                            (EXPAND "restrict")
                                                            (("1" (EXPAND "A")
                                                              (("1"
                                                                (EXPAND
                                                                 "restrict")
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (EXPAND "restrict")
                                                          (("2" (EXPAND "/")
                                                            (("2"
                                                              (TYPEPRED "y!1")
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("3"
                                                          (EXPAND "restrict")
                                                          (("3" (EXPAND "/")
                                                            (("3"
                                                              (TYPEPRED "x!1")
                                                              (("3" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (HIDE-ALL-BUT
                                                   (-2 -8 -9 -14 -15 -16 1))
                                                  (("2" (EXPAND "star_closed?")
                                                    (("2" (SKOSIMP)
                                                      (("2"
                                                        (INST -1 "x!1" "y!1")
                                                        (("1" (EXPAND "member")
                                                          (("1"
                                                            (EXPAND "restrict")
                                                            (("1" (EXPAND "A")
                                                              (("1"
                                                                (EXPAND
                                                                 "restrict")
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (EXPAND "restrict")
                                                          (("2" (EXPAND "/")
                                                            (("2"
                                                              (TYPEPRED "y!1")
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("3"
                                                          (EXPAND "restrict")
                                                          (("3" (EXPAND "/")
                                                            (("3"
                                                              (TYPEPRED "x!1")
                                                              (("3" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (PROPAX) NIL NIL)
                                                 ("4" (PROPAX) NIL NIL)
                                                 ("5" (EXPAND "homomorphism?")
                                                  (("5"
                                                    (HIDE-ALL-BUT
                                                     (|-1-2| -5 -12 -14 -15 -16
                                                      1))
                                                    (("5" (SKOSIMP)
                                                      (("5"
                                                        (INST -1 "a!1" "b!1")
                                                        (("5" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("6" (EXPAND "homomorphism?")
                                                  (("6"
                                                    (HIDE-ALL-BUT
                                                     (-1 -2 -6 -13 -14 -15 -16
                                                      1))
                                                    (("6" (SKOSIMP)
                                                      (("6"
                                                        (INST -3 "a!1" "b!1")
                                                        (("6" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (HIDE -1 -2 2)
                                        (("3" (LEMMA "lcoset_iff_coset")
                                          (("3"
                                            (INST -1
                                             "intersection[T](H!1, I!1)"
                                             "intersection[T](H!1, I!1)" "H!1")
                                            (("3" (ASSERT)
                                              (("3" (EXPAND "left_coset?")
                                                (("3" (INST 1 "zero")
                                                  (("1" (REWRITE "left_zero")
                                                    NIL NIL)
                                                   ("2" (EXPAND "subring?")
                                                    (("2" (FLATTEN)
                                                      (("2"
                                                        (HIDE-ALL-BUT (-5 1))
                                                        (("2"
                                                          (LEMMA
                                                           "zero_is_member_R[T,+,*,zero]")
                                                          (("2" (INST?)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("4" (SKOSIMP)
                                        (("4" (LEMMA "coset_product")
                                          (("4"
                                            (HIDE-ALL-BUT (-1 -8 -11 -12 1))
                                            (("4"
                                              (INST -1 "H!1"
                                               "intersection(H!1, I!1)"
                                               "x1!1`1" "x1!1`2")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2"
                                                (LEMMA
                                                 "intersection_subring_ideal"
                                                 ("H" "H!1" "R" "R!1" "I"
                                                  "I!1"))
                                                (("2" (ASSERT) NIL NIL)) NIL)
                                               ("3" (EXPAND "subring?")
                                                (("3" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("5" (HIDE-ALL-BUT (-3 -6 -7 1))
                                        (("5" (SKOSIMP)
                                          (("5" (LEMMA "coset_add")
                                            (("5"
                                              (INST -1 "H!1"
                                               " intersection[T](H!1, I!1)"
                                               "x1!1`1" "x1!1`2")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2"
                                                (LEMMA
                                                 "intersection_subring_ideal"
                                                 ("H" "H!1" "R" "R!1" "I"
                                                  "I!1"))
                                                (("2" (ASSERT) NIL NIL)) NIL)
                                               ("3" (EXPAND "subring?")
                                                (("3" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("6" (HIDE -1 -2 2)
                                        (("6" (INST 1 "intersection(H!1,I!1)")
                                          (("6" (LEMMA "lcoset_iff_coset")
                                            (("6"
                                              (INST -1
                                               "intersection[T](H!1, I!1)"
                                               "intersection[T](H!1, I!1)"
                                               "H!1")
                                              (("6" (ASSERT)
                                                (("6" (EXPAND "left_coset?")
                                                  (("6" (INST 1 "zero")
                                                    (("1" (REWRITE "left_zero")
                                                      NIL NIL)
                                                     ("2" (EXPAND "subring?")
                                                      (("2" (FLATTEN)
                                                        (("2"
                                                          (HIDE-ALL-BUT (-5 1))
                                                          (("2"
                                                            (LEMMA
                                                             "zero_is_member_R[T,+,*,zero]")
                                                            (("2" (INST?)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("7" (SPLIT)
                                        (("1" (EXPAND "restrict")
                                          (("1" (EXPAND "/" 1)
                                            (("1" (SKOSIMP)
                                              (("1"
                                                (HIDE -1 -2 -3 -4 -5 -6 -8 -9
                                                 2)
                                                (("1" (PROP)
                                                  (("1" (EXPAND "A")
                                                    (("1" (EXPAND "restrict")
                                                      (("1" (EXPAND "/")
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (GRIND) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (SKOSIMP)
                                          (("2" (EXPAND "B" 1)
                                            (("2" (EXPAND "restrict")
                                              (("2" (EXPAND "surjective?" -5)
                                                (("2" (TYPEPRED "x1!1")
                                                  (("2" (EXPAND "/" 1)
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "restrict")
                                (("2" (SPLIT)
                                  (("1" (EXPAND "/" 1)
                                    (("1" (SKOSIMP)
                                      (("1" (PROP)
                                        (("1" (EXPAND "A")
                                          (("1" (EXPAND "restrict")
                                            (("1" (EXPAND "/" 1)
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKOSIMP)
                                    (("2" (EXPAND "B" 1)
                                      (("2" (EXPAND "restrict")
                                        (("2" (HIDE -4 -5)
                                          (("2" (EXPAND "/" 1)
                                            (("2" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (EXPAND "B" 1)
                        (("2" (LEMMA "quotient_group_is_ring")
                          (("2" (INST -1 "sum(H!1,I!1)" "I!1")
                            (("1" (LEMMA "sum_is_ideal")
                              (("1" (INST -1 "H!1" "I!1" "R!1")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL)
                             ("2" (LEMMA "sum_subring_ideal")
                              (("2" (INST -1 "H!1" "I!1" "R!1")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "subring?")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (EXPAND "subring?") (("3" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (LEMMA "quotient_group_is_ring")
                      (("2" (INST -1 "sum(H!1, I!1)" "I!1")
                        (("1" (EXPAND "/")
                          (("1" (EXPAND "ring?")
                            (("1" (FLATTEN)
                              (("1" (SPLIT)
                                (("1" (HIDE-ALL-BUT (-1 -6 -7 1))
                                  (("1" (EXPAND "abelian_group?")
                                    (("1" (EXPAND "group?")
                                      (("1" (EXPAND "monoid?")
                                        (("1" (EXPAND "monad?")
                                          (("1" (FLATTEN)
                                            (("1" (SPLIT)
                                              (("1" (HIDE-ALL-BUT (-1 1))
                                                (("1" (EXPAND "star_closed?")
                                                  (("1" (SKOSIMP)
                                                    (("1" (INST -1 "x!1" "y!1")
                                                      (("1" (EXPAND "member")
                                                        (("1"
                                                          (EXPAND "restrict")
                                                          (("1"
                                                            (EXPAND "fullset")
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "restrict")
                                                        (("2" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("3" (EXPAND "restrict")
                                                        (("3" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "member")
                                                (("2" (EXPAND "fullset")
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (EXPAND "identity?")
                                                (("3" (HIDE-ALL-BUT (-3 1))
                                                  (("3" (SKOSIMP)
                                                    (("3" (INST -1 "x!1")
                                                      (("1" (EXPAND "restrict")
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "restrict")
                                                        (("2" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("4" (HIDE-ALL-BUT (-4 1))
                                                (("4" (EXPAND "associative?")
                                                  (("4" (SKOSIMP)
                                                    (("4"
                                                      (INST -1 "x!1" "y!1"
                                                       "z!1")
                                                      (("1" (EXPAND "restrict")
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "restrict")
                                                        (("2" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("3" (EXPAND "restrict")
                                                        (("3" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("4" (EXPAND "restrict")
                                                        (("4" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("5" (HIDE-ALL-BUT (-5 1))
                                                (("5" (EXPAND "inv_exists?")
                                                  (("5" (SKOSIMP)
                                                    (("5" (INST -1 "x!1")
                                                      (("1" (SKOSIMP)
                                                        (("1" (INST 1 "y!1")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "fullset")
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "restrict")
                                                        (("2" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("6" (HIDE-ALL-BUT (-6 1))
                                                (("6" (EXPAND "commutative?")
                                                  (("6" (SKOSIMP)
                                                    (("6" (INST -1 "x!1" "y!1")
                                                      (("1" (EXPAND "restrict")
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "restrict")
                                                        (("2" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("3" (EXPAND "restrict")
                                                        (("3" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT (-2 1))
                                  (("2" (EXPAND "star_closed?")
                                    (("2" (SKOSIMP)
                                      (("2" (INST -1 "x!1" "y!1")
                                        (("1" (EXPAND "member")
                                          (("1" (EXPAND "restrict")
                                            (("1" (EXPAND "fullset")
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (EXPAND "restrict")
                                          (("2" (PROPAX) NIL NIL)) NIL)
                                         ("3" (EXPAND "restrict")
                                          (("3" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (HIDE-ALL-BUT (-3 1))
                                  (("3" (EXPAND "associative?")
                                    (("3" (SKOSIMP)
                                      (("3" (INST -1 "x!1" "y!1" "z!1")
                                        (("1" (EXPAND "restrict")
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (EXPAND "restrict")
                                          (("2" (PROPAX) NIL NIL)) NIL)
                                         ("3" (EXPAND "restrict")
                                          (("3" (PROPAX) NIL NIL)) NIL)
                                         ("4" (EXPAND "restrict")
                                          (("4" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("4" (HIDE-ALL-BUT (-4 1))
                                  (("4" (EXPAND "left_distributive?")
                                    (("4" (SKOSIMP)
                                      (("4" (INST -1 "x!1" "y!1" "z!1")
                                        (("1" (EXPAND "restrict")
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (EXPAND "restrict")
                                          (("2" (PROPAX) NIL NIL)) NIL)
                                         ("3" (EXPAND "restrict")
                                          (("3" (PROPAX) NIL NIL)) NIL)
                                         ("4" (EXPAND "restrict")
                                          (("4" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("5" (HIDE-ALL-BUT (-5 1))
                                  (("5" (EXPAND "right_distributive?")
                                    (("5" (SKOSIMP)
                                      (("5" (INST -1 "x!1" "y!1" "z!1")
                                        (("1" (EXPAND "restrict")
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (EXPAND "restrict")
                                          (("2" (PROPAX) NIL NIL)) NIL)
                                         ("3" (EXPAND "restrict")
                                          (("3" (PROPAX) NIL NIL)) NIL)
                                         ("4" (EXPAND "restrict")
                                          (("4" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "sum_is_ideal")
                          (("2" (INST -1 "H!1" "I!1" "R!1")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("3" (LEMMA "sum_subring_ideal")
                          (("3" (INST -1 "H!1" "I!1" "R!1")
                            (("3" (ASSERT)
                              (("3" (EXPAND "subring?")
                                (("3" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (HIDE-ALL-BUT 1)
                      (("3" (REWRITE "fullsetT_is_ring") NIL NIL)) NIL)
                     ("4" (HIDE -1 -2 -3 -4 2)
                      (("4" (LEMMA "lcoset_iff_coset")
                        (("4" (INST -1 "I!1" "I!1" "sum(H!1,I!1)")
                          (("4" (ASSERT)
                            (("4" (EXPAND "left_coset?")
                              (("4" (INST 1 "zero")
                                (("1" (REWRITE "left_zero") NIL NIL)
                                 ("2" (EXPAND "sum")
                                  (("2" (INST 1 "zero" "zero")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (EXPAND "ideal?")
                                      (("2" (EXPAND "left_ideal?")
                                        (("2" (EXPAND "subring?")
                                          (("2" (FLATTEN)
                                            (("2" (HIDE-ALL-BUT (-4 1))
                                              (("2"
                                                (LEMMA
                                                 "zero_is_member_R[T,+,*,zero]")
                                                (("2" (INST?)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (EXPAND "subring?")
                                      (("3" (FLATTEN)
                                        (("3"
                                          (LEMMA
                                           "zero_is_member_R[T,+,*,zero]")
                                          (("3" (INST?)
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("5" (SKOSIMP)
                      (("5" (HIDE-ALL-BUT (-5 -6 1))
                        (("5" (LEMMA "coset_product")
                          (("5"
                            (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (LEMMA "sum_is_ideal")
                              (("2" (INST -1 "H!1" "I!1" "R!1")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL)
                             ("3" (LEMMA "sum_subring_ideal")
                              (("3" (INST -1 "H!1" "I!1" "R!1")
                                (("3" (ASSERT)
                                  (("3" (EXPAND "subring?")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("6" (HIDE-ALL-BUT (-5 -6 1))
                      (("6" (SKOSIMP)
                        (("6" (LEMMA "coset_add")
                          (("6"
                            (INST -1 "sum(H!1,I!1)" "I!1" "x1!1`1" "x1!1`2")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (LEMMA "sum_is_ideal")
                              (("2" (INST -1 "H!1" "I!1" "R!1")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL)
                             ("3" (LEMMA "sum_subring_ideal")
                              (("3" (INST -1 "H!1" "I!1" "R!1")
                                (("3" (ASSERT)
                                  (("3" (EXPAND "subring?")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("7" (HIDE -1 -2 -3 -4 2)
                      (("7" (INST 1 "zero+I!1")
                        (("7" (LEMMA "lcoset_iff_coset")
                          (("7" (INST -1 "zero+I!1" "I!1" "sum(H!1,I!1)")
                            (("7" (ASSERT)
                              (("7" (EXPAND "left_coset?")
                                (("7" (INST 1 "zero")
                                  (("7" (EXPAND "sum")
                                    (("7" (INST 1 "zero" "zero")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (EXPAND "ideal?")
                                        (("2" (EXPAND "left_ideal?")
                                          (("2" (EXPAND "subring?")
                                            (("2" (FLATTEN)
                                              (("2" (HIDE -1 -2 -3 -5 -6 2)
                                                (("2"
                                                  (LEMMA
                                                   "zero_is_member_R[T,+,*,zero]")
                                                  (("2" (INST?)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (EXPAND "subring?")
                                        (("3" (FLATTEN)
                                          (("3"
                                            (LEMMA
                                             "zero_is_member_R[T,+,*,zero]")
                                            (("3" (INST?)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (+ CONST-DECL "set[T]" |cosets_def| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|R_isomorphic?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|R_monomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|lproduct| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|right_distributive?| CONST-DECL "bool" |operator_defs_more| NIL)
    (|left_distributive?| CONST-DECL "bool" |operator_defs_more| NIL)
    (|abelian_group?| CONST-DECL "bool" |group_def| NIL)
    (|group?| CONST-DECL "bool" |group_def| NIL)
    (|inv_exists?| CONST-DECL "bool" |group_def| NIL)
    (|monoid?| CONST-DECL "bool" |monoid_def| NIL)
    (|monad?| CONST-DECL "bool" |monad_def| NIL)
    (|zero_plus| FORMULA-DECL NIL |ring| NIL)
    (|plus_zero| FORMULA-DECL NIL |ring| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|right_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|star_closed?| CONST-DECL "bool" |groupoid_def| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|left_zero| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|intersection_subring_ideal| FORMULA-DECL NIL |ring_ideal| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_isomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|sum_subring_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|sum_is_ideal| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|first_isomorphism_th| FORMULA-DECL NIL |ring_1st_isomorphism_theorem|
     NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|sum| CONST-DECL "set[T]" |cosets_def| NIL))
   SHOSTAK))
 (|third_isomorphism_th_ax_TCC1| 0
  (|third_isomorphism_th_ax_TCC1-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (INST 1 "J!1") (("" (REWRITE "ideal_is_coset") NIL NIL)) NIL)) NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| EXISTENCE ""
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC2| 0
  (|third_isomorphism_th_ax_TCC2-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)]"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC3| 0
  (|third_isomorphism_th_ax_TCC3-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)]"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC4| 0
  (|third_isomorphism_th_ax_TCC4-1| |nil| 3757773133
   ("" (SKOSIMP*) (("" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
   ((|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.J"
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC5| 0
  (|third_isomorphism_th_ax_TCC5-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (INST 1 "I!1") (("" (REWRITE "ideal_is_coset") NIL NIL)) NIL)) NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| EXISTENCE ""
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC6| 0
  (|third_isomorphism_th_ax_TCC6-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)]"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC7| 0
  (|third_isomorphism_th_ax_TCC7-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)]"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC8| 0
  (|third_isomorphism_th_ax_TCC8-1| |nil| 3757773133
   ("" (SKOSIMP*) (("" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
   ((|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.I"
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    (78 6 79 56))))
 (|third_isomorphism_th_ax_TCC9| 0
  (|third_isomorphism_th_ax_TCC9-1| |nil| 3757773133
   ("" (SKOSIMP*)
    (("" (SPLIT)
      (("1" (SKOSIMP)
        (("1" (EXPAND "/" 1 1)
          (("1" (EXPAND "restrict" 1)
            (("1" (EXPAND "/" 1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (SKOSIMP)
        (("2" (EXPAND "restrict" 1)
          (("2" (TYPEPRED "phi!1(x1!1)")
            (("2" (HIDE -2 -3 -4 -5)
              (("2" (EXPAND "/") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("3" (EXPAND "R_epimorphism?") (("3" (FLATTEN) NIL NIL)) NIL))
      NIL))
    NIL)
   ((/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL))
   NIL
   (|third_isomorphism_th_ax| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.phi"
    "R_homomorphism[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), ring_2nd_3rd_isomorphism_theorems.J, coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), ring_2nd_3rd_isomorphism_theorems.I](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)))"
    (83 21 83 24))))
 (|third_isomorphism_th_ax| 0
  (|third_isomorphism_th_ax-1| |nil| 3757924668
   ("" (SKOSIMP)
    (("" (INST 1 "LAMBDA(A:coset(R!1,J!1)):gen(R!1,J!1)(A)+I!1")
      (("1" (EXPAND "R_epimorphism?")
        (("1"
          (CASE
              "R_homomorphism?[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1,coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1]((R!1/J!1),(R!1/I!1))((LAMBDA (A: coset(R!1, J!1)):
                                   gen(R!1, J!1)(A) + I!1))")
          (("1" (SPLIT)
            (("1" (HIDE -1)
              (("1" (EXPAND "surjective?")
                (("1" (SKOSIMP)
                  (("1" (TYPEPRED "y!1")
                    (("1" (EXPAND "coset?")
                      (("1" (EXPAND "left_coset?")
                        (("1" (FLATTEN)
                          (("1" (SKOSIMP)
                            (("1" (INST 1 "a!1+J!1")
                              (("1" (REPLACE -1)
                                (("1" (EXPAND "gen")
                                  (("1" (REWRITE "lcos_eq2")
                                    (("1" (HIDE 2)
                                      (("1" (EXPAND "lc_gen")
                                        (("1"
                                          (TYPEPRED
                                           "choose({a: T | R!1(a) AND a!1 + J!1 = a + J!1})")
                                          (("1"
                                            (NAME-REPLACE "gen"
                                             "choose({a: T | R!1(a) AND a!1 + J!1 = a + J!1})")
                                            (("1" (EXPAND "+" -2)
                                              (("1" (DECOMPOSE-EQUALITY -2)
                                                (("1" (INST -1 "gen")
                                                  (("1" (IFF)
                                                    (("1" (PROP)
                                                      (("1" (SKOSIMP -1)
                                                        (("1" (INST 1 "h!1")
                                                          (("1"
                                                            (HIDE-ALL-BUT
                                                             (-9 1))
                                                            (("1"
                                                              (EXPAND
                                                               "subset?")
                                                              (("1"
                                                                (INST -1 "h!1")
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (HIDE-ALL-BUT (-6 1))
                                                        (("2" (INST 1 "zero")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "ideal?")
                                                            (("2"
                                                              (EXPAND
                                                               "left_ideal?")
                                                              (("2"
                                                                (EXPAND
                                                                 "subring?")
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (HIDE -1 -3
                                                                     -4)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "zero_is_member_R[T,+,*,zero]")
                                                                      (("2"
                                                                        (INST?)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "nonempty?")
                                            (("2" (EXPAND "empty?")
                                              (("2" (INST -1 "a!1")
                                                (("2" (EXPAND "member")
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT (-4 1))
                                      (("2" (EXPAND "ideal?")
                                        (("2" (EXPAND "left_ideal?")
                                          (("2" (EXPAND "subring?")
                                            (("2" (EXPAND "ring?")
                                              (("2" (EXPAND "abelian_group?")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "restrict")
                                (("2" (EXPAND "/")
                                  (("2" (CASE "coset?(R!1, J!1)(a!1+J!1)")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (HIDE 2)
                                      (("2"
                                        (REWRITE "lcoset_iff_coset" :DIR RL)
                                        (("2" (EXPAND "left_coset?")
                                          (("2" (INST 1 "a!1") NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (PROPAX) NIL NIL)
             ("3" (DECOMPOSE-EQUALITY)
              (("1" (IFF)
                (("1" (PROP)
                  (("1" (EXPAND "restrict")
                    (("1" (HIDE -2)
                      (("1" (EXPAND "R_kernel")
                        (("1" (FLATTEN)
                          (("1" (EXPAND "/" 1)
                            (("1" (REWRITE "lcoset_iff_coset" :DIR RL)
                              (("1" (EXPAND "left_coset?")
                                (("1" (LEMMA "self_coset")
                                  (("1"
                                    (INST -1 "I!1" "R!1" "gen(R!1, J!1)(x!1)")
                                    (("1" (EXPAND "ideal?")
                                      (("1" (EXPAND "left_ideal?")
                                        (("1" (FLATTEN)
                                          (("1" (HIDE -6 -7)
                                            (("1" (ASSERT)
                                              (("1"
                                                (INST 1 "gen(R!1, J!1)(x!1)")
                                                (("1" (EXPAND "gen")
                                                  (("1" (HIDE -1)
                                                    (("1" (EXPAND "/" -1)
                                                      (("1" (EXPAND "coset?")
                                                        (("1" (FLATTEN)
                                                          (("1" (HIDE -2)
                                                            (("1"
                                                              (EXPAND
                                                               "left_coset?")
                                                              (("1" (SKOSIMP)
                                                                (("1"
                                                                  (LEMMA
                                                                   "lc_gen_eq")
                                                                  (("1"
                                                                    (INST -1
                                                                     "J!1"
                                                                     "R!1"
                                                                     "a!1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (SKOSIMP)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -2)
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "lcos_eq2")
                                                                              (("1"
                                                                                (INST
                                                                                 1
                                                                                 "inv(h!1)")
                                                                                (("1"
                                                                                  (HIDE
                                                                                   -1
                                                                                   -2
                                                                                   -3
                                                                                   -4
                                                                                   2)
                                                                                  (("1"
                                                                                    (REWRITE
                                                                                     "plus_associative")
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "subring?")
                                                                                  (("2"
                                                                                    (FLATTEN)
                                                                                    (("2"
                                                                                      (HIDE-ALL-BUT
                                                                                       (-8
                                                                                        1))
                                                                                      (("2"
                                                                                        (LEMMA
                                                                                         "inv_is_member_R[T,+,*,zero]")
                                                                                        (("2"
                                                                                          (INST?)
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (EXPAND
                                                                                 "subring?")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "ring?")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "abelian_group?")
                                                                                    (("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -2)
                    (("2" (EXPAND "R_kernel")
                      (("2" (EXPAND "restrict")
                        (("2" (SPLIT)
                          (("1" (EXPAND "/") (("1" (PROPAX) NIL NIL)) NIL)
                           ("2" (EXPAND "/" 1)
                            (("2" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
                           ("3" (LEMMA "self_coset")
                            (("3" (INST -1 "I!1" "R!1" "gen(R!1,J!1)(x!1)")
                              (("3" (EXPAND "ideal?")
                                (("3" (EXPAND "left_ideal?")
                                  (("3" (FLATTEN)
                                    (("3" (ASSERT)
                                      (("3" (HIDE -3 -4 -6 -7 2)
                                        (("3" (EXPAND "gen")
                                          (("3" (EXPAND "/" -1)
                                            (("3" (EXPAND "coset?")
                                              (("3" (FLATTEN)
                                                (("3" (HIDE -2)
                                                  (("3" (EXPAND "left_coset?")
                                                    (("3" (SKOSIMP)
                                                      (("3" (REPLACE -1)
                                                        (("3" (TYPEPRED "a!1")
                                                          (("3"
                                                            (LEMMA "lc_gen_eq")
                                                            (("3"
                                                              (INST -1 "J!1"
                                                               "R!1" "a!1")
                                                              (("3" (ASSERT)
                                                                (("3"
                                                                  (EXPAND
                                                                   "subring?")
                                                                  (("3"
                                                                    (FLATTEN)
                                                                    (("3"
                                                                      (EXPAND
                                                                       "subset?"
                                                                       -4)
                                                                      (("3"
                                                                        (INST
                                                                         -4
                                                                         "a!1")
                                                                        (("3"
                                                                          (ASSERT)
                                                                          (("3"
                                                                            (ASSERT)
                                                                            (("3"
                                                                              (SKOSIMP)
                                                                              (("3"
                                                                                (REPLACES
                                                                                 -1)
                                                                                (("3"
                                                                                  (EXPAND
                                                                                   "subset?")
                                                                                  (("3"
                                                                                    (HIDE
                                                                                     -2)
                                                                                    (("3"
                                                                                      (INST
                                                                                       -6
                                                                                       "h!1")
                                                                                      (("3"
                                                                                        (ASSERT)
                                                                                        (("3"
                                                                                          (LEMMA
                                                                                           "R_sum_star_closed[T,+,*,zero]")
                                                                                          (("3"
                                                                                            (INST
                                                                                             -1
                                                                                             "I!1"
                                                                                             "a!1"
                                                                                             "h!1")
                                                                                            (("3"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (REWRITE "ideal_is_coset") NIL NIL)
               ("3" (SKOSIMP)
                (("3" (LEMMA "coset_product")
                  (("3" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                    (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("4" (SKOSIMP)
                (("4" (LEMMA "coset_add")
                  (("4" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                    (("4" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("5" (REWRITE "ideal_is_coset") NIL NIL)
               ("6" (HIDE -1)
                (("6" (SKOSIMP)
                  (("6" (LEMMA "coset_product")
                    (("6" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("6" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("7" (SKOSIMP)
                (("7" (LEMMA "coset_product")
                  (("7" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                    (("7" (ASSERT)
                      (("7" (HIDE -1 -2)
                        (("7" (LEMMA "coset_add")
                          (("7" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                            (("7" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("8" (SKOSIMP)
                (("8" (LEMMA "coset_add")
                  (("8" (ASSERT)
                    (("8" (EXPAND "restrict")
                      (("8" (HIDE -1 -2)
                        (("8" (TYPEPRED "x!1")
                          (("8" (EXPAND "/") (("8" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("9" (EXPAND "restrict")
                (("9" (EXPAND "/")
                  (("9" (SKOSIMP)
                    (("9" (HIDE -1)
                      (("9"
                        (CASE
                            "coset?[T, +](R!1, I!1)((+[T, +])(gen[T, +](R!1, J!1)(A!1), I!1))")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (HIDE 2)
                          (("2" (REWRITE "lcoset_iff_coset" :DIR RL)
                            (("2" (EXPAND "left_coset?")
                              (("2" (INST 1 "gen[T, +](R!1, J!1)(A!1)")
                                (("2" (EXPAND "gen")
                                  (("2" (EXPAND "lc_gen")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "R_homomorphism?")
            (("2" (CASE "coset?(R!1,J!1)(J!1)")
              (("1" (CASE "coset?(R!1,I!1)(I!1)")
                (("1"
                  (CASE
                      "ring?[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1](fullset[coset(R!1,J!1)])")
                  (("1"
                    (CASE
                        "ring?[coset(R!1, I!1), add(R!1, I!1), product(R!1, I!1), I!1]
                                                                 (fullset[coset(R!1, I!1)])")
                    (("1" (SPLIT)
                      (("1" (EXPAND "star_closed?")
                        (("1" (SKOSIMP)
                          (("1"
                            (REWRITE
                             "R_sum_star_closed[coset(R!1, J!1), add(R!1, J!1), product(R!1, J!1), J!1]")
                            (("1" (HIDE 2 3)
                              (("1" (REWRITE "quotient_group_is_ring") NIL
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (EXPAND "star_closed?")
                          (("2" (SKOSIMP)
                            (("2"
                              (REWRITE
                               "R_prod_star_closed[coset(R!1, J!1), add(R!1, J!1), product(R!1, J!1), J!1]")
                              (("2" (HIDE 2)
                                (("2" (REWRITE "quotient_group_is_ring") NIL
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (HIDE 2)
                        (("3" (EXPAND "star_closed?")
                          (("3" (SKOSIMP)
                            (("3"
                              (REWRITE
                               "R_sum_star_closed[coset(R!1, I!1), add(R!1, I!1), product(R!1, I!1), I!1]")
                              (("3" (REWRITE "quotient_group_is_ring") NIL
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("4" (HIDE 2)
                        (("4" (EXPAND "star_closed?")
                          (("4" (SKOSIMP)
                            (("4"
                              (REWRITE
                               "R_prod_star_closed[coset(R!1, I!1), add(R!1, I!1), product(R!1, I!1), I!1]")
                              (("4" (REWRITE "quotient_group_is_ring") NIL
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("5" (HIDE 2)
                        (("5" (EXPAND "homomorphism?")
                          (("5" (SKOSIMP)
                            (("5" (LEMMA "add_charac")
                              (("5"
                                (INST -1 "R!1" "I!1" "gen(R!1, J!1)(a!1)"
                                 "gen(R!1, J!1)(b!1)")
                                (("1" (REPLACES -1)
                                  (("1" (REWRITE "lcos_eq2")
                                    (("1" (HIDE 2)
                                      (("1" (TYPEPRED "a!1" "b!1")
                                        (("1" (HIDE -2 -4)
                                          (("1" (EXPAND "coset?")
                                            (("1" (EXPAND "left_coset?")
                                              (("1" (FLATTEN)
                                                (("1" (HIDE -2 -4)
                                                  (("1" (SKOSIMP*)
                                                    (("1" (EXPAND "gen")
                                                      (("1" (EXPAND "add")
                                                        (("1" (REPLACE -1 1)
                                                          (("1" (REPLACE -2 1)
                                                            (("1"
                                                              (LEMMA
                                                               "lc_gen_eq")
                                                              (("1"
                                                                (INST -1 "J!1"
                                                                 "R!1"
                                                                 "(lc_gen(R!1, J!1)(a!2 + J!1) + lc_gen(R!1, J!1)(a!3 + J!1))")
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (CASE
                                                                        " R!1((lc_gen(R!1, J!1)(a!2 + J!1) + lc_gen(R!1, J!1)(a!3 + J!1)))")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (SKOSIMP)
                                                                        (("1"
                                                                          (INST
                                                                           1
                                                                           "h!1")
                                                                          (("1"
                                                                            (TYPEPRED
                                                                             "h!1")
                                                                            (("1"
                                                                              (HIDE-ALL-BUT
                                                                               (-1
                                                                                -14
                                                                                1))
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (INST
                                                                                   -2
                                                                                   "h!1")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (HIDE -1
                                                                       -2 -3)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "R_sum_star_closed[T,+,*,zero]")
                                                                        (("2"
                                                                          (INST
                                                                           -1
                                                                           "R!1"
                                                                           "lc_gen(R!1, J!1)(a!2 + J!1)"
                                                                           " lc_gen(R!1, J!1)(a!3 + J!1)")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (HIDE
                                                                               2
                                                                               3)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "lc_gen")
                                                                                (("2"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (HIDE -1
                                                                       -2 -3 2)
                                                                      (("3"
                                                                        (EXPAND
                                                                         "left_coset?")
                                                                        (("3"
                                                                          (INST
                                                                           1
                                                                           "a!3")
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("4"
                                                                      (HIDE -1
                                                                       -2 -3 2)
                                                                      (("4"
                                                                        (EXPAND
                                                                         "left_coset?")
                                                                        (("4"
                                                                          (INST
                                                                           1
                                                                           "a!2")
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE -1 -2
                                                                   -3 2)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "left_coset?")
                                                                    (("2"
                                                                      (INST 1
                                                                       "a!3")
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("3"
                                                                  (EXPAND
                                                                   "left_coset?")
                                                                  (("3"
                                                                    (INST 1
                                                                     "a!2")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT (-5 1))
                                      (("2" (EXPAND "ideal?")
                                        (("2" (EXPAND "left_ideal?")
                                          (("2" (EXPAND "subring?")
                                            (("2" (EXPAND "ring?")
                                              (("2" (EXPAND "abelian_group?")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "gen")
                                  (("2" (EXPAND "lc_gen")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("3" (EXPAND "gen")
                                  (("3" (EXPAND "lc_gen")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("6" (HIDE 2)
                        (("6" (EXPAND "homomorphism?")
                          (("6" (SKOSIMP)
                            (("6" (LEMMA "product_charac")
                              (("6"
                                (INST -1 "R!1" "I!1" "gen(R!1, J!1)(a!1)"
                                 "gen(R!1, J!1)(b!1)")
                                (("1" (REPLACES -1)
                                  (("1" (REWRITE "lcos_eq2")
                                    (("1" (HIDE 2)
                                      (("1" (TYPEPRED "a!1" "b!1")
                                        (("1" (HIDE -2 -4)
                                          (("1" (EXPAND "coset?")
                                            (("1" (EXPAND "left_coset?")
                                              (("1" (FLATTEN)
                                                (("1" (HIDE -2 -4)
                                                  (("1" (SKOSIMP*)
                                                    (("1" (REPLACES -1)
                                                      (("1" (REPLACES -1)
                                                        (("1"
                                                          (EXPAND "product" 1)
                                                          (("1"
                                                            (EXPAND "lproduct")
                                                            (("1"
                                                              (CASE
                                                                  "R!1(lc_gen(R!1, J!1)(a!2 + J!1) * lc_gen(R!1, J!1)(a!3 + J!1))")
                                                              (("1"
                                                                (LEMMA
                                                                 "lc_gen_eq")
                                                                (("1"
                                                                  (INST -1
                                                                   "J!1" "R!1"
                                                                   "lc_gen(R!1, J!1)(a!2 + J!1) * lc_gen(R!1, J!1)(a!3 + J!1)")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (SKOSIMP)
                                                                      (("1"
                                                                        (INST 1
                                                                         "h!1")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "gen")
                                                                          (("1"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (TYPEPRED
                                                                           "h!1")
                                                                          (("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -12
                                                                              1))
                                                                            (("2"
                                                                              (EXPAND
                                                                               "subset?")
                                                                              (("2"
                                                                                (INST?)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (HIDE-ALL-BUT
                                                                 1)
                                                                (("2"
                                                                  (LEMMA
                                                                   "R_prod_star_closed[T,+,*,zero]")
                                                                  (("2"
                                                                    (INST -1
                                                                     "R!1"
                                                                     "lc_gen(R!1, J!1)(a!2 + J!1)"
                                                                     "lc_gen(R!1, J!1)(a!3 + J!1)")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "lc_gen")
                                                                        (("2"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("3"
                                                                (HIDE-ALL-BUT
                                                                 1)
                                                                (("3"
                                                                  (EXPAND
                                                                   "left_coset?")
                                                                  (("3"
                                                                    (INST 1
                                                                     "a!3")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("4"
                                                                (HIDE-ALL-BUT
                                                                 1)
                                                                (("4"
                                                                  (EXPAND
                                                                   "left_coset?")
                                                                  (("4"
                                                                    (INST 1
                                                                     "a!2")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT (-5 1))
                                      (("2" (EXPAND "ideal?")
                                        (("2" (EXPAND "left_ideal?")
                                          (("2" (EXPAND "subring?")
                                            (("2" (EXPAND "ring?")
                                              (("2" (EXPAND "abelian_group?")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "gen")
                                  (("2" (EXPAND "lc_gen")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("3" (EXPAND "gen")
                                  (("3" (EXPAND "lc_gen")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT (-4 1))
                      (("2" (REWRITE "fullset_quot_group_is_ring") NIL NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE-ALL-BUT (-4 1))
                    (("2" (REWRITE "fullset_quot_group_is_ring") NIL NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE-ALL-BUT (-2 1))
                  (("2" (REWRITE "ideal_is_coset") NIL NIL)) NIL))
                NIL)
               ("2" (HIDE-ALL-BUT (-2 1))
                (("2" (REWRITE "ideal_is_coset") NIL NIL)) NIL))
              NIL))
            NIL)
           ("3" (REWRITE "ideal_is_coset") NIL NIL)
           ("4" (HIDE 2)
            (("4" (SKOSIMP)
              (("4" (LEMMA "coset_product")
                (("4" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                  (("4" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("5" (HIDE 2)
            (("5" (SKOSIMP)
              (("5" (LEMMA "coset_add")
                (("5" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                  (("5" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("6" (INST 1 "I!1") (("6" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
           ("7" (REWRITE "ideal_is_coset") NIL NIL)
           ("8" (HIDE 2)
            (("8" (SKOSIMP)
              (("8" (LEMMA "coset_product")
                (("8" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                  (("8" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("9" (HIDE 2)
            (("9" (SKOSIMP)
              (("9" (LEMMA "coset_add")
                (("9" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                  (("9" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("10" (HIDE 2)
            (("10" (INST 1 "J!1") (("10" (REWRITE "ideal_is_coset") NIL NIL))
              NIL))
            NIL)
           ("11" (HIDE 2)
            (("11" (SKOSIMP)
              (("11" (EXPAND "/") (("11" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL)
           ("12" (HIDE 2)
            (("12" (SKOSIMP)
              (("12" (EXPAND "/")
                (("12" (REWRITE "lcoset_iff_coset" :DIR RL)
                  (("12" (EXPAND "left_coset?")
                    (("12" (INST 1 "gen[T, +](R!1, J!1)(A!1)")
                      (("12" (EXPAND "gen")
                        (("12" (EXPAND "lc_gen") (("12" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOSIMP) (("2" (EXPAND "/") (("2" (PROPAX) NIL NIL)) NIL)) NIL)
       ("3" (SKOSIMP)
        (("3" (EXPAND "/")
          (("3" (REWRITE "lcoset_iff_coset" :DIR RL)
            (("3" (EXPAND "left_coset?")
              (("3" (INST 1 "gen[T, +](R!1, J!1)(A!1)")
                (("3" (EXPAND "gen")
                  (("3" (EXPAND "lc_gen") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|gen| CONST-DECL "T" |cosets_def| NIL)
    (+ CONST-DECL "set[T]" |cosets_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|self_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|lc_gen_eq| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|right_distributive?| CONST-DECL "bool" |operator_defs_more| NIL)
    (|left_distributive?| CONST-DECL "bool" |operator_defs_more| NIL)
    (|group?| CONST-DECL "bool" |group_def| NIL)
    (|inv_exists?| CONST-DECL "bool" |group_def| NIL)
    (|monoid?| CONST-DECL "bool" |monoid_def| NIL)
    (|monad?| CONST-DECL "bool" |monad_def| NIL)
    (|zero_plus| FORMULA-DECL NIL |ring| NIL)
    (|star_closed?| CONST-DECL "bool" |groupoid_def| NIL)
    (|inv_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|plus_associative| FORMULA-DECL NIL |ring| NIL)
    (|negate_is_right_inv| FORMULA-DECL NIL |ring| NIL)
    (|inv| CONST-DECL "{y | x * y = one AND y * x = one}" |group| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|R_sum_star_closed| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|abelian_group?| CONST-DECL "bool" |group_def| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|plus_zero| FORMULA-DECL NIL |ring| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|left_coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|lcos_eq2| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|R_prod_star_closed| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|add_charac| FORMULA-DECL NIL |quotient_rings| NIL)
    (|product_charac| FORMULA-DECL NIL |quotient_rings| NIL)
    (|lproduct| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL))
   SHOSTAK))
 (|third_isomorphism_th_TCC1| 0
  (|third_isomorphism_th_TCC2-1| |nil| 3758294722
   ("" (SKOSIMP*)
    (("" (REWRITE "lcoset_iff_coset" :DIR RL)
      (("" (EXPAND "left_coset?")
        (("" (EXPAND "add")
          (("" (INST 1 "lc_gen(R!1, J!1)(x1!1`1) + lc_gen(R!1, J!1)(x1!1`2)")
            (("1" (LEMMA "R_sum_star_closed")
              (("1"
                (INST -1 "R!1" "lc_gen[T, +](R!1, J!1)(x1!1`1)"
                 "lc_gen[T, +](R!1, J!1)(x1!1`2)")
                (("1" (ASSERT)
                  (("1" (HIDE 2)
                    (("1" (EXPAND "lc_gen") (("1" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (TYPEPRED "x1!1`2")
              (("2" (EXPAND "coset?") (("2" (ASSERT) NIL NIL)) NIL)) NIL)
             ("3" (TYPEPRED "x1!1`1")
              (("3" (EXPAND "coset?") (("3" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (T FORMAL-NONEMPTY-TYPE-DECL NIL |ring_2nd_3rd_isomorphism_theorems| NIL)
    (+ FORMAL-CONST-DECL "[T, T -> T]" |ring_2nd_3rd_isomorphism_theorems| NIL)
    (* FORMAL-CONST-DECL "[T, T -> T]" |ring_2nd_3rd_isomorphism_theorems| NIL)
    (|zero| FORMAL-CONST-DECL "T" |ring_2nd_3rd_isomorphism_theorems| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|R_sum_star_closed| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|left_coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (R!1 SKOLEM-CONST-DECL "ring[T, +, *, zero]"
     |ring_2nd_3rd_isomorphism_theorems| NIL)
    (J!1 SKOLEM-CONST-DECL "set[T]" |ring_2nd_3rd_isomorphism_theorems| NIL)
    (|x1!1| SKOLEM-CONST-DECL "[coset[T, +](R!1, J!1), coset[T, +](R!1, J!1)]"
     |ring_2nd_3rd_isomorphism_theorems| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)]"
    (96 10 96 32))))
 (|third_isomorphism_th_TCC2| 0
  (|third_isomorphism_th_TCC4-1| |nil| 3758294722
   ("" (SKOSIMP)
    (("" (INST 1 "I!1/J!1")
      ((""
        (REWRITE
         "ideal_is_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
        (("1" (HIDE 2) (("1" (REWRITE "coset_ideal") NIL NIL)) NIL)
         ("2" (HIDE 2) (("2" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL)
         ("3" (HIDE 2) (("3" (REWRITE "fullset_quot_group_is_ring") NIL NIL))
          NIL)
         ("4" (HIDE 2) (("4" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
         ("5" (HIDE 2)
          (("5" (SKOSIMP)
            (("5" (LEMMA "coset_product")
              (("5" (INST?)
                (("5" (INST -1 "x1!1`1" "x1!1`2") (("5" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("6" (HIDE 2)
          (("6" (SKOSIMP)
            (("6" (LEMMA "coset_add")
              (("6" (INST?)
                (("6" (INST -1 "x1!1`1" "x1!1`2") (("6" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("7" (HIDE 2)
          (("7" (INST 1 "J!1") (("7" (REWRITE "ideal_is_coset") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL))
   NIL
   (|third_isomorphism_th| EXISTENCE ""
    "coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))"
    (91 6 95 41))))
 (|third_isomorphism_th_TCC3| 0
  (|third_isomorphism_th_TCC5-1| |nil| 3758294722
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
      (("1" (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2) (("2" (REWRITE "coset_ideal") NIL NIL)) NIL)
         ("3" (HIDE 2) (("3" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL))
        NIL)
       ("2" (HIDE 2) (("2" (REWRITE "fullset_quot_group_is_ring") NIL NIL))
        NIL)
       ("3" (HIDE 2) (("3" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
       ("4" (HIDE 2)
        (("4" (SKOSIMP)
          (("4" (LEMMA "coset_product")
            (("4" (INST -1 "R!1" "J!1" "x1!2`1" "x1!2`2")
              (("4" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("5" (HIDE 2)
        (("5" (SKOSIMP)
          (("5" (LEMMA "coset_add")
            (("5" (INST -1 "R!1" "J!1" "x1!2`1" "x1!2`2")
              (("5" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("6" (HIDE 2)
        (("6" (INST 1 "J!1") (("6" (REWRITE "ideal_is_coset") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "cosets_def[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)].add(restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))"
    "[[coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J))), coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))] -> coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))]"
    (91 6 95 41))))
 (|third_isomorphism_th_TCC4| 0
  (|third_isomorphism_th_TCC3-1| |nil| 3758294722
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)]"
    (93 6 93 47))))
 (|third_isomorphism_th_TCC5| 0
  (|third_isomorphism_th_TCC6-1| |nil| 3758294722
   ("" (SKOSIMP*)
    ((""
      (LEMMA "coset_product[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
      (("1" (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1" "x1!1`2")
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE 2) (("2" (REWRITE "coset_ideal") NIL NIL)) NIL)
         ("3" (HIDE 2) (("3" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL))
        NIL)
       ("2" (HIDE 2) (("2" (REWRITE "fullset_quot_group_is_ring") NIL NIL))
        NIL)
       ("3" (HIDE 2) (("3" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
       ("4" (HIDE 2)
        (("4" (SKOSIMP)
          (("4" (LEMMA "coset_product")
            (("4" (INST -1 "R!1" "J!1" "x1!2`1" "x1!2`2")
              (("4" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("5" (HIDE 2)
        (("5" (SKOSIMP)
          (("5" (LEMMA "coset_add")
            (("5" (INST -1 "R!1" "J!1" "x1!2`1" "x1!2`2")
              (("5" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("6" (HIDE 2)
        (("6" (INST 1 "J!1") (("6" (REWRITE "ideal_is_coset") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "product_coset_def[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)].product(restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))"
    "[[coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J))), coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))] -> coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))]"
    (91 6 95 41))))
 (|third_isomorphism_th_TCC6| 0
  (|third_isomorphism_th_TCC7-1| |nil| 3758294722
   ("" (SKOSIMP)
    ((""
      (REWRITE
       "ideal_is_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
      (("1" (HIDE 2) (("1" (REWRITE "coset_ideal") NIL NIL)) NIL)
       ("2" (HIDE 2) (("2" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL)
       ("3" (HIDE 2) (("3" (REWRITE "fullset_quot_group_is_ring") NIL NIL))
        NIL)
       ("4" (HIDE 2) (("4" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
       ("5" (HIDE 2)
        (("5" (SKOSIMP)
          (("5" (LEMMA "coset_product")
            (("5" (INST?)
              (("5" (INST -1 "x1!1`1" "x1!1`2") (("5" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (HIDE 2)
        (("6" (SKOSIMP)
          (("6" (LEMMA "coset_add")
            (("6" (INST?)
              (("6" (INST -1 "x1!1`1" "x1!1`2") (("6" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (HIDE 2)
        (("7" (INST 1 "J!1") (("7" (REWRITE "ideal_is_coset") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|fullset| CONST-DECL "set" |sets| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J))"
    "coset[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)](restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J)), restrict[set[T], coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.J), bool].restrict(cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+]./(ring_2nd_3rd_isomorphism_theorems.I, ring_2nd_3rd_isomorphism_theorems.J)))"
    (91 6 95 41))))
 (|third_isomorphism_th_TCC7| 0
  (|third_isomorphism_th_TCC9-1| |nil| 3758294722
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_add")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "cosets_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+].add(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)]"
    (91 6 95 41))))
 (|third_isomorphism_th_TCC8| 0
  (|third_isomorphism_th_TCC10-1| |nil| 3758294722
   ("" (SKOSIMP*)
    (("" (LEMMA "coset_product")
      (("" (INST?)
        (("" (INST -1 "x1!1`1" "x1!1`2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE
    "product_coset_def[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+, ring_2nd_3rd_isomorphism_theorems.*].product(ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    "[[coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I), coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)] -> coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)]"
    (91 6 95 41))))
 (|third_isomorphism_th_TCC9| 0
  (|third_isomorphism_th_TCC11-1| |nil| 3758294722
   ("" (SKOSIMP) (("" (REWRITE "ideal_is_coset") NIL NIL)) NIL)
   ((|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL))
   NIL
   (|third_isomorphism_th| SUBTYPE "ring_2nd_3rd_isomorphism_theorems.I"
    "coset[ring_2nd_3rd_isomorphism_theorems.T, ring_2nd_3rd_isomorphism_theorems.+](ring_2nd_3rd_isomorphism_theorems.R, ring_2nd_3rd_isomorphism_theorems.I)"
    (91 6 95 41))))
 (|third_isomorphism_th| 0
  (|third_isomorphism_th-3| |nil| 3800114967
   ("" (SKOSIMP)
    (("" (LEMMA "third_isomorphism_th_ax")
      (("" (INST -1 "I!1" "J!1" "R!1")
        (("" (ASSERT)
          (("" (SKOSIMP)
            ((""
              (LEMMA
               "first_isomorphism_th[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1,
           		    coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1]")
              (("1" (INST -1 "R!1/J!1" "R!1/I!1" "phi!1")
                (("1" (EXPAND "R_isomorphic?")
                  (("1" (SKOSIMP)
                    (("1" (INST 1 "phi!2")
                      (("1" (EXPAND "R_isomorphism?")
                        (("1" (EXPAND "R_monomorphism?")
                          (("1" (EXPAND "R_epimorphism?")
                            (("1"
                              (CASE
                                  "R_homomorphism?[coset[coset(R!1,J!1),add(R!1,J!1)](R!1/J!1,I!1/J!1),
                                                                                      add[coset(R!1,J!1),add(R!1,J!1)](R!1/J!1,I!1/J!1),
                                                                  		    product[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1)](R!1/J!1,I!1/J!1),
                                                                  		    I!1/J!1,
                                                                  		    coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1](/[coset(R!1,J!1),add(R!1,J!1)](R!1/J!1,I!1/J!1),R!1/I!1)
                                                                                         (phi!2)")
                              (("1" (ASSERT)
                                (("1" (HIDE -1)
                                  (("1" (FLATTEN)
                                    (("1" (HIDE -2 -4)
                                      (("1" (SPLIT)
                                        (("1" (HIDE-ALL-BUT (-1 1))
                                          (("1" (GRIND) NIL NIL)) NIL)
                                         ("2" (EXPAND "surjective?")
                                          (("2" (SKOSIMP)
                                            (("2" (INST -2 "y!1")
                                              (("1" (SKOSIMP)
                                                (("1" (INST 1 "x!1")
                                                  (("1" (EXPAND "restrict" 1 1)
                                                    (("1" (EXPAND "/" 1 1)
                                                      (("1"
                                                        (LEMMA
                                                         "lcoset_iff_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
                                                        (("1"
                                                          (INST -1 "x!1"
                                                           "I!1/J!1" "R!1/J!1")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (INST -2 "y!1")
                                                  (("2" (EXPAND "extend")
                                                    (("2" (EXPAND "/")
                                                      (("2" (EXPAND "image")
                                                        (("2" (EXPAND "image")
                                                          (("2" (SKOSIMP)
                                                            (("2"
                                                              (INST 1 "x!1")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (EXPAND
                                                                 "restrict")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (FLATTEN)
                                  (("2" (HIDE -1 -2 -3 -5)
                                    (("2" (EXPAND "R_homomorphism?")
                                      (("2" (FLATTEN)
                                        (("2" (SPLIT)
                                          (("1"
                                            (HIDE-ALL-BUT
                                             (-1 -13 -14 -15 -16 1))
                                            (("1" (EXPAND "star_closed?")
                                              (("1" (SKOSIMP)
                                                (("1" (INST -1 "x!1" "y!1")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (EXPAND "restrict" 1 4)
                                                      (("2" (EXPAND "/" 1 4)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE 2)
                                                    (("3"
                                                      (EXPAND "restrict" 1 4)
                                                      (("3" (EXPAND "/" 1 4)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (HIDE-ALL-BUT
                                             (-2 -13 -14 -15 -16 1))
                                            (("2" (EXPAND "star_closed?")
                                              (("2" (SKOSIMP)
                                                (("2" (INST -1 "x!1" "y!1")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (EXPAND "restrict" 1 4)
                                                      (("2" (EXPAND "/" 1 4)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE 2)
                                                    (("3"
                                                      (EXPAND "restrict" 1 4)
                                                      (("3" (EXPAND "/" 1 4)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (PROPAX) NIL NIL)
                                           ("4" (PROPAX) NIL NIL)
                                           ("5"
                                            (HIDE-ALL-BUT
                                             (-5 -13 -14 -15 -16 1))
                                            (("5" (EXPAND "homomorphism?")
                                              (("5" (SKOSIMP)
                                                (("5" (INST -1 "a!1" "b!1")
                                                  (("5" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("6"
                                            (HIDE-ALL-BUT
                                             (-6 -13 -14 -15 -16 1))
                                            (("6" (EXPAND "homomorphism?")
                                              (("6" (SKOSIMP)
                                                (("6" (INST -1 "a!1" "b!1")
                                                  (("6" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (HIDE -1 -2 -3 2)
                                (("3"
                                  (REWRITE
                                   "ideal_is_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
                                  (("1" (HIDE 2)
                                    (("1" (REWRITE "coset_ideal") NIL NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (REWRITE "quotient_group_is_ring")
                                      NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (HIDE -1 -2 -3 2)
                                (("4" (SKOSIMP)
                                  (("4"
                                    (LEMMA
                                     "coset_product[coset(R!1, J!1), add(R!1, J!1),
                                                        product(R!1, J!1), J!1]")
                                    (("4"
                                      (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1"
                                       "x1!1`2")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "coset_ideal") NIL NIL))
                                        NIL)
                                       ("3" (HIDE 2)
                                        (("3"
                                          (REWRITE "quotient_group_is_ring")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("5" (HIDE -1 -2 -3 2)
                                (("5" (SKOSIMP)
                                  (("5"
                                    (LEMMA
                                     "coset_add[coset(R!1, J!1), add(R!1, J!1),
                                                        product(R!1, J!1), J!1]")
                                    (("5"
                                      (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1"
                                       "x1!1`2")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "coset_ideal") NIL NIL))
                                        NIL)
                                       ("3" (HIDE 2)
                                        (("3"
                                          (REWRITE "quotient_group_is_ring")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("6" (HIDE -1 -2 2)
                                (("6" (INST 1 "I!1/J!1")
                                  (("6"
                                    (LEMMA
                                     "lcoset_iff_coset[coset(R!1, J!1), add(R!1, J!1), product(R!1,J!1), J!1]")
                                    (("6"
                                      (INST -1 "I!1/J!1" "I!1/J!1" "R!1/J!1")
                                      (("6" (ASSERT)
                                        (("6" (HIDE 2)
                                          (("6" (EXPAND "left_coset?")
                                            (("6" (INST 1 "zero+J!1")
                                              (("1"
                                                (LEMMA
                                                 "self_coset[coset(R!1, J!1), add(R!1, J!1), product(R!1, J!1), J!1]")
                                                (("1"
                                                  (INST -1 "I!1/J!1" "R!1/J!1"
                                                   "J!1")
                                                  (("1" (REWRITE "left_zero")
                                                    (("1"
                                                      (CASE
                                                          "subring?[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1](I!1/J!1, R!1/J!1)")
                                                      (("1" (ASSERT)
                                                        (("1" (HIDE -1 2)
                                                          (("1"
                                                            (EXPAND "restrict"
                                                                    1)
                                                            (("1"
                                                              (EXPAND "/" 1)
                                                              (("1"
                                                                (REWRITE
                                                                 "lcoset_iff_coset"
                                                                 :DIR RL)
                                                                (("1"
                                                                  (EXPAND
                                                                   "left_coset?")
                                                                  (("1"
                                                                    (INST 1
                                                                     "zero")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "left_zero")
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (HIDE-ALL-BUT
                                                                       (-2 1))
                                                                      (("2"
                                                                        (EXPAND
                                                                         "ideal?")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "left_ideal?")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "subring?")
                                                                            (("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (HIDE-ALL-BUT
                                                                                 (-2
                                                                                  1))
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "zero_is_member_R")
                                                                                  (("2"
                                                                                    (INST?)
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE -1 -2 2)
                                                        (("2"
                                                          (REWRITE
                                                           "coset_subring")
                                                          (("2" (HIDE 2)
                                                            (("2"
                                                              (EXPAND "ideal?")
                                                              (("2"
                                                                (EXPAND
                                                                 "left_ideal?")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (HIDE -1 -2 2)
                                                        (("3"
                                                          (REWRITE
                                                           "quotient_group_is_ring")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE -1 -2 -4 2)
                                                    (("2"
                                                      (REWRITE
                                                       "ideal_is_coset")
                                                      NIL NIL))
                                                    NIL)
                                                   ("3" (HIDE -1 -2 -4 2)
                                                    (("3"
                                                      (REWRITE
                                                       "quotient_group_is_ring")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -4)
                                                (("2" (EXPAND "restrict")
                                                  (("2" (EXPAND "/")
                                                    (("2" (REWRITE "left_zero")
                                                      (("2"
                                                        (REWRITE
                                                         "ideal_is_coset")
                                                        NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("7" (HIDE -1 -2 2)
                                (("7" (SPLIT)
                                  (("1" (EXPAND "restrict" 1 4)
                                    (("1" (EXPAND "/" 1 4)
                                      (("1" (SKOSIMP)
                                        (("1" (REPLACE -1 1)
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKOSIMP)
                                    (("2" (EXPAND "/" 1)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SPLIT)
                        (("1" (SKOSIMP)
                          (("1" (EXPAND "restrict" 1 4)
                            (("1" (EXPAND "restrict" 1 9)
                              (("1" (EXPAND* "/" 1 (4 10))
                                (("1" (HIDE -1 -2)
                                  (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (EXPAND* "restrict" "/" 1) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -2 2)
                  (("2" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL)
                 ("3" (HIDE -1 -2 2)
                  (("3" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL))
                NIL)
               ("2" (HIDE -1 -2 2)
                (("2" (REWRITE "fullset_quot_group_is_ring") NIL NIL)) NIL)
               ("3" (HIDE -1 -2 2)
                (("3" (REWRITE "fullset_quot_group_is_ring") NIL NIL)) NIL)
               ("4" (HIDE -1 -2 2) (("4" (REWRITE "ideal_is_coset") NIL NIL))
                NIL)
               ("5" (HIDE -1 -2 2)
                (("5" (SKOSIMP)
                  (("5" (LEMMA "coset_product")
                    (("5" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                      (("5" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("6" (HIDE -1 -2 2)
                (("6" (SKOSIMP)
                  (("6" (LEMMA "coset_add")
                    (("6" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                      (("6" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("7" (HIDE -1 -2 2)
                (("7" (INST 1 "I!1")
                  (("7" (EXPAND "coset?")
                    (("7" (LEMMA "lcoset_iff_rcoset")
                      (("7" (INST -1 "I!1" "I!1" "R!1")
                        (("7" (CASE "left_coset?(R!1, I!1)(I!1)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE -1 2)
                            (("2" (EXPAND "left_coset?")
                              (("2" (INST 1 "zero")
                                (("1" (REWRITE "left_zero") NIL NIL)
                                 ("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "R!1")
                                    (("2" (EXPAND "member")
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("8" (HIDE -1 -2 2) (("8" (REWRITE "ideal_is_coset") NIL NIL))
                NIL)
               ("9" (HIDE -1 -2 2)
                (("9" (SKOSIMP)
                  (("9" (LEMMA "coset_product")
                    (("9" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("9" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("10" (HIDE -1 -2 2)
                (("10" (SKOSIMP)
                  (("10" (LEMMA "coset_add")
                    (("10" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("10" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("11" (HIDE -1 -2 2)
                (("11" (INST 1 "J!1")
                  (("11" (EXPAND "coset?")
                    (("11" (LEMMA "lcoset_iff_rcoset")
                      (("11" (INST -1 "J!1" "J!1" "R!1")
                        (("11" (CASE "left_coset?(R!1, J!1)(J!1)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE -1 2)
                            (("2" (EXPAND "left_coset?")
                              (("2" (INST 1 "zero")
                                (("1" (REWRITE "left_zero") NIL NIL)
                                 ("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "R!1")
                                    (("2" (EXPAND "member")
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|first_isomorphism_th| FORMULA-DECL NIL |ring_1st_isomorphism_theorem|
     NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|add| CONST-DECL "set[T]" |cosets_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|R_isomorphic?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|R_monomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|right_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|star_closed?| CONST-DECL "bool" |groupoid_def| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|plus_zero| FORMULA-DECL NIL |ring| NIL)
    (|zero_plus| FORMULA-DECL NIL |ring| NIL)
    (|monad?| CONST-DECL "bool" |monad_def| NIL)
    (|monoid?| CONST-DECL "bool" |monoid_def| NIL)
    (|inv_exists?| CONST-DECL "bool" |group_def| NIL)
    (|group?| CONST-DECL "bool" |group_def| NIL)
    (|abelian_group?| CONST-DECL "bool" |group_def| NIL)
    (|left_distributive?| CONST-DECL "bool" |operator_defs_more| NIL)
    (|right_distributive?| CONST-DECL "bool" |operator_defs_more| NIL)
    (|subring?| CONST-DECL "bool" |ring_def| NIL)
    (|left_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|lproduct| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (+ CONST-DECL "set[T]" |cosets_def| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|coset_subring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|left_zero| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|self_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_isomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|lcoset_iff_rcoset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ring| NONEMPTY-TYPE-EQ-DECL NIL |ring| NIL)
    (|ring?| CONST-DECL "bool" |ring_def| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL))
   NIL)
  (|third_isomorphism_th-2| |nil| 3758877077
   ("" (SKOSIMP)
    (("" (LEMMA "third_isomorphism_th_ax")
      (("" (INST -1 "I!1" "J!1" "R!1")
        (("" (ASSERT)
          (("" (SKOSIMP)
            ((""
              (LEMMA
               "first_isomorphism_th[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1,
         		    coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1]")
              (("1" (INST -1 "R!1/J!1" "R!1/I!1" "phi!1")
                (("1" (EXPAND "R_isomorphic?")
                  (("1" (SKOSIMP)
                    (("1" (INST 1 "phi!2")
                      (("1" (EXPAND "R_isomorphism?")
                        (("1" (EXPAND "R_monomorphism?")
                          (("1" (EXPAND "R_epimorphism?")
                            (("1"
                              (CASE
                                  "R_homomorphism?[coset[coset(R!1,J!1),add(R!1,J!1)](R!1/J!1,I!1/J!1),
                                                                         add[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1)](R!1/J!1,I!1/J!1),
                                                     		    product[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1)](R!1/J!1,I!1/J!1),
                                                     		    I!1/J!1,
                                                     		    coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1](/[coset(R!1,J!1),add(R!1,J!1)](R!1/J!1,I!1/J!1),R!1/I!1)
                                                                            (phi!2)")
                              (("1" (ASSERT)
                                (("1" (HIDE -1)
                                  (("1" (FLATTEN)
                                    (("1" (HIDE -2 -4)
                                      (("1" (SPLIT)
                                        (("1" (HIDE-ALL-BUT (-1 1))
                                          (("1" (GRIND) NIL NIL)) NIL)
                                         ("2" (EXPAND "surjective?")
                                          (("2" (SKOSIMP)
                                            (("2" (INST -2 "y!1")
                                              (("1" (SKOSIMP)
                                                (("1" (INST 1 "x!1")
                                                  (("1" (EXPAND "restrict" 1 1)
                                                    (("1" (EXPAND "/" 1 1)
                                                      (("1"
                                                        (LEMMA
                                                         "lcoset_iff_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
                                                        (("1"
                                                          (INST -1 "x!1"
                                                           "I!1/J!1" "R!1/J!1")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (INST -2 "y!1")
                                                  (("2" (EXPAND "extend")
                                                    (("2" (EXPAND "/")
                                                      (("2" (EXPAND "image")
                                                        (("2" (EXPAND "image")
                                                          (("2" (SKOSIMP)
                                                            (("2"
                                                              (INST 1 "x!1")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (EXPAND
                                                                 "restrict")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (FLATTEN)
                                  (("2" (HIDE -1 -2 -3 -5)
                                    (("2" (EXPAND "R_homomorphism?")
                                      (("2" (FLATTEN)
                                        (("2" (SPLIT)
                                          (("1"
                                            (HIDE-ALL-BUT
                                             (-1 -13 -14 -15 -16 1))
                                            (("1" (EXPAND "star_closed?")
                                              (("1" (SKOSIMP)
                                                (("1" (INST -1 "x!1" "y!1")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (EXPAND "restrict" 1 4)
                                                      (("2" (EXPAND "/" 1 4)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE 2)
                                                    (("3"
                                                      (EXPAND "restrict" 1 4)
                                                      (("3" (EXPAND "/" 1 4)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (HIDE-ALL-BUT
                                             (-2 -13 -14 -15 -16 1))
                                            (("2" (EXPAND "star_closed?")
                                              (("2" (SKOSIMP)
                                                (("2" (INST -1 "x!1" "y!1")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (EXPAND "restrict" 1 4)
                                                      (("2" (EXPAND "/" 1 4)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE 2)
                                                    (("3"
                                                      (EXPAND "restrict" 1 4)
                                                      (("3" (EXPAND "/" 1 4)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (PROPAX) NIL NIL)
                                           ("4" (PROPAX) NIL NIL)
                                           ("5"
                                            (HIDE-ALL-BUT
                                             (-5 -13 -14 -15 -16 1))
                                            (("5" (EXPAND "homomorphism?")
                                              (("5" (SKOSIMP)
                                                (("5" (INST -1 "a!1" "b!1")
                                                  (("5" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("6"
                                            (HIDE-ALL-BUT
                                             (-6 -13 -14 -15 -16 1))
                                            (("6" (EXPAND "homomorphism?")
                                              (("6" (SKOSIMP)
                                                (("6" (INST -1 "a!1" "b!1")
                                                  (("6" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (HIDE -1 -2 -3 2)
                                (("3"
                                  (REWRITE
                                   "ideal_is_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
                                  (("1" (HIDE 2)
                                    (("1" (REWRITE "coset_ideal") NIL NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (REWRITE "quotient_group_is_ring")
                                      NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (HIDE -1 -2 -3 2)
                                (("4" (SKOSIMP)
                                  (("4"
                                    (LEMMA
                                     "coset_product[coset(R!1, J!1), add(R!1, J!1),
                                              product(R!1, J!1), J!1]")
                                    (("4"
                                      (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1"
                                       "x1!1`2")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "coset_ideal") NIL NIL))
                                        NIL)
                                       ("3" (HIDE 2)
                                        (("3"
                                          (REWRITE "quotient_group_is_ring")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("5" (HIDE -1 -2 -3 2)
                                (("5" (SKOSIMP)
                                  (("5"
                                    (LEMMA
                                     "coset_add[coset(R!1, J!1), add(R!1, J!1),
                                              product(R!1, J!1), J!1]")
                                    (("5"
                                      (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1"
                                       "x1!1`2")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "coset_ideal") NIL NIL))
                                        NIL)
                                       ("3" (HIDE 2)
                                        (("3"
                                          (REWRITE "quotient_group_is_ring")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("6" (HIDE -1 -2 2)
                                (("6" (INST 1 "I!1/J!1")
                                  (("6"
                                    (LEMMA
                                     "lcoset_iff_coset[coset(R!1, J!1), add(R!1, J!1), product(R!1,J!1), J!1]")
                                    (("6"
                                      (INST -1 "I!1/J!1" "I!1/J!1" "R!1/J!1")
                                      (("6" (ASSERT)
                                        (("6" (HIDE 2)
                                          (("6" (EXPAND "left_coset?")
                                            (("6" (INST 1 "zero+J!1")
                                              (("1"
                                                (LEMMA
                                                 "self_coset[coset(R!1, J!1), add(R!1, J!1), product(R!1, J!1), J!1]")
                                                (("1"
                                                  (INST -1 "I!1/J!1" "R!1/J!1"
                                                   "J!1")
                                                  (("1" (REWRITE "left_zero")
                                                    (("1"
                                                      (CASE
                                                          "subring?[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1](I!1/J!1, R!1/J!1)")
                                                      (("1" (ASSERT)
                                                        (("1" (HIDE -1 2)
                                                          (("1"
                                                            (EXPAND "restrict"
                                                                    1)
                                                            (("1"
                                                              (EXPAND "/" 1)
                                                              (("1"
                                                                (REWRITE
                                                                 "lcoset_iff_coset"
                                                                 :DIR RL)
                                                                (("1"
                                                                  (EXPAND
                                                                   "left_coset?")
                                                                  (("1"
                                                                    (INST 1
                                                                     "zero")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "left_zero")
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (HIDE-ALL-BUT
                                                                       (-2 1))
                                                                      (("2"
                                                                        (EXPAND
                                                                         "ideal?")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "left_ideal?")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "subring?")
                                                                            (("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (HIDE-ALL-BUT
                                                                                 (-2
                                                                                  1))
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "zero_is_member_R")
                                                                                  (("2"
                                                                                    (INST?)
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE -1 -2 2)
                                                        (("2"
                                                          (REWRITE
                                                           "coset_subring")
                                                          (("2" (HIDE 2)
                                                            (("2"
                                                              (EXPAND "ideal?")
                                                              (("2"
                                                                (EXPAND
                                                                 "left_ideal?")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (HIDE -1 -2 2)
                                                        (("3"
                                                          (REWRITE
                                                           "quotient_group_is_ring")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE -1 -2 -4 2)
                                                    (("2"
                                                      (REWRITE
                                                       "ideal_is_coset")
                                                      NIL NIL))
                                                    NIL)
                                                   ("3" (HIDE -1 -2 -4 2)
                                                    (("3"
                                                      (REWRITE
                                                       "quotient_group_is_ring")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -4)
                                                (("2" (EXPAND "restrict")
                                                  (("2" (EXPAND "/")
                                                    (("2" (REWRITE "left_zero")
                                                      (("2"
                                                        (REWRITE
                                                         "ideal_is_coset")
                                                        NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("7" (HIDE -1 -2 2)
                                (("7" (SPLIT)
                                  (("1" (EXPAND "restrict" 1 4)
                                    (("1" (EXPAND "/" 1 4)
                                      (("1" (SKOSIMP)
                                        (("1" (REPLACE -1 1)
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKOSIMP)
                                    (("2" (EXPAND "/" 1)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SPLIT)
                        (("1" (SKOSIMP)
                          (("1" (EXPAND "restrict" 1 4)
                            (("1" (EXPAND "restrict" 1 9)
                              (("1" (EXPAND* "/" 1 (4 10))
                                (("1" (HIDE -1 -2)
                                  (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (EXPAND* "restrict" "/" 1) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -2 2)
                  (("2" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL)
                 ("3" (HIDE -1 -2 2)
                  (("3" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL))
                NIL)
               ("2" (HIDE -1 -2 2)
                (("2" (REWRITE "fullset_quot_group_is_ring") NIL NIL)) NIL)
               ("3" (HIDE -1 -2 2)
                (("3" (REWRITE "fullset_quot_group_is_ring") NIL NIL)) NIL)
               ("4" (HIDE -1 -2 2) (("4" (REWRITE "ideal_is_coset") NIL NIL))
                NIL)
               ("5" (HIDE -1 -2 2)
                (("5" (SKOSIMP)
                  (("5" (LEMMA "coset_product")
                    (("5" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                      (("5" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("6" (HIDE -1 -2 2)
                (("6" (SKOSIMP)
                  (("6" (LEMMA "coset_add")
                    (("6" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                      (("6" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("7" (HIDE -1 -2 2)
                (("7" (INST 1 "I!1")
                  (("7" (EXPAND "coset?")
                    (("7" (LEMMA "lcoset_iff_rcoset")
                      (("7" (INST -1 "I!1" "I!1" "R!1")
                        (("7" (CASE "left_coset?(R!1, I!1)(I!1)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE -1 2)
                            (("2" (EXPAND "left_coset?")
                              (("2" (INST 1 "zero")
                                (("1" (REWRITE "left_zero") NIL NIL)
                                 ("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "R!1")
                                    (("2" (EXPAND "member")
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("8" (HIDE -1 -2 2) (("8" (REWRITE "ideal_is_coset") NIL NIL))
                NIL)
               ("9" (HIDE -1 -2 2)
                (("9" (SKOSIMP)
                  (("9" (LEMMA "coset_product")
                    (("9" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("9" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("10" (HIDE -1 -2 2)
                (("10" (SKOSIMP)
                  (("10" (LEMMA "coset_add")
                    (("10" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("10" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("11" (HIDE -1 -2 2)
                (("11" (INST 1 "J!1")
                  (("11" (EXPAND "coset?")
                    (("11" (LEMMA "lcoset_iff_rcoset")
                      (("11" (INST -1 "J!1" "J!1" "R!1")
                        (("11" (CASE "left_coset?(R!1, J!1)(J!1)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE -1 2)
                            (("2" (EXPAND "left_coset?")
                              (("2" (INST 1 "zero")
                                (("1" (REWRITE "left_zero") NIL NIL)
                                 ("2" (LEMMA "zero_is_member_R[T,+,*,zero]")
                                  (("2" (INST -1 "R!1")
                                    (("2" (EXPAND "member")
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|product| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|first_isomorphism_th| FORMULA-DECL NIL |ring_1st_isomorphism_theorem|
     NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|R_isomorphic?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|R_monomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|right_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|lproduct| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|coset_subring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|left_zero| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|self_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_isomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (/ CONST-DECL "setof[set[T]]" |cosets_def| NIL)
    (|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|lcoset_iff_rcoset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL))
   NIL)
  (|third_isomorphism_th-1| |nil| 3758294867
   ("" (SKOSIMP)
    (("" (LEMMA "third_isomorphism_th_ax")
      (("" (INST -1 "I!1" "J!1" "R!1")
        (("" (ASSERT)
          (("" (SKOSIMP)
            ((""
              (LEMMA
               "first_isomorphism_th[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1,
   		    coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1]")
              (("1" (INST -1 "R!1/J!1" "R!1/I!1" "phi!1")
                (("1" (EXPAND "R_isomorphic?")
                  (("1" (SKOSIMP)
                    (("1" (INST 1 "phi!2")
                      (("1" (EXPAND "R_isomorphism?")
                        (("1" (EXPAND "R_monomorphism?")
                          (("1" (EXPAND "R_epimorphism?")
                            (("1"
                              (CASE
                                  "R_homomorphism?[coset[coset(R!1,J!1),add(R!1,J!1)](R!1/J!1,I!1/J!1),
                                  add[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1)](R!1/J!1,I!1/J!1),
              		    product[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1)](R!1/J!1,I!1/J!1),
              		    I!1/J!1,
              		    coset(R!1,I!1),add(R!1,I!1),product(R!1,I!1),I!1](/[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1)](R!1/J!1,I!1/J!1),R!1/I!1)
                                     (phi!2)")
                              (("1" (ASSERT)
                                (("1" (HIDE -1)
                                  (("1" (FLATTEN)
                                    (("1" (HIDE -2 -4)
                                      (("1" (SPLIT)
                                        (("1" (HIDE-ALL-BUT (-1 1))
                                          (("1" (GRIND) NIL NIL)) NIL)
                                         ("2" (EXPAND "surjective?")
                                          (("2" (SKOSIMP)
                                            (("2" (INST -2 "y!1")
                                              (("1" (SKOSIMP)
                                                (("1" (INST 1 "x!1")
                                                  (("1" (EXPAND "restrict" 1 1)
                                                    (("1" (EXPAND "/" 1 1)
                                                      (("1"
                                                        (LEMMA
                                                         "lcoset_iff_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
                                                        (("1"
                                                          (INST -1 "x!1"
                                                           "I!1/J!1" "R!1/J!1")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (INST -2 "y!1")
                                                  (("2" (EXPAND "extend")
                                                    (("2" (EXPAND "/")
                                                      (("2" (EXPAND "image")
                                                        (("2" (EXPAND "image")
                                                          (("2" (SKOSIMP)
                                                            (("2"
                                                              (INST 1 "x!1")
                                                              (("1" (ASSERT)
                                                                NIL NIL)
                                                               ("2"
                                                                (EXPAND
                                                                 "restrict")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (FLATTEN)
                                  (("2" (HIDE -1 -2 -3 -5)
                                    (("2" (EXPAND "R_homomorphism?")
                                      (("2" (FLATTEN)
                                        (("2" (SPLIT)
                                          (("1"
                                            (HIDE-ALL-BUT
                                             (-1 -13 -14 -15 -16 1))
                                            (("1" (EXPAND "star_closed?")
                                              (("1" (SKOSIMP)
                                                (("1" (INST -1 "x!1" "y!1")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (EXPAND "restrict" 1 4)
                                                      (("2" (EXPAND "/" 1 4)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE 2)
                                                    (("3"
                                                      (EXPAND "restrict" 1 4)
                                                      (("3" (EXPAND "/" 1 4)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (HIDE-ALL-BUT
                                             (-2 -13 -14 -15 -16 1))
                                            (("2" (EXPAND "star_closed?")
                                              (("2" (SKOSIMP)
                                                (("2" (INST -1 "x!1" "y!1")
                                                  (("1" (GRIND) NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (EXPAND "restrict" 1 4)
                                                      (("2" (EXPAND "/" 1 4)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE 2)
                                                    (("3"
                                                      (EXPAND "restrict" 1 4)
                                                      (("3" (EXPAND "/" 1 4)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (PROPAX) NIL NIL)
                                           ("4" (PROPAX) NIL NIL)
                                           ("5"
                                            (HIDE-ALL-BUT
                                             (-5 -13 -14 -15 -16 1))
                                            (("5" (EXPAND "homomorphism?")
                                              (("5" (SKOSIMP)
                                                (("5" (INST -1 "a!1" "b!1")
                                                  (("5" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("6"
                                            (HIDE-ALL-BUT
                                             (-6 -13 -14 -15 -16 1))
                                            (("6" (EXPAND "homomorphism?")
                                              (("6" (SKOSIMP)
                                                (("6" (INST -1 "a!1" "b!1")
                                                  (("6" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (HIDE -1 -2 2)
                                (("3" (INST 1 "I!1/J!1")
                                  (("3"
                                    (LEMMA
                                     "lcoset_iff_coset[coset(R!1, J!1), add(R!1, J!1), product(R!1,J!1), J!1]")
                                    (("3"
                                      (INST -1 "I!1/J!1" "I!1/J!1" "R!1/J!1")
                                      (("3" (ASSERT)
                                        (("3" (HIDE 2)
                                          (("3" (EXPAND "left_coset?")
                                            (("3" (INST 1 "zero+J!1")
                                              (("1"
                                                (LEMMA
                                                 "self_coset[coset(R!1, J!1), add(R!1, J!1), product(R!1, J!1), J!1]")
                                                (("1"
                                                  (INST -1 "I!1/J!1" "R!1/J!1"
                                                   "J!1")
                                                  (("1" (REWRITE "left_zero")
                                                    (("1"
                                                      (CASE
                                                          "subring?[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1](I!1/J!1, R!1/J!1)")
                                                      (("1" (ASSERT)
                                                        (("1" (HIDE -1 2)
                                                          (("1"
                                                            (EXPAND "restrict"
                                                                    1)
                                                            (("1"
                                                              (EXPAND "/" 1)
                                                              (("1"
                                                                (REWRITE
                                                                 "lcoset_iff_coset"
                                                                 :DIR RL)
                                                                (("1"
                                                                  (EXPAND
                                                                   "left_coset?")
                                                                  (("1"
                                                                    (INST 1
                                                                     "zero")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "left_zero")
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (HIDE-ALL-BUT
                                                                       (-2 1))
                                                                      (("2"
                                                                        (EXPAND
                                                                         "ideal?")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "left_ideal?")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "subring?")
                                                                            (("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (HIDE-ALL-BUT
                                                                                 (-2
                                                                                  1))
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "zero_is_member_R")
                                                                                  (("2"
                                                                                    (INST?)
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE -1 -2 2)
                                                        (("2"
                                                          (REWRITE
                                                           "coset_subring")
                                                          (("2" (HIDE 2)
                                                            (("2"
                                                              (EXPAND "ideal?")
                                                              (("2"
                                                                (EXPAND
                                                                 "left_ideal?")
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (HIDE -1 -2 2)
                                                        (("3"
                                                          (REWRITE
                                                           "quotient_group_is_ring")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE -1 -2 -4 2)
                                                    (("2"
                                                      (REWRITE
                                                       "ideal_is_coset")
                                                      NIL NIL))
                                                    NIL)
                                                   ("3" (HIDE -1 -2 -4 2)
                                                    (("3"
                                                      (REWRITE
                                                       "quotient_group_is_ring")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -4)
                                                (("2" (EXPAND "restrict")
                                                  (("2" (EXPAND "/")
                                                    (("2" (REWRITE "left_zero")
                                                      (("2"
                                                        (REWRITE
                                                         "ideal_is_coset")
                                                        NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (HIDE -1 -2 -3 2)
                                (("4"
                                  (REWRITE
                                   "ideal_is_coset[coset(R!1,J!1),add(R!1,J!1),product(R!1,J!1),J!1]")
                                  (("1" (HIDE 2)
                                    (("1" (REWRITE "coset_ideal") NIL NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (REWRITE "quotient_group_is_ring")
                                      NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("5" (HIDE -1 -2 -3 2)
                                (("5" (SKOSIMP)
                                  (("5"
                                    (LEMMA
                                     "coset_product[coset(R!1, J!1), add(R!1, J!1),
                product(R!1, J!1), J!1]")
                                    (("5"
                                      (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1"
                                       "x1!1`2")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "coset_ideal") NIL NIL))
                                        NIL)
                                       ("3" (HIDE 2)
                                        (("3"
                                          (REWRITE "quotient_group_is_ring")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("6" (HIDE -1 -2 -3 2)
                                (("6" (SKOSIMP)
                                  (("6"
                                    (LEMMA
                                     "coset_add[coset(R!1, J!1), add(R!1, J!1),
                product(R!1, J!1), J!1]")
                                    (("6"
                                      (INST -1 "R!1/J!1" "I!1/J!1" "x1!1`1"
                                       "x1!1`2")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "coset_ideal") NIL NIL))
                                        NIL)
                                       ("3" (HIDE 2)
                                        (("3"
                                          (REWRITE "quotient_group_is_ring")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("7" (HIDE -1 -2 2)
                                (("7" (SPLIT)
                                  (("1" (EXPAND "restrict" 1 4)
                                    (("1" (EXPAND "/" 1 4)
                                      (("1" (SKOSIMP)
                                        (("1" (REPLACE -1 1)
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKOSIMP)
                                    (("2" (EXPAND "/" 1)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SPLIT)
                        (("1" (SKOSIMP)
                          (("1" (EXPAND "restrict" 1 4)
                            (("1" (EXPAND "restrict" 1 9)
                              (("1" (EXPAND* "/" 1 (4 10))
                                (("1" (HIDE -1 -2)
                                  (("1" (REPLACE -1 1) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (EXPAND* "restrict" "/" 1) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -2 2)
                  (("2" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL)
                 ("3" (HIDE -1 -2 2)
                  (("3" (REWRITE "quotient_group_is_ring") NIL NIL)) NIL))
                NIL)
               ("2" (HIDE -1 -2 2)
                (("2" (INST 1 "I!1") (("2" (REWRITE "ideal_is_coset") NIL NIL))
                  NIL))
                NIL)
               ("3" (HIDE -1 -2 2)
                (("3" (INST 1 "J!1") (("3" (REWRITE "ideal_is_coset") NIL NIL))
                  NIL))
                NIL)
               ("4" (HIDE -1 -2 2)
                (("4" (REWRITE "fullset_quot_group_is_ring") NIL NIL)) NIL)
               ("5" (HIDE -1 -2 2)
                (("5" (REWRITE "fullset_quot_group_is_ring") NIL NIL)) NIL)
               ("6" (HIDE -1 -2 2) (("6" (REWRITE "ideal_is_coset") NIL NIL))
                NIL)
               ("7" (HIDE -1 -2 2)
                (("7" (SKOSIMP)
                  (("7" (LEMMA "coset_product")
                    (("7" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                      (("7" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("8" (HIDE -1 -2 2)
                (("8" (SKOSIMP)
                  (("8" (LEMMA "coset_add")
                    (("8" (INST -1 "R!1" "I!1" "x1!1`1" "x1!1`2")
                      (("8" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("9" (HIDE -1 -2 2) (("9" (REWRITE "ideal_is_coset") NIL NIL))
                NIL)
               ("10" (HIDE -1 -2 2)
                (("10" (SKOSIMP)
                  (("10" (LEMMA "coset_product")
                    (("10" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("10" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("11" (HIDE -1 -2 2)
                (("11" (SKOSIMP)
                  (("11" (LEMMA "coset_add")
                    (("11" (INST -1 "R!1" "J!1" "x1!1`1" "x1!1`2")
                      (("11" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|fullset_quot_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|R_homomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_homomorphism| TYPE-EQ-DECL NIL |ring_homomorphisms_def| NIL)
    (|R_isomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_epimorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|coset_add| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_product| FORMULA-DECL NIL |quotient_rings| NIL)
    (|coset_ideal| FORMULA-DECL NIL |quotient_rings| NIL)
    (|self_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|ideal_is_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|left_zero| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|quotient_group_is_ring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|ideal| TYPE-EQ-DECL NIL |ring_ideal_def| NIL)
    (|coset_subring| FORMULA-DECL NIL |quotient_rings| NIL)
    (|zero_is_member_R| FORMULA-DECL NIL |ring_basic_properties| NIL)
    (|homomorphism?| CONST-DECL "bool" |homomorphisms_def| NIL)
    (|lproduct| CONST-DECL "set[T]" |product_coset_def| NIL)
    (|lc_gen| CONST-DECL "T" |cosets_def| NIL)
    (|left_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|left_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_swallow?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|ideal?| CONST-DECL "bool" |ring_ideal_def| NIL)
    (|right_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|left_coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|lcoset_iff_coset| FORMULA-DECL NIL |ring_cosets_lemmas| NIL)
    (|R_monomorphism?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|R_kernel| CONST-DECL "set[T1]" |ring_homomorphisms_def| NIL)
    (|R_isomorphic?| CONST-DECL "bool" |ring_homomorphisms_def| NIL)
    (|first_isomorphism_th| FORMULA-DECL NIL |ring_1st_isomorphism_theorem|
     NIL)
    (|coset?| CONST-DECL "bool" |cosets_def| NIL)
    (|coset| TYPE-EQ-DECL NIL |cosets_def| NIL)
    (|product| CONST-DECL "set[T]" |product_coset_def| NIL))
   SHOSTAK)))

