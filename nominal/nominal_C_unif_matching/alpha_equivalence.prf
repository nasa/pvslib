(|alpha_equivalence|
 (|alpha_TCC1| 0
  (|alpha_TCC1-1| NIL 3624365226 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_TCC2| 0
  (|alpha_TCC2-1| NIL 3624365226 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_TCC3| 0
  (|alpha_TCC3-1| NIL 3624365226 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_TCC4| 0
  (|alpha_TCC4-1| NIL 3624365226 ("" (TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_TCC5| 0
  (|alpha_TCC5-1| NIL 3624365226 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_TCC6| 0
  (|alpha_TCC6-1| NIL 3755002788 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_TCC7| 0
  (|alpha_TCC7-1| NIL 3755002788 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|alpha_TCC8| 0
  (|alpha_TCC8-1| NIL 3755004858 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|alpha_ord| 0
  (|alpha_ord-1| NIL 3758225156 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (|ord| CONST-DECL "upto(6)" |term_adt| NIL))
   SHOSTAK))
 (|alpha_depth| 0
  (|alpha_depth-1| NIL 3758034538
   ("" (MEASURE-INDUCT "depth(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP)
        (("1" (SKEEP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (EXPAND "alpha" -1)
                (("2" (PROP)
                  (("2" (LEMMA "term_times_eta")
                    (("2" (INST? -1)
                      (("2" (REPLACE -1 1 RL)
                        (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN) (("3" (HIDE -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (SKEEP)
              (("4" (EXPAND "alpha" -2)
                (("4" (PROP)
                  (("4" (INST -1 "p1")
                    (("4" (PROP)
                      (("1" (INST -1 "Delta" "term1(s)")
                        (("1" (PROP)
                          (("1" (REVEAL -2)
                            (("1" (INST -1 "p2")
                              (("1" (PROP)
                                (("1" (INST -1 "Delta" "term2(s)")
                                  (("1" (PROP) (("1" (GRIND) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (EXPAND "alpha" -2)
              (("5" (FLATTEN)
                (("5" (LEMMA "term_abs_eta")
                  (("5" (INST -1 "s")
                    (("5" (REPLACE -1 1 RL)
                      (("5" (EXPAND "depth" 1)
                        (("5" (PROP)
                          (("1" (INST -4 "abs2_var")
                            (("1" (PROP)
                              (("1" (INST -1 "Delta" "body(s)")
                                (("1" (PROP) NIL NIL)) NIL)
                               ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (INST -4 "abs2_var")
                            (("2" (PROP)
                              (("1"
                                (INST -1 "Delta"
                                 "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                (("1" (PROP)
                                  (("1" (HIDE -2 -3 -4 -5 1)
                                    (("1" (REWRITE "ext_preserves_depth") NIL
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (EXPAND "alpha" -2)
                (("6" (PROP)
                  (("6" (LEMMA "term_app_eta")
                    (("6" (INST -1 "s")
                      (("6" (REPLACE -1 1 RL)
                        (("6" (EXPAND "depth" 1)
                          (("6" (INST? -2)
                            (("6" (PROP)
                              (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)
                               ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (EXPAND "alpha" -2)
                (("7" (FLATTEN)
                  (("7" (LEMMA "term_c_app_eta")
                    (("7" (INST -1 "s")
                      (("7" (CASE "ag = pair(term1(ag), term2(ag))")
                        (("1"
                          (CASE
                              "c_arg(s) = pair(term1(c_arg(s)), term2(c_arg(s)))")
                          (("1" (PROP)
                            (("1" (REPLACE -5 1 RL T)
                              (("1" (EXPAND "depth" 1)
                                (("1" (INST -5 "ag")
                                  (("1" (PROP)
                                    (("1" (INST -1 "Delta" "c_arg(s)")
                                      (("1" (PROP)
                                        (("1" (REPLACE -4 1)
                                          (("1" (REPLACE -3 1)
                                            (("1" (EXPAND "alpha" 1)
                                              (("1" (PROP) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (REPLACE -5 1 RL)
                              (("2" (EXPAND "depth" 1)
                                (("2" (REPLACE -4 1)
                                  (("2" (REPLACE -3 1)
                                    (("2" (EXPAND "depth" 1)
                                      (("2" (INST -6 "term1(ag)")
                                        (("2" (PROP)
                                          (("1"
                                            (INST -1 "Delta" "term2(c_arg(s))")
                                            (("1" (PROP)
                                              (("1" (REVEAL -2)
                                                (("1" (INST -1 "term2(ag)")
                                                  (("1" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "term1(c_arg(s))")
                                                      (("1" (PROP)
                                                        (("1" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE-ALL-BUT 1)
                            (("2" (TYPEPRED "c_arg(s)")
                              (("2" (HIDE -1)
                                (("2" (LEMMA "term_pair_eta")
                                  (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE-ALL-BUT 1)
                          (("2" (TYPEPRED "ag")
                            (("2" (HIDE -1)
                              (("2" (GRIND)
                                (("2" (LEMMA "term_pair_eta")
                                  (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term_times_eta| FORMULA-DECL NIL |term_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|term_abs_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|ext_preserves_depth| FORMULA-DECL NIL |nominal_term| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|term_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|term_c_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|depth| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   SHOSTAK))
 (|alpha_size| 0
  (|alpha_size-1| NIL 3755540242
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (SKEEP)
      (("" (SKEEP)
        (("" (EXPAND "alpha" -2)
          (("" (LIFT-IF)
            (("" (PROP)
              (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (HIDE -4 -5 1) (("2" (GRIND) NIL NIL)) NIL)
               ("3" (GRIND) NIL NIL)
               ("4" (LEMMA "term_pair_eta")
                (("4" (INST-CP -1 "x")
                  (("4" (INST -1 "s")
                    (("4" (REPLACE -1 4 RL T)
                      (("4" (REPLACE -1 4 RL T)
                        (("4" (EXPAND "size" 4)
                          (("4" (INST-CP -5 "term1(x)")
                            (("4" (PROP)
                              (("1" (INST -1 "Delta" "term1(s)")
                                (("1" (PROP)
                                  (("1" (HIDE -2 -3)
                                    (("1" (REPLACE -1 4)
                                      (("1" (ASSERT)
                                        (("1" (INST -4 "term2(x)")
                                          (("1" (PROP)
                                            (("1" (INST -1 "Delta" "term2(s)")
                                              (("1" (PROP) NIL NIL)) NIL)
                                             ("2" (HIDE-ALL-BUT 1)
                                              (("2" (GRIND)
                                                (("2" (REVEAL -8)
                                                  (("2" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT 1)
                                (("2" (REVEAL -6) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("5" (INST -5 "body(x)")
                (("5" (PROP)
                  (("1" (INST -1 "Delta" "body(s)")
                    (("1" (EXPAND "size" 5) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                   ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("6" (EXPAND "size" 6)
                (("6" (ASSERT)
                  (("6" (INST -5 "body(x)")
                    (("6" (PROP)
                      (("1"
                        (INST -1 "Delta"
                         "ext((: (abstr(x), abstr(s)) :))(body(s))")
                        (("1" (PROP)
                          (("1" (LEMMA "ext_preserves_size")
                            (("1" (HIDE -3 -4 -5 -6 1 2 3 4 5)
                              (("1" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("7" (EXPAND "size" 6)
                (("7" (ASSERT)
                  (("7" (INST -5 "arg(x)") (("7" (GRIND) NIL NIL)) NIL)) NIL))
                NIL)
               ("8" (EXPAND "size" 7)
                (("8" (ASSERT)
                  (("8" (EXPAND "size" 7)
                    (("8" (INST-CP -5 "term1(c_arg(x))")
                      (("8" (PROP)
                        (("1" (INST -1 "Delta" "term1(c_arg(s))")
                          (("1" (PROP)
                            (("1" (ASSERT)
                              (("1" (REPLACE -1 7 NIL T)
                                (("1" (ASSERT)
                                  (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("9" (EXPAND "size" 7)
                (("9" (ASSERT)
                  (("9" (EXPAND "size" 7)
                    (("9" (HIDE -3 -4 1 2 3 4 5 6)
                      (("9" (INST-CP -3 "term1(c_arg(x))")
                        (("9" (PROP)
                          (("1" (INST -1 "Delta" "term2(c_arg(s))")
                            (("1" (PROP)
                              (("1" (REPLACE -1 1 NIL T)
                                (("1" (ASSERT)
                                  (("1" (INST -3 "term2(c_arg(x))")
                                    (("1" (PROP)
                                      (("1" (INST -1 "Delta" "term1(c_arg(s))")
                                        (("1" (PROP) NIL NIL)) NIL)
                                       ("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|ext_preserves_size| FORMULA-DECL NIL |nominal_term| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   SHOSTAK))
 (|alpha_ext_invariance| 0
  (|alpha_ext_invariance-2| NIL 3745912740
   ("" (INDUCT "t")
    (("1" (GRIND) NIL NIL)
     ("2" (GRIND)
      (("2" (REWRITE "act_append")
        (("2" (REWRITE "act_append") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL)
     ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)
     ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL))
    NIL)
   ((|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|act_append| FORMULA-DECL NIL |atoms| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL))
   NIL)
  (|alpha_ext_invariance-1| NIL 3624717580
   ("" (INDUCT T)
    (("1" (GRIND) NIL NIL)
     ("2" (GRIND)
      (("2" (REWRITE ACT_APPEND)
        (("2" (REWRITE ACT_APPEND) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL)
     ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)
     ("6" (GRIND) NIL NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_ext_invariance_left| 0
  (|alpha_ext_invariance_left-3| "" 3758185577
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP)
        (("1" (SKEEP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (EXPAND "ext" 1)
                (("2" (EXPAND "alpha" 1)
                  (("2" (ASSERT)
                    (("2" (DECOMPOSE-EQUALITY -1)
                      (("2" (GRIND)
                        (("1" (HIDE -3 -4 -5 2)
                          (("1" (HIDE -2)
                            (("1" (REWRITE "act_append")
                              (("1" (REWRITE "act_append")
                                (("1" (REVEAL -5) (("1" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (REVEAL -2)
                          (("2" (HIDE -3 -4 -5 2)
                            (("2" (REWRITE "act_append")
                              (("2" (REWRITE "act_append")
                                (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (PROP) (("3" (HIDE -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (EXPAND "ext" 1)
              (("4" (SKEEP)
                (("4" (INST-CP -1 "p1")
                  (("4" (PROP)
                    (("1" (INST-CP -2 "p2")
                      (("1" (PROP)
                        (("1" (GRIND)
                          (("1" (HIDE -2 -3)
                            (("1" (REVEAL -7)
                              (("1" (INST -1 "Delta" "pi1" "pi2" "term2(s)")
                                (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2 -4)
                            (("2" (REVEAL -5)
                              (("2" (INST -1 "Delta" "pi1" "pi2" "term1(s)")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (EXPAND "ext" 1)
              (("5" (EXPAND "alpha" 1)
                (("5" (DECOMPOSE-EQUALITY -2)
                  (("5" (GRIND)
                    (("1" (HIDE -1 -3 -4)
                      (("1" (REVEAL -7)
                        (("1" (REVEAL -5)
                          (("1" (INST -1 "Delta" "pi1" "pi2" "body(s)")
                            (("1" (ASSERT)
                              (("1" (HIDE -2 2)
                                (("1" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REVEAL -4)
                      (("2" (HIDE -2 -3 -4 -5 2)
                        (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                      NIL)
                     ("3" (HIDE -1 -3 -4 1)
                      (("3" (REVEAL -5)
                        (("3"
                          (INST -1 "Delta" "pi1" "pi2"
                           "ext((: (act(pi2)(abs1_var), abstr(s)) :))(body(s))")
                          (("3" (ASSERT)
                            (("3" (HIDE -1 2)
                              (("3" (REVEAL -8)
                                (("3" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("4" (HIDE-ALL-BUT 1)
                      (("4" (REVEAL -8) (("4" (DECOMPOSE-EQUALITY) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (EXPAND "ext" 1)
                (("6" (EXPAND "alpha" 1)
                  (("6" (INST -1 "ag")
                    (("6" (PROP)
                      (("1" (INST -1 "Delta" "pi1" "pi2" "arg(s)")
                        (("1" (ASSERT)
                          (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                         ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL)
                       ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (EXPAND "ext" 1)
                (("7" (EXPAND "alpha" 1)
                  (("7"
                    (CASE
                        "alpha(Delta)(ext(pi1)(term1(ag)), term1(c_arg(s))) = alpha(Delta)(ext(pi2)(term1(ag)), term1(c_arg(s)))")
                    (("1"
                      (CASE
                          "alpha(Delta)(ext(pi1)(term2(ag)), term2(c_arg(s))) = alpha(Delta)(ext(pi2)(term2(ag)), term2(c_arg(s)))")
                      (("1"
                        (CASE
                            "alpha(Delta)(ext(pi1)(term1(ag)), term2(c_arg(s))) = alpha(Delta)(ext(pi2)(term1(ag)), term2(c_arg(s)))")
                        (("1"
                          (CASE
                              "alpha(Delta)(ext(pi1)(term2(ag)), term1(c_arg(s))) = alpha(Delta)(ext(pi2)(term2(ag)), term1(c_arg(s)))")
                          (("1" (HIDE -5 -6)
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (HIDE -1 -2 -3 2)
                            (("2" (INST -1 "term2(ag)")
                              (("2" (PROP)
                                (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1 -2 2)
                          (("2" (INST -1 "term1(ag)")
                            (("2" (PROP)
                              (("1"
                                (INST -1 "Delta" "pi1" "pi2" "term2(c_arg(s))")
                                (("1" (PROP) NIL NIL)) NIL)
                               ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -1 2)
                        (("2" (INST -1 "term2(ag)")
                          (("2" (PROP)
                            (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE 2)
                      (("2" (INST -1 "term1(ag)")
                        (("2" (PROP)
                          (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)
                           ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (HIDE -1 -2) (("3" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|act_append| FORMULA-DECL NIL |atoms| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(append(pi1, pm), p(s)))" |alpha_equivalence|
     NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|pi1| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|pm| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|pi2| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(append(pi2, pm), p(s)))" |alpha_equivalence|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   SHOSTAK)
  (|yes| "" 3757697521
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP)
        (("1" (SKEEP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (EXPAND "ext" 1)
                (("2" (EXPAND "alpha" 1)
                  (("2" (ASSERT)
                    (("2" (DECOMPOSE-EQUALITY -1)
                      (("2" (GRIND)
                        (("1" (HIDE -3 -4 -5 2)
                          (("1" (HIDE -2)
                            (("1" (REWRITE "act_append")
                              (("1" (REWRITE "act_append")
                                (("1" (REVEAL -5) (("1" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (REVEAL -2)
                          (("2" (HIDE -3 -4 -5 2)
                            (("2" (REWRITE "act_append")
                              (("2" (REWRITE "act_append")
                                (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (PROP) (("3" (HIDE -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (EXPAND "ext" 1)
              (("4" (SKEEP)
                (("4" (INST-CP -1 "p1")
                  (("4" (PROP)
                    (("1" (INST-CP -2 "p2")
                      (("1" (PROP)
                        (("1" (GRIND)
                          (("1" (HIDE -2 -3)
                            (("1" (REVEAL -7)
                              (("1" (INST -1 "Delta" "pi1" "pi2" "term2(s)")
                                (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2 -4)
                            (("2" (REVEAL -5)
                              (("2" (INST -1 "Delta" "pi1" "pi2" "term1(s)")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (EXPAND "ext" 1)
              (("5" (EXPAND "alpha" 1)
                (("5" (DECOMPOSE-EQUALITY -2)
                  (("5" (GRIND)
                    (("1" (HIDE -1 -3 -4)
                      (("1" (REVEAL -7)
                        (("1" (REVEAL -5)
                          (("1" (INST -1 "Delta" "pi1" "pi2" "body(s)")
                            (("1" (ASSERT)
                              (("1" (HIDE -2 2)
                                (("1" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REVEAL -4)
                      (("2" (HIDE -2 -3 -4 -5 2)
                        (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                      NIL)
                     ("3" (HIDE -1 -3 -4 1)
                      (("3" (REVEAL -5)
                        (("3"
                          (INST -1 "Delta" "pi1" "pi2"
                           "ext((: (act(pi2)(abs1_var), abstr(s)) :))(body(s))")
                          (("3" (ASSERT)
                            (("3" (HIDE -1 2)
                              (("3" (REVEAL -8)
                                (("3" (DECOMPOSE-EQUALITY) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("4" (HIDE-ALL-BUT 1)
                      (("4" (REVEAL -8) (("4" (DECOMPOSE-EQUALITY) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (POSTPONE) NIL NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (EXPAND "ext" 1)
                (("7" (EXPAND "alpha" 1)
                  (("7"
                    (CASE
                        "alpha(Delta)(ext(pi1)(term1(ag)), term1(c_arg(s))) = alpha(Delta)(ext(pi2)(term1(ag)), term1(c_arg(s)))")
                    (("1"
                      (CASE
                          "alpha(Delta)(ext(pi1)(term2(ag)), term2(c_arg(s))) = alpha(Delta)(ext(pi2)(term2(ag)), term2(c_arg(s)))")
                      (("1"
                        (CASE
                            "alpha(Delta)(ext(pi1)(term1(ag)), term2(c_arg(s))) = alpha(Delta)(ext(pi2)(term1(ag)), term2(c_arg(s)))")
                        (("1"
                          (CASE
                              "alpha(Delta)(ext(pi1)(term2(ag)), term1(c_arg(s))) = alpha(Delta)(ext(pi2)(term2(ag)), term1(c_arg(s)))")
                          (("1" (HIDE -5 -6)
                            (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                           ("2" (HIDE -1 -2 -3 2)
                            (("2" (INST -1 "term2(ag)")
                              (("2" (PROP)
                                (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1 -2 2)
                          (("2" (INST -1 "term1(ag)")
                            (("2" (PROP)
                              (("1"
                                (INST -1 "Delta" "pi1" "pi2" "term2(c_arg(s))")
                                (("1" (PROP) NIL NIL)) NIL)
                               ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -1 2)
                        (("2" (INST -1 "term2(ag)")
                          (("2" (PROP)
                            (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE 2)
                      (("2" (INST -1 "term1(ag)")
                        (("2" (PROP)
                          (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)
                           ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (HIDE -1 -2) (("3" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   SHOSTAK)
  (|alpha_ext_invariance_left-2| NIL 3745912821
   ("" (SKOLEM 1 ("Delta" "pi1" "pi2" "_" "_"))
    (("" (INDUCT "t")
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP*)
        (("2" (EXPAND* "ext" "alpha")
          (("2" (IFF)
            (("2" (SPLIT)
              (("1" (FLATTEN)
                (("1" (ASSERT)
                  (("1" (SKEEP)
                    (("1" (TYPEPRED "a")
                      (("1" (INST -4 "a")
                        (("1" (EXPAND "ds")
                          (("1" (REWRITE "act_append")
                            (("1" (REWRITE "act_append")
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (SKEEP)
                    (("2" (TYPEPRED "a")
                      (("2" (INST -4 "a")
                        (("2" (EXPAND "ds")
                          (("2" (REWRITE "act_append")
                            (("2" (REWRITE "act_append")
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)
       ("6" (GRIND) NIL NIL))
      NIL))
    NIL)
   NIL NIL)
  (|alpha_ext_invariance_left-1| NIL 3625311813
   ("" (SKOLEM 1 (DELTA PI1 PI2 "_" "_"))
    (("" (INDUCT T)
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP*)
        (("2" (EXPAND* EXT ALPHA)
          (("2" (IFF)
            (("2" (SPLIT)
              (("1" (FLATTEN)
                (("1" (ASSERT)
                  (("1" (SKEEP)
                    (("1" (TYPEPRED A)
                      (("1" (INST -4 A)
                        (("1" (EXPAND DS)
                          (("1" (REWRITE ACT_APPEND)
                            (("1" (REWRITE ACT_APPEND) (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (SKEEP)
                    (("2" (TYPEPRED A)
                      (("2" (INST -4 A)
                        (("2" (EXPAND DS)
                          (("2" (REWRITE ACT_APPEND)
                            (("2" (REWRITE ACT_APPEND) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)
       ("6" (GRIND) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_ext_invariance_right| 0
  (|alpha_ext_invariance_right-2| NIL 3745913157
   ("" (MEASURE-INDUCT "size(s)" "s")
    (("" (INDUCT "x")
      (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (EXPAND "ext")
                (("2" (GRIND)
                  (("1" (LEMMA "alpha_ord")
                    (("1" (INST? -1)
                      (("1" (PROP)
                        (("1" (CASE "susp?(t)")
                          (("1" (LEMMA "term_times_eta")
                            (("1" (INST? -1)
                              (("1" (REPLACE -1 -5 RL)
                                (("1" (REPLACE -1 1 RL)
                                  (("1" (HIDE -1 -2 -3)
                                    (("1" (EXPAND "alpha")
                                      (("1" (DECOMPOSE-EQUALITY -1)
                                        (("1" (GRIND)
                                          (("1" (HIDE -3 2)
                                            (("1" (REWRITE "act_append")
                                              (("1" (REWRITE "act_append")
                                                (("1" (HIDE -2)
                                                  (("1" (REVEAL -4)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2 -3 2) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (CASE "susp?(t)")
                    (("1" (LEMMA "term_times_eta")
                      (("1" (INST? -1)
                        (("1" (REPLACE -1 -4 RL)
                          (("1" (REPLACE -1 1 RL)
                            (("1" (HIDE -1 -2)
                              (("1" (DECOMPOSE-EQUALITY -1)
                                (("1" (GRIND)
                                  (("1" (HIDE -1 -2 -3 2)
                                    (("1" (REWRITE "act_append")
                                      (("1" (REWRITE "act_append")
                                        (("1" (REVEAL -5)
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1 2)
                      (("2" (LEMMA "alpha_ord") (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (SKEEP)
              (("4" (CASE "pair?(t)")
                (("1" (LEMMA "term_pair_eta")
                  (("1" (INST? -1)
                    (("1" (REPLACE -1 1 RL)
                      (("1" (EXPAND "ext" 1)
                        (("1" (HIDE -1 -2 -3)
                          (("1" (DECOMPOSE-EQUALITY -1)
                            (("1" (GRIND)
                              (("1" (HIDE -2)
                                (("1" (REVEAL -4)
                                  (("1" (INST -1 "p2")
                                    (("1" (PROP)
                                      (("1"
                                        (INST -1 "Delta" "pi1" "pi2"
                                         "term2(t)")
                                        (("1" (ASSERT)
                                          (("1" (DECOMPOSE-EQUALITY 1) NIL
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE -3)
                                (("2" (REVEAL -4)
                                  (("2" (INST -1 "p1")
                                    (("2" (PROP)
                                      (("1"
                                        (INST -1 "Delta" "pi1" "pi2"
                                         "term1(t)")
                                        (("1" (ASSERT)
                                          (("1" (DECOMPOSE-EQUALITY 1) NIL
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 2)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (HIDE -2)
                                (("3" (REVEAL -4)
                                  (("3" (INST -1 "p2")
                                    (("3" (PROP)
                                      (("1"
                                        (INST -1 "Delta" "pi1" "pi2"
                                         "term2(t)")
                                        (("1" (ASSERT)
                                          (("1" (DECOMPOSE-EQUALITY 1) NIL
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (HIDE -3)
                                (("4" (REVEAL -4)
                                  (("4" (INST -1 "p1")
                                    (("4" (PROP)
                                      (("1"
                                        (INST -1 "Delta" "pi1" "pi2"
                                         "term1(t)")
                                        (("1" (ASSERT)
                                          (("1" (DECOMPOSE-EQUALITY 1) NIL
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "ext" 2)
                  (("2" (HIDE -1 -2)
                    (("2" (GRIND)
                      (("1" (HIDE 2)
                        (("1" (LEMMA "alpha_ord") (("1" (GRIND) NIL NIL)) NIL))
                        NIL)
                       ("2" (LEMMA "alpha_ord")
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (EXPAND "ext" 1)
              (("5" (CASE "abs?(t)")
                (("1" (LEMMA "term_abs_eta")
                  (("1" (INST? -1)
                    (("1" (REPLACE -1 1 RL)
                      (("1" (HIDE -1 -2 -3)
                        (("1" (GRIND)
                          (("1" (HIDE -2)
                            (("1" (REVEAL -4)
                              (("1" (INST -1 "abs2_var")
                                (("1" (PROP)
                                  (("1" (INST -1 "Delta" "pi1" "pi2" "body(t)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2 1)
                            (("2" (REVEAL -4)
                              (("2" (REWRITE "ext_append" :DIR RL)
                                (("2" (REWRITE "ext_append" :DIR RL)
                                  (("2" (INST -1 "abs2_var")
                                    (("2" (PROP)
                                      (("1"
                                        (INST -1 "Delta"
                                         "cons((abstr(t), act(pi2)(abs1_var)), pi1)"
                                         "cons((abstr(t), act(pi2)(abs1_var)), pi2)"
                                         "body(t)")
                                        (("1" (ASSERT)
                                          (("1" (HIDE -2 2)
                                            (("1" (GRIND)
                                              (("1" (DECOMPOSE-EQUALITY 1)
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 2)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (HIDE -3 1)
                            (("3" (LEMMA "ext_reverse_fresh")
                              (("3" (INST? -1)
                                (("3" (REPLACE -1 -3)
                                  (("3" (LEMMA "ext_reverse_fresh")
                                    (("3"
                                      (INST -1 "Delta" "abstr(t)" "pi2"
                                       "abs2_var")
                                      (("3" (REPLACE -1 1)
                                        (("3" (HIDE -1 -2)
                                          (("3"
                                            (LEMMA "act_reverse_invariance")
                                            (("3" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("4" (HIDE -2)
                            (("4" (REVEAL -4)
                              (("4" (INST -1 "abs2_var")
                                (("4" (PROP)
                                  (("1" (INST -1 "Delta" "pi1" "pi2" "body(t)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("5" (HIDE -2 1)
                            (("5" (REVEAL -4)
                              (("5" (REWRITE "ext_append" :DIR RL)
                                (("5" (REWRITE "ext_append" :DIR RL)
                                  (("5" (INST -1 "abs2_var")
                                    (("5" (PROP)
                                      (("1"
                                        (INST -1 "Delta"
                                         "cons((abstr(t), act(pi2)(abs1_var)), pi2)"
                                         "cons((abstr(t), act(pi2)(abs1_var)), pi1)"
                                         "body(t)")
                                        (("1" (ASSERT)
                                          (("1" (HIDE -2 2)
                                            (("1" (DECOMPOSE-EQUALITY 1)
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("6" (HIDE -1 -3 1)
                            (("6" (LEMMA "ext_reverse_fresh")
                              (("6"
                                (INST-CP -1 "Delta" "abstr(t)" "pi2"
                                 "abs2_var")
                                (("6"
                                  (INST -1 "Delta" "abstr(t)" "pi1" "abs2_var")
                                  (("6" (REPLACE -1 1)
                                    (("6" (REPLACE -2 -3)
                                      (("6" (HIDE -1 -2)
                                        (("6" (REVEAL -4)
                                          (("6"
                                            (LEMMA "act_reverse_invariance")
                                            (("6" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -2)
                  (("2" (GRIND)
                    (("1" (LEMMA "alpha_ord") (("1" (GRIND) NIL NIL)) NIL)
                     ("2" (LEMMA "alpha_ord")
                      (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (HIDE -1)
                (("6" (CASE "app?(t)")
                  (("1" (LEMMA "term_app_eta")
                    (("1" (INST -1 "t")
                      (("1" (REPLACE -1 1 RL)
                        (("1" (HIDE -1 -2)
                          (("1" (GRIND)
                            (("1" (REVEAL -4)
                              (("1" (INST -1 "ag")
                                (("1" (PROP)
                                  (("1" (INST -1 "Delta" "pi1" "pi2" "arg(t)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (REVEAL -4)
                              (("2" (INST -1 "ag")
                                (("2" (PROP)
                                  (("1" (INST -1 "Delta" "pi1" "pi2" "arg(t)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -1)
                    (("2" (GRIND)
                      (("1" (LEMMA "alpha_ord") (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (LEMMA "alpha_ord")
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (EXPAND "ext" 1)
                (("7" (CASE "c_app?(t)")
                  (("1" (LEMMA "term_c_app_eta")
                    (("1" (INST -1 "t")
                      (("1" (REPLACE -1 1 RL)
                        (("1" (HIDE -1 -2 -3)
                          (("1" (DECOMPOSE-EQUALITY -1)
                            (("1" (EXPAND "alpha" 1)
                              (("1"
                                (CASE
                                    "alpha(Delta)(term1(c_arg(t)), ext(pi1)(term1(ag))) = alpha(Delta)(term1(c_arg(t)), ext(pi2)(term1(ag)))")
                                (("1"
                                  (CASE
                                      "alpha(Delta)(term2(c_arg(t)), ext(pi1)(term2(ag))) = alpha(Delta)(term2(c_arg(t)), ext(pi2)(term2(ag)))")
                                  (("1"
                                    (CASE
                                        "alpha(Delta)(term1(c_arg(t)), ext(pi1)(term2(ag))) = alpha(Delta)(term1(c_arg(t)), ext(pi2)(term2(ag)))")
                                    (("1"
                                      (CASE
                                          "alpha(Delta)(term2(c_arg(t)), ext(pi1)(term1(ag))) = alpha(Delta)(term2(c_arg(t)), ext(pi2)(term1(ag)))")
                                      (("1" (HIDE -5) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (HIDE -1 -2 -3 2)
                                        (("2" (REVEAL -6)
                                          (("2" (INST -1 "term1(ag)")
                                            (("2" (PROP)
                                              (("1"
                                                (INST -1 "Delta" "pi1" "pi2"
                                                 "term2(c_arg(t))")
                                                (("1" (ASSERT)
                                                  (("1" (DECOMPOSE-EQUALITY 1)
                                                    NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE -1 -2 2)
                                      (("2" (REVEAL -5)
                                        (("2" (INST -1 "term2(ag)")
                                          (("2" (PROP)
                                            (("1"
                                              (INST -1 "Delta" "pi1" "pi2"
                                               "term1(c_arg(t))")
                                              (("1" (ASSERT)
                                                (("1" (DECOMPOSE-EQUALITY 1)
                                                  NIL NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE-ALL-BUT 1)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE -1 2)
                                    (("2" (REVEAL -4)
                                      (("2" (INST -1 "term2(ag)")
                                        (("2" (PROP)
                                          (("1"
                                            (INST -1 "Delta" "pi1" "pi2"
                                             "term2(c_arg(t))")
                                            (("1" (ASSERT)
                                              (("1" (DECOMPOSE-EQUALITY 1) NIL
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (REVEAL -3)
                                    (("2" (INST -1 "term1(ag)")
                                      (("2" (PROP)
                                        (("1"
                                          (INST -1 "Delta" "pi1" "pi2"
                                           "term1(c_arg(t))")
                                          (("1" (ASSERT)
                                            (("1" (DECOMPOSE-EQUALITY 1) NIL
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE-ALL-BUT 1)
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (HIDE -1)
                                  (("3" (REVEAL -3) (("3" (PROPAX) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -1 -2)
                    (("2" (GRIND)
                      (("1" (LEMMA "alpha_ord") (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (LEMMA "alpha_ord")
                        (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (* ADT-CONSTRUCTOR-DECL "[[perm, variable] -> (susp?)]" |term_adt| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|t| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|pi2| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|pm| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(p(t), append(pi2, pm)))" |alpha_equivalence|
     NIL)
    (|pi1| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (V ADT-ACCESSOR-DECL "[(susp?) -> variable]" |term_adt| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|act_append| FORMULA-DECL NIL |atoms| NIL)
    (|term_times_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|ord| CONST-DECL "upto(6)" |term_adt| NIL)
    (|alpha_ord| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(p(t), append(pi1, pm)))" |alpha_equivalence|
     NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|t| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|abs| ADT-CONSTRUCTOR-DECL "[[atom, term] -> (abs?)]" |term_adt| NIL)
    (|term_abs_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|ext_append| FORMULA-DECL NIL |nominal_term| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|ext_reverse_fresh| FORMULA-DECL NIL |freshness| NIL)
    (|act_reverse_invariance| FORMULA-DECL NIL |atoms| NIL)
    (|t| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|t| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|term_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|app| ADT-CONSTRUCTOR-DECL "[[symbol, term] -> (app?)]" |term_adt| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|t| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|term_c_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|c_app| ADT-CONSTRUCTOR-DECL "[[commutative_symbol, pair] -> (c_app?)]"
     |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   NIL)
  (|alpha_ext_invariance_right-1| NIL 3625312300
   ("" (SKOLEM 1 (DELTA "_" "_" "_" "_"))
    (("" (LEMMA EXT_PRESERVES_TYPE)
      (("" (INDUCT T)
        (("1" (GRIND) NIL NIL)
         ("2" (SKEEP*)
          (("2" (INST-CP -2 PI1 S)
            (("2" (INST -2 PI2 S)
              (("2" (EXPAND* ALPHA ORD)
                (("2" (IFF)
                  (("2" (SPLIT)
                    (("1" (FLATTEN)
                      (("1" (ASSERT)
                        (("1" (LIFT-IF -6)
                          (("1" (ASSERT)
                            (("1" (PROP)
                              (("1" (ASSERT)
                                (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL))
                                NIL)
                               ("2" (EXPAND EXT (-3 2))
                                (("2" (ASSERT) NIL NIL)) NIL)
                               ("3" (SKEEP)
                                (("3" (TYPEPRED A)
                                  (("3" (INST -5 A)
                                    (("3" (EXPAND DS)
                                      (("3" (EXPAND EXT (-1 1))
                                        (("3" (ASSERT)
                                          (("3" (REWRITE ACT_APPEND)
                                            (("3" (REWRITE ACT_APPEND)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (ASSERT)
                        (("2" (LIFT-IF -5)
                          (("2" (ASSERT)
                            (("2" (PROP)
                              (("1" (EXPAND EXT 2) (("1" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (EXPAND EXT (-3 2))
                                (("2" (ASSERT) NIL NIL)) NIL)
                               ("3" (SKEEP)
                                (("3" (TYPEPRED A)
                                  (("3" (INST -5 A)
                                    (("3" (EXPAND EXT (-1 -6 1))
                                      (("3" (ASSERT)
                                        (("3" (EXPAND DS)
                                          (("3" (REWRITE ACT_APPEND)
                                            (("3" (REWRITE ACT_APPEND)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (GRIND) NIL NIL)
         ("4" (SKEEP*)
          (("4" (INST-CP -4 PI1 S)
            (("4" (INST -4 PI2 S)
              (("4" (EXPAND ALPHA 1)
                (("4" (IFF)
                  (("4" (SPLIT)
                    (("1" (EXPAND ORD -5)
                      (("1" (FLATTEN)
                        (("1" (ASSERT)
                          (("1" (LIFT-IF)
                            (("1" (ASSERT)
                              (("1" (PROP)
                                (("1" (EXPAND EXT 4) (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (EXPAND EXT (-3 4))
                                  (("2" (ASSERT)
                                    (("2" (INST -5 PI1 PI2 "term1(s)")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("3" (EXPAND EXT (-4 4))
                                  (("3" (ASSERT)
                                    (("3" (INST -6 PI1 PI2 "term2(s)")
                                      (("3" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (EXPAND ORD -4)
                      (("2" (FLATTEN)
                        (("2" (ASSERT)
                          (("2" (LIFT-IF)
                            (("2" (ASSERT)
                              (("2" (PROP)
                                (("1" (EXPAND EXT 4) (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (EXPAND EXT (-3 4))
                                  (("2" (ASSERT)
                                    (("2" (INST -5 PI1 PI2 "term1(s)")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("3" (EXPAND EXT (-4 4))
                                  (("3" (ASSERT)
                                    (("3" (INST -6 PI1 PI2 "term2(s)")
                                      (("3" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("5" (SKEEP*)
          (("5" (INST-CP -3 PI1 S)
            (("5" (INST -3 PI2 S)
              (("5" (EXPAND ALPHA 1)
                (("5" (IFF)
                  (("5" (CASE "abs?(s)")
                    (("1" (EXPAND EXT 1 (1 2 3 4 6 7 8 9 10 11 13 14))
                      (("1" (ASSERT)
                        (("1"
                          (INST-CP -2
                           "append(cons((abs1_var, act(pi2)(abstr(s))), null),pi1)"
                           "append(cons((abs1_var, act(pi2)(abstr(s))), null), pi2)"
                           "body(s)")
                          (("1" (INST -2 PI1 PI2 "body(s)")
                            (("1"
                              (LEMMA DS_FRESH_INVARIANCE
                               (DELTA DELTA A "abs1_var" PI1 PI1 PI2 PI2 T
                                "body(s)"))
                              (("1" (REPLACE -5)
                                (("1" (REPLACES -1)
                                  (("1" (REPLACES -2)
                                    (("1" (SPLIT -2)
                                      (("1" (REWRITE EXT_APPEND)
                                        (("1" (REWRITE EXT_APPEND)
                                          (("1" (REPLACES -1)
                                            (("1" (PROP) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2" (DECOMPOSE-EQUALITY 1)
                                          (("2" (REWRITE ACT_APPEND)
                                            (("2" (REWRITE ACT_APPEND)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1)
                      (("2" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (HIDE -2 -4 1) (("1" (GRIND) NIL NIL)) NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (HIDE -2 -5 1) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("6" (SKEEP*)
          (("6" (EXPAND ALPHA 1)
            (("6" (CASE "app?(s)")
              (("1" (INST -2 PI1 PI2 "arg(s)")
                (("1" (EXPAND EXT 1)
                  (("1" (ASSERT) (("1" (REPLACES -2) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (IFF)
                (("2" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE -2 -3 -4 1)
                      (("1" (INST -3 PI1 S) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (HIDE -2 -3 -4 1)
                      (("2" (INST -3 PI2 S) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_reflexivity| 0
  (|alpha_reflexivity-2| NIL 3745913225
   ("" (SKEEP)
    ((""
      (LEMMA "alpha_ext_invariance"
       ("pi1" "null[[atom,atom]]" "pi2" "null[[atom,atom]]" "Delta" "Delta" "t"
        "t"))
      (("" (REWRITE "ext_identity") NIL NIL)) NIL))
    NIL)
   ((|alpha_ext_invariance| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|ext_identity| FORMULA-DECL NIL |nominal_term| NIL))
   NIL)
  (|alpha_reflexivity-1| NIL 3624366434
   ("" (SKEEP)
    ((""
      (LEMMA ALPHA_EXT_INVARIANCE
       (PI1 "null[[atom,atom]]" PI2 "null[[atom,atom]]" DELTA DELTA T T))
      (("" (REWRITE EXT_IDENTITY) NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_preserves_fresh| 0
  (|alpha_preserves_fresh-2| NIL 3745913451
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (HIDE -1)
              (("2" (CASE "susp?(s)")
                (("1" (LEMMA "term_times_eta")
                  (("1" (INST? -1)
                    (("1" (REPLACE -1 -3 RL)
                      (("1" (REPLACE -1 1 RL)
                        (("1" (HIDE -1 -2)
                          (("1" (GRIND)
                            (("1" (REVEAL -1)
                              (("1" (NAME-REPLACE "b" "act(reverse(p(s)))(a)")
                                (("1" (INST -1 "b")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (LEMMA "act_reverse_pi")
                                    (("2" (EXPAND "b" -2)
                                      (("2" (CASE "act(pm)(b) = a")
                                        (("1" (INST -2 "b" "a" "pm")
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (HIDE -1 -3 -4 2)
                                          (("2" (LEMMA "act_reverse2")
                                            (("2" (GRIND)
                                              (("2" (EXPAND "b" 1)
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (NAME-REPLACE "b" "act(reverse(pm))(a)")
                              (("2" (EXPAND "b" -1 1)
                                (("2" (LEMMA "act_reverse2")
                                  (("2" (INST? -1)
                                    (("2" (REPLACE -1 -2)
                                      (("2" (HIDE -1)
                                        (("2" (LEMMA "act_reverse_pi")
                                          (("2" (INST -1 "b" "a" "p(s)")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (LEMMA "act_reverse2")
                              (("3" (INST? -1)
                                (("3" (REPLACE -1 -2)
                                  (("3"
                                    (NAME-REPLACE "b"
                                     "act(reverse[[atom, atom]](pm))(a)")
                                    (("3" (LEMMA "act_reverse_pi")
                                      (("3" (INST -1 "b" "a" "p(s)")
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (LEMMA "alpha_ord") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN) (("3" (HIDE -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (HIDE -1)
              (("4" (SKEEP)
                (("4" (CASE "pair?(s)")
                  (("1" (LEMMA "term_pair_eta")
                    (("1" (INST? -1)
                      (("1" (REPLACE -1 -3 RL)
                        (("1" (REPLACE -1 1 RL)
                          (("1" (HIDE -1 -2)
                            (("1" (EXPAND "alpha")
                              (("1" (EXPAND "fresh")
                                (("1" (REVEAL -4)
                                  (("1" (INST-CP -1 "p1")
                                    (("1" (PROP)
                                      (("1" (INST -1 "Delta" "a" "term1(s)")
                                        (("1" (ASSERT)
                                          (("1" (INST -2 "p2")
                                            (("1" (PROP)
                                              (("1"
                                                (INST -1 "Delta" "a"
                                                 "term2(s)")
                                                (("1" (ASSERT)
                                                  (("1" (HIDE -2 -3)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -2 -3 2)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (LEMMA "alpha_ord") (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (CASE "abs?(s)")
              (("1" (LEMMA "term_abs_eta")
                (("1" (INST -1 "s")
                  (("1" (REPLACE -1 -4 RL)
                    (("1" (REPLACE -1 1 RL)
                      (("1" (HIDE -1 -2)
                        (("1" (EXPAND "fresh" 1)
                          (("1" (EXPAND "alpha" -2)
                            (("1" (PROP)
                              (("1" (ASSERT)
                                (("1" (INST -3 "abs2_var")
                                  (("1" (PROP)
                                    (("1" (INST -1 "Delta" "a" "body(s)")
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -3 "abs2_var")
                                (("2" (PROP)
                                  (("1"
                                    (INST -1 "Delta" "a"
                                     "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "ext_reverse_fresh")
                                        (("1" (INST? -1)
                                          (("1" (REPLACE -1 -2)
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1 2)
                (("2" (LEMMA "alpha_ord") (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (CASE "app?(s)")
                (("1" (LEMMA "term_app_eta")
                  (("1" (INST -1 "s")
                    (("1" (REPLACE -1 -4 RL)
                      (("1" (REPLACE -1 1 RL)
                        (("1" (HIDE -1 -2)
                          (("1" (EXPAND "alpha" -2)
                            (("1" (EXPAND "fresh" 1)
                              (("1" (INST -1 "ag")
                                (("1" (PROP)
                                  (("1" (INST -1 "Delta" "a" "arg(s)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE -1 -2 2) (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 2)
                  (("2" (LEMMA "alpha_ord") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (CASE "c_app?(s)")
                (("1" (LEMMA "term_c_app_eta")
                  (("1" (INST -1 "s")
                    (("1" (REPLACE -1 -4 RL)
                      (("1" (REPLACE -1 1 RL)
                        (("1" (EXPAND "fresh" 1)
                          (("1" (CASE "ag = pair(term1(ag), term2(ag))")
                            (("1"
                              (CASE
                                  "c_arg(s) = pair(term1(c_arg(s)), term2(c_arg(s)))")
                              (("1" (REPLACE -1 1)
                                (("1" (REPLACE -2 1)
                                  (("1" (EXPAND "fresh" 1)
                                    (("1" (EXPAND "alpha" -6)
                                      (("1" (HIDE -1 -2 -3 -4)
                                        (("1" (PROP)
                                          (("1" (INST-CP -3 "term1(ag)")
                                            (("1" (PROP)
                                              (("1"
                                                (INST -1 "Delta" "a"
                                                 "term1(c_arg(s))")
                                                (("1" (ASSERT)
                                                  (("1" (HIDE -2 -5)
                                                    (("1" (INST -3 "term2(ag)")
                                                      (("1" (PROP)
                                                        (("1"
                                                          (INST -1 "Delta" "a"
                                                           "term2(c_arg(s))")
                                                          (("1" (PROP)
                                                            (("1" (HIDE -3)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE-ALL-BUT 1)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("2" (INST-CP -3 "term1(ag)")
                                            (("2" (PROP)
                                              (("1"
                                                (INST -1 "Delta" "a"
                                                 "term2(c_arg(s))")
                                                (("1" (PROP)
                                                  (("1" (HIDE -2 -5)
                                                    (("1" (INST -3 "term2(ag)")
                                                      (("1" (PROP)
                                                        (("1"
                                                          (INST -1 "Delta" "a"
                                                           "term1(c_arg(s))")
                                                          (("1" (PROP)
                                                            (("1" (HIDE -3)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE-ALL-BUT 1)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT 1)
                                (("2" (TYPEPRED "c_arg(s)")
                                  (("2" (HIDE -1)
                                    (("2" (LEMMA "term_pair_eta")
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT 1)
                              (("2" (TYPEPRED "ag")
                                (("2" (HIDE -1)
                                  (("2" (LEMMA "term_pair_eta")
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 2)
                  (("2" (LEMMA "alpha_ord") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|alpha_ord| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|term_times_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|b| SKOLEM-CONST-DECL "atom" |alpha_equivalence| NIL)
    (|b| SKOLEM-CONST-DECL "atom" |alpha_equivalence| NIL)
    (|act_reverse2| FORMULA-DECL NIL |atoms| NIL)
    (|act_reverse_pi| FORMULA-DECL NIL |atoms| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (|a| SKOLEM-CONST-DECL "atom" |alpha_equivalence| NIL)
    (|pm| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|ext_reverse_fresh| FORMULA-DECL NIL |freshness| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|term_abs_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|term_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term_c_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|fresh| DEF-DECL "bool" |freshness| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   NIL)
  (|alpha_preserves_fresh-1| NIL 3624624893
   ("" (INDUCT T)
    (("1" (GRIND) NIL NIL)
     ("2" (GRIND)
      (("1" (REVEAL -1)
        (("1" (INST -1 "act(reverse(p(s!1)))(a!1)")
          (("1" (REWRITE ACT_REVERSE2)
            (("1" (REPLACE -1 -10 RL) (("1" (REWRITE ACT_REVERSE) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (REWRITE ACT_REVERSE2)
        (("2" (REPLACE -1 1) (("2" (REWRITE ACT_REVERSE) NIL NIL)) NIL)) NIL)
       ("3" (REWRITE ACT_REVERSE2)
        (("3" (REPLACE -1 -10) (("3" (REWRITE ACT_REVERSE) NIL NIL)) NIL))
        NIL))
      NIL)
     ("3" (GRIND) NIL NIL)
     ("4" (SKEEP*)
      (("4" (EXPAND ALPHA -3)
        (("4" (FLATTEN)
          (("4" (INST -1 DELTA A "term1(s)")
            (("4" (INST -2 DELTA A "term2(s)") (("4" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKEEP*)
      (("5" (EXPAND ALPHA -2)
        (("5" (PROP)
          (("1" (INST -3 DELTA A "body(s)")
            (("1" (EXPAND FRESH 1) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (EXPAND FRESH 2)
            (("2" (ASSERT)
              (("2" (IFF)
                (("2" (PROP)
                  (("1" (ASSERT) NIL NIL)
                   ("2"
                    (INST -4 DELTA A
                     "ext((: (abs1_var, abstr(s)) :))(body(s))")
                    (("2"
                      (LEMMA EXT_PRESERVES_FRESH
                       (DELTA DELTA PI "(:((abs1_var, abstr(s))):)" A A T
                        "body(s)"))
                      (("2" (EXPAND* ACT ACT) (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("3"
                    (INST -4 DELTA A
                     "ext((: (abs1_var, abstr(s)) :))(body(s))")
                    (("3"
                      (LEMMA EXT_PRESERVES_FRESH
                       (DELTA DELTA PI "(:((abs1_var, abstr(s))):)" A ABS1_VAR
                        T "body(s)"))
                      (("3" (EXPAND* ACT ACT) (("3" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("4"
                    (INST -4 DELTA A
                     "ext((: (abs1_var, abstr(s)) :))(body(s))")
                    (("4"
                      (LEMMA EXT_PRESERVES_FRESH
                       (DELTA DELTA PI "(:((abs1_var, abstr(s))):)" A A T
                        "body(s)"))
                      (("4" (EXPAND* ACT ACT) (("4" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("6" (SKEEP*)
      (("6" (EXPAND ALPHA -2)
        (("6" (FLATTEN)
          (("6" (INST -1 DELTA A "arg(s)") (("6" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|ext_preserves_alpha| 0
  (|ext_preserves_alpha-2| NIL 3745913796
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP)
        (("1" (HIDE -1)
          (("1" (SKEEP)
            (("1" (CASE "atom?(s)")
              (("1" (LEMMA "term_at_eta")
                (("1" (INST? -1)
                  (("1" (REPLACE -1 1 RL)
                    (("1" (EXPAND "ext" 1)
                      (("1" (GRIND)
                        (("1" (DECOMPOSE-EQUALITY)
                          (("1" (DECOMPOSE-EQUALITY)
                            (("1" (DECOMPOSE-EQUALITY)
                              (("1" (LEMMA "act_invariance")
                                (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "ext" 2 1)
                (("2" (LEMMA "ext_preserves_type") (("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (CASE "susp?(s)")
                (("1" (LEMMA "term_times_eta")
                  (("1" (INST -1 "s")
                    (("1" (REPLACE -1 1 RL)
                      (("1" (HIDE -1)
                        (("1" (EXPAND "ext" 1)
                          (("1" (HIDE -1)
                            (("1" (EXPAND "alpha")
                              (("1" (GRIND)
                                (("1" (REVEAL -1)
                                  (("1" (INST -1 "a!1")
                                    (("1" (REWRITE "act_append")
                                      (("1" (REWRITE "act_append")
                                        (("1" (HIDE -2 -3 2)
                                          (("1" (GRIND)
                                            (("1" (LEMMA "act_invariance")
                                              (("1" (INST? -1)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (REWRITE "act_append")
                                  (("2" (REWRITE "act_append")
                                    (("2" (REVEAL -1)
                                      (("2" (HIDE -2)
                                        (("2" (INST -1 "a!1")
                                          (("2" (LEMMA "act_invariance")
                                            (("2" (REWRITE "act_append")
                                              (("2" (REWRITE "act_append")
                                                (("2" (INST? -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (REVEAL -1)
                                  (("3" (INST -1 "a!1")
                                    (("3" (HIDE -2 -3 2)
                                      (("3" (REWRITE "act_append")
                                        (("3" (REWRITE "act_append")
                                          (("3" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("4" (HIDE -1 -2)
                                  (("4" (REVEAL -3)
                                    (("4" (INST -1 "a!1")
                                      (("4" (REWRITE "act_append")
                                        (("4" (REWRITE "act_append")
                                          (("4" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "ext" 2 1)
                  (("2" (GRIND)
                    (("1" (HIDE -2 -3 2)
                      (("1" (LEMMA "ext_preserves_type")
                        (("1" (GRIND) NIL NIL)) NIL))
                      NIL)
                     ("2" (HIDE -1 -3 2)
                      (("2" (LEMMA "ext_preserves_type")
                        (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN)
        (("3" (HIDE -1)
          (("3" (SKEEP)
            (("3" (GRIND)
              (("3" (LEMMA "ext_preserves_type") (("3" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (HIDE -1)
              (("4" (SKEEP)
                (("4" (CASE "pair?(s)")
                  (("1" (LEMMA "term_pair_eta")
                    (("1" (INST -1 "s")
                      (("1" (REPLACE -1 1 RL)
                        (("1" (EXPAND "ext" 1)
                          (("1" (HIDE -1 -2)
                            (("1" (EXPAND "alpha")
                              (("1"
                                (CASE
                                    "alpha(Delta)(ext(pi)(p1), ext(pi)(term1(s))) = alpha(Delta)(p1, term1(s))")
                                (("1"
                                  (CASE
                                      "alpha(Delta)(ext(pi)(p2), ext(pi)(term2(s))) = alpha(Delta)(p2, term2(s))")
                                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                                   ("2" (REVEAL -4)
                                    (("2" (HIDE -2 2)
                                      (("2" (INST -1 "p2")
                                        (("2" (PROP)
                                          (("1"
                                            (INST -1 "Delta" "pi" "term2(s)")
                                            NIL NIL)
                                           ("2" (HIDE 2)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (REVEAL -4)
                                    (("2" (INST -1 "p1")
                                      (("2" (PROP)
                                        (("1" (INST -1 "Delta" "pi" "term1(s)")
                                          NIL NIL)
                                         ("2" (HIDE 2) (("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (REVEAL -2) (("3" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "ext_preserves_type") (("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (HIDE -1)
              (("5" (EXPAND "ext" 1 1)
                (("5" (CASE "abs?(s)")
                  (("1" (LEMMA "term_abs_eta")
                    (("1" (INST -1 "s")
                      (("1" (REPLACE -1 1 RL)
                        (("1" (EXPAND "ext" 1 2)
                          (("1" (EXPAND "alpha" 1)
                            (("1" (ASSERT)
                              (("1" (HIDE -1 -2)
                                (("1" (GRIND)
                                  (("1" (REVEAL -4)
                                    (("1" (INST -1 "abs2_var")
                                      (("1" (PROP)
                                        (("1" (INST -1 "Delta" "pi" "body(s)")
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (HIDE-ALL-BUT 1)
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE -2 2)
                                    (("2" (LEMMA "act_invariance")
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL)
                                   ("3" (HIDE -2 2)
                                    (("3" (LEMMA "act_invariance")
                                      (("3" (GRIND) NIL NIL)) NIL))
                                    NIL)
                                   ("4" (REVEAL -4)
                                    (("4" (INST -1 "abs2_var")
                                      (("4" (PROP)
                                        (("1" (INST -1 "Delta" "pi" "body(s)")
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (HIDE-ALL-BUT 1)
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("5" (HIDE -2 -3 1)
                                    (("5" (LEMMA "act_invariance")
                                      (("5" (GRIND) NIL NIL)) NIL))
                                    NIL)
                                   ("6" (HIDE -1 1 2)
                                    (("6" (REWRITE "ext_append" :DIR RL)
                                      (("6"
                                        (LEMMA "alpha_ext_invariance_right")
                                        (("6"
                                          (INST -1 "Delta"
                                           "cons((act(pi)(abs1_var), act(pi)(abstr(s))), pi)"
                                           "append(pi, (: (abs1_var, abstr(s)) :))"
                                           "body(s)" "ext(pi)(abs2_var)")
                                          (("6" (PROP)
                                            (("1" (ASSERT)
                                              (("1" (REPLACE -2 -1)
                                                (("1" (REWRITE "ext_append")
                                                  (("1" (HIDE -2)
                                                    (("1" (REVEAL -7)
                                                      (("1"
                                                        (INST -1 "abs2_var")
                                                        (("1" (PROP)
                                                          (("1"
                                                            (INST -1 "Delta"
                                                             "pi"
                                                             "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE-ALL-BUT 1)
                                                            (("2" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE -1 2)
                                              (("2" (LEMMA "act_comm")
                                                (("2" (HIDE -1)
                                                  (("2" (GRIND)
                                                    (("2"
                                                      (CASE
                                                          "cons((act(pi)(abs1_var), act(pi)(abstr(s))), pi) = append((:(act(pi)(abs1_var), act(pi)(abstr(s))):), pi)")
                                                      (("1" (REPLACE -1 1)
                                                        (("1" (HIDE -1)
                                                          (("1"
                                                            (LEMMA "act_comm")
                                                            (("1"
                                                              (DECOMPOSE-EQUALITY
                                                               1)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE 2)
                                                        (("2" (EXPAND "append")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("7" (LEMMA "ext_preserves_fresh")
                                    (("7"
                                      (INST -1 "Delta" "abs1_var" "pi"
                                       "body(s)")
                                      (("7" (ASSERT) NIL NIL)) NIL))
                                    NIL)
                                   ("8" (REWRITE "ext_append" :DIR RL)
                                    (("8" (LEMMA "alpha_ext_invariance_right")
                                      (("8"
                                        (INST -1 "Delta"
                                         "append(pi, (:(abs1_var, abstr(s)):))"
                                         "cons((act(pi)(abs1_var), act(pi)(abstr(s))), pi)"
                                         "body(s)" "ext(pi)(abs2_var)")
                                        (("8" (PROP)
                                          (("1" (REPLACE -1 2 RL)
                                            (("1" (REWRITE "ext_append")
                                              (("1" (HIDE -1 -2 1 3)
                                                (("1" (REVEAL -7)
                                                  (("1" (INST -1 "abs2_var")
                                                    (("1" (PROP)
                                                      (("1"
                                                        (INST -1 "Delta" "pi"
                                                         "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE -1 2)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (LEMMA "act_comm")
                                              (("2" (DECOMPOSE-EQUALITY)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("9" (HIDE -2 3)
                                    (("9" (HIDE 1)
                                      (("9" (LEMMA "ext_preserves_fresh")
                                        (("9"
                                          (INST -1 "Delta" "abs1_var" "pi"
                                           "body(s)")
                                          (("9" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "ext_preserves_type") (("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1 -2)
            (("6" (SKEEP)
              (("6" (CASE "app?(s)")
                (("1" (LEMMA "term_app_eta")
                  (("1" (INST? -1)
                    (("1" (REPLACE -1 1 RL)
                      (("1" (EXPAND "ext" 1)
                        (("1" (HIDE -1 -2)
                          (("1" (GRIND)
                            (("1" (REVEAL -5)
                              (("1" (INST -1 "ag")
                                (("1" (PROP)
                                  (("1" (INST -1 "Delta" "pi" "arg(s)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE -1 -2 2) (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (REVEAL -5)
                              (("2" (INST -1 "ag")
                                (("2" (PROP)
                                  (("1" (INST -1 "Delta" "pi" "arg(s)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (HIDE -1 -2 2) (("2" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "ext_preserves_type") (("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (CASE "c_app?(s)")
                (("1" (LEMMA "term_c_app_eta")
                  (("1" (INST -1 "s")
                    (("1" (REPLACE -1 1 RL)
                      (("1" (EXPAND "ext" 1)
                        (("1" (CASE "ag = pair(term1(ag), term2(ag))")
                          (("1" (REPLACE -1 1)
                            (("1" (ASSERT)
                              (("1"
                                (CASE
                                    "c_arg(s) = pair(term1(c_arg(s)), term2(c_arg(s)))")
                                (("1" (REPLACE -1 1)
                                  (("1" (ASSERT)
                                    (("1" (HIDE -2 -3 -4 -5)
                                      (("1" (EXPAND "alpha" 1)
                                        (("1"
                                          (CASE
                                              "alpha(Delta)(ext(pi)(term1(ag)), ext(pi)(term1(c_arg(s)))) = alpha(Delta)(term1(ag), term1(c_arg(s)))")
                                          (("1"
                                            (CASE
                                                "alpha(Delta)(ext(pi)(term2(ag)), ext(pi)(term2(c_arg(s)))) = alpha(Delta)(term2(ag), term2(c_arg(s)))")
                                            (("1"
                                              (CASE
                                                  "alpha(Delta)(ext(pi)(term1(ag)), ext(pi)(term2(c_arg(s)))) = alpha(Delta)(term1(ag), term2(c_arg(s)))")
                                              (("1"
                                                (CASE
                                                    "alpha(Delta)(ext(pi)(term2(ag)), ext(pi)(term1(c_arg(s)))) = alpha(Delta)(term2(ag), term1(c_arg(s)))")
                                                (("1" (HIDE -5)
                                                  (("1" (GRIND) NIL NIL)) NIL)
                                                 ("2" (HIDE-ALL-BUT 1)
                                                  (("2" (REVEAL -8)
                                                    (("2" (INST -1 "term2(ag)")
                                                      (("2" (PROP)
                                                        (("1"
                                                          (INST -1 "Delta" "pi"
                                                           "term1(c_arg(s))")
                                                          NIL NIL)
                                                         ("2" (HIDE 2)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (REVEAL -7)
                                                  (("2" (INST -1 "term1(ag)")
                                                    (("2" (PROP)
                                                      (("1"
                                                        (INST -1 "Delta" "pi"
                                                         "term2(c_arg(s))")
                                                        NIL NIL)
                                                       ("2" (HIDE 2)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE-ALL-BUT 1)
                                              (("2" (REVEAL -6)
                                                (("2" (INST -1 "term2(ag)")
                                                  (("2" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta" "pi"
                                                       "term2(c_arg(s))")
                                                      NIL NIL)
                                                     ("2" (HIDE 2)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE -1 2)
                                            (("2" (REVEAL -5)
                                              (("2" (INST -1 "term1(ag)")
                                                (("2" (PROP)
                                                  (("1"
                                                    (INST -1 "Delta" "pi"
                                                     "term1(c_arg(s))")
                                                    NIL NIL)
                                                   ("2" (HIDE 2)
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT 1)
                                  (("2" (TYPEPRED "c_arg(s)")
                                    (("2" (HIDE -1)
                                      (("2" (LEMMA "term_pair_eta")
                                        (("2" (INST? -1)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE-ALL-BUT 1)
                            (("2" (TYPEPRED "ag")
                              (("2" (HIDE -1)
                                (("2" (LEMMA "term_pair_eta")
                                  (("2" (INST? -1) (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1)
                  (("2" (EXPAND "ext" 2 1)
                    (("2" (LEMMA "ext_preserves_type") (("2" (GRIND) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|atom?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|at| ADT-CONSTRUCTOR-DECL "[atom -> (atom?)]" |term_adt| NIL)
    (|a| ADT-ACCESSOR-DECL "[(atom?) -> atom]" |term_adt| NIL)
    (|term_at_extensionality| FORMULA-DECL NIL |term_adt| NIL)
    (|act_invariance| FORMULA-DECL NIL |atoms| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (|term_at_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|ext_preserves_type| FORMULA-DECL NIL |nominal_term| NIL)
    (|ord| CONST-DECL "upto(6)" |term_adt| NIL)
    (|term_times_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(append(pi, pm), append(pi, p(s))))"
     |alpha_equivalence| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(append(pi, pm), append(pi, p(s))))"
     |alpha_equivalence| NIL)
    (V ADT-ACCESSOR-DECL "[(susp?) -> variable]" |term_adt| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(pm, p(s)))" |alpha_equivalence| NIL)
    (|act_append| FORMULA-DECL NIL |atoms| NIL)
    (|a!1| SKOLEM-CONST-DECL "(ds(pm, p(s)))" |alpha_equivalence| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (V SKOLEM-CONST-DECL "variable" |alpha_equivalence| NIL)
    (|pm| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|pi| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|ext_append| FORMULA-DECL NIL |nominal_term| NIL)
    (|act_comm| FORMULA-DECL NIL |atoms| NIL)
    (|alpha_ext_invariance_right| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|ext_preserves_fresh| FORMULA-DECL NIL |freshness| NIL)
    (|term_abs_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|term_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term_c_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   NIL)
  (|ext_preserves_alpha-1| NIL 3624370280
   ("" (SKOLEM 1 (DELTA "_" "_" "_"))
    (("" (LEMMA EXT_PRESERVES_TYPE)
      (("" (INDUCT T)
        (("1" (GRIND)
          (("1" (DECOMPOSE-EQUALITY 1)
            (("1" (DECOMPOSE-EQUALITY -7)
              (("1" (LEMMA ACT_INVARIANCE (PI PI!1 A "a(s!1)" B "at1_var!1"))
                (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (GRIND)
          (("1" (REVEAL -2)
            (("1" (INST -1 A!1)
              (("1" (ASSERT) NIL NIL)
               ("2" (REWRITE ACT_APPEND)
                (("2" (REWRITE ACT_APPEND)
                  (("2"
                    (LEMMA ACT_INVARIANCE
                     (PI PI!1 A "act(times1_var!1)(a!1)" B "act(p(s!1))(a!1)"))
                    (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (REVEAL -2)
            (("2" (INST -1 A!1)
              (("1" (ASSERT) NIL NIL)
               ("2" (REWRITE ACT_APPEND)
                (("2" (REWRITE ACT_APPEND)
                  (("2"
                    (LEMMA ACT_INVARIANCE
                     (PI PI!1 A "act(times1_var!1)(a!1)" B "act(p(s!1))(a!1)"))
                    (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (REWRITE ACT_APPEND)
            (("3" (REWRITE ACT_APPEND)
              (("3" (REVEAL -2)
                (("3" (INST -1 A!1)
                  (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("4" (REWRITE ACT_APPEND)
            (("4" (REWRITE ACT_APPEND)
              (("4" (REVEAL -2)
                (("4" (INST -1 A!1)
                  (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (GRIND) NIL NIL)
         ("4" (SKEEP*)
          (("4" (INST -3 PI S)
            (("4" (INST -1 PI "term1(s)")
              (("1" (INST -2 PI "term2(s)") (("1" (GRIND) NIL NIL)) NIL)
               ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("5" (SKEEP)
          (("5" (INDUCT S)
            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
             ("4" (GRIND) NIL NIL)
             ("5" (SKEEP*)
              (("5" (HIDE -1 -3)
                (("5" (EXPAND EXT 1)
                  (("5" (EXPAND ALPHA 1)
                    (("5"
                      (LEMMA ACT_INVARIANCE
                       (PI PI A "abs1_var" B "abs1_var_1"))
                      (("5" (INST-CP -2 PI ABS2_VAR_1)
                        (("5"
                          (INST -2 PI
                           "ext((: (abs1_var, abs1_var_1) :))(abs2_var_1)")
                          (("5" (LIFT-IF)
                            (("5" (LIFT-IF)
                              (("5" (LIFT-IF)
                                (("5" (ASSERT)
                                  (("5"
                                    (LEMMA EXT_PRESERVES_FRESH
                                     (DELTA DELTA PI PI A "abs1_var" T
                                      "abs2_var_1"))
                                    (("5" (PROP)
                                      (("1" (IFF) (("1" (GRIND) NIL NIL)) NIL)
                                       ("2" (IFF 2)
                                        (("2" (REPLACE -1 2)
                                          (("2"
                                            (LEMMA EXT_APPEND
                                             (PI1 "pi" PI2
                                              "(: (abs1_var, abs1_var_1) :)" T
                                              "abs2_var_1"))
                                            (("2"
                                              (LEMMA ALPHA_EXT_INVARIANCE_RIGHT
                                               (DELTA DELTA PI1
                                                "append(pi, (: (abs1_var, abs1_var_1) :))"
                                                PI2
                                                "append((: (act(pi)(abs1_var), act(pi)(abs1_var_1)) :), pi)"
                                                T "ext(pi)(abs2_var)" S
                                                "abs2_var_1"))
                                              (("2" (REWRITE EXT_APPEND -1)
                                                (("2" (REWRITE EXT_APPEND -1)
                                                  (("2" (SPLIT -1)
                                                    (("1" (PROP)
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2"
                                                        (LEMMA ACT_COMM
                                                         (PI PI A "abs1_var" B
                                                          "abs1_var_1"))
                                                        (("2"
                                                          (DECOMPOSE-EQUALITY
                                                           1)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("6" (GRIND) NIL NIL))
            NIL))
          NIL)
         ("6" (SKEEP*)
          (("6" (INST -2 PI S)
            (("6" (EXPAND EXT 1 1)
              (("6" (EXPAND ALPHA 1)
                (("6" (INST -1 PI "arg(s)")
                  (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|ext_reverse_alpha| 0
  (|ext_reverse_alpha-2| NIL 3745913970
   ("" (SKEEP)
    ((""
      (LEMMA "ext_preserves_alpha"
       ("Delta" "Delta" "pi" "reverse(pi)" "t" "ext(pi)(t)" "s" "s"))
      (("" (REPLACE -1 1 RL)
        (("" (LEMMA "ext_append" ("pi1" "reverse(pi)" "pi2" "pi" "t" "t"))
          (("" (LEMMA "alpha_ext_invariance_left")
            ((""
              (INST -1 "Delta" "append(reverse(pi), pi)" "(::)"
               "ext(reverse(pi))(s)" "t")
              (("" (REWRITE "ext_identity")
                (("" (ASSERT)
                  (("" (HIDE-ALL-BUT 1)
                    (("" (DECOMPOSE-EQUALITY)
                      (("" (REWRITE "act_append")
                        (("" (REWRITE "act_reverse")
                          (("" (EXPAND "act") (("" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ext_preserves_alpha| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|ext_append| FORMULA-DECL NIL |nominal_term| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (|act_reverse| FORMULA-DECL NIL |atoms| NIL)
    (|act_append| FORMULA-DECL NIL |atoms| NIL)
    (|ext_identity| FORMULA-DECL NIL |nominal_term| NIL)
    (|alpha_ext_invariance_left| FORMULA-DECL NIL |alpha_equivalence| NIL))
   NIL)
  (|ext_reverse_alpha-1| NIL 3625403098
   ("" (SKEEP)
    ((""
      (LEMMA EXT_PRESERVES_ALPHA
       (DELTA DELTA PI "reverse(pi)" T "ext(pi)(t)" S S))
      (("" (REPLACE -1 1 RL)
        (("" (LEMMA EXT_APPEND (PI1 "reverse(pi)" PI2 PI T T))
          (("" (LEMMA ALPHA_EXT_INVARIANCE_LEFT)
            ((""
              (INST -1 DELTA "append(reverse(pi), pi)" "(::)"
               "ext(reverse(pi))(s)" T)
              (("" (REWRITE EXT_IDENTITY)
                (("" (ASSERT)
                  (("" (HIDE-ALL-BUT 1)
                    (("" (DECOMPOSE-EQUALITY)
                      (("" (REWRITE ACT_APPEND)
                        (("" (REWRITE ACT_REVERSE)
                          (("" (EXPAND ACT) (("" (PROPAX) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_fresh_invariance| 0
  (|alpha_fresh_invariance-2| NIL 3745914672
   ("" (SKOLEM 1 ("Delta" "pi1" "_" "_"))
    (("" (INDUCT "t")
      (("1" (GRIND) NIL NIL)
       ("2" (GRIND)
        (("1" (REVEAL -1)
          (("1" (REWRITE "act_append")
            (("1" (REWRITE "act_append")
              (("1" (INST -1 "act(times1_var!1)(a!1)")
                (("1" (REWRITE "act_reverse") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (REVEAL -1)
          (("2" (REWRITE "act_append")
            (("2" (REWRITE "act_append")
              (("2" (INST -1 "act(times1_var!1)(a!1)")
                (("2" (REWRITE "act_reverse") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (GRIND) NIL NIL)
       ("4" (GRIND)
        (("1" (HIDE -1 -2)
          (("1" (REVEAL -3)
            (("1" (INST -1 "a!1") (("1" (FLATTEN) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (HIDE -1 -2 -3)
          (("2" (REVEAL -4)
            (("2" (INST -1 "a!1") (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (SKEEP)
          (("5" (EXPAND "ext" 1)
            (("5" (EXPAND "alpha" 1)
              (("5" (PROP)
                (("1" (INST -2 "pi2")
                  (("1" (PROP)
                    (("1" (EXPAND "fresh" -2)
                      (("1" (ASSERT)
                        (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1)
                  (("2" (LEMMA "ext_reverse_fresh")
                    (("2"
                      (INST -1 "Delta" "act(pi1)(abs1_var)" "pi2" "abs2_var")
                      (("2" (ASSERT)
                        (("2" (REPLACE -1 1)
                          (("2" (HIDE -1)
                            (("2"
                              (INST -1 "act(reverse(pi2))(act(pi1)(abs1_var))")
                              (("1" (EXPAND "fresh" -1)
                                (("1" (PROP)
                                  (("1" (HIDE 1)
                                    (("1" (LEMMA "act_reverse_pi")
                                      (("1"
                                        (INST -1 "act(pi1)(abs1_var)"
                                         "abs1_var" "reverse(pi2)")
                                        (("1" (PROP)
                                          (("1" (ASSERT)
                                            (("1" (HIDE -2)
                                              (("1" (REWRITE "reverse_reverse")
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (EXPAND "ds" 1)
                                  (("2" (ASSERT)
                                    (("2" (GRIND)
                                      (("2" (LEMMA "act_reverse2")
                                        (("2"
                                          (INST -1 "act(pi1)(abs1_var)" "pi2")
                                          (("2" (REPLACE -1 -2)
                                            (("2" (LEMMA "act_invariance")
                                              (("2"
                                                (INST -1
                                                 "act(reverse[[atom, atom]](pi2))(act(pi1)(abs1_var))"
                                                 "abs1_var" "pi1")
                                                (("2" (PROP)
                                                  (("2" (HIDE -2 -3)
                                                    (("2"
                                                      (LEMMA "act_reverse_pi")
                                                      (("2"
                                                        (INST -1
                                                         "act(pi1)(abs1_var)"
                                                         "abs1_var"
                                                         "reverse(pi2)")
                                                        (("2" (PROP)
                                                          (("2"
                                                            (REWRITE
                                                             "reverse_reverse")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3"
                  (INST -1
                   "append((: (act(pi1)(abs1_var), act(pi2)(abs1_var)) :), pi2)")
                  (("3" (REWRITE "ext_append")
                    (("3" (ASSERT)
                      (("3" (SKEEP)
                        (("3" (TYPEPRED "a")
                          (("3" (EXPAND "ds")
                            (("3" (REWRITE "act_append")
                              (("3" (INST -2 "a")
                                (("1" (EXPAND "fresh" -2)
                                  (("1" (PROP)
                                    (("1" (EXPAND "act" 1 2)
                                      (("1" (EXPAND "act" 1 (2 6 10))
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "ds")
                                  (("2" (PROP)
                                    (("2" (EXPAND "act" 1 2)
                                      (("2" (EXPAND "act" 1 (2 6 10))
                                        (("2" (LIFT-IF)
                                          (("2" (ASSERT)
                                            (("2" (PROP)
                                              (("1"
                                                (LEMMA "act_invariance"
                                                 ("pi" "pi1" "a" "a" "b"
                                                  "abs1_var"))
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2"
                                                (LEMMA "act_invariance"
                                                 ("pi" "pi2" "a" "a" "b"
                                                  "abs1_var"))
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (GRIND) NIL NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (PROP)
          (("7" (SKEEP)
            (("7" (EXPAND "ext" 1)
              (("7" (EXPAND "alpha" 1)
                (("7" (FLATTEN)
                  (("7" (INST -1 "pi2")
                    (("7" (SPLIT -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "ext" -1)
                          (("1" (ASSERT)
                            (("1" (EXPAND "alpha" -1) (("1" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2 3)
                        (("2" (EXPAND "fresh" -1) (("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL)
    (|fresh| DEF-DECL "bool" |freshness| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|act_reverse| FORMULA-DECL NIL |atoms| NIL)
    (|act_append| FORMULA-DECL NIL |atoms| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|a!1| SKOLEM-CONST-DECL
     "(ds(append(pi1, times1_var!1), append(pi2!1, times1_var!1)))"
     |alpha_equivalence| NIL)
    (|pi2!1| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|times1_var!1| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|pi1| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pi2!1| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|a| SKOLEM-CONST-DECL
     "(ds(pi1, append((: (act(pi1)(abs1_var), act(pi2)(abs1_var)) :), pi2)))"
     |alpha_equivalence| NIL)
    (|ext_append| FORMULA-DECL NIL |nominal_term| NIL)
    (|pi2| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (|abs1_var| SKOLEM-CONST-DECL "atom" |alpha_equivalence| NIL)
    (|act_reverse_pi| FORMULA-DECL NIL |atoms| NIL)
    (|reverse_reverse| FORMULA-DECL NIL |list_props| NIL)
    (|act_invariance| FORMULA-DECL NIL |atoms| NIL)
    (|act_reverse2| FORMULA-DECL NIL |atoms| NIL)
    (|ext_reverse_fresh| FORMULA-DECL NIL |freshness| NIL))
   NIL)
  (|alpha_fresh_invariance-1| NIL 3624864938
   ("" (SKOLEM 1 (DELTA PI1 "_" "_"))
    (("" (INDUCT T)
      (("1" (GRIND) NIL NIL)
       ("2" (GRIND)
        (("1" (REVEAL -1)
          (("1" (REWRITE ACT_APPEND)
            (("1" (REWRITE ACT_APPEND)
              (("1" (INST -1 "act(times1_var!1)(a!1)")
                (("1" (REWRITE ACT_REVERSE) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (REVEAL -1)
          (("2" (REWRITE ACT_APPEND)
            (("2" (REWRITE ACT_APPEND)
              (("2" (INST -1 "act(times1_var!1)(a!1)")
                (("2" (REWRITE ACT_REVERSE) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (GRIND) NIL NIL)
       ("4" (GRIND)
        (("1" (HIDE -1 -2)
          (("1" (REVEAL -3) (("1" (INST -1 A!1) (("1" (FLATTEN) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (HIDE -1 -2 -3)
          (("2" (REVEAL -4) (("2" (INST -1 A!1) (("2" (FLATTEN) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP*)
        (("5" (EXPAND EXT 1)
          (("5" (EXPAND ALPHA 1)
            (("5" (PROP)
              (("1" (INST -2 PI2)
                (("1" (ASSERT)
                  (("1" (SKEEP)
                    (("1" (INST -2 A)
                      (("1" (EXPAND FRESH -2)
                        (("1" (PROP)
                          (("1" (TYPEPRED A)
                            (("1" (EXPAND DS) (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (INST -2 "act(reverse(pi2))(act(pi1)(abs1_var))")
                (("1"
                  (LEMMA EXT_PRESERVES_FRESH
                   (DELTA DELTA PI PI2 A
                    "act(reverse(pi2))(act(pi1)(abs1_var))" T
                    "abs(abs1_var, abs2_var)"))
                  (("1" (REPLACE -1 -3 RL)
                    (("1" (REWRITE ACT_REVERSE2)
                      (("1" (EXPAND EXT -3)
                        (("1" (EXPAND FRESH -3) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND DS)
                  (("2" (REWRITE ACT_REVERSE2)
                    (("2"
                      (LEMMA ACT_INVARIANCE
                       (PI PI1 A
                        "act(reverse[[atom, atom]](pi2))(act(pi1)(abs1_var))" B
                        "abs1_var"))
                      (("2" (ASSERT)
                        (("2" (REPLACE -1 3 RL)
                          (("2" (REWRITE ACT_REVERSE2 3)
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3"
                (INST -1
                 "append((: (act(pi1)(abs1_var), act(pi2)(abs1_var)) :),pi2)")
                (("3" (REWRITE EXT_APPEND)
                  (("3" (ASSERT)
                    (("3" (SKEEP)
                      (("3" (TYPEPRED A)
                        (("3" (EXPAND DS)
                          (("3" (REWRITE ACT_APPEND)
                            (("3" (INST -2 A)
                              (("1" (EXPAND FRESH -2)
                                (("1" (PROP)
                                  (("1" (EXPAND ACT 1 2)
                                    (("1" (EXPAND ACT 1 (2 6 10))
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND DS)
                                (("2" (PROP)
                                  (("2" (EXPAND ACT 1 2)
                                    (("2" (EXPAND ACT 1 (2 6 10))
                                      (("2" (LIFT-IF)
                                        (("2" (ASSERT)
                                          (("2" (PROP)
                                            (("1"
                                              (LEMMA ACT_INVARIANCE
                                               (PI PI1 A A B ABS1_VAR))
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2"
                                              (LEMMA ACT_INVARIANCE
                                               (PI PI2 A A B ABS1_VAR))
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (GRIND) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_transitive| 0
  (|alpha_transitive-2| NIL 3745915197
   ("" (MEASURE-INDUCT "size(t1)" "t1")
    (("" (INDUCT "x")
      (("1" (SKEEP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (EXPAND "alpha" -1)
                (("2" (PROP)
                  (("2" (LEMMA "term_times_eta")
                    (("2" (INST -1 "t2")
                      (("2" (REPLACE -1 -5 RL)
                        (("2" (HIDE -2)
                          (("2" (EXPAND "alpha" -4)
                            (("2" (PROP)
                              (("2" (LEMMA "term_times_eta")
                                (("2" (INST -1 "t3")
                                  (("2" (REPLACE -1 1 RL)
                                    (("2" (HIDE -5)
                                      (("2" (EXPAND "alpha" 1)
                                        (("2" (PROP)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (HIDE -1 -2 -5)
                                            (("2" (REPLACE -1 -3 RL)
                                              (("2" (HIDE -1)
                                                (("2" (SKEEP)
                                                  (("2" (INST -1 "a")
                                                    (("2" (TYPEPRED "a")
                                                      (("2" (INST -2 "a")
                                                        (("2" (EXPAND "ds")
                                                          (("2" (PROP)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN) (("3" (HIDE -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (SKEEP)
              (("4" (CASE "t2 = pair(term1(t2), term2(t2))")
                (("1" (REPLACE -1 -3)
                  (("1" (REPLACE -1 -4)
                    (("1" (CASE "t3 = pair(term1(t3), term2(t3))")
                      (("1" (REPLACE -1 -5)
                        (("1" (REPLACE -1 1)
                          (("1" (EXPAND "alpha" 1)
                            (("1" (PROP)
                              (("1" (HIDE -1 -2)
                                (("1" (EXPAND "alpha" -2)
                                  (("1" (EXPAND "alpha" -3)
                                    (("1" (PROP)
                                      (("1" (HIDE -3 -5)
                                        (("1" (INST -1 "p1")
                                          (("1" (PROP)
                                            (("1"
                                              (INST -1 "Delta" "term1(t2)"
                                               "term1(t3)")
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (HIDE-ALL-BUT 1)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "alpha" -4)
                                (("2" (EXPAND "alpha" -5)
                                  (("2" (PROP)
                                    (("2" (HIDE -4 -6)
                                      (("2" (INST -3 "p2")
                                        (("2" (PROP)
                                          (("1"
                                            (INST -1 "Delta" "term2(t2)"
                                             "term2(t3)")
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -1 -2 -3 2)
                        (("2" (GRIND)
                          (("2" (LEMMA "term_pair_eta")
                            (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (HIDE -1 -2 -3 2) (("3" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -3 2)
                  (("2" (GRIND)
                    (("2" (LEMMA "term_pair_eta")
                      (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("3" (HIDE -1 -3 2) (("3" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (CASE "abs?(t2)")
              (("1" (LEMMA "term_abs_eta")
                (("1" (INST? -1)
                  (("1" (REPLACE -1 -4 RL)
                    (("1" (CASE "abs?(t3)")
                      (("1" (LEMMA "term_abs_eta")
                        (("1" (INST -1 "t3")
                          (("1" (REPLACE -1 -7 RL)
                            (("1" (REPLACE -1 1 RL)
                              (("1" (REPLACE -3 -7 RL)
                                (("1" (HIDE -1 -2 -3 -4)
                                  (("1" (EXPAND "alpha" 1)
                                    (("1" (PROP)
                                      (("1" (EXPAND "alpha" -3)
                                        (("1" (PROP)
                                          (("1" (EXPAND "alpha" -5)
                                            (("1" (PROP)
                                              (("1" (HIDE -1 -3 -5)
                                                (("1" (INST -3 "abs2_var")
                                                  (("1" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "body(t2)" "body(t3)")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "alpha" -5)
                                            (("2" (PROP)
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (HIDE -1 -3)
                                                (("2" (INST -4 "abs2_var")
                                                  (("2" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "ext((: (abs1_var, abstr(t2)) :))(body(t2))"
                                                       "body(t3)")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (HIDE -2 -3 2 3 4)
                                                          (("1"
                                                            (LEMMA
                                                             "ext_reverse_alpha")
                                                            (("1" (INST? -1)
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1" (HIDE -1)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "reverse"
                                                                     1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "reverse"
                                                                       1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (REVEAL
                                                                           -4)
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1
                                                                             1
                                                                             NIL
                                                                             T)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "append")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "alpha_ext_invariance_left")
                                                                                    (("1"
                                                                                      (HIDE
                                                                                       -1)
                                                                                      (("1"
                                                                                        (GRIND)
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "alpha_ext_invariance_right")
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "Delta"
                                                                                             "(: (abstr(t2), abstr(t3)) :)"
                                                                                             "_"
                                                                                             "_"
                                                                                             "_")
                                                                                            (("1"
                                                                                              (INST?
                                                                                               -1)
                                                                                              (("1"
                                                                                                (PROP)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (HIDE
                                                                                                   -1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (GRIND)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (EXPAND "alpha" -2)
                                        (("2" (PROP)
                                          (("1" (EXPAND "alpha" -4)
                                            (("1" (PROP)
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "alpha" -4)
                                            (("2" (PROP)
                                              (("1" (HIDE -1 -4 -5 1 3)
                                                (("1"
                                                  (LEMMA
                                                   "alpha_preserves_fresh")
                                                  (("1"
                                                    (INST -1 "Delta" "abs1_var"
                                                     "body(t3)" "body(t2)")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -5)
                                                (("2"
                                                  (LEMMA
                                                   "alpha_preserves_fresh")
                                                  (("2"
                                                    (INST -1 "Delta" "abs1_var"
                                                     "ext((: (abstr(t2), abstr(t3)) :))(body(t3))"
                                                     "body(t2)")
                                                    (("2" (PROP)
                                                      (("2" (ASSERT)
                                                        (("2" (REPLACE -1 -4)
                                                          (("2" (HIDE -3 -5)
                                                            (("2"
                                                              (LEMMA
                                                               "ext_reverse_fresh")
                                                              (("2" (INST? -1)
                                                                (("2"
                                                                  (HIDE -2 -3)
                                                                  (("2"
                                                                    (REPLACE -1
                                                                             -2)
                                                                    (("2"
                                                                      (HIDE -1)
                                                                      (("2"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (EXPAND "alpha" -2)
                                        (("3" (PROP)
                                          (("1" (EXPAND "alpha" -4)
                                            (("1" (PROP)
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (HIDE -1 -3 1 3)
                                                (("2" (INST -3 "abs2_var")
                                                  (("2" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "body(t2)"
                                                       "ext((: (abs1_var, abstr(t3)) :))(body(t3))")
                                                      (("1" (ASSERT)
                                                        (("1" (REVEAL -4)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "alpha" -4)
                                            (("2" (PROP)
                                              (("1" (HIDE -1 -3 1 3)
                                                (("1" (INST -3 "abs2_var")
                                                  (("1" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "ext((: (abs1_var, abstr(t2)) :))(body(t2))"
                                                       "ext((: (abs1_var, abstr(t3)) :))(body(t3))")
                                                      (("1" (ASSERT)
                                                        (("1" (HIDE 2)
                                                          (("1"
                                                            (LEMMA
                                                             "ext_preserves_alpha")
                                                            (("1" (REVEAL -3)
                                                              (("1"
                                                                (REPLACE -1 1
                                                                         RL)
                                                                (("1"
                                                                  (INST? -2)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 -3 1 2 4)
                                                (("2" (INST -3 "abs2_var")
                                                  (("2" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "ext((: (abs1_var, abstr(t2)) :))(body(t2))"
                                                       "ext((: (abs1_var, abstr(t3)) :))(body(t3))")
                                                      (("1" (ASSERT)
                                                        (("1" (HIDE 2)
                                                          (("1" (HIDE -2)
                                                            (("1"
                                                              (LEMMA
                                                               "ext_reverse_alpha")
                                                              (("1"
                                                                (INST -1
                                                                 "Delta"
                                                                 "(: (abs1_var, abstr(t2)) :)"
                                                                 "ext((: (abs1_var, abstr(t3)) :))(body(t3))"
                                                                 "body(t2)")
                                                                (("1"
                                                                  (REPLACE -1
                                                                           1)
                                                                  (("1"
                                                                    (HIDE -1)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "alpha_fresh_invariance")
                                                                      (("1"
                                                                        (HIDE
                                                                         -1)
                                                                        (("1"
                                                                          (REVEAL
                                                                           -6)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "body(t2)")
                                                                            (("1"
                                                                              (PROP)
                                                                              (("1"
                                                                                (INST
                                                                                 -1
                                                                                 "Delta"
                                                                                 "ext((: (abstr(t2), abstr(t3)) :))(body(t3))"
                                                                                 "ext(reverse((: (abs1_var, abstr(t2)) :)))
               (ext((: (abs1_var, abstr(t3)) :))(body(t3)))")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (HIDE
                                                                                     -1
                                                                                     2)
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "alpha_fresh_invariance")
                                                                                      (("1"
                                                                                        (REWRITE
                                                                                         "ext_append"
                                                                                         :DIR
                                                                                         RL)
                                                                                        (("1"
                                                                                          (INST
                                                                                           -1
                                                                                           "Delta"
                                                                                           "(: (abstr(t2), abstr(t3)) :)"
                                                                                           "append(reverse((: (abs1_var, abstr(t2)) :)),
                       (: (abs1_var, abstr(t3)) :))"
                                                                                           "body(t3)")
                                                                                          (("1"
                                                                                            (PROP)
                                                                                            (("1"
                                                                                              (HIDE
                                                                                               2)
                                                                                              (("1"
                                                                                                (SKEEP)
                                                                                                (("1"
                                                                                                  (TYPEPRED
                                                                                                   "a")
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "ds")
                                                                                                    (("1"
                                                                                                      (PROP)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "reverse"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "reverse"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "append"
                                                                                                               1
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 "append"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "append")
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "act"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (REVEAL
                                                                                                                       -9
                                                                                                                       4
                                                                                                                       5
                                                                                                                       6)
                                                                                                                      (("1"
                                                                                                                        (GRIND)
                                                                                                                        (("1"
                                                                                                                          (REVEAL
                                                                                                                           -10)
                                                                                                                          (("1"
                                                                                                                            (REVEAL
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (HIDE
                                                                                                                               -3
                                                                                                                               -4
                                                                                                                               1
                                                                                                                               2
                                                                                                                               3)
                                                                                                                              (("1"
                                                                                                                                (LEMMA
                                                                                                                                 "alpha_preserves_fresh")
                                                                                                                                (("1"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "Delta"
                                                                                                                                   "abs1_var"
                                                                                                                                   "ext((: (abstr(t2), abstr(t3)) :))(body(t3))"
                                                                                                                                   "body(t2)")
                                                                                                                                  (("1"
                                                                                                                                    (PROP)
                                                                                                                                    (("1"
                                                                                                                                      (REPLACE
                                                                                                                                       -1
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (HIDE
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (HIDE
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (LEMMA
                                                                                                                                             "ext_reverse_fresh")
                                                                                                                                            (("1"
                                                                                                                                              (INST?
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (REPLACE
                                                                                                                                                 -1
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (HIDE
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (REVEAL
                                                                                                                                                     4
                                                                                                                                                     5
                                                                                                                                                     6)
                                                                                                                                                    (("1"
                                                                                                                                                      (GRIND)
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE
                                                                                 -1
                                                                                 2)
                                                                                (("2"
                                                                                  (REVEAL
                                                                                   -5)
                                                                                  (("2"
                                                                                    (LEMMA
                                                                                     "alpha_size")
                                                                                    (("2"
                                                                                      (INST?
                                                                                       -1)
                                                                                      (("2"
                                                                                        (PROP)
                                                                                        (("2"
                                                                                          (HIDE
                                                                                           -2)
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "ext_preserves_size")
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               1
                                                                                               RL)
                                                                                              (("2"
                                                                                                (HIDE
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE -1 -2 2)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -3 -4 2) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1 -3 2) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (CASE "app?(t2)")
                (("1" (LEMMA "term_app_eta")
                  (("1" (INST? -1)
                    (("1" (CASE "app?(t3)")
                      (("1" (LEMMA "term_app_eta")
                        (("1" (INST -1 "t3")
                          (("1" (REPLACE -1 -7 RL)
                            (("1" (REPLACE -1 1 RL)
                              (("1" (REPLACE -3 -6 RL)
                                (("1" (REPLACE -3 -7 RL)
                                  (("1" (HIDE -1 -2 -3 -4)
                                    (("1" (EXPAND "alpha" 1)
                                      (("1" (EXPAND "alpha" -2)
                                        (("1" (EXPAND "alpha" -3)
                                          (("1" (ASSERT)
                                            (("1" (PROP)
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (HIDE -2 -4)
                                                (("2" (INST -1 "ag")
                                                  (("2" (PROP)
                                                    (("1"
                                                      (INST -1 "Delta"
                                                       "arg(t2)" "arg(t3)")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (REPLACE -1 -5 RL)
                        (("2" (HIDE -1 -3 -4 2) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -3 2) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (CASE "c_app?(t2)")
                (("1" (LEMMA "term_c_app_eta")
                  (("1" (INST -1 "t2")
                    (("1" (REPLACE -1 -4 RL)
                      (("1" (REPLACE -1 -5 RL)
                        (("1" (HIDE -1 -2)
                          (("1" (CASE "c_app?(t3)")
                            (("1" (LEMMA "term_c_app_eta")
                              (("1" (INST -1 "t3")
                                (("1" (REPLACE -1 -5 RL)
                                  (("1" (REPLACE -1 1 RL)
                                    (("1" (HIDE -1 -2)
                                      (("1" (EXPAND "alpha" 1)
                                        (("1"
                                          (CASE
                                              "ag = pair(term1(ag), term2(ag))")
                                          (("1"
                                            (CASE
                                                "c_arg(t2) = pair(term1(c_arg(t2)), term2(c_arg(t2)))")
                                            (("1"
                                              (CASE
                                                  "c_arg(t3) = pair(term1(c_arg(t3)), term2(c_arg(t3)))")
                                              (("1" (HIDE -1 -2 -3 -4)
                                                (("1" (SPLIT)
                                                  (("1" (EXPAND "alpha")
                                                    (("1" (FLATTEN)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (EXPAND "alpha" -1)
                                                      (("2" (EXPAND "alpha" -2)
                                                        (("2" (FLATTEN)
                                                          (("2" (HIDE -1 -3)
                                                            (("2" (PROP)
                                                              (("1"
                                                                (HIDE -2 -4 1)
                                                                (("1"
                                                                  (REVEAL -8)
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (HIDE -2 -4 2)
                                                                (("2"
                                                                  (REVEAL -8)
                                                                  (("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("3"
                                                                (HIDE -1 -4 2)
                                                                (("3"
                                                                  (REVEAL -8)
                                                                  (("3" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("4"
                                                                (HIDE -1 -4 1)
                                                                (("4"
                                                                  (REVEAL -8)
                                                                  (("4" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("5"
                                                                (HIDE -2 -4 1)
                                                                (("5"
                                                                  (REVEAL -8)
                                                                  (("5" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("6"
                                                                (HIDE -1 -3 2)
                                                                (("6"
                                                                  (REVEAL -8)
                                                                  (("6"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("6"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("7"
                                                                (HIDE -2 -3 2)
                                                                (("7"
                                                                  (REVEAL -8)
                                                                  (("7"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("7"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("8"
                                                                (HIDE -1 -4 1)
                                                                (("8"
                                                                  (REVEAL -8)
                                                                  (("8" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("9"
                                                                (HIDE -1 -3 1)
                                                                (("9"
                                                                  (REVEAL -8)
                                                                  (("9"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("9"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("10"
                                                                (HIDE -2 -4 2)
                                                                (("10"
                                                                  (REVEAL -8)
                                                                  (("10"
                                                                    (GRIND) NIL
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("11"
                                                                (HIDE -1 -4 2)
                                                                (("11"
                                                                  (REVEAL -8)
                                                                  (("11"
                                                                    (GRIND) NIL
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("12"
                                                                (HIDE -2 -3 1)
                                                                (("12"
                                                                  (REVEAL -8)
                                                                  (("12"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("12"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("13"
                                                                (HIDE -1 -3 1)
                                                                (("13"
                                                                  (REVEAL -8)
                                                                  (("13"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("13"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("14"
                                                                (HIDE -1 -3 2)
                                                                (("14"
                                                                  (REVEAL -8)
                                                                  (("14"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("14"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE-ALL-BUT
                                                                         1)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("15"
                                                                (HIDE -2 -3 2)
                                                                (("15"
                                                                  (REVEAL -8)
                                                                  (("15"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("15"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         -1 -2
                                                                         2)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("16"
                                                                (HIDE -2 -3 1)
                                                                (("16"
                                                                  (REVEAL -8)
                                                                  (("16"
                                                                    (INST -1
                                                                     "term2(ag)")
                                                                    (("16"
                                                                      (PROP)
                                                                      (("1"
                                                                        (INST?
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         -1 -2
                                                                         2)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (TYPEPRED "c_arg(t3)")
                                                  (("2" (HIDE -1)
                                                    (("2"
                                                      (LEMMA "term_pair_eta")
                                                      (("2"
                                                        (INST -1 "c_arg(t3)")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE-ALL-BUT 1)
                                              (("2" (TYPEPRED "c_arg(t2)")
                                                (("2" (HIDE -1)
                                                  (("2" (LEMMA "term_pair_eta")
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (TYPEPRED "ag")
                                              (("2" (HIDE -1)
                                                (("2" (LEMMA "term_pair_eta")
                                                  (("2" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE -1 -2 2) (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -3 2) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (|a| SKOLEM-CONST-DECL "(ds(pm, p(t3)))" |alpha_equivalence| NIL)
    (|t3| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|t2| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|pm| SKOLEM-CONST-DECL "perm" |alpha_equivalence| NIL)
    (|term_times_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|term_pair_eta| FORMULA-DECL NIL |term_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|t2| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|t3| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|alpha_ext_invariance_right| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (|alpha_ext_invariance_left| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (|ext_reverse_alpha| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|alpha_preserves_fresh| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|ext_reverse_fresh| FORMULA-DECL NIL |freshness| NIL)
    (|ext_preserves_alpha| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|alpha_fresh_invariance| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|ext_append| FORMULA-DECL NIL |nominal_term| NIL)
    (|ext_preserves_size| FORMULA-DECL NIL |nominal_term| NIL)
    (|alpha_size| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|term_abs_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|term_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|t3| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|t2| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term_c_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|t3| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|t2| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   NIL)
  (|alpha_transitive-1| NIL 3624718461
   ("" (INDUCT T1)
    (("1" (GRIND) NIL NIL)
     ("2" (GRIND)
      (("1" (REVEAL (-1 -2))
        (("1" (INST -1 A!1)
          (("1" (INST -2 A!1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL)
       ("2" (REVEAL (-1 -2))
        (("2" (INST -1 A!1)
          (("2" (INST -2 A!1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL)
       ("3" (REVEAL (-1 -2)) (("3" (INST -2 A!1) (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL)
     ("3" (GRIND) NIL NIL)
     ("4" (GRIND)
      (("1" (HIDE -1 -2 -3 -4 -5 -6)
        (("1" (REVEAL -7)
          (("1" (INST -1 DELTA!1 "term2(t2!1)" "term2(t3!1)")
            (("1" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (HIDE -1 -2 -3 -4 -5 -6)
        (("2" (REVEAL -7)
          (("2" (INST -1 DELTA!1 "term2(t2!1)" "term2(t3!1)")
            (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("3" (HIDE -1 -2 -3 -4 -5 -6)
        (("3" (REVEAL -8)
          (("3" (INST -1 DELTA!1 "term1(t2!1)" "term1(t3!1)")
            (("3" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("4" (HIDE -1 -2 -3 -4 -5 -6)
        (("4" (REVEAL -8)
          (("4" (INST -1 DELTA!1 "term1(t2!1)" "term1(t3!1)")
            (("4" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKEEP*)
      (("5" (EXPAND ALPHA (-2 -3 1))
        (("5" (FLATTEN)
          (("5" (ASSERT)
            (("5" (FLATTEN)
              (("5" (ASSERT)
                (("5" (SPLIT -3)
                  (("1" (SPLIT -5)
                    (("1" (FLATTEN)
                      (("1" (ASSERT)
                        (("1" (INST -5 DELTA "body(t2)" "body(t3)")
                          (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (ASSERT)
                        (("2"
                          (INST -5 "Delta" "body(t2)"
                           "ext((: (abs1_var, abstr(t3)) :))(body(t3))")
                          (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SPLIT -5)
                    (("1" (FLATTEN)
                      (("1" (ASSERT)
                        (("1"
                          (LEMMA ALPHA_PRESERVES_FRESH
                           (DELTA DELTA A ABS1_VAR T "body(t2)" S "body(t3)"))
                          (("1" (ASSERT)
                            (("1"
                              (INST -6 DELTA
                               "ext((: (abs1_var, abstr(t3)) :))(body(t2))"
                               "ext((: (abs1_var, abstr(t3)) :))(body(t3))")
                              (("1" (ASSERT)
                                (("1" (REWRITE EXT_PRESERVES_ALPHA) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (SPLIT 3)
                        (("1" (FLATTEN)
                          (("1"
                            (INST -6 DELTA
                             "ext((: (abstr(t3), abstr(t2)) :))(body(t2))"
                             "body(t3)")
                            (("1" (ASSERT)
                              (("1"
                                (LEMMA EXT_PRESERVES_ALPHA
                                 (DELTA DELTA PI "(: (abstr(t3), abstr(t2)) :)"
                                  T "body(t2)" S
                                  "ext((: (abstr(t2), abstr(t3)) :))(body(t3))"))
                                (("1" (ASSERT)
                                  (("1" (LEMMA ALPHA_EXT_INVARIANCE_RIGHT)
                                    (("1"
                                      (INST -1 DELTA
                                       "append((: (abstr(t3), abstr(t2)) :),(: (abstr(t2), abstr(t3)) :))"
                                       "(::)" "body(t3)"
                                       "ext((: (abstr(t3), abstr(t2)) :))(body(t2))")
                                      (("1" (REWRITE EXT_IDENTITY)
                                        (("1" (REWRITE EXT_APPEND)
                                          (("1" (ASSERT)
                                            (("1" (HIDE-ALL-BUT 1)
                                              (("1" (DECOMPOSE-EQUALITY 1)
                                                (("1" (REWRITE ACT_APPEND)
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2"
                            (LEMMA ALPHA_PRESERVES_FRESH
                             (DELTA DELTA A "abs1_var" T "body(t2)" S
                              "ext((: (abstr(t2), abstr(t3)) :))(body(t3))"))
                            (("2" (ASSERT)
                              (("2"
                                (LEMMA EXT_REVERSE_FRESH
                                 (DELTA DELTA A "abs1_var" PI
                                  "(: (abstr(t2), abstr(t3)) :)" T "body(t3)"))
                                (("2" (ASSERT)
                                  (("2" (EXPAND* REVERSE REVERSE)
                                    (("2" (EXPAND APPEND)
                                      (("2" (EXPAND ACT -1)
                                        (("2" (EXPAND ACT -1)
                                          (("2"
                                            (LEMMA EXT_PRESERVES_ALPHA
                                             (DELTA DELTA PI
                                              "(: (abs1_var, abstr(t2)) :)" T
                                              "body(t2)" S
                                              "ext((: (abstr(t2), abstr(t3)) :))(body(t3))"))
                                            (("2"
                                              (INST-CP -8 DELTA
                                               "ext((: (abs1_var, abstr(t2)) :))(body(t2))"
                                               "ext((: (abs1_var, abstr(t2)) :))(ext((: (abstr(t2), abstr(t3)) :))(body(t3)))")
                                              (("2" (ASSERT)
                                                (("2"
                                                  (INST -8 DELTA
                                                   "ext((: (abs1_var, abstr(t2)) :))(ext((: (abstr(t2), abstr(t3)) :))(body(t3)))"
                                                   "ext((: (abs1_var, abstr(t3)) :))(body(t3))")
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (LEMMA
                                                       ALPHA_FRESH_INVARIANCE
                                                       (DELTA DELTA PI1
                                                        "append((: (abs1_var, abstr(t2)) :),(: (abstr(t2), abstr(t3)) :))"
                                                        PI2
                                                        "(: (abs1_var, abstr(t3)) :)"
                                                        T "body(t3)"))
                                                      (("2"
                                                        (REWRITE EXT_APPEND -1)
                                                        (("2" (ASSERT)
                                                          (("2" (SKEEP)
                                                            (("2" (TYPEPRED A)
                                                              (("2" (EXPAND DS)
                                                                (("2"
                                                                  (REWRITE
                                                                   ACT_APPEND)
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     (-1 -3 -5
                                                                      1 2 4 5))
                                                                    (("2"
                                                                      (EXPAND*
                                                                       ACT ACT)
                                                                      (("2"
                                                                        (LIFT-IF)
                                                                        (("2"
                                                                          (LIFT-IF)
                                                                          (("2"
                                                                            (LIFT-IF)
                                                                            (("2"
                                                                              (LIFT-IF)
                                                                              (("2"
                                                                                (LIFT-IF)
                                                                                (("2"
                                                                                  (LIFT-IF)
                                                                                  (("2"
                                                                                    (LIFT-IF)
                                                                                    (("2"
                                                                                      (LIFT-IF)
                                                                                      (("2"
                                                                                        (LIFT-IF)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("6" (GRIND)
      (("6" (HIDE -1 -2 -3)
        (("6" (REVEAL -4)
          (("6" (INST -1 DELTA!1 "arg(t2!1)" "arg(t3!1)")
            (("6" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_symmetric| 0
  (|alpha_symmetric-2| NIL 3745915598
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP)
        (("1" (SKEEP)
          (("1" (HIDE -1)
            (("1" (EXPAND "alpha" 1)
              (("1" (ASSERT)
                (("1" (GRIND)
                  (("1" (LEMMA "term_at_eta")
                    (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (EXPAND "alpha" 1 1)
              (("2" (GRIND)
                (("1" (EXPAND "alpha" -1)
                  (("1" (HIDE 2 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                 ("2" (HIDE 1)
                  (("2" (GRIND)
                    (("2" (EXPAND "alpha" -1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("3" (HIDE 1)
                  (("3" (EXPAND "alpha" -1) (("3" (GRIND) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN)
        (("3" (HIDE -1)
          (("3" (GRIND)
            (("3" (HIDE -1)
              (("3" (EXPAND "alpha" -1) (("3" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (SKEEP)
              (("4" (HIDE -1)
                (("4" (EXPAND "alpha" 1 1)
                  (("4" (GRIND)
                    (("1" (REVEAL -1)
                      (("1" (INST -1 "p2")
                        (("1" (PROP)
                          (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REVEAL -1)
                      (("2" (HIDE -4) (("2" (GRIND) NIL NIL)) NIL)) NIL)
                     ("3" (EXPAND "alpha" -1)
                      (("3" (GRIND)
                        (("3" (REVEAL -1)
                          (("3" (HIDE -3)
                            (("3" (INST -1 "term2(s)")
                              (("3" (PROP)
                                (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (HIDE -1 2)
                                  (("2" (LEMMA "alpha_size")
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("4" (EXPAND "alpha" -1)
                      (("4" (GRIND)
                        (("4" (HIDE -1 -3)
                          (("4" (REVEAL -3)
                            (("4" (INST -1 "p1")
                              (("4" (PROP)
                                (("1" (INST -1 "Delta" "term1(s)")
                                  (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("5" (GRIND)
                      (("5" (EXPAND "alpha" -1) (("5" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (HIDE -1)
              (("5" (CASE "abs?(s)")
                (("1" (LEMMA "term_abs_eta")
                  (("1" (INST? -1)
                    (("1" (REPLACE -1 1 RL)
                      (("1" (HIDE -1 -2)
                        (("1" (EXPAND "alpha" 1)
                          (("1" (GRIND)
                            (("1" (REVEAL -4)
                              (("1" (INST -1 "abs2_var")
                                (("1" (PROP)
                                  (("1" (INST? -1) (("1" (ASSERT) NIL NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE -1)
                              (("2" (REVEAL -5)
                                (("2" (INST -1 "abs2_var")
                                  (("2" (PROP)
                                    (("1" (INST? -1) (("1" (ASSERT) NIL NIL))
                                      NIL)
                                     ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (REVEAL -4)
                              (("3" (INST -1 "abs2_var")
                                (("3" (PROP)
                                  (("1"
                                    (INST -1 "Delta"
                                     "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                    (("1" (REPLACE -1 -3)
                                      (("1" (HIDE -1 -2 1 2)
                                        (("1" (LEMMA "ext_reverse_alpha")
                                          (("1" (INST? -1)
                                            (("1" (REPLACE -1 -2)
                                              (("1" (HIDE -1)
                                                (("1"
                                                  (LEMMA
                                                   "alpha_ext_invariance_right")
                                                  (("1" (INST? -1)
                                                    (("1"
                                                      (INST -1
                                                       "(: (abstr(s), abs1_var) :)")
                                                      (("1" (PROP)
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (HIDE -1 2)
                                                          (("2"
                                                            (DECOMPOSE-EQUALITY)
                                                            (("2" (GRIND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE -1 -2 2 3 4)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("4" (LEMMA "alpha_preserves_fresh")
                              (("4"
                                (INST -1 "Delta" "abstr(s)"
                                 "ext((: (abs1_var, abstr(s)) :))(body(s))"
                                 "abs2_var")
                                (("4" (PROP)
                                  (("4" (REPLACE -1 3)
                                    (("4" (HIDE -1 -3)
                                      (("4" (LEMMA "ext_reverse_fresh")
                                        (("4" (INST? -1)
                                          (("4" (REPLACE -1 3)
                                            (("4" (HIDE -1)
                                              (("4" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("5" (HIDE -1 1 3)
                              (("5" (REVEAL -5)
                                (("5" (INST -1 "abs2_var")
                                  (("5" (PROP)
                                    (("1" (INST? -1)
                                      (("1" (REPLACE -1 1)
                                        (("1" (HIDE -1)
                                          (("1" (LEMMA "ext_reverse_alpha")
                                            (("1" (INST? -1)
                                              (("1" (REPLACE -1 1)
                                                (("1" (HIDE -1)
                                                  (("1"
                                                    (LEMMA
                                                     "alpha_ext_invariance_right")
                                                    (("1" (INST? -1)
                                                      (("1"
                                                        (INST -1
                                                         "(: (abstr(s), abs1_var) :)")
                                                        (("1" (PROP)
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2" (HIDE -1 2)
                                                            (("2"
                                                              (DECOMPOSE-EQUALITY)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("6" (LEMMA "alpha_preserves_fresh")
                              (("6"
                                (INST -1 "Delta" "abs1_var"
                                 "ext((: (abstr(s), abs1_var) :))(abs2_var)"
                                 "body(s)")
                                (("6" (PROP)
                                  (("6" (REPLACE -1 2)
                                    (("6" (HIDE -1 1 3)
                                      (("6" (HIDE -2)
                                        (("6" (LEMMA "ext_reverse_fresh")
                                          (("6" (INST? -1)
                                            (("6" (REPLACE -1 1)
                                              (("6" (HIDE -1)
                                                (("6" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND)
                  (("2" (GRIND)
                    (("2" (EXPAND "alpha") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (HIDE -1)
                (("6" (GRIND)
                  (("1" (REVEAL -1)
                    (("1" (INST -1 "ag")
                      (("1" (PROP)
                        (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND)
                    (("2" (EXPAND "alpha" -1)
                      (("2" (GRIND)
                        (("2" (HIDE -1 -2)
                          (("2" (REVEAL -3)
                            (("2" (INST -1 "ag")
                              (("2" (PROP)
                                (("1" (INST -1 "Delta" "arg(s)")
                                  (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (GRIND)
                    (("3" (EXPAND "alpha" -1) (("3" (GRIND) NIL NIL)) NIL))
                    NIL)
                   ("4" (EXPAND "alpha" -1) (("4" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (CASE "c_app?(s)")
                (("1" (LEMMA "term_c_app_eta")
                  (("1" (INST -1 "s")
                    (("1" (REPLACE -1 1 RL)
                      (("1" (HIDE -1 -2)
                        (("1" (EXPAND "alpha" 1)
                          (("1"
                            (CASE
                                "alpha(Delta)(term1(ag), term1(c_arg(s))) = alpha(Delta)(term1(c_arg(s)), term1(ag))")
                            (("1"
                              (CASE
                                  "alpha(Delta)(term2(ag), term2(c_arg(s))) = alpha(Delta)(term2(c_arg(s)), term2(ag))")
                              (("1" (HIDE -3)
                                (("1"
                                  (CASE
                                      "alpha(Delta)(term1(ag), term2(c_arg(s))) = alpha(Delta)(term2(c_arg(s)), term1(ag))")
                                  (("1"
                                    (CASE
                                        "alpha(Delta)(term2(ag), term1(c_arg(s))) = alpha(Delta)(term1(c_arg(s)), term2(ag))")
                                    (("1" (GRIND) NIL NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (REVEAL -4)
                                        (("2" (INST -1 "term2(ag)")
                                          (("2" (PROP)
                                            (("1" (INST? -1) NIL NIL)
                                             ("2" (HIDE 2)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT 1)
                                    (("2" (REVEAL -3)
                                      (("2" (INST -1 "term1(ag)")
                                        (("2" (PROP)
                                          (("1" (INST? -1) NIL NIL)
                                           ("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT 1)
                                (("2" (REVEAL -2)
                                  (("2" (INST -1 "term2(ag)")
                                    (("2" (PROP)
                                      (("1" (INST? -1) NIL NIL)
                                       ("2" (HIDE 2) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT 1)
                              (("2" (REVEAL -1)
                                (("2" (INST -1 "term1(ag)")
                                  (("2" (PROP)
                                    (("1" (INST? -1) NIL NIL)
                                     ("2" (HIDE 2) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (HIDE -1 2)
                              (("3" (REVEAL -3) (("3" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1)
                  (("2" (GRIND)
                    (("2" (EXPAND "alpha" -1)
                      (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|atom?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term_at_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (* ADT-CONSTRUCTOR-DECL "[[perm, variable] -> (susp?)]" |term_adt| NIL)
    (|alpha_size| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|term_abs_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|alpha_preserves_fresh| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|ext_reverse_fresh| FORMULA-DECL NIL |freshness| NIL)
    (|ext_reverse_alpha| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|alpha_ext_invariance_right| FORMULA-DECL NIL |alpha_equivalence| NIL)
    (|act| DEF-DECL "atom" |atoms| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|term_c_app_eta| FORMULA-DECL NIL |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|s| SKOLEM-CONST-DECL
     "term[atom, perm, variable, symbol, commutative_symbol]"
     |alpha_equivalence| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   NIL)
  (|alpha_symmetric-1| NIL 3625474085
   ("" (SKOLEM 1 (DELTA "_" "_"))
    (("" (INDUCT T)
      (("1" (GRIND)
        (("1" (EXPAND ALPHA -3)
          (("1" (LIFT-IF)
            (("1" (ASSERT)
              (("1" (PROP)
                (("1" (DECOMPOSE-EQUALITY -2)
                  (("1" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKEEP*)
        (("2" (EXPAND ALPHA)
          (("2" (IFF)
            (("2" (SPLIT)
              (("1" (FLATTEN)
                (("1" (ASSERT)
                  (("1" (SKEEP)
                    (("1" (INST -3 A)
                      (("1" (ASSERT) NIL NIL)
                       ("2" (TYPEPRED A)
                        (("2" (EXPAND DS) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (LIFT-IF)
                  (("2" (ASSERT)
                    (("2" (PROP)
                      (("1" (ASSERT) NIL NIL)
                       ("2" (SKEEP)
                        (("2" (TYPEPRED A)
                          (("2" (INST -4 A)
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND DS) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (GRIND)
        (("3" (EXPAND ALPHA) (("3" (LIFT-IF) (("3" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("4" (SKEEP*)
        (("4" (EXPAND ALPHA 1)
          (("4" (LIFT-IF)
            (("4" (ASSERT)
              (("4" (PROP)
                (("4" (INST -2 "term1(s)")
                  (("4" (INST -3 "term2(s)")
                    (("4" (REPLACES -2) (("4" (REPLACES -2) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP*)
        (("5" (EXPAND ALPHA 1)
          (("5" (LIFT-IF)
            (("5" (ASSERT)
              (("5" (PROP)
                (("5" (LIFT-IF)
                  (("5" (LIFT-IF)
                    (("5" (LIFT-IF)
                      (("5" (ASSERT)
                        (("5" (PROP)
                          (("1" (INST -3 "body(s)") NIL NIL)
                           ("2" (IFF)
                            (("2" (SPLIT)
                              (("1" (FLATTEN)
                                (("1"
                                  (LEMMA EXT_PRESERVES_FRESH
                                   (DELTA DELTA A "abs1_var" PI
                                    "(: (abs1_var, abstr(s)) :)" T "body(s)"))
                                  (("1" (EXPAND* ACT ACT)
                                    (("1"
                                      (LEMMA ALPHA_PRESERVES_FRESH
                                       (DELTA DELTA A "abstr(s)" T "abs2_var" S
                                        "ext((: (abs1_var, abstr(s)) :))(body(s))"))
                                      (("1" (ASSERT)
                                        (("1"
                                          (INST -6
                                           "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                          (("1"
                                            (LEMMA EXT_PRESERVES_ALPHA
                                             (DELTA DELTA PI
                                              "(: (abstr(s), abs1_var) :)" T
                                              "ext((: (abs1_var, abstr(s)) :))(body(s))"
                                              S "abs2_var"))
                                            (("1"
                                              (LEMMA ALPHA_EXT_INVARIANCE_LEFT
                                               (DELTA DELTA PI1
                                                "append((: (abstr(s), abs1_var) :), (: (abs1_var, abstr(s)) :))"
                                                T "body(s)" S
                                                "ext((: (abstr(s), abs1_var) :))(abs2_var)"))
                                              (("1" (INST -1 "(::)")
                                                (("1" (SPLIT)
                                                  (("1" (REWRITE EXT_APPEND)
                                                    (("1"
                                                      (REWRITE EXT_IDENTITY)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE-ALL-BUT (1 3))
                                                    (("2"
                                                      (DECOMPOSE-EQUALITY 1)
                                                      (("2"
                                                        (REWRITE ACT_APPEND)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2"
                                  (LEMMA EXT_PRESERVES_FRESH
                                   (DELTA DELTA A "abstr(s)" PI
                                    "(: (abstr(s), abs1_var) :)" T "abs2_var"))
                                  (("2" (EXPAND* ACT ACT)
                                    (("2"
                                      (LEMMA ALPHA_PRESERVES_FRESH
                                       (DELTA DELTA A "abs1_var" S
                                        "ext((: (abstr(s), abs1_var) :))(abs2_var)"
                                        T "body(s)"))
                                      (("2" (ASSERT)
                                        (("2"
                                          (INST -6
                                           "ext((: (abs1_var, abstr(s)) :))(body(s))")
                                          (("2"
                                            (LEMMA EXT_PRESERVES_ALPHA
                                             (DELTA DELTA PI
                                              "(: (abs1_var, abstr(s)) :)" T
                                              "body(s)" S
                                              "ext((: (abstr(s), abs1_var) :))(abs2_var)"))
                                            (("2"
                                              (LEMMA ALPHA_EXT_INVARIANCE_RIGHT
                                               (DELTA DELTA PI1
                                                "append((: (abs1_var, abstr(s)) :), (: (abstr(s), abs1_var) :))"
                                                T
                                                "ext((: (abs1_var, abstr(s)) :))(body(s))"
                                                S "abs2_var"))
                                              (("2" (INST -1 "(::)")
                                                (("2" (SPLIT)
                                                  (("1" (REWRITE EXT_APPEND)
                                                    (("1"
                                                      (REWRITE EXT_IDENTITY)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE-ALL-BUT (1 3))
                                                    (("2"
                                                      (DECOMPOSE-EQUALITY 1)
                                                      (("2"
                                                        (REWRITE ACT_APPEND)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKEEP*)
        (("6" (EXPAND ALPHA 1)
          (("6" (LIFT-IF)
            (("6" (ASSERT)
              (("6" (PROP)
                (("6" (INST -1 "arg(s)")
                  (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|alpha_weakening| 0
  (|alpha_weakening-2| NIL 3745915719
   ("" (MEASURE-INDUCT "size(t)" "t")
    (("" (INDUCT "x")
      (("1" (SKEEP) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
       ("2" (SKOLEM 1 ("pm" "V"))
        (("2" (FLATTEN)
          (("2" (HIDE -1)
            (("2" (SKEEP)
              (("2" (EXPAND "alpha")
                (("2" (PROP)
                  (("2" (HIDE -2 -3)
                    (("2" (SKEEP)
                      (("2" (INST -1 "(a, V)") (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (FLATTEN)
        (("3" (HIDE -1) (("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
       ("4" (SKOLEM 1 ("p1" "p2"))
        (("4" (FLATTEN)
          (("4" (HIDE -1 -2)
            (("4" (SKEEP)
              (("4" (EXPAND "alpha" 1)
                (("4" (EXPAND "alpha" -3)
                  (("4" (PROP)
                    (("1" (HIDE -5)
                      (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                     ("2" (HIDE -3 -4)
                      (("2" (INST -1 "p2")
                        (("2" (PROP)
                          (("1" (INST -1 "Delta" "Nabla" "term2(s)")
                            (("1" (PROP) NIL NIL)) NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("5" (SKEEP)
        (("5" (HIDE -1)
          (("5" (SKEEP)
            (("5" (EXPAND "alpha" 1)
              (("5" (EXPAND "alpha" -3)
                (("5" (PROP)
                  (("1" (HIDE -1 -2 -6)
                    (("1" (INST -2 "abs2_var")
                      (("1" (PROP)
                        (("1" (INST? -1)
                          (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)) NIL)
                         ("2" (HIDE -1 -2 2) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -2 -3 -5 2 3)
                    (("2" (LEMMA "fresh_weakening") (("2" (GRIND) NIL NIL))
                      NIL))
                    NIL)
                   ("3" (HIDE -1 -5 2 3)
                    (("3" (INST -2 "abs2_var")
                      (("3" (PROP)
                        (("1" (INST? -1)
                          (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)) NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("6" (SKOLEM 1 ("f" "ag"))
        (("6" (FLATTEN)
          (("6" (HIDE -1)
            (("6" (SKEEP)
              (("6" (EXPAND "alpha" 1)
                (("6" (EXPAND "alpha" -3)
                  (("6" (PROP)
                    (("6" (INST -1 "ag")
                      (("6" (PROP)
                        (("1" (INST? -1)
                          (("1" (INST? -1) (("1" (PROP) NIL NIL)) NIL)) NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("7" (SKOLEM 1 ("f" "ag"))
        (("7" (FLATTEN)
          (("7" (HIDE -1)
            (("7" (SKEEP)
              (("7" (EXPAND "alpha" 1)
                (("7" (EXPAND "alpha" -3)
                  (("7" (FLATTEN)
                    (("7" (SPLIT 1)
                      (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)
                       ("3" (FLATTEN)
                        (("3" (SPLIT -5)
                          (("1" (HIDE -4 -5)
                            (("1" (HIDE 2)
                              (("1" (PROP)
                                (("1" (INST -3 "term1(ag)")
                                  (("1" (PROP)
                                    (("1" (INST? -1)
                                      (("1" (INST? -1) (("1" (PROP) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE -1)
                                  (("2" (INST -2 "term2(ag)")
                                    (("2" (PROP)
                                      (("1" (INST? -1)
                                        (("1" (INST? -1) (("1" (PROP) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 1)
                            (("2" (HIDE -4 -5)
                              (("2" (PROP)
                                (("1" (INST -3 "term1(ag)")
                                  (("1" (PROP)
                                    (("1" (INST? -1)
                                      (("1" (INST? -1) (("1" (PROP) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL)
                                 ("2" (INST -3 "term2(ag)")
                                  (("2" (PROP)
                                    (("1" (INST? -1)
                                      (("1" (INST? -1) (("1" (PROP) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE-ALL-BUT 1)
                                      (("2" (GRIND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|ds| CONST-DECL "set[atom]" |atoms| NIL)
    (|susp?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|p| ADT-ACCESSOR-DECL "[(susp?) -> perm]" |term_adt| NIL)
    (|term2| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair| TYPE-EQ-DECL NIL |term_adt| NIL)
    (|term1| ADT-ACCESSOR-DECL "[pair -> term]" |term_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|body| ADT-ACCESSOR-DECL "[(abs?) -> term]" |term_adt| NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|fresh_weakening| FORMULA-DECL NIL |freshness| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|abstr| ADT-ACCESSOR-DECL "[(abs?) -> atom]" |term_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|ext| DEF-DECL "term" |nominal_term| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(app?) -> term]" |term_adt| NIL)
    (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|c_arg| ADT-ACCESSOR-DECL "[(c_app?) -> pair]" |term_adt| NIL)
    (|c_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|size| DEF-DECL "nat" |nominal_term| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|alpha| DEF-DECL "bool" |alpha_equivalence| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fresh_context| TYPE-EQ-DECL NIL |freshness| NIL))
   NIL)
  (|alpha_weakening-1| NIL 3626442158
   ("" (INDUCT T)
    (("1" (GRIND) NIL NIL)
     ("2" (GRIND)
      (("1" (REVEAL -2) (("1" (INST -1 A!1) NIL NIL)) NIL)
       ("2" (REVEAL -2) (("2" (INST -1 A!1) NIL NIL)) NIL))
      NIL)
     ("3" (GRIND) NIL NIL)
     ("4" (SKEEP*)
      (("4" (EXPAND ALPHA (-4 1))
        (("4" (FLATTEN)
          (("4" (INST -1 DELTA NABLA "term1(s)")
            (("4" (INST -2 DELTA NABLA "term2(s)") (("4" (PROP) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKEEP*)
      (("5" (EXPAND ALPHA (-3 1))
        (("5" (FLATTEN)
          (("5" (SPLIT -4)
            (("1" (FLATTEN)
              (("1" (ASSERT)
                (("1" (INST -3 DELTA NABLA "body(s)") (("1" (PROP) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2" (ASSERT)
                (("2"
                  (LEMMA FRESH_WEAKENING
                   (DELTA DELTA NABLA NABLA A "abs1_var" T "body(s)"))
                  (("2" (PROP)
                    (("2"
                      (INST -4 DELTA NABLA
                       "ext((: (abs1_var, abstr(s)) :))(body(s))")
                      (("2" (PROP) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("6" (SKEEP*)
      (("6" (EXPAND ALPHA (-3 1))
        (("6" (PROP)
          (("6" (INST -1 DELTA NABLA "arg(s)") (("6" (PROP) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

