(|horiz_edge_crossing|
 (|point_on_ray_reflexive| 0
  (|point_on_ray_reflexive-1| |nil| 3874129020 ("" (GRIND) NIL NIL) NIL
   SHOSTAK))
 (|point_on_ray_trans| 0
  (|point_on_ray_trans-1| |nil| 3874129020 ("" (GRIND) NIL NIL) NIL SHOSTAK))
 (|pt_above_p1_and_below_p2_and_x_in_range_imp_pt_on_seg_on_ray| 0
  (|pt_above_p1_and_below_p2_and_x_in_range_imp_pt_on_seg_on_ray-1| |nil|
   3874129020
   ("" (SKEEP)
    (("" (EXPAND "x_in_range")
      (("" (ASSERT)
        (("" (NAME "t" "(pt`y - segment`p1`y)/(segment`p2`y - segment`p1`y)")
          (("" (INST + "(1-t) * segment`p1 + t * segment`p2")
            (("1" (EXPAND "point_on_ray?")
              (("1" (SPLIT)
                (("1" (REPLACE -1 :DIR RL :HIDE? T)
                  (("1" (GRIND) (("1" (FIELD) NIL NIL)) NIL)) NIL)
                 ("2" (GRIND) (("2" (FIELD) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (EXPAND* "point_on_segment?" "point_on_segment?")
              (("2" (INST 1 "t")
                (("2" (SPLIT)
                  (("1" (USE "pos_div_ge") (("1" (ASSERT) NIL NIL)) NIL)
                   ("2"
                    (CASE "pt`y - segment`p1`y <= segment`p2`y - segment`p1`y")
                    (("1" (DIV-BY -1 "segment`p2`y - segment`p1`y")
                      (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|is_right_point_ray_intersect?_imp_exists_pt_on_seg_point_on_ray?| 0
  (|is_right_point_ray_intersect?_imp_exists_pt_on_seg_point_on_ray?-1| |nil|
   3874129020
   ("" (SKEEP)
    (("" (EXPAND* "is_right_point_ray_intersection?" "x_in_range" "y_in_range")
      (("" (FLATTEN)
        (("" (SPLIT)
          (("1" (SPLIT)
            (("1" (FLATTEN)
              (("1" (HIDE-ALL-BUT (-1 -3 -4)) (("1" (FIELD) NIL NIL)) NIL))
              NIL)
             ("2" (FLATTEN)
              (("2"
                (USE
                 "pt_above_p1_and_below_p2_and_x_in_range_imp_pt_on_seg_on_ray")
                (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (SPLIT)
              (("1" (FLATTEN)
                (("1"
                  (LEMMA
                   "pt_above_p1_and_below_p2_and_x_in_range_imp_pt_on_seg_on_ray"
                   ("pt" "point" "segment" "reverse_segment(segment)"))
                  (("1" (EXPAND "reverse_segment")
                    (("1" (ASSERT)
                      (("1" (SPLIT)
                        (("1" (SKEEP - T)
                          (("1" (INST 1 "p")
                            (("1" (USE "point_on_reverse_segment")
                              (("1" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (HIDE-ALL-BUT (-2 -3 1)) (("2" (FIELD) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|rightmost_x_val_TCC1| 0
  (|rightmost_x_val_TCC1-2| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "vertex_x_values")
      (("" (TYPEPRED "G`num_vertices")
        (("" (EXPAND "empty?")
          (("" (INST - "G`vertices(0)`x")
            (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|rightmost_x_val| SUBTYPE
    "horiz_edge_crossing.vertex_x_values(horiz_edge_crossing.G)"
    "non_empty_finite_set[real]"))
  (|rightmost_x_val_TCC1-1| |nil| 3874127560 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|rightmost_x_val| SUBTYPE
    "horiz_edge_crossing.vertex_x_values(horiz_edge_crossing.G)"
    "non_empty_finite_set[real]")))
 (|all_edges_to_left| 0
  (|all_edges_to_left-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (TYPEPRED "e")
      (("" (EXPAND "edge_of_polygon?")
        (("" (EXPAND "point_on_segment?")
          (("" (SKEEP*)
            (("" (EXPAND "rightmost_x_val")
              (("" (TYPEPRED "max[real,<=](vertex_x_values(G))")
                (("" (INST-CP -2 "e`p1`x")
                  (("" (INST -2 "e`p2`x")
                    (("" (EXPAND "edges_of_polygon")
                      (("" (REPLACE -7)
                        (("" (REPLACE -4 :DIR RL)
                          (("" (ASSERT)
                            (("" (EXPAND "vertex_x_values" -2 1)
                              (("" (EXPAND "vertex_x_values" -3 1)
                                (("" (SPLIT -2)
                                  (("1" (SPLIT -3)
                                    (("1" (EXPAND "+" +)
                                      (("1" (EXPAND "*" +)
                                        (("1" (LEMMA "one_parameter_max")
                                          (("1"
                                            (INST - "G`vertices(i)`x"
                                             "G`vertices(next_index(G, i))`x"
                                             "max[real,<=](vertex_x_values(G))"
                                             "t")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (INST + "i") NIL NIL))
                                    NIL)
                                   ("2" (INST + "next_index(G,i)") NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|vertex_on_perimeter| 0
  (|vertex_on_perimeter-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "vertex?")
      (("" (EXPAND "point_on_polygon_perimeter?")
        (("" (SKEEP)
          (("" (INST + "(# p1 := p, p2 := G`vertices(next_index(G,i)) #)")
            (("1" (EXPAND "point_on_segment?")
              (("1" (INST + "0") (("1" (ASSERT) NIL)))))
             ("2" (EXPAND "edge_of_polygon?")
              (("2" (INST?)
                (("2" (EXPAND "edges_of_polygon") (("2" (PROPAX) NIL)))))))
             ("3" (USE "vertices_diff_next_nonzero")
              (("3" (GROUND)
                (("3" (REPLACE -1)
                  (("3" (REPLACE -2) (("3" (ASSERT) NIL))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|edge_right_crossing_point_TCC1| 0
  (|edge_right_crossing_point_TCC1-2| |nil| 3874129020
   ("" (THEN (SKEEP* + T) (ASSERT) (SUBTYPE-TCC)) NIL NIL) NIL SHOSTAK
   (|edge_right_crossing_point| SUBTYPE
    "((number_fields.-)(horiz_edge_crossing.e`p2`y, horiz_edge_crossing.e`p1`y))"
    "nznum"))
  (|edge_right_crossing_point_TCC1-1| |nil| 3874127560
   ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|edge_right_crossing_point| SUBTYPE
    "((number_fields.-)(horiz_edge_crossing.e`p2`y, horiz_edge_crossing.e`p1`y))"
    "nznum")))
 (|is_vertex_with_V_edges?_TCC1| 0
  (|is_vertex_with_V_edges?_TCC1-2| |nil| 3874129020
   ("" (THEN (SKEEP* + T) (ASSERT) (SUBTYPE-TCC)) NIL NIL) NIL SHOSTAK
   (|is_vertex_with_V_edges?| SUBTYPE "horiz_edge_crossing.e"
    "{e: segments_2d.segment_2d | (number_fields.-)(e`p2`y, e`p1`y) /= 0}"))
  (|is_vertex_with_V_edges?_TCC1-1| |nil| 3874127560 ("" (SUBTYPE-TCC) NIL NIL)
   NIL NIL
   (|is_vertex_with_V_edges?| SUBTYPE "horiz_edge_crossing.e"
    "{e: segments_2d.segment_2d | (number_fields.-)(e`p2`y, e`p1`y) /= 0}")))
 (|right_crossing_edges_no_V_TCC1| 0
  (|right_crossing_edges_no_V_TCC1-2| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "is_right_point_ray_intersection?")
      (("" (FLATTEN) (("" (EXPAND "y_in_range") (("" (GROUND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|right_crossing_edges_no_V| SUBTYPE "horiz_edge_crossing.e"
    "{e: segments_2d.segment_2d | (number_fields.-)(e`p2`y, e`p1`y) /= 0}"))
  (|right_crossing_edges_no_V_TCC1-1| |nil| 3874127560
   ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|right_crossing_edges_no_V| SUBTYPE "horiz_edge_crossing.e"
    "{e: segments_2d.segment_2d | (number_fields.-)(e`p2`y, e`p1`y) /= 0}")))
 (|right_ray_crossing_x_TCC1| 0
  (|right_ray_crossing_x_TCC1-2| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "is_right_point_ray_intersection?")
      (("" (EXPAND "y_in_range") (("" (GROUND) NIL NIL)) NIL)) NIL))
    NIL)
   NIL SHOSTAK
   (|right_ray_crossing_x| SUBTYPE "horiz_edge_crossing.e"
    "{e: segments_2d.segment_2d | (number_fields.-)(e`p2`y, e`p1`y) /= 0}"))
  (|right_ray_crossing_x_TCC1-1| |nil| 3874127560 ("" (SUBTYPE-TCC) NIL NIL)
   NIL NIL
   (|right_ray_crossing_x| SUBTYPE "horiz_edge_crossing.e"
    "{e: segments_2d.segment_2d | (number_fields.-)(e`p2`y, e`p1`y) /= 0}")))
 (|edge_right_crossing_point_y_eq| 0
  (|edge_right_crossing_point_y_eq-1| |nil| 3874129020
   ("" (SKEEP + T)
    (("" (EXPAND "edge_right_crossing_point")
      (("" (REPLACE -1 :HIDE? T)
        (("" (EXPAND* "+" "*" "-")
          (("" (FACTOR 2 L (2 3))
            (("" (NAME-REPLACE "ee" "e`p2`y - e`p1`y")
              (("" (REAL-PROPS) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|right_crossing_point_on_edge| 0
  (|right_crossing_point_on_edge-1| |nil| 3874129020
   ("" (SKEEP + T)
    (("" (REWRITE "point_on_segment_has_offset")
      (("" (EXPAND "is_right_point_ray_intersection?")
        (("" (FLATTEN)
          (("" (EXPAND "edge_right_crossing_point")
            (("" (EXPAND "y_in_range")
              (("" (INST + "(r`y - e`p1`y) / (e`p2`y - e`p1`y)")
                (("1" (CROSS-MULT 2) (("1" (GROUND) NIL NIL)) NIL)
                 ("2" (CROSS-MULT 1) (("2" (GROUND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|diamond_center_is_inside| 0
  (|diamond_center_is_inside-1| |nil| 3874129020
   ("" (SKOLETIN)
    (("" (EXPAND "point_in_polygon?")
      (("" (GROUND)
        (("1" (EXPAND "point_on_polygon_perimeter?")
          (("1" (SKEEP - T)
            (("1" (EXPAND "edge_of_polygon?")
              (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL)
         ("2"
          (EQUATE "right_crossing_set(ctr, example_diamond)"
           "singleton[real](1)")
          (("1" (REWRITE "card_singleton") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (HIDE 2)
            (("2" (APPLY-EXTENSIONALITY :HIDE? T)
              (("2" (EXPAND "singleton")
                (("2" (EXPAND "right_crossing_set")
                  (("2" (IFF)
                    (("2" (GROUND)
                      (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (REPLACE -1)
                        (("2" (INST + "(1, 0)")
                          (("2" (GROUND)
                            (("1" (EXPAND "point_on_ray?")
                              (("1" (PROPAX) NIL NIL)) NIL)
                             ("2" (EXPAND "counted_crossing?")
                              (("2" (GROUND)
                                (("1" (EXPAND "count_adjacent_edges?")
                                  (("1" (EXPAND "vertex?")
                                    (("1" (SKEEP)
                                      (("1" (INST?)
                                        (("1" (CASE-REPLACE "i = 2")
                                          (("1" (GRIND) NIL NIL)
                                           ("2" (HIDE 2)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (EXPAND "vertex?")
                                    (("2" (INST + "2")
                                      (("1" (GRIND) NIL NIL)
                                       ("2" (EXPAND "example_diamond")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|right_crossing_set| CONST-DECL "finite_set[real]" |horiz_edge_crossing|
     NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|card_singleton| FORMULA-DECL NIL |finite_sets| NIL)
    (|counted_crossing?| CONST-DECL "bool" |horiz_edge_crossing| NIL)
    (|horizontal_segment?| CONST-DECL "bool" |horiz_edge_crossing| NIL)
    (|count_adjacent_edges?| CONST-DECL "bool" |horiz_edge_crossing| NIL)
    (|prev_index| CONST-DECL "below(p`num_vertices)" |polygons_2d| NIL)
    (|vertex?| CONST-DECL "pred[point_2d]" |polygons_2d| NIL)
    (|point_on_ray?| CONST-DECL "bool" |horiz_edge_crossing| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|p| SKOLEM-CONST-DECL "point_2d" |horiz_edge_crossing| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|segment_2d| TYPE-EQ-DECL NIL |segments_2d| |line_segments|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|plus_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|odd_plus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|minus_u8_u8| APPLICATION-JUDGEMENT "int16" |integertypes| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_i16_u16| APPLICATION-JUDGEMENT "int32" |integertypes| NIL)
    (|minus_i32_u32| APPLICATION-JUDGEMENT "int64" |integertypes| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|point_on_polygon_perimeter?| CONST-DECL "bool" |polygons_2d| NIL)
    (|edge_of_polygon?| CONST-DECL "pred[segment_2d]" |polygons_2d| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|point_on_segment?| CONST-DECL "bool" |segments_2d| |line_segments|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|edges_of_polygon| CONST-DECL
     "[below(polygon`num_vertices) -> segment_2d]" |polygons_2d| NIL)
    (|next_index| CONST-DECL "below(p`num_vertices)" |polygons_2d| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|point_2d| TYPE-EQ-DECL NIL |vectors_cross_2d| |line_segments|)
    (|upfrom| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|uniq_vertex_list| NONEMPTY-TYPE-EQ-DECL NIL |vertex_list|
     |line_segments|)
    (|polygon_2d| NONEMPTY-TYPE-EQ-DECL NIL |polygons_2d| NIL)
    (|simple_polygon_2d?| CONST-DECL "bool" |polygons_2d| NIL)
    (|simple_polygon_2d| NONEMPTY-TYPE-EQ-DECL NIL |polygons_2d| NIL)
    (|point_in_polygon?| CONST-DECL "bool" |horiz_edge_crossing| NIL)
    (|example_diamond| CONST-DECL "simple_polygon_2d" |polygons_2d| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|exp2| DEF-DECL "posnat" |exp2| NIL)
    (|uint8| TYPE-EQ-DECL NIL |integertypes| NIL)
    (|even?| CONST-DECL "bool" |integers| NIL)
    (|even_uint8| TYPE-EQ-DECL NIL |integertypes| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|odd_rt_xing_edges_card_eqv_point_in_polygon_rec| 0
  (|odd_rt_xing_edges_card_eqv_point_in_polygon_rec-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (GENERALIZE "n" "n" "below(G`num_vertices)")
      (("" (INDUCT "n" :NAME "backward_below_induction[G`num_vertices]")
        (("1" (FLATTEN)
          (("1"
            (CASE-REPLACE
             "right_crossing_edges_from_n(p, G, G`num_vertices - 1) =
      emptyset")
            (("1" (REWRITE "card_emptyset")
              (("1" (EXPAND "odd?") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
             ("2" (HIDE -)
              (("2" (REWRITE "emptyset_is_empty?" :DIR RL)
                (("2" (EXPAND "empty?")
                  (("2" (SKEEP)
                    (("2" (EXPAND "member")
                      (("2" (EXPAND "right_crossing_edges_from_n")
                        (("2" (EXPAND "is_point_in_polygon_recursive?")
                          (("2" (GROUND)
                            (("2" (EXPAND "XOR") (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "is_point_in_polygon_recursive?")
            (("2" (EXPAND "XOR")
              (("2" (GROUND)
                (("2"
                  (EQUATE
                   "right_crossing_edges_from_n(p, G, G`num_vertices - 1)"
                   "singleton[below(G`num_vertices)](G`num_vertices - 1)")
                  (("1" (REWRITE "card_singleton") (("1" (ASSERT) NIL NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                      (("2" (EXPAND "singleton")
                        (("2" (EXPAND "right_crossing_edges_from_n")
                          (("2" (EQUATE "x!1" "G`num_vertices - 1" (ASSERT))
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (SPLIT 1)
            (("1" (FLATTEN)
              (("1" (EXPAND "is_point_in_polygon_recursive?" +)
                (("1"
                  (CASE
                      "is_right_point_ray_intersection? (p, edges_of_polygon(G)(i))")
                  (("1" (ASSERT)
                    (("1" (EXPAND "XOR")
                      (("1" (USE "is_point_in_polygon_recursive_negation")
                        (("1" (ASSERT)
                          (("1" (HIDE -1 -4 +)
                            (("1"
                              (CASE-REPLACE
                               "right_crossing_edges_from_n(p, G, i) =
  add(i, right_crossing_edges_from_n(p, G, 1+i))")
                              (("1" (REWRITE "card_add")
                                (("1" (LIFT-IF)
                                  (("1" (GROUND)
                                    (("1"
                                      (EXPAND "right_crossing_edges_from_n" -1)
                                      (("1" (PROPAX) NIL NIL)) NIL)
                                     ("2" (REWRITE "odd_plus1" :DIR RL) NIL
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE -)
                                (("2" (EXPAND "right_crossing_edges_from_n")
                                  (("2" (EXPAND "add")
                                    (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                                      (("2" (IFF) (("2" (GROUND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (EXPAND "XOR")
                      (("2" (ASSERT)
                        (("2"
                          (EQUATE "right_crossing_edges_from_n(p, G, i)"
                           "right_crossing_edges_from_n(p, G, 1 + i)")
                          (("2" (HIDE-ALL-BUT (1 2))
                            (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                              (("2" (EXPAND "right_crossing_edges_from_n")
                                (("2" (IFF) (("2" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2" (EXPAND "is_point_in_polygon_recursive?" -1)
                (("2"
                  (CASE
                      "is_right_point_ray_intersection? (p, edges_of_polygon(G)(i))")
                  (("1" (ASSERT)
                    (("1" (EXPAND "XOR")
                      (("1" (USE "is_point_in_polygon_recursive_negation")
                        (("1" (ASSERT)
                          (("1"
                            (CASE-REPLACE
                             "right_crossing_edges_from_n(p, G, i) =
          add(i, right_crossing_edges_from_n(p, G, 1+i))")
                            (("1" (REWRITE "card_add")
                              (("1" (LIFT-IF)
                                (("1" (GROUND)
                                  (("1"
                                    (EXPAND "right_crossing_edges_from_n" -1)
                                    (("1" (PROPAX) NIL NIL)) NIL)
                                   ("2" (REWRITE "odd_plus1" 3) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT (-2 1))
                              (("2" (EXPAND "right_crossing_edges_from_n")
                                (("2" (EXPAND "add")
                                  (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                                    (("2" (IFF) (("2" (GROUND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (EXPAND "XOR")
                      (("2" (ASSERT)
                        (("2" (HIDE -2)
                          (("2"
                            (EQUATE "right_crossing_edges_from_n(p, G, i)"
                             "right_crossing_edges_from_n(p, G, 1 + i)")
                            (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                              (("2" (HIDE-ALL-BUT (1 2))
                                (("2" (EXPAND "right_crossing_edges_from_n")
                                  (("2" (IFF) (("2" (GROUND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|even_card_purged_V_edges| 0
  (|even_card_purged_V_edges-1| |nil| 3874129020
   ("" (SKEEP)
    ((""
      (NAME "A"
            "{j: below(G`num_vertices) | is_vertex_with_V_edges?(p, G, j)}")
      ((""
        (NAME "B" "{j: below(G`num_vertices) |
                         is_vertex_with_V_edges?(p, G, next_index(G, j))}")
        (("" (CASE "card(A) = card(B)")
          (("1" (LEMMA "card_disj_union[below(G`num_vertices)]")
            (("1" (INST - "A" "B")
              (("1" (GROUND)
                (("1" (CASE-REPLACE "purged_V_edges(p, G) = union(A, B)")
                  (("1" (REPLACE -2)
                    (("1" (REPLACE -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                   ("2" (HIDE-ALL-BUT 1)
                    (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                      (("2" (EXPAND* "A" "B")
                        (("2" (EXPAND "union")
                          (("2" (EXPAND "member")
                            (("2" (EXPAND "purged_V_edges")
                              (("2" (IFF)
                                (("2" (GROUND)
                                  (("1" (SKEEP)
                                    (("1" (GROUND)
                                      (("1" (REPLACE -1)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (INST?) NIL NIL)
                                   ("3" (INST?) (("3" (GROUND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 2)
                  (("2" (REPLACE -1 :DIR RL :HIDE? T)
                    (("2" (REPLACE -1 :DIR RL :HIDE? T)
                      (("2" (EXPAND "disjoint?")
                        (("2" (EXPAND "empty?")
                          (("2" (SKEEP)
                            (("2" (EXPAND "member")
                              (("2" (EXPAND "intersection")
                                (("2" (EXPAND "member")
                                  (("2" (FLATTEN)
                                    (("2" (EXPAND "is_vertex_with_V_edges?")
                                      (("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND "edges_of_polygon")
                                            (("2" (GROUND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (REWRITE "card_eq_bij")
            (("2" (INST + "lambda (i: (A)): prev_index(G, i)")
              (("1" (EXPAND "bijective?")
                (("1" (GROUND)
                  (("1" (EXPAND "injective?")
                    (("1" (SKEEP)
                      (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "surjective?")
                    (("2" (SKEEP)
                      (("2" (INST + "next_index(G, y)")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (REPLACE -2 :DIR RL)
                          (("2" (ASSERT)
                            (("2" (DECOMPOSE-EQUALITY -1)
                              (("2" (INST - "y") (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (EXPAND "B" +)
                  (("2" (ASSERT)
                    (("2" (DECOMPOSE-EQUALITY -2)
                      (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|subset_purged_V_right_crossing_edges_TCC1| 0
  (|subset_purged_V_right_crossing_edges_TCC1-2| |nil| 3874129020
   ("" (THEN (SKEEP* + T) (ASSERT) (SUBTYPE-TCC)) NIL NIL) NIL SHOSTAK
   (|subset_purged_V_right_crossing_edges| SUBTYPE "0"
    "below(horiz_edge_crossing.G`num_vertices)"))
  (|subset_purged_V_right_crossing_edges_TCC1-1| |nil| 3874127560
   ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|subset_purged_V_right_crossing_edges| SUBTYPE "0"
    "below(horiz_edge_crossing.G`num_vertices)")))
 (|subset_purged_V_right_crossing_edges| 0
  (|subset_purged_V_right_crossing_edges-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "subset?")
      (("" (SKEEP)
        (("" (EXPAND "member")
          (("" (EXPAND "purged_V_edges")
            (("" (EXPAND "right_crossing_edges_from_n")
              (("" (SKEEP)
                (("" (EXPAND "is_vertex_with_V_edges?") (("" (GROUND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|no_V_edges_eq_crossing_edges_sans_purged| 0
  (|no_V_edges_eq_crossing_edges_sans_purged-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "difference")
      (("" (APPLY-EXTENSIONALITY :HIDE? T)
        (("" (EXPAND "right_crossing_edges_no_V")
          (("" (EXPAND "right_crossing_edges_from_n")
            (("" (EXPAND "purged_V_edges")
              (("" (IFF)
                (("" (GROUND)
                  (("1" (SKEEP*) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (SKEEP*)
                    (("2" (EXPAND "is_vertex_with_V_edges?")
                      (("2" (FLATTEN)
                        (("2" (EXPAND "edges_of_polygon" (-2 -3))
                          (("2" (SPLIT -10)
                            (("1" (EXPAND "count_adjacent_edges?")
                              (("1" (SKEEP)
                                (("1" (EXPAND "edges_of_polygon" -6 1)
                                  (("1" (LEMMA "right_crossing_point_on_edge")
                                    (("1" (SPLIT -4)
                                      (("1" (REPLACE -1)
                                        (("1" (INST - "p" "G" "e")
                                          (("1" (ASSERT)
                                            (("1"
                                              (LEMMA
                                               "vertex_is_segment_endpoint")
                                              (("1" (INST - "q" "G" "e")
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT -1)
                                                    (("1"
                                                      (CASE-REPLACE "i!1 = i")
                                                      (("1" (GROUND) NIL NIL)
                                                       ("2" (REPLACE -11 -1)
                                                        (("2"
                                                          (EXPAND
                                                           "edges_of_polygon"
                                                           -1)
                                                          (("2"
                                                            (TYPEPRED
                                                             "G`vertices")
                                                            (("2"
                                                              (EXPAND
                                                               "uniq_vertex_list?")
                                                              (("2"
                                                                (INST - "i!1"
                                                                 "i")
                                                                (("1" (GROUND)
                                                                  NIL NIL)
                                                                 ("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (REPLACE -11 -1)
                                                      (("2"
                                                        (EXPAND
                                                         "edges_of_polygon" -1)
                                                        (("2"
                                                          (CASE-REPLACE
                                                           "i!1 = next_index(G, i)")
                                                          (("1" (GROUND) NIL
                                                            NIL)
                                                           ("2"
                                                            (TYPEPRED
                                                             "G`vertices")
                                                            (("2"
                                                              (EXPAND
                                                               "uniq_vertex_list?")
                                                              (("2"
                                                                (INST -
                                                                 "next_index(G, i)"
                                                                 "i!1")
                                                                (("2" (GROUND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("3" (EXPAND "vertex?")
                                                      (("3" (INST + "i!1")
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -10 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (REPLACE -9 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -1)
                                        (("2" (INST - "p" "G" "e")
                                          (("1" (ASSERT)
                                            (("1"
                                              (LEMMA
                                               "vertex_is_segment_endpoint")
                                              (("1" (INST - "q" "G" "e")
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT -1)
                                                    (("1"
                                                      (CASE-REPLACE
                                                       "i!1 = prev_index(G, i)")
                                                      (("1" (GROUND)
                                                        (("1"
                                                          (EXPAND
                                                           "is_right_point_ray_intersection?")
                                                          (("1" (FLATTEN)
                                                            (("1"
                                                              (EXPAND
                                                               "edges_of_polygon")
                                                              (("1"
                                                                (EXPAND
                                                                 "y_in_range")
                                                                (("1" (GROUND)
                                                                  (("1"
                                                                    (USE
                                                                     "edge_right_crossing_point_y_eq")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (REPLACE -11 -1)
                                                        (("2"
                                                          (EXPAND
                                                           "edges_of_polygon"
                                                           -1)
                                                          (("2"
                                                            (TYPEPRED
                                                             "G`vertices")
                                                            (("2"
                                                              (EXPAND
                                                               "uniq_vertex_list?")
                                                              (("2"
                                                                (INST -
                                                                 "prev_index(G, i)"
                                                                 "i!1")
                                                                (("1" (GROUND)
                                                                  NIL NIL)
                                                                 ("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (REPLACE -11 -1)
                                                      (("2"
                                                        (EXPAND
                                                         "edges_of_polygon" -1)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (CASE-REPLACE
                                                             "i!1 = i")
                                                            (("1" (GROUND) NIL
                                                              NIL)
                                                             ("2"
                                                              (TYPEPRED
                                                               "G`vertices")
                                                              (("2"
                                                                (EXPAND
                                                                 "uniq_vertex_list?")
                                                                (("2"
                                                                  (INST - "i"
                                                                   "i!1")
                                                                  (("1"
                                                                    (GROUND)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("3" (EXPAND "vertex?")
                                                      (("3" (INST + "i!1")
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -10 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (REPLACE -9 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (EXPAND "segment_endpoint?")
                              (("2" (FLATTEN)
                                (("2" (GROUND)
                                  (("2" (REPLACE -1)
                                    (("2" (EXPAND "edges_of_polygon" -4 1)
                                      (("2"
                                        (LEMMA "right_crossing_point_on_edge")
                                        (("2" (INST - "p" "G" "e")
                                          (("1" (ASSERT)
                                            (("1"
                                              (CASE "q`y = G`vertices(i)`y")
                                              (("1" (REPLACE -11 :DIR RL)
                                                (("1"
                                                  (REWRITE
                                                   "point_on_segment_has_offset")
                                                  (("1" (SKEEP)
                                                    (("1"
                                                      (CASE-REPLACE "d = 0")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2"
                                                        (CASE-REPLACE "d = 1")
                                                        (("1"
                                                          (CASE
                                                              "q = G`vertices(i)")
                                                          (("1"
                                                            (EXPAND
                                                             "edges_of_polygon")
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (HIDE-ALL-BUT
                                                             (-3 -11 1))
                                                            (("2"
                                                              (REPLACE -2 -1)
                                                              (("2"
                                                                (REPLACE -1 1)
                                                                (("2" (HIDE -)
                                                                  (("2"
                                                                    (GRIND-WITH-EXT)
                                                                    (("2"
                                                                      (APPLY-EXTENSIONALITY
                                                                       2 :HIDE?
                                                                       T)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (REPLACE -10 -2)
                                                          (("2"
                                                            (EXPAND
                                                             "edges_of_polygon"
                                                             -2)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (REPLACE -2 -1)
                                                                (("2"
                                                                  (HIDE-ALL-BUT
                                                                   (-1 +))
                                                                  (("2"
                                                                    (EXPAND*
                                                                     "+" "*"
                                                                     "-")
                                                                    (("2"
                                                                      (MOVE-TERMS
                                                                       -1 L 2)
                                                                      (("2"
                                                                        (FACTOR
                                                                         -1)
                                                                        (("2"
                                                                          (CANCEL-BY
                                                                           -1
                                                                           "1 - d")
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (LEMMA
                                                 "edge_right_crossing_point_y_eq")
                                                (("2" (INST-CP - "q" "p" "e")
                                                  (("2"
                                                    (INST - "G`vertices(i)" "p"
                                                     "edges_of_polygon(G)(i)")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (REPLACE -7 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (EXPAND "is_right_point_ray_intersection?")
                    (("3" (FLATTEN)
                      (("3" (EXPAND "edges_of_polygon" -)
                        (("3" (INST-CP + "x!1")
                          (("3" (INST + "next_index(G, x!1)")
                            (("3" (ASSERT)
                              (("3"
                                (INST + "edges_of_polygon(G)(x!1)"
                                 "edge_right_crossing_point(p, edges_of_polygon(G)(x!1))")
                                (("1" (GROUND)
                                  (("1" (EXPAND "edges_of_polygon")
                                    (("1" (PROPAX) NIL NIL)) NIL)
                                   ("2" (EXPAND "edges_of_polygon")
                                    (("2" (PROPAX) NIL NIL)) NIL)
                                   ("3"
                                    (NAME-REPLACE "xp"
                                     "edge_right_crossing_point(p, edges_of_polygon(G)(x!1))"
                                     :HIDE? NIL)
                                    (("3"
                                      (LEMMA "right_crossing_point_on_edge")
                                      (("3"
                                        (INST - "p" "G"
                                         "edges_of_polygon(G)(x!1)")
                                        (("3" (SPLIT)
                                          (("1" (REPLACE -2)
                                            (("1" (EXPAND "segment_endpoint?")
                                              (("1"
                                                (EXPAND "edges_of_polygon" -3)
                                                (("1" (SPLIT)
                                                  (("1" (REPLACE -1)
                                                    (("1"
                                                      (EXPAND
                                                       "count_adjacent_edges?")
                                                      (("1" (INST + "x!1")
                                                        (("1" (FLATTEN)
                                                          (("1"
                                                            (EXPAND
                                                             "y_in_range")
                                                            (("1"
                                                              (USE
                                                               "edge_right_crossing_point_y_eq")
                                                              (("1" (ASSERT)
                                                                (("1" (GROUND)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "is_vertex_with_V_edges?"
                                                                     4)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "edges_of_polygon")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "is_right_point_ray_intersection?")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "y_in_range")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "x_in_range")
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -2
                                                                                 :DIR
                                                                                 RL)
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (REAL-PROPS)
                                                                                    (("1"
                                                                                      (CANCEL-ADD
                                                                                       4)
                                                                                      (("1"
                                                                                        (FACTOR
                                                                                         4)
                                                                                        (("1"
                                                                                          (CANCEL-BY
                                                                                           4
                                                                                           "p`y - G`vertices(prev_index(G, x!1))`y")
                                                                                          (("1"
                                                                                            (MOVE-TERMS
                                                                                             -6
                                                                                             L
                                                                                             (2
                                                                                              3))
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (FACTOR
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (CANCEL-BY
                                                                                                   -6
                                                                                                   "G`vertices(next_index(G, x!1))`y - p`y")
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (REPLACE -1)
                                                    (("2"
                                                      (EXPAND
                                                       "count_adjacent_edges?")
                                                      (("2"
                                                        (INST +
                                                         "next_index(G, x!1)")
                                                        (("2" (FLATTEN)
                                                          (("2"
                                                            (EXPAND
                                                             "y_in_range")
                                                            (("2"
                                                              (USE
                                                               "edge_right_crossing_point_y_eq")
                                                              (("2" (ASSERT)
                                                                (("2" (GROUND)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "is_vertex_with_V_edges?"
                                                                     3)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "edges_of_polygon")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "is_right_point_ray_intersection?")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "y_in_range")
                                                                            (("2"
                                                                              (SPLIT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "edge_right_crossing_point")
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -2
                                                                                   -1)
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     :DIR
                                                                                     RL)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (EXPAND
                                                                                 "x_in_range")
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   -2
                                                                                   :DIR
                                                                                   RL)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("2"
                                                                                      (REAL-PROPS)
                                                                                      (("2"
                                                                                        (CANCEL-ADD
                                                                                         -6)
                                                                                        (("2"
                                                                                          (MOVE-TERMS
                                                                                           1
                                                                                           L
                                                                                           (2
                                                                                            3))
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (FACTOR
                                                                                               1)
                                                                                              (("2"
                                                                                                (CANCEL-BY
                                                                                                 1
                                                                                                 "G`vertices(next_index(G, next_index(G, x!1)))`y - p`y")
                                                                                                (("2"
                                                                                                  (EQUATE
                                                                                                   "p`y * G`vertices(x!1)`x"
                                                                                                   "G`vertices(x!1)`x * p`y"
                                                                                                   (ASSERT))
                                                                                                  (("2"
                                                                                                    (CANCEL-ADD
                                                                                                     -7)
                                                                                                    (("2"
                                                                                                      (FACTOR
                                                                                                       -7)
                                                                                                      (("2"
                                                                                                        (CANCEL-BY
                                                                                                         -7
                                                                                                         "p`y - G`vertices(x!1)`y")
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (EXPAND
                                             "is_right_point_ray_intersection?")
                                            (("2" (EXPAND "edges_of_polygon")
                                              (("2" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "edges_of_polygon")
                                  (("2" (EXPAND "y_in_range")
                                    (("2" (GROUND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|card_xing_edges_from_n_and_no_V_both_odd| 0
  (|card_xing_edges_from_n_and_no_V_both_odd-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (REWRITE "no_V_edges_eq_crossing_edges_sans_purged")
      (("" (REWRITE "card_diff_subset")
        (("1" (USE "even_card_purged_V_edges")
          (("1" (GROUND)
            (("1" (LEMMA "odd_minus_even_is_odd") (("1" (INST?) NIL NIL)) NIL)
             ("2" (LEMMA "even_minus_even_is_even")
              (("2" (INST?)
                (("1" (REWRITE "even_iff_not_odd") NIL NIL)
                 ("2" (REWRITE "even_iff_not_odd") NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (USE "subset_purged_V_right_crossing_edges") NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|card_rt_xing_edges_eq_card_rt_xing_x| 0
  (|card_rt_xing_edges_eq_card_rt_xing_x-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (REWRITE "card_eq_bij")
      ((""
        (INST + "lambda (j: (right_crossing_edges_no_V(p, G))):
                     let e = edges_of_polygon(G)(j) in
             	(e`p1 + (p`y - e`p1`y) / (e`p2`y - e`p1`y) * (e`p2 - e`p1))`x")
        (("1" (EXPAND "bijective?")
          (("1" (GROUND)
            (("1" (EXPAND "injective?")
              (("1" (SKEEP + T)
                (("1" (EXPAND "right_crossing_edges_no_V")
                  (("1" (SKEEP*)
                    (("1" (LEMMA "edge_right_crossing_point_y_eq")
                      (("1" (INST-CP - "q" "p" "e")
                        (("1" (INST - "q!1" "p" "e!1")
                          (("1" (ASSERT)
                            (("1" (REPLACE -4 :DIR RL)
                              (("1" (REPLACE -9 :DIR RL)
                                (("1" (LEMMA "right_crossing_point_on_edge")
                                  (("1" (INST-CP - "p" "G" "e")
                                    (("1" (INST - "p" "G" "e!1")
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -8 :DIR RL)
                                          (("1" (REPLACE -13 :DIR RL)
                                            (("1"
                                              (EXPAND
                                               "is_right_point_ray_intersection?")
                                              (("1" (FLATTEN)
                                                (("1" (CASE "q = q!1")
                                                  (("1" (TYPEPRED "G")
                                                    (("1"
                                                      (EXPAND
                                                       "simple_polygon_2d?")
                                                      (("1"
                                                        (EXPAND
                                                         "polygon_edges_do_not_cross?")
                                                        (("1"
                                                          (INST-CP - "x1" "x2")
                                                          (("1"
                                                            (INST - "x2" "x1")
                                                            (("1"
                                                              (CASE
                                                                  "is_point_on_segment?(edges_of_polygon(G)(x1))(q) &
                                                                             is_point_on_segment?(edges_of_polygon(G)(x2))(q!1)")
                                                              (("1" (FLATTEN)
                                                                (("1"
                                                                  (INST - "q")
                                                                  (("1"
                                                                    (INST -
                                                                     "q!1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -11
                                                                         :DIR
                                                                         RL)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -17
                                                                           :DIR
                                                                           RL)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "segment_endpoint?")
                                                                            (("1"
                                                                              (REPLACE
                                                                               -5
                                                                               :DIR
                                                                               RL)
                                                                              (("1"
                                                                                (SPLIT
                                                                                 -15)
                                                                                (("1"
                                                                                  (SPLIT
                                                                                   -21)
                                                                                  (("1"
                                                                                    (HIDE
                                                                                     -1)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "count_adjacent_edges?")
                                                                                      (("1"
                                                                                        (SKEEP)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "y_in_range")
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -13)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -18)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "edges_of_polygon")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (TYPEPRED
                                                                                                     "G`vertices")
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "uniq_vertex_list?")
                                                                                                      (("1"
                                                                                                        (CASE
                                                                                                            "i = x1 or i = x2 or i = next_index(G, x1) or i = next_index(G, x2)")
                                                                                                        (("1"
                                                                                                          (SPLIT
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (INST-CP
                                                                                                             -
                                                                                                             "x1"
                                                                                                             "x2")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (INST
                                                                                                                 -
                                                                                                                 "i"
                                                                                                                 "next_index(G, x2)")
                                                                                                                (("1"
                                                                                                                  (GROUND)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (FLATTEN)
                                                                                                                  (("2"
                                                                                                                    (REPLACE
                                                                                                                     -1
                                                                                                                     :DIR
                                                                                                                     RL)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (INST-CP
                                                                                                             -
                                                                                                             "x1"
                                                                                                             "x2")
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (INST
                                                                                                                 -
                                                                                                                 "i"
                                                                                                                 "next_index(G, x1)")
                                                                                                                (("1"
                                                                                                                  (GROUND)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (GROUND)
                                                                                                                  (("2"
                                                                                                                    (REPLACE
                                                                                                                     -3
                                                                                                                     :DIR
                                                                                                                     RL)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("3"
                                                                                                            (REPLACE
                                                                                                             -1)
                                                                                                            (("3"
                                                                                                              (ASSERT)
                                                                                                              (("3"
                                                                                                                (SPLIT
                                                                                                                 -7)
                                                                                                                (("1"
                                                                                                                  (CASE-REPLACE
                                                                                                                   "x2 = next_index(G, x1)")
                                                                                                                  (("1"
                                                                                                                    (GROUND)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (INST
                                                                                                                     -
                                                                                                                     "next_index(G, x1)"
                                                                                                                     "x2")
                                                                                                                    (("1"
                                                                                                                      (GROUND)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (INST
                                                                                                                   -
                                                                                                                   "next_index(G, x1)"
                                                                                                                   "next_index(G, x2)")
                                                                                                                  (("1"
                                                                                                                    (GROUND)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (HIDE-ALL-BUT
                                                                                                                     +)
                                                                                                                    (("2"
                                                                                                                      (GRIND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("4"
                                                                                                            (REPLACE
                                                                                                             -1)
                                                                                                            (("4"
                                                                                                              (ASSERT)
                                                                                                              (("4"
                                                                                                                (SPLIT
                                                                                                                 -8)
                                                                                                                (("1"
                                                                                                                  (CASE-REPLACE
                                                                                                                   "x1 = next_index(G, x2)")
                                                                                                                  (("1"
                                                                                                                    (GROUND)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (INST
                                                                                                                     -
                                                                                                                     "x1"
                                                                                                                     "next_index(G, x2)")
                                                                                                                    (("1"
                                                                                                                      (GROUND)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (GROUND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (INST
                                                                                                                   -
                                                                                                                   "next_index(G, x1)"
                                                                                                                   "next_index(G, x2)")
                                                                                                                  (("1"
                                                                                                                    (GROUND)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (HIDE-ALL-BUT
                                                                                                                     +)
                                                                                                                    (("2"
                                                                                                                      (GRIND)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (INST-CP
                                                                                                             -
                                                                                                             "i"
                                                                                                             "x1")
                                                                                                            (("1"
                                                                                                              (INST-CP
                                                                                                               -
                                                                                                               "i"
                                                                                                               "x2")
                                                                                                              (("1"
                                                                                                                (INST-CP
                                                                                                                 -
                                                                                                                 "i"
                                                                                                                 "next_index(G, x2)")
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -
                                                                                                                   "i"
                                                                                                                   "next_index(G, x1)")
                                                                                                                  (("1"
                                                                                                                    (GROUND)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (REPLACE -9 1)
                                                    (("2" (REPLACE -15 1)
                                                      (("2"
                                                        (EXPAND
                                                         "edge_right_crossing_point")
                                                        (("2"
                                                          (NAME-REPLACE "a"
                                                           "(p`y - e`p1`y) / (e`p2`y - e`p1`y)")
                                                          (("2"
                                                            (NAME-REPLACE "b"
                                                             "(p`y - e!1`p1`y) / (e!1`p2`y - e!1`p1`y)")
                                                            (("2"
                                                              (EXPAND* "+" "*"
                                                               "-" +)
                                                              (("2" (SPLIT 1)
                                                                (("1" (PROPAX)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (FACTOR 1 L
                                                                   (2 3))
                                                                  (("2"
                                                                    (EXPAND "a"
                                                                            :ASSERT?
                                                                            NONE)
                                                                    (("2"
                                                                      (NAME-REPLACE
                                                                       "ee"
                                                                       "e`p2`y - e`p1`y")
                                                                      (("2"
                                                                        (REAL-PROPS)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -10)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("2" (REPLACE -4) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "surjective?")
              (("2" (SKEEP + T)
                (("2" (EXPAND "right_ray_crossing_x")
                  (("2" (EXPAND "edge_right_crossing_point")
                    (("2" (SKEEP)
                      (("2" (INST + "j")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "right_crossing_edges_no_V")
                          (("2" (INST + "e" "q")
                            (("2" (EXPAND "edge_right_crossing_point")
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP + T)
          (("2" (EXPAND "right_ray_crossing_x")
            (("2" (EXPAND "right_crossing_edges_no_V")
              (("2" (SKEEP)
                (("2" (EXPAND "edge_right_crossing_point")
                  (("2" (INST + "j" "e!1" "q") (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (TYPEPRED "j")
            (("3" (EXPAND "right_crossing_edges_no_V")
              (("3" (SKEEP)
                (("3" (EXPAND "edge_right_crossing_point")
                  (("3" (REPLACE -6 :DIR RL)
                    (("3" (EXPAND "is_right_point_ray_intersection?")
                      (("3" (FLATTEN)
                        (("3" (EXPAND "y_in_range") (("3" (GROUND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|right_crossing_x_eq_rt_crossing_set| 0
  (|right_crossing_x_eq_rt_crossing_set-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (EXPAND "right_crossing_set")
        (("" (EXPAND "right_ray_crossing_x")
          (("" (EXPAND "edge_right_crossing_point")
            (("" (IFF)
              (("" (GROUND)
                (("1" (SKEEP)
                  (("1" (INST?)
                    (("1" (ASSERT)
                      (("1" (EXPAND "is_right_point_ray_intersection?")
                        (("1" (FLATTEN)
                          (("1" (EXPAND "y_in_range")
                            (("1" (EXPAND "x_in_range")
                              (("1" (REPLACE -1 :DIR RL)
                                (("1" (EXPAND "point_on_ray?")
                                  (("1" (EXPAND "counted_crossing?")
                                    (("1" (SPLIT 1 :DEPTH 1)
                                      (("1" (REPLACE -5 +)
                                        (("1" (HIDE -5 -6)
                                          (("1" (SPLIT +)
                                            (("1" (EXPAND "+")
                                              (("1" (MOVE-TERMS 1 R 1)
                                                (("1" (EXPAND "*")
                                                  (("1" (CROSS-MULT 1)
                                                    (("1" (EXPAND "-")
                                                      (("1" (GROUND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (EXPAND "+" 1)
                                              (("2" (MOVE-TERMS 1 R 1)
                                                (("2" (EXPAND "*" 1)
                                                  (("2" (CROSS-MULT 1)
                                                    (("2" (EXPAND "-" 1)
                                                      (("2" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SPLIT 1)
                                        (("1" (FLATTEN)
                                          (("1" (SPLIT -7)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2"
                                              (USE
                                               "vertex_is_segment_endpoint")
                                              (("1"
                                                (EXPAND "segment_endpoint?")
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT)
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2" (ASSERT) NIL NIL)
                                                     ("3"
                                                      (LEMMA
                                                       "right_crossing_point_on_edge")
                                                      (("3"
                                                        (INST - "p" "G" "e")
                                                        (("1" (SPLIT -1)
                                                          (("1"
                                                            (EQUATE
                                                             "edge_right_crossing_point(p, e)"
                                                             "q")
                                                            (("1"
                                                              (EXPAND
                                                               "edge_right_crossing_point")
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (EXPAND
                                                             "is_right_point_ray_intersection?")
                                                            (("2"
                                                              (EXPAND
                                                               "y_in_range")
                                                              (("2"
                                                                (EXPAND
                                                                 "x_in_range")
                                                                (("2" (GROUND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (SPLIT 1)
                                                            (("1" (REPLACE -2)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2" (GROUND) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (REPLACE -2)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (INST?)
                                            (("1"
                                              (EXPAND "horizontal_segment?")
                                              (("1" (SPLIT 2)
                                                (("1"
                                                  (REWRITE
                                                   "point_on_segment_has_offset")
                                                  (("1" (INST?)
                                                    (("1" (ASSERT)
                                                      (("1" (CROSS-MULT 1)
                                                        (("1" (GROUND) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (CROSS-MULT 1)
                                                      (("2" (GROUND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (GROUND) NIL NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REPLACE -1 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKEEP)
                  (("2" (EXPAND "counted_crossing?")
                    (("2" (EXPAND "point_on_ray?")
                      (("2" (GROUND)
                        (("1" (COPY -2)
                          (("1" (EXPAND "count_adjacent_edges?" -1)
                            (("1" (SKEEP)
                              (("1" (GROUND)
                                (("1"
                                  (INST + "prev_index(G, i)"
                                   "edges_of_polygon(G)(prev_index(G, i))"
                                   "p_1")
                                  (("1" (ASSERT)
                                    (("1" (SPLIT)
                                      (("1"
                                        (EXPAND
                                         "is_right_point_ray_intersection?")
                                        (("1" (EXPAND "edges_of_polygon")
                                          (("1" (ASSERT)
                                            (("1" (GROUND)
                                              (("1" (EXPAND "y_in_range")
                                                (("1" (PROPAX) NIL NIL)) NIL)
                                               ("2" (EXPAND "x_in_range")
                                                (("2" (CANCEL-ADD 1)
                                                  (("2" (REPLACE -3 :DIR RL)
                                                    (("2" (REPLACE -8 :DIR RL)
                                                      (("2"
                                                        (NAME-REPLACE "prev"
                                                         "G`vertices(prev_index(G, i))")
                                                        (("2" (ELIM-UNARY 1)
                                                          (("2" (CANCEL-ADD 1)
                                                            (("2" (FACTOR 1)
                                                              (("2"
                                                                (CANCEL-BY 1
                                                                 "p`y - prev`y")
                                                                (("2"
                                                                  (CASE
                                                                      "p`x = p_1`x")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "point_on_polygon_perimeter?")
                                                                    (("1"
                                                                      (INST +
                                                                       "edges_of_polygon(G)(i)")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "point_on_segment?")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "edges_of_polygon")
                                                                          (("1"
                                                                            (INST
                                                                             +
                                                                             "0")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY-EXTENSIONALITY
                                                                                 4
                                                                                 :HIDE?
                                                                                 T)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (EXPAND "edges_of_polygon")
                                        (("2" (ASSERT)
                                          (("2" (REPLACE -3 :DIR RL)
                                            (("2" (REPLACE -8 :DIR RL)
                                              (("2" (REAL-PROPS)
                                                (("2" (HIDE-ALL-BUT 1)
                                                  (("2" (MOVE-TERMS 1 R 1) NIL
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2"
                                  (INST + "i" "edges_of_polygon(G)(i)" "p_1")
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "edges_of_polygon")
                                      (("2" (REPLACE -3 :DIR RL)
                                        (("2" (GROUND)
                                          (("1"
                                            (EXPAND
                                             "is_right_point_ray_intersection?")
                                            (("1" (GROUND)
                                              (("1" (EXPAND "y_in_range")
                                                (("1" (PROPAX) NIL NIL)) NIL)
                                               ("2" (EXPAND "x_in_range")
                                                (("2" (CANCEL-ADD 1)
                                                  (("2"
                                                    (NAME-REPLACE "next"
                                                     "G`vertices(next_index(G, i))")
                                                    (("2" (REPLACE -8 :DIR RL)
                                                      (("2" (MOVE-TERMS 1 L 3)
                                                        (("2" (ASSERT)
                                                          (("2" (FACTOR 1)
                                                            (("2"
                                                              (CANCEL-BY 1
                                                               "p`x - p_1`x")
                                                              (("2"
                                                                (EXPAND
                                                                 "point_on_polygon_perimeter?")
                                                                (("2"
                                                                  (INST +
                                                                   "edges_of_polygon(G)(i)")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "point_on_segment?")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "edges_of_polygon")
                                                                      (("2"
                                                                        (INST +
                                                                         "0")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (APPLY-EXTENSIONALITY
                                                                             2
                                                                             :HIDE?
                                                                             T)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (REPLACE -8 :DIR RL)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKEEP - T)
                          (("2" (EXPAND "edge_of_polygon?")
                            (("2" (SKEEP)
                              (("2" (EXPAND "horizontal_segment?")
                                (("2" (INST + "i" "s" "p_1")
                                  (("2" (ASSERT)
                                    (("2"
                                      (REWRITE "point_on_segment_has_offset")
                                      (("2" (SKEEP)
                                        (("2" (GROUND)
                                          (("1"
                                            (EXPAND
                                             "is_right_point_ray_intersection?")
                                            (("1" (REPLACE -1)
                                              (("1" (GROUND)
                                                (("1" (EXPAND "y_in_range")
                                                  (("1" (GROUND)
                                                    (("1" (REPLACE -6)
                                                      (("1" (REPLACE -2)
                                                        (("1"
                                                          (CASE-REPLACE
                                                           "d = 0")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (CASE-REPLACE
                                                             "d = 1")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (HIDE-ALL-BUT
                                                                 2)
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (HIDE-ALL-BUT
                                                               (1 2 3 4))
                                                              (("2"
                                                                (EXPAND* "+"
                                                                 "*" "-")
                                                                (("2"
                                                                  (CANCEL-ADD
                                                                   4)
                                                                  (("2"
                                                                    (MOVE-TERMS
                                                                     3 R 2)
                                                                    (("2"
                                                                      (FACTOR
                                                                       3)
                                                                      (("2"
                                                                        (CANCEL-BY
                                                                         3
                                                                         "1 - d")
                                                                        (("2"
                                                                          (CANCEL-BY
                                                                           5
                                                                           "d")
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (REPLACE -6)
                                                      (("2" (REPLACE -2)
                                                        (("2"
                                                          (CASE
                                                              "s`p1`y < s`p2`y")
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "d = 0")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2"
                                                              (CASE-REPLACE
                                                               "d = 1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND
                                                                   "vertex?")
                                                                  (("1"
                                                                    (INST +
                                                                     "next_index(G, i)")
                                                                    (("1"
                                                                      (HIDE-ALL-BUT
                                                                       (-3 4))
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1
                                                                         :DIR
                                                                         RL)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "edges_of_polygon")
                                                                          (("1"
                                                                            (HIDE-ALL-BUT
                                                                             1)
                                                                            (("1"
                                                                              (NAME-REPLACE
                                                                               "n"
                                                                               "G`vertices(next_index(G, i))")
                                                                              (("1"
                                                                                (GRIND-WITH-EXT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (EXPAND* "+"
                                                                 "*" "-")
                                                                (("2"
                                                                  (MOVE-TERMS 4
                                                                   L 1)
                                                                  (("2"
                                                                    (FACTOR 4)
                                                                    (("2"
                                                                      (MOVE-TERMS
                                                                       -1 L)
                                                                      (("2"
                                                                        (NAME-REPLACE
                                                                         "ss"
                                                                         "s`p2`y - s`p1`y")
                                                                        (("2"
                                                                          (MULT-CASES
                                                                           4
                                                                           :MULT-OP
                                                                           1*)
                                                                          (("2"
                                                                            (EXPAND
                                                                             "abs")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (CASE-REPLACE
                                                             "d = 0")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (EXPAND
                                                                 "vertex?")
                                                                (("1"
                                                                  (INST + "i")
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             4
                                                                             :DIR
                                                                             RL)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "edges_of_polygon")
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (CASE-REPLACE
                                                               "d = 1")
                                                              (("1"
                                                                (EXPAND* "+"
                                                                 "*" "-")
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2"
                                                                (EXPAND* "+"
                                                                 "*" "-")
                                                                (("2"
                                                                  (CANCEL-ADD
                                                                   4)
                                                                  (("2"
                                                                    (CANCEL-BY
                                                                     4 "d")
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (REPLACE -2 (-5 -6) :HIDE? T)
                                                  (("2" (EXPAND* "+" "*" "-")
                                                    (("2" (FACTOR -4 R (2 3))
                                                      (("2" (FACTOR -5 R (2 3))
                                                        (("2"
                                                          (EXPAND "x_in_range"
                                                                  :ASSERT?
                                                                  NONE)
                                                          (("2"
                                                            (NAME-REPLACE*
                                                             ("sx"
                                                              "s`p2`x - s`p1`x"
                                                              "sy"
                                                              "s`p2`y - s`p1`y"))
                                                            (("2"
                                                              (MOVE-TERMS -7 R
                                                               2)
                                                              (("2"
                                                                (MOVE-TERMS -6
                                                                 R 2)
                                                                (("2"
                                                                  (REPLACE -7)
                                                                  (("2"
                                                                    (NAME-REPLACE
                                                                     "psx"
                                                                     "p`x - s`p1`x")
                                                                    (("2"
                                                                      (GROUND)
                                                                      (("1"
                                                                        (CANCEL-BY
                                                                         1
                                                                         "sy")
                                                                        (("1"
                                                                          (CASE
                                                                              "d * sx = psx")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "point_on_polygon_perimeter?")
                                                                            (("1"
                                                                              (INST
                                                                               +
                                                                               "edges_of_polygon(G)(i)")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "point_on_segment?")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "edges_of_polygon")
                                                                                  (("1"
                                                                                    (INST
                                                                                     +
                                                                                     "d")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "psx")
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -5
                                                                                           :DIR
                                                                                           RL)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            (("1"
                                                                                              (APPLY-EXTENSIONALITY
                                                                                               6
                                                                                               :HIDE?
                                                                                               T)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "sx"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -5
                                                                                                   -1
                                                                                                   :DIR
                                                                                                   RL)
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (HIDE-ALL-BUT
                                                                                                       (-1
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (GRIND)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (MOVE-TERMS
                                                                                                 -9
                                                                                                 L
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (REPLACE
                                                                                                   -9)
                                                                                                  (("2"
                                                                                                    (REPLACE
                                                                                                     -3
                                                                                                     1
                                                                                                     :DIR
                                                                                                     RL)
                                                                                                    (("2"
                                                                                                      (HIDE-ALL-BUT
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (GRIND)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (CANCEL-BY
                                                                         2
                                                                         "sy")
                                                                        (("2"
                                                                          (CASE
                                                                              "psx = d * sx")
                                                                          (("1"
                                                                            (EXPAND
                                                                             "psx")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "point_on_polygon_perimeter?")
                                                                              (("1"
                                                                                (INST
                                                                                 +
                                                                                 "edges_of_polygon(G)(i)")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "point_on_segment?")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "edges_of_polygon")
                                                                                    (("1"
                                                                                      (INST
                                                                                       +
                                                                                       "d")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "sx"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "sy"
                                                                                             -9)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -5
                                                                                               :DIR
                                                                                               RL)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (APPLY-EXTENSIONALITY
                                                                                                   6
                                                                                                   :HIDE?
                                                                                                   T)
                                                                                                  (("1"
                                                                                                    (HIDE-ALL-BUT
                                                                                                     (-1
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (GRIND)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (HIDE-ALL-BUT
                                                                                                     (-9
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (GRIND)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (REPLACE -2 1)
                                            (("2"
                                              (EQUATE
                                               "(p`y - s`p1`y) / (s`p2`y - s`p1`y)"
                                               "d")
                                              (("2" (CROSS-MULT 1)
                                                (("2" (REPLACE -2 -6)
                                                  (("2" (REPLACE -6 1)
                                                    (("2" (EXPAND* "+" "*" "-")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (EXPAND "vertex?")
                                            (("3" (INST-CP + "i")
                                              (("3" (INST + "next_index(G, i)")
                                                (("3"
                                                  (EXPAND "segment_endpoint?")
                                                  (("3"
                                                    (EXPAND "edges_of_polygon")
                                                    (("3" (GROUND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|point_in_polygon?_eq_is_point_in_polygon_exclusive?| 0
  (|point_in_polygon?_eq_is_point_in_polygon_exclusive?-1| |nil| 3874129020
   ("" (SKEEP + T)
    (("" (EXPAND* "point_in_polygon?" "is_point_in_polygon_exclusive?")
      ((""
        (REWRITE
         "point_on_polygon_perimeter?_eq_is_point_on_polygon_perimeter?" :DIR
         RL)
        ((""
          (REWRITE "odd_rt_xing_edges_card_eqv_point_in_polygon_rec" :DIR RL)
          (("" (USE "right_crossing_x_eq_rt_crossing_set")
            (("" (GROUND)
              (("1" (REPLACE -2 :DIR RL)
                (("1" (REWRITE "card_rt_xing_edges_eq_card_rt_xing_x" :DIR RL)
                  (("1" (REWRITE "card_xing_edges_from_n_and_no_V_both_odd")
                    NIL NIL))
                  NIL))
                NIL)
               ("2" (REPLACE -2 :DIR RL)
                (("2" (REWRITE "card_rt_xing_edges_eq_card_rt_xing_x" :DIR RL)
                  (("2" (REWRITE "card_xing_edges_from_n_and_no_V_both_odd")
                    NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|counted_is_crossing| 0
  (|counted_is_crossing-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "counted_crossing?")
      (("" (EXPAND "crossing_point?")
        (("" (GROUND)
          (("1" (USE "vertex_on_perimeter") (("1" (GRIND) NIL)))
           ("2" (GRIND) NIL))))))))
    NIL)
   NIL SHOSTAK))
 (|counted_or_uncounted_crossing| 0
  (|counted_or_uncounted_crossing-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (GROUND)
      (("1" (GRIND) NIL) ("2" (GRIND) NIL)
       ("3" (EXPAND "counted_crossing?")
        (("3" (EXPAND "crossing_point?")
          (("3" (GROUND)
            (("1" (USE "vertex_on_perimeter") (("1" (GRIND) NIL)))
             ("2" (GRIND) NIL)))))))
       ("4" (EXPAND "uncounted_crossing?")
        (("4" (EXPAND "crossing_point?")
          (("4" (GROUND)
            (("1" (USE "vertex_on_perimeter") (("1" (GRIND) NIL)))
             ("2" (GRIND) NIL))))))))))
    NIL)
   NIL SHOSTAK))
 (|crossing_on_perimeter| 0
  (|crossing_on_perimeter-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "point_on_polygon_perimeter?")
      (("" (EXPAND "crossing_point?")
        (("" (FLATTEN)
          (("" (SKEEP) (("" (TYPEPRED "s") (("" (INST?) NIL))))))))))))
    NIL)
   NIL SHOSTAK))
 (|set_before_subset| 0
  (|set_before_subset-1| |nil| 3874129020 ("" (GRIND) NIL NIL) NIL SHOSTAK))
 (|crossings_subset| 0
  (|crossings_subset-1| |nil| 3874129020
   ("" (EXPAND "subset?")
    (("" (SKEEP*)
      (("" (EXPAND "member")
        (("" (EXPAND "right_crossing_set")
          (("" (SKEEP)
            (("" (INST?)
              (("" (EXPAND "counted_crossing?")
                (("" (FLATTEN)
                  (("" (ASSERT)
                    (("" (SKEEP)
                      (("" (LEMMA "point_on_ray_trans")
                        (("" (INST - "p!1" "q" "p")
                          (("" (GROUND) NIL))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|crossing_before_diff| 0
  (|crossing_before_diff-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (EXPAND "difference")
        (("" (EXPAND "member")
          (("" (APPLY-EXTENSIONALITY :HIDE? T)
            (("" (REPLACE -1 :HIDE? T)
              (("" (EXPAND "right_crossing_set")
                (("" (EXPAND "set_before_x")
                  (("" (IFF)
                    (("" (GROUND)
                      (("1" (SKEEP) (("1" (INST?) (("1" (GRIND) NIL)))))
                       ("2" (SKEEP*) (("2" (GRIND) NIL)))
                       ("3" (SKEEP)
                        (("3" (INST?) (("3" (GRIND) NIL))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|right_crossings_min| 0
  (|right_crossings_min-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (FLATTEN)
        (("" (LEMMA "crossings_subset")
          (("" (INST -1 "p" "q" "G")
            (("" (ASSERT)
              (("" (CASE "R = emptyset")
                (("1" (LEMMA "emptyset_min[real]")
                  (("1" (INST -1 "right_crossing_set(q, G)")
                    (("1" (ASSERT) NIL)))))
                 ("2" (REPLACE -4 2)
                  (("2" (APPLY-EXTENSIONALITY 2 :HIDE? T)
                    (("2" (IFF)
                      (("2" (GROUND)
                        (("1" (EXPAND "right_crossing_set" (-1 +))
                          (("1" (SKEEP)
                            (("1" (INST?)
                              (("1" (ASSERT) (("1" (GRIND) NIL)))))))))
                         ("2" (INST?)
                          (("2" (EXPAND "right_crossing_set" (-1 +))
                            (("2" (SKEEP)
                              (("2" (INST?)
                                (("2" (GRIND) NIL))))))))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|right_crossings_max| 0
  (|right_crossings_max-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (FLATTEN)
        (("" (APPLY-EXTENSIONALITY :HIDE? T)
          (("" (EXPAND "emptyset")
            (("" (LEMMA "crossings_subset")
              (("" (INST -1 "p" "q" "G")
                (("" (ASSERT)
                  (("" (EXPAND "subset?")
                    (("" (INST -1 "x!1")
                      (("" (EXPAND "member")
                        (("" (INST - "x!1")
                          (("1" (GRIND) NIL)
                           ("2" (ASSERT) NIL))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|before_crossings_empty| 0
  (|before_crossings_empty-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (LEMMA "crossing_before_diff")
      (("" (INST -1 "p" "q" "G")
        (("" (ASSERT)
          (("" (REPLACE -3) (("" (REWRITE "difference_emptyset1") NIL))))))))))
    NIL)
   NIL SHOSTAK))
 (|right_crossings_gap| 0
  (|right_crossings_gap-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (EXPAND "right_crossing_set")
          (("" (GROUND)
            (("1" (SKEEP)
              (("1" (INST?)
                (("1" (ASSERT)
                  (("1" (LEMMA "point_on_ray_trans")
                    (("1" (INST - "p!1" "q" "p") (("1" (ASSERT) NIL)))))))))))
             ("2" (SKEEP)
              (("2" (INST?)
                (("2" (ASSERT)
                  (("2" (EXPAND "crossing_point?")
                    (("2" (INST - "p_1")
                      (("2" (GROUND)
                        (("1" (EXPAND "counted_crossing?")
                          (("1" (GROUND)
                            (("1" (USE "vertex_on_perimeter")
                              (("1" (GRIND) NIL)))
                             ("2" (GRIND) NIL)))))
                         ("2" (EXPAND "point_on_ray?")
                          (("2" (FLATTEN)
                            (("2" (ASSERT) NIL))))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|right_counted_gap| 0
  (|right_counted_gap-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (APPLY-EXTENSIONALITY :HIDE? T)
      (("" (IFF)
        (("" (EXPAND "right_crossing_set")
          (("" (GROUND)
            (("1" (SKEEP)
              (("1" (INST?)
                (("1" (ASSERT)
                  (("1" (LEMMA "point_on_ray_trans")
                    (("1" (INST - "p!1" "q" "p") (("1" (ASSERT) NIL)))))))))))
             ("2" (SKEEP)
              (("2" (INST?)
                (("2" (ASSERT)
                  (("2" (INST?)
                    (("2" (ASSERT) (("2" (GRIND) NIL))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|between_crossings_even| 0
  (|between_crossings_even-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (EXPAND "point_in_polygon?")
        (("" (FLATTEN)
          (("" (ASSERT)
            (("" (HIDE 1)
              (("" (LEMMA "crossing_before_diff")
                (("" (INST - "p" "q" "G")
                  (("" (ASSERT)
                    (("" (REPLACE -1)
                      (("" (USE "card_diff_subset[real]")
                        (("" (SPLIT -1)
                          (("1" (REPLACE -1)
                            (("1" (HIDE -1 -2)
                              (("1" (GROUND)
                                (("1" (EXPAND "odd?")
                                  (("1" (SKEEP*)
                                    (("1" (EXPAND "even?")
                                      (("1" (INST + "j!1 - j")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "even?")
                                  (("2" (EXPAND "odd?")
                                    (("2" (SKEEP*)
                                      (("2" (INST + "j!1 - j")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (USE "set_before_subset") NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|opposite_sides_of_crossing| 0
  (|opposite_sides_of_crossing-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (CASE "NOT counted_crossing?(G)(r)")
      (("1" (EXPAND "point_in_polygon?")
        (("1" (ASSERT)
          (("1"
            (CASE
                "card(right_crossing_set(r, G)) + 1 = card(right_crossing_set(p, G))")
            (("1" (REPLACE -1 :DIR RL :HIDE? T)
              (("1" (HIDE-ALL-BUT (4 5))
                (("1" (REWRITE "even_iff_odd_succ" :DIR RL)
                  (("1" (REWRITE "even_or_odd") (("1" (GROUND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 3 4 5 6)
              (("2" (LEMMA "crossing_before_diff")
                (("2" (INST -1 "p" "r" "G")
                  (("2" (SPLIT -1)
                    (("1" (GROUND)
                      (("1"
                        (EQUATE "set_before_x(right_crossing_set(p, G), r`x)"
                         "singleton(q`x)" NIL)
                        (("1" (USE "card_diff_subset[real]")
                          (("1" (REWRITE "card_singleton")
                            (("1" (ASSERT)
                              (("1" (HIDE -1 2 3)
                                (("1" (EXPAND "subset?")
                                  (("1" (SKEEP)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "singleton")
                                        (("1" (EXPAND "right_crossing_set")
                                          (("1" (INST + "q")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1 2)
                          (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                            (("2" (EXPAND "singleton")
                              (("2" (EXPAND "set_before_x")
                                (("2" (EXPAND "right_crossing_set")
                                  (("2" (IFF)
                                    (("2" (GROUND)
                                      (("1" (SKEEP)
                                        (("1" (INST - "p_1")
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (INST?) (("2" (ASSERT) NIL NIL))
                                        NIL)
                                       ("3" (EXPAND "point_on_ray?")
                                        (("3" (FLATTEN)
                                          (("3" (CASE "q`x = r`x")
                                            (("1" (EQUATE "q" "r")
                                              (("1" (HIDE -3 3)
                                                (("1" (GRIND-WITH-EXT) NIL
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (LEMMA "point_on_ray_trans")
                      (("2" (INST - "r" "q" "p") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE-ALL-BUT (-1 2))
        (("2" (EXPAND "counted_crossing?")
          (("2" (GROUND)
            (("1" (REWRITE "vertex_on_perimeter") NIL NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|outgoing_follows_point_in| 0
  (|outgoing_follows_point_in-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "outgoing_crossing?")
      (("" (EXPAND "point_in_polygon?")
        (("" (EXPAND "next_counted_crossing?")
          (("" (GROUND)
            (("" (LEMMA "right_counted_gap")
              (("" (INST - "p" "q" "G")
                (("" (GROUND)
                  (("1" (EXPAND "point_on_ray?") (("1" (PROPAX) NIL)))
                   ("2" (SKEEP)
                    (("2" (EXPAND "point_on_ray?")
                      (("2" (INST - "u")
                        (("2" (GROUND) NIL))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|before_crossing_in_polygon| 0
  (|before_crossing_in_polygon-1| |nil| 3874129020
   ("" (SKEEP*)
    (("" (EXPAND "point_in_polygon?")
      (("" (FLATTEN)
        (("" (LEMMA "right_crossings_gap")
          (("" (INST - "p" "u" "G")
            (("" (ASSERT)
              (("" (SPLIT -1)
                (("1" (ASSERT)
                  (("1" (HIDE -1 -2)
                    (("1" (EXPAND "point_on_polygon_perimeter?")
                      (("1" (EXPAND "next_crossing_point?")
                        (("1" (FLATTEN)
                          (("1" (SKEEP)
                            (("1" (INST - "u")
                              (("1" (EXPAND "point_on_ray?")
                                (("1" (GROUND) NIL)))
                               ("2" (EXPAND "crossing_point?")
                                (("2" (INST?) NIL)))))))))))))))))
                 ("2" (HIDE -1 2 3)
                  (("2" (SKEEP)
                    (("2" (EXPAND "next_crossing_point?")
                      (("2" (FLATTEN)
                        (("2" (INST?)
                          (("2" (EXPAND "point_on_ray?")
                            (("2" (GROUND) NIL))))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|before_counted_odd_crossings| 0
  (|before_counted_odd_crossings-1| |nil| 3874129020
   ("" (SKEEP*)
    (("" (EXPAND "point_in_polygon?")
      (("" (FLATTEN)
        (("" (LEMMA "right_counted_gap")
          (("" (INST - "p" "u" "G")
            (("" (ASSERT)
              (("" (HIDE -1 2 3)
                (("" (SKEEP)
                  (("" (EXPAND "next_counted_crossing?")
                    (("" (FLATTEN)
                      (("" (INST - "u_1")
                        (("" (EXPAND "point_on_ray?")
                          (("" (GROUND) NIL))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|before_counted_in_polygon| 0
  (|before_counted_in_polygon-1| |nil| 3874129020
   ("" (SKEEP*)
    (("" (USE "counted_or_uncounted_crossing")
      (("" (ASSERT)
        (("" (COPY -2)
          (("" (EXPAND "point_in_polygon?" (-1 +))
            (("" (LEMMA "right_counted_gap")
              (("" (INST - "p" "u" "G")
                (("" (FLATTEN)
                  (("" (ASSERT)
                    (("" (SPLIT -1)
                      (("1" (ASSERT)
                        (("1" (CASE "crossing_point?(p,G)(u)")
                          (("1" (ASSERT)
                            (("1" (EXPAND "next_counted_crossing?")
                              (("1" (FLATTEN)
                                (("1" (INST - "u")
                                  (("1" (EXPAND "point_on_ray?")
                                    (("1" (GROUND) NIL)))))))))))
                           ("2" (EXPAND "point_on_polygon_perimeter?")
                            (("2" (SKEEP)
                              (("2" (EXPAND "crossing_point?")
                                (("2" (INST? 1) NIL)))))))))))
                       ("2" (SKEEP)
                        (("2" (EXPAND "next_counted_crossing?")
                          (("2" (FLATTEN)
                            (("2" (INST - "u_1")
                              (("2" (EXPAND "point_on_ray?")
                                (("2" (GROUND)
                                  NIL))))))))))))))))))))))))))))))
    NIL)
   NIL SHOSTAK))
 (|counted_crossing_follows_point_inside| 0
  (|counted_crossing_follows_point_inside-1| |nil| 3874129020
   ("" (SKEEP)
    (("" (EXPAND "point_in_polygon?" -1)
      (("" (FLATTEN)
        (("" (CASE "empty?[real](right_crossing_set(p, G))")
          (("1" (HIDE +)
            (("1" (EXPAND "odd?")
              (("1" (SKEEP)
                (("1" (REWRITE "empty_card") (("1" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2"
              (INST +
               "(# x := min[real,<=](right_crossing_set(p, G)), y := p`y #)")
              (("2" (TYPEPRED "min[real,<=](right_crossing_set(p, G))")
                (("1" (GROUND)
                  (("1" (EXPAND "next_counted_crossing?")
                    (("1" (GROUND)
                      (("1" (EXPAND "right_crossing_set" -1 1)
                        (("1" (SKEEP)
                          (("1" (REPLACE -1)
                            (("1" (CASE "p`y = p_1`y")
                              (("1" (REPLACE -1)
                                (("1" (EQUATE (! 1 1) "p_1" NIL)
                                  (("1" (HIDE-ALL-BUT 1)
                                    (("1" (GRIND-WITH-EXT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "point_on_ray?")
                                (("2" (GROUND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (EXPAND "right_crossing_set" -1 1)
                        (("2" (SKEEP)
                          (("2" (REPLACE -1 :HIDE? T)
                            (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (SKEEP + T)
                        (("3" (INST - "q`x")
                          (("3" (GROUND)
                            (("3" (EXPAND "right_crossing_set" 1)
                              (("3" (INST + "q")
                                (("3" (ASSERT)
                                  (("3" (EXPAND "point_on_ray?")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "right_counted_gap")
                    (("2"
                      (INST -1 "p"
                       "(# x := min[real,<=](right_crossing_set(p, G)), y := p`y #)"
                       "G")
                      (("2" (GROUND)
                        (("1" (HIDE -3 2)
                          (("1" (EXPAND "right_crossing_set" -1 1)
                            (("1" (SKEEP)
                              (("1" (REPLACE -1)
                                (("1" (EXPAND "point_on_ray?")
                                  (("1" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -3 2)
                          (("2" (SKEEP)
                            (("2" (INST - "u`x")
                              (("2" (ASSERT)
                                (("2" (EXPAND "right_crossing_set" 1)
                                  (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (PROPAX) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

