(|real_metric_space| (|real_metric_space| 0 (|real_metric_space-1| |nil| 3460456811 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|metric_space?| CONST-DECL "bool" |metric_spaces_def| NIL) (|space_triangle?| CONST-DECL "bool" |metric_spaces_def| NIL) (|space_symmetric?| CONST-DECL "bool" |metric_spaces_def| NIL) (|space_zero?| CONST-DECL "bool" |metric_spaces_def| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|IMP_compactness_TCC1| 0 (|IMP_compactness_TCC1-1| |nil| 3460718977 ("" (LEMMA "real_metric_space") (("" (INST - "fullset[real]") NIL NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|real_metric_space| FORMULA-DECL NIL |real_metric_space| NIL)) NIL (|IMP_compactness| ASSUMING "compactness[real, real_metric_space.real_dist].compactness" "fullset_metric_space: ASSUMPTION metric_spaces_def[compactness.T, compactness.d].metric_space?(sets[compactness.T].fullset)"))) (|compact_induction| 0 (|compact_induction-1| |nil| 3460795815 ("" (SKOSIMP*) (("" (LABEL "compact_first" -1) (("" (LABEL "compact_second" -2) (("" (LABEL "compact_final" 1) (("" (EXPAND "compact?") (("" (SKOSIMP*) (("" (LABEL "tot_oc" -3) (("" (INST - "XS!1") (("" (INST - "XS!1") (("" (EXPAND "open_cover?") (("" (PROP) (("1" (LABEL "sets_open" -4) (("1" (COPY "compact_first") (("1" (HIDE "compact_first") (("1" (SKOSIMP -1) (("1" (EXPAND "finite_cover?") (("1" (PROP) (("1" (LABEL "first_ss" -1) (("1" (LABEL "first_fin" -2) (("1" (EXPAND "open_cover?" -3) (("1" (PROP) (("1" (EXPAND "subset?" -3) (("1" (EXPAND "member") (("1" (LABEL "first_is_cov" -3) (("1" (LABEL "first_is_op" -4) (("1" (EXPAND "Union" "first_is_cov") (("1" (COPY "compact_second") (("1" (HIDE "compact_second") (("1" (SKOSIMP -1) (("1" (EXPAND "open_cover?" -3) (("1" (PROP) (("1" (LABEL "second_ss" -1) (("1" (LABEL "second_fin" -2) (("1" (LABEL "second_cov" -3) (("1" (LABEL "second_op" -4) (("1" (EXPAND "Union" "second_cov") (("1" (INST + "union[set[real]](YS!1,YS!2)") (("1" (EXPAND "open_cover?") (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (PROP) (("1" (SKOSIMP*) (("1" (EXPAND "union") (("1" (EXPAND "member") (("1" (PROP) (("1" (LABEL "in_first" -1) (("1" (INST "first_ss" "x!1") (("1" (PROP) NIL NIL)) NIL)) NIL) ("2" (LABEL "in_second" -1) (("2" (INST "second_ss" "x!1") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "infinite_union[set[real]]") (("2" (LABEL "inf_un" -1) (("2" (INST "inf_un" "YS!1" "YS!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (CASE "x!1 <= (c!1 + d!1)/2") (("1" (LABEL "caseonx1" -1) (("1" (INST "first_is_cov" "x!1") (("1" (EXPAND "Union") (("1" (ASSERT) (("1" (SKOSIMP "first_is_cov") (("1" (INST + "a!1") (("1" (EXPAND "union") (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST "second_cov" "x!1") (("2" (ASSERT) (("2" (SKOSIMP "second_cov") (("2" (EXPAND "Union") (("2" (INST "compact_final" "a!1") (("2" (EXPAND "union") (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKOSIMP*) (("4" (EXPAND "union") (("4" (EXPAND "member") (("4" (PROP) (("1" (INST "first_ss" "C!1") (("1" (ASSERT) (("1" (INST "sets_open" "C!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST "second_ss" "C!1") (("2" (INST "sets_open" "C!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "subset?") (("2" (EXPAND "member") (("2" (SKOSIMP*) (("2" (INST "tot_oc" "x!1") (("2" (EXPAND "Union") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (SKOSIMP*) (("3" (INST "tot_oc" "x!1") (("3" (EXPAND "Union") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "subset?") (("4" (EXPAND "member") (("4" (SKOSIMP*) (("4" (INST "tot_oc" "x!1") (("4" (EXPAND "Union") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|a!1| SKOLEM-CONST-DECL "(YS!2)" |real_metric_space| NIL) (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL) (YS!1 SKOLEM-CONST-DECL "set[set[real]]" |real_metric_space| NIL) (YS!2 SKOLEM-CONST-DECL "set[set[real]]" |real_metric_space| NIL) (|a!1| SKOLEM-CONST-DECL "(YS!1)" |real_metric_space| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|infinite_union| FORMULA-DECL NIL |infinite_sets_def| NIL) (|union| CONST-DECL "set" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|compact?| CONST-DECL "bool" |compactness| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|seq_intv_scaf_TCC1| 0 (|seq_intv_scaf_TCC1-1| |nil| 3460814665 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|subset?| CONST-DECL "bool" |sets| NIL)) NIL (|seq_intv_scaf| SUBTYPE "(number_fields.-)(real_metric_space.n, 1)" "nat"))) (|seq_intv_scaf_TCC2| 0 (|seq_intv_scaf_TCC2-1| |nil| 3460814665 ("" (TERMINATION-TCC) NIL NIL) ((|member| CONST-DECL "bool" |sets| NIL) (|subset?| CONST-DECL "bool" |sets| NIL)) NIL (|seq_intv_scaf| TERMINATION "real_metric_space.seq_intv_scaf(real_metric_space.c, real_metric_space.d, real_metric_space.YS)((number_fields.-)(real_metric_space.n, 1))" "NIL"))) (|seq_intv_scaf_TCC3| 0 (|seq_intv_scaf_TCC3-1| |nil| 3460814665 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|seq_intv_scaf| SUBTYPE "(number_fields.-)(real_metric_space.n, 1)" "nat"))) (|seq_intv_scaf_TCC4| 0 (|seq_intv_scaf_TCC4-1| |nil| 3460814665 ("" (TERMINATION-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL)) NIL (|seq_intv_scaf| TERMINATION "real_metric_space.seq_intv_scaf(real_metric_space.c, real_metric_space.d, real_metric_space.YS)((number_fields.-)(real_metric_space.n, 1))" "NIL"))) (|seq_intv_scaf_TCC5| 0 (|seq_intv_scaf_TCC5-1| |nil| 3460814665 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|seq_intv_scaf| SUBTYPE "(number_fields.-)(real_metric_space.n, 1)" "nat"))) (|seq_intv_scaf_TCC6| 0 (|seq_intv_scaf_TCC6-1| |nil| 3460814665 ("" (TERMINATION-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL)) NIL (|seq_intv_scaf| TERMINATION "real_metric_space.seq_intv_scaf(real_metric_space.c, real_metric_space.d, real_metric_space.YS)((number_fields.-)(real_metric_space.n, 1))" "NIL"))) (|seq_inv_scaf_decreasing| 0 (|seq_inv_scaf_decreasing-1| |nil| 3460811042 ("" (SKOLEM 1 ("c" "d" "YS")) (("" (SKEEP) (("" (SPLIT) (("1" (GENERALIZE "n" "m") (("1" (INDUCT "m") (("1" (GRIND) NIL NIL) ("2" (SKOSIMP*) (("2" (EXPAND "seq_intv_scaf" 1) (("2" (NAME "W" "seq_intv_scaf(c,d,YS)(j!1)") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (NAME "P" "NOT (EXISTS (XS: set[set[real]]):
                subset?(XS, YS) AND
                 open_cover?(XS,
                             LAMBDA (x: real):
                               W`1 <= x AND x <= (W`1 + W`2) / 2))") (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "subset?") (("2" (SKOSIMP*) (("2" (EXPAND "member") (("2" (EXPAND "seq_intv_scaf" -1) (("2" (NAME "W" "seq_intv_scaf(c,d,YS)(n)") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (NAME "P" "NOT (EXISTS (XS: set[set[real]]):
                subset?(XS, YS) AND
                 open_cover?(XS,
                             LAMBDA (x: real):
                               W`1 <= x AND x <= (W`1 + W`2) / 2))") (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (GENERALIZE "n" "m") (("3" (INDUCT "m") (("1" (EXPAND "seq_intv_scaf") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (NAME "W" "seq_intv_scaf(c,d,YS)(j!1)") (("2" (REPLACE -1) (("2" (LABEL "name_w" -1) (("2" (HIDE -1) (("2" (EXPAND "seq_intv_scaf") (("2" (REVEAL "name_w") (("2" (REPLACE "name_w") (("2" (HIDE "name_w") (("2" (NAME "P" "NOT (EXISTS (XS: set[set[real]]):
                subset?(XS, YS) AND
                 finite_cover?(XS,
                               LAMBDA (x: real):
                                 W`1 <= x AND x <= (W`1 + W`2) / 2))") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((^ CONST-DECL "real" |exponentiation| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|seq_intv_scaf| DEF-DECL "[real, real]" |real_metric_space| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|compact_seq_induction| 0 (|compact_seq_induction-1| |nil| 3460812837 ("" (SKOLEM 1 ("c" "d")) (("" (PROP) (("" (EXPAND "compact?") (("" (SKOSIMP*) (("" (LABEL "big_open_cov" -1) (("" (LABEL "exists_fs" 1) (("" (LABEL "smaller_sc" 2) (("" (INST "smaller_sc" "XS!1") (("" (ASSERT) (("" (INDUCT "n" "smaller_sc") (("1" (SKOSIMP*) (("1" (EXPAND "seq_intv_scaf") (("1" (INST "exists_fs" "XS!2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (NAME "W" "seq_intv_scaf(c,d,XS!1)(j!1)") (("2" (REPLACE -1) (("2" (LABEL "name_w" -1) (("2" (HIDE "name_w") (("2" (EXPAND "seq_intv_scaf") (("2" (REVEAL "name_w") (("2" (REPLACE "name_w") (("2" (HIDE "name_w") (("2" (CASE "(EXISTS (XS: set[set[real]]):
                                subset?(XS, XS!1) AND
                                 finite_cover?(XS,
                                               LAMBDA
                                               (x: real):
                                               W`1 <= x
                                               AND
                                               x <= (W`1 + W`2) / 2))") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (SKOSIMP*) (("1" (INST + "union[set[real]](XS!2,XS!3)") (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (PROP) (("1" (EXPAND "union") (("1" (EXPAND "member") (("1" (SKOLEM 1 ("x")) (("1" (INST - "x") (("1" (INST - "x") (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "finite_cover?") (("2" (PROP) (("1" (LEMMA "infinite_union[set[real]]") (("1" (INST - "XS!2" "XS!3") (("1" (PROP) NIL NIL)) NIL)) NIL) ("2" (LABEL "XS3_ss" -1) (("2" (LABEL "XS2_ss" -6) (("2" (LABEL "XS3_oc" -3) (("2" (LABEL "XS2_oc" -5) (("2" (EXPAND "open_cover?") (("2" (PROP) (("1" (EXPAND "Union") (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (CASE "x!1 <= (W`1 + W`2)/2") (("1" (INST "XS3_oc" "x!1") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST "XS3_ss" "a!1") (("1" (INST + "a!1") (("1" (EXPAND "union") (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -9 "x!1") (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (INST + "a!1") (("2" (EXPAND "union") (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND "union") (("2" (EXPAND "member") (("2" (INST -5 "C!1") (("2" (INST -9 "C!1") (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (REPLACE 1) (("2" (INST + "XS!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (<= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (|seq_intv_scaf| DEF-DECL "[real, real]" |real_metric_space| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|union| CONST-DECL "set" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|Union_surjective| NAME-JUDGEMENT "(surjective?[setofsets[T], set[T]])" |sets_lemmas| NIL) (|Union| CONST-DECL "set" |sets| NIL) (|a!1| SKOLEM-CONST-DECL "(XS!2)" |real_metric_space| NIL) (|a!1| SKOLEM-CONST-DECL "(XS!3)" |real_metric_space| NIL) (XS!3 SKOLEM-CONST-DECL "set[set[real]]" |real_metric_space| NIL) (XS!2 SKOLEM-CONST-DECL "set[set[real]]" |real_metric_space| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|infinite_union| FORMULA-DECL NIL |infinite_sets_def| NIL) (|compact?| CONST-DECL "bool" |compactness| NIL)) SHOSTAK)) (|closed_intervals_compact| 0 (|closed_intervals_compact-2| "" 3882417670 ("" (SKOSIMP*) (("" (LEMMA "compact_seq_induction") (("" (INST - "a!1" "b!1") (("" (ASSERT) (("" (SKOSIMP*) (("" (LEMMA "bolzano_weierstrass4") (("" (LABEL "bzw" -1) (("" (LABEL "open_cover" -2) (("" (LABEL "induction_lem" -3) (("" (LABEL "final_compact" 1) (("" (INST "bzw" "a!1" "b!1" "(LAMBDA (i:nat): seq_intv_scaf(a!1,b!1,YS!1)(i)`1)") (("" (PROP) (("1" (SKOSIMP*) (("1" (EXPAND "accumulation") (("1" (EXPAND "open_cover?") (("1" (PROP) (("1" (LABEL "subset_cover" -4) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (INST "subset_cover" "c!1") (("1" (PROP) (("1" (EXPAND "Union") (("1" (SKOSIMP*) (("1" (TYPEPRED "a!2") (("1" (LABEL "tpa!2" -1) (("1" (INST "open_cover" "a!2") (("1" (ASSERT) (("1" (EXPAND "open?" "open_cover") (("1" (EXPAND "interior") (("1" (REPLACE "open_cover" "subset_cover" RL) (("1" (ASSERT) (("1" (EXPAND "interior_point?") (("1" (SKOSIMP*) (("1" (LEMMA "axiom_of_archimedes") (("1" (INST -1 "max(10,2*(b!1-a!1)/r!1)") (("1" (SKOSIMP*) (("1" (LABEL "ipred" -1) (("1" (INST "bzw" "r!1/2" "i!1") (("1" (SKOSIMP*) (("1" (INST "induction_lem" "i!2") (("1" (INST "induction_lem" "{V: set[real] | V = a!2}") (("1" (PROP) (("1" (SKOSIMP*) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "finite_cover?") (("2" (PROP) (("1" (EXPAND "is_finite") (("1" (INST "induction_lem" "2" "(LAMBDA (K: ({V: set[real] | V = a!2})): 1)") (("1" (EXPAND "injective?") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "open_cover?") (("2" (PROP) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (SKOSIMP*) (("1" (EXPAND "Union") (("1" (INST "induction_lem" "a!2") (("1" (LEMMA "seq_inv_scaf_decreasing") (("1" (INST?) (("1" (PROP) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (LABEL "size_diff" -1) (("1" (INST "subset_cover" "x!1") (("1" (PROP) (("1" (EXPAND "ball") (("1" (EXPAND "real_dist") (("1" (NAME "ZA" "seq_intv_scaf(a!1, b!1, YS!1)(i!2)`1") (("1" (NAME "ZB" "seq_intv_scaf(a!1, b!1, YS!1)(i!2)`2") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (HIDE ("open_cover" 2 "final_compact")) (("1" (FIELD "size_diff") (("1" (CASE " i!1<2^i!2") (("1" (REPLACE "size_diff" "ipred" RL) (("1" (EXPAND "max") (("1" (MULT-BY -1 "ZB-ZA") (("1" (ASSERT) (("1" (MULT-BY -1 "2/r!1") (("1" (ASSERT) (("1" (CASE "10 < (2 * ((2 ^ i!2) * ZB) - 2 * ((2 ^ i!2) * ZA)) / r!1") (("1" (ASSERT) (("1" (SUB-FORMULAS -2 "ipred") (("1" (FIELD -1) (("1" (CANCEL-BY -2 "i!1") (("1" (HIDE -4 -5) (("1" (GRIND :EXCLUDE ("ZA" "ZB")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SUB-FORMULAS -1 1) (("2" (FIELD -1) (("2" (MULT-BY "ipred" "2*(ZB-ZA)") (("2" (HIDE -3) (("2" (GRIND :EXCLUDE ("ZA" "ZB")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1 >= 10") (("1" (HIDE-ALL-BUT (-1 "bzw" 1)) (("1" (COPY -4) (("1" (COPY -2) (("1" (ADD-FORMULAS -1 -2) (("1" (BOTH-SIDES "-" "i!1" -1) (("1" (ASSERT) (("1" (HIDE -2) (("1" (HIDE -2) (("1" (HIDE -2) (("1" (HIDE -3) (("1" (ADD-FORMULAS -2 1) (("1" (BOTH-SIDES "-" "i!1" -1) (("1" (ASSERT) (("1" (GENERALIZE-SKOLEM-CONSTANTS) (("1" (INDUCT "i_1") (("1" (ASSERT) NIL NIL) ("2" (SKOSIMP*) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT ("ipred" 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL "open_cover") (("2" (SKOSIMP*) (("2" (INST "open_cover" "a!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "FORALL (j:nat): subset?(closed_intv(seq_intv_scaf(a!1,b!1,YS!1)(j)`1,seq_intv_scaf(a!1,b!1,YS!1)(j)`2),closed_intv(a!1,b!1))") (("1" (SKOSIMP*) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (INST - "i!1") (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (INST - "seq_intv_scaf(a!1,b!1,YS!1)(i!1)`1") (("1" (ASSERT) (("1" (LEMMA "seq_inv_scaf_decreasing") (("1" (INST?) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (INDUCT "j") (("1" (EXPAND "seq_intv_scaf") (("1" (ASSERT) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (SKOSIMP*) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (LEMMA "seq_inv_scaf_decreasing") (("2" (INST?) (("2" (PROP) (("2" (NAME "Aj1" "LAMBDA (x: real):
                                                             seq_intv_scaf(a!1, b!1, YS!1)(j!1 + 1)`1 <= x AND
                                                              x <= seq_intv_scaf(a!1, b!1, YS!1)(j!1 + 1)`2") (("2" (REPLACE -1) (("2" (NAME "Djmin1" "LAMBDA (x: real):
                                                             seq_intv_scaf(a!1, b!1, YS!1)(j!1)`1 <= x AND
                                                              x <= seq_intv_scaf(a!1, b!1, YS!1)(j!1)`2") (("2" (REPLACE -1) (("2" (NAME "closedint" "LAMBDA (x: real): a!1 <= x AND x <= b!1") (("2" (REPLACE -1) (("2" (HIDE -1 -2 -3) (("2" (HIDE -1 -3) (("2" (EXPAND "subset?") (("2" (EXPAND "member") (("2" (SKOSIMP*) (("2" (INST - "x!1") (("2" (INST - "x!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|closed_intervals_compact-1| |nil| 3460719116 ("" (SKOSIMP*) (("" (LEMMA "compact_seq_induction") (("" (INST - "a!1" "b!1") (("" (ASSERT) (("" (SKOSIMP*) (("" (LEMMA "bolzano_weierstrass4") (("" (LABEL "bzw" -1) (("" (LABEL "open_cover" -2) (("" (LABEL "induction_lem" -3) (("" (LABEL "final_compact" 1) (("" (INST "bzw" "a!1" "b!1" "(LAMBDA (i:nat): seq_intv_scaf(a!1,b!1,YS!1)(i)`1)") (("" (PROP) (("1" (SKOSIMP*) (("1" (EXPAND "accumulation") (("1" (EXPAND "open_cover?") (("1" (PROP) (("1" (LABEL "subset_cover" -4) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (INST "subset_cover" "c!1") (("1" (PROP) (("1" (EXPAND "Union") (("1" (SKOSIMP*) (("1" (TYPEPRED "a!2") (("1" (LABEL "tpa!2" -1) (("1" (INST "open_cover" "a!2") (("1" (ASSERT) (("1" (EXPAND "open?" "open_cover") (("1" (EXPAND "interior") (("1" (REPLACE "open_cover" "subset_cover" RL) (("1" (ASSERT) (("1" (EXPAND "interior_point?") (("1" (SKOSIMP*) (("1" (LEMMA "axiom_of_archimedes") (("1" (INST -1 "max(10,2*(b!1-a!1)/r!1)") (("1" (SKOSIMP*) (("1" (LABEL "ipred" -1) (("1" (INST "bzw" "r!1/2" "i!1") (("1" (SKOSIMP*) (("1" (INST "induction_lem" "i!2") (("1" (INST "induction_lem" "{V: set[real] | V = a!2}") (("1" (PROP) (("1" (SKOSIMP*) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "finite_cover?") (("2" (PROP) (("1" (EXPAND "is_finite") (("1" (INST "induction_lem" "2" "(LAMBDA (K: ({V: set[real] | V = a!2})): 1)") (("1" (EXPAND "injective?") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "open_cover?") (("2" (PROP) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (SKOSIMP*) (("1" (EXPAND "Union") (("1" (INST "induction_lem" "a!2") (("1" (LEMMA "seq_inv_scaf_decreasing") (("1" (INST?) (("1" (PROP) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (LABEL "size_diff" -1) (("1" (INST "subset_cover" "x!1") (("1" (PROP) (("1" (EXPAND "ball") (("1" (EXPAND "real_dist") (("1" (NAME "ZA" "seq_intv_scaf(a!1, b!1, YS!1)(i!2)`1") (("1" (NAME "ZB" "seq_intv_scaf(a!1, b!1, YS!1)(i!2)`2") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (HIDE ("open_cover" 2 "final_compact")) (("1" (FIELD "size_diff") (("1" (CASE " i!1<2^i!2") (("1" (REPLACE "size_diff" "ipred" RL) (("1" (EXPAND "max") (("1" (MULT-BY -1 "ZB-ZA") (("1" (ASSERT) (("1" (MULT-BY -1 "2/r!1") (("1" (ASSERT) (("1" (CASE "10 < (2 * ((2 ^ i!2) * ZB) - 2 * ((2 ^ i!2) * ZA)) / r!1") (("1" (ASSERT) (("1" (SUB-FORMULAS -2 "ipred") (("1" (FIELD -1) (("1" (CANCEL-BY -2 "i!1") (("1" (HIDE -4 -5) (("1" (GRIND :EXCLUDE ("ZA" "ZB")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SUB-FORMULAS -1 1) (("2" (FIELD -1) (("2" (MULT-BY IPRED "2*(ZB-ZA)") (("2" (HIDE -3) (("2" (GRIND :EXCLUDE ("ZA" "ZB")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1 >= 10") (("1" (HIDE-ALL-BUT (-1 "bzw" 1)) (("1" (COPY -4) (("1" (COPY -2) (("1" (ADD-FORMULAS -1 -2) (("1" (BOTH-SIDES "-" "i!1" -1) (("1" (ASSERT) (("1" (HIDE -2) (("1" (HIDE -2) (("1" (HIDE -2) (("1" (HIDE -3) (("1" (ADD-FORMULAS -2 1) (("1" (BOTH-SIDES "-" "i!1" -1) (("1" (ASSERT) (("1" (GENERALIZE-SKOLEM-CONSTANTS) (("1" (INDUCT "i_1") (("1" (ASSERT) NIL NIL) ("2" (SKOSIMP*) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT ("ipred" 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL "open_cover") (("2" (SKOSIMP*) (("2" (INST "open_cover" "a!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (j:nat): subset?(closed_intv(seq_intv_scaf(a!1,b!1,YS!1)(j)`1,seq_intv_scaf(a!1,b!1,YS!1)(j)`2),closed_intv(a!1,b!1))") (("1" (SKOSIMP*) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (INST - "i!1") (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (INST - "seq_intv_scaf(a!1,b!1,YS!1)(i!1)`1") (("1" (ASSERT) (("1" (LEMMA "seq_inv_scaf_decreasing") (("1" (INST?) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (REVEAL "open_cover") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL "open_cover") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (INDUCT "j") (("1" (EXPAND "seq_intv_scaf") (("1" (ASSERT) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (SKOSIMP*) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (LEMMA "seq_inv_scaf_decreasing") (("2" (INST?) (("1" (PROP) (("1" (NAME "Aj1" "LAMBDA (x: real):
                                                             seq_intv_scaf(a!1, b!1, YS!1)(j!1 + 1)`1 <= x AND
                                                              x <= seq_intv_scaf(a!1, b!1, YS!1)(j!1 + 1)`2") (("1" (REPLACE -1) (("1" (NAME "Djmin1" "LAMBDA (x: real):
                                                             seq_intv_scaf(a!1, b!1, YS!1)(j!1)`1 <= x AND
                                                              x <= seq_intv_scaf(a!1, b!1, YS!1)(j!1)`2") (("1" (REPLACE -1) (("1" (NAME "closedint" "LAMBDA (x: real): a!1 <= x AND x <= b!1") (("1" (REPLACE -1) (("1" (HIDE -1 -2 -3) (("1" (HIDE -1 -3) (("1" (EXPAND "subset?") (("1" (EXPAND "member") (("1" (SKOSIMP*) (("1" (INST - "x!1") (("1" (INST - "x!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL "open_cover") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (REVEAL "open_cover") (("3" (PROPAX) NIL NIL)) NIL)) NIL) ("4" (REVEAL "open_cover") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) NIL NIL) ("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|compact_seq_induction| FORMULA-DECL NIL |real_metric_space| NIL) (|bolzano_weierstrass4| FORMULA-DECL NIL |convergence_sequences| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|accumulation| CONST-DECL "bool" |convergence_sequences| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|Union| CONST-DECL "set" |sets| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|open?| CONST-DECL "bool" |metric_spaces| NIL) (|interior_point?| CONST-DECL "bool" |metric_spaces| NIL) (|axiom_of_archimedes| FORMULA-DECL NIL |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|i!1| SKOLEM-CONST-DECL "int" |real_metric_space| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|seq_inv_scaf_decreasing| FORMULA-DECL NIL |real_metric_space| NIL) (|ball| CONST-DECL "set[T]" |metric_spaces| NIL) (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|both_sides_times_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (|both_sides_times_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|nzrat_times_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|pos_div_gt| FORMULA-DECL NIL |real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (DIV_38 SKOLEM-CONST-DECL "int" |real_metric_space| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (ZA SKOLEM-CONST-DECL "real" |real_metric_space| NIL) (ZB SKOLEM-CONST-DECL "real" |real_metric_space| NIL) (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|both_sides_minus_ge1| FORMULA-DECL NIL |real_props| NIL) (|both_sides_plus_ge2| FORMULA-DECL NIL |real_props| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|finite_cover?| CONST-DECL "bool" |compactness| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|interior| CONST-DECL "set[T]" |metric_spaces| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|member| CONST-DECL "bool" |sets| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|real_dist| CONST-DECL "nnreal" |real_metric_space| NIL) (|open_cover?| CONST-DECL "bool" |compactness| NIL) (YS!1 SKOLEM-CONST-DECL "set[set[real]]" |real_metric_space| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|a!1| SKOLEM-CONST-DECL "real" |real_metric_space| NIL) (|b!1| SKOLEM-CONST-DECL "{x: real | a!1 < x}" |real_metric_space| NIL) (|seq_intv_scaf| DEF-DECL "[real, real]" |real_metric_space| NIL) (|sequence| TYPE-EQ-DECL NIL |sequences| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (< CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)))
