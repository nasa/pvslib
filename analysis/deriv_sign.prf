(|deriv_sign| (|IMP_derivatives_TCC1| 0 (|IMP_derivatives_TCC1-1| |nil| 3471617303 ("" (LEMMA "deriv_domain_nzreal") (("" (PROPAX) NIL NIL)) NIL) ((|deriv_domain_nzreal| FORMULA-DECL NIL |deriv_domain| NIL)) NIL (|IMP_derivatives| ASSUMING "derivatives[nzreal].derivatives" "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))) (|IMP_derivatives_TCC2| 0 (|IMP_derivatives_TCC2-1| |nil| 3471617303 ("" (EXPAND "not_one_element?") (("" (SKOSIMP*) (("" (INST + "x!1/2") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL)) NIL (|IMP_derivatives| ASSUMING "derivatives[nzreal].derivatives" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|sign_derivable| 0 (|sign_derivable-1| |nil| 3471093961 ("" (SKOSIMP*) (("" (EXPAND "derivable?") (("" (EXPAND "convergent?") (("" (INST + "0") (("" (EXPAND "convergence") (("" (EXPAND "fullset") (("" (EXPAND "convergence") (("" (PROP) (("1" (EXPAND "adh") (("1" (SKOSIMP*) (("1" (CASE "x!1 > 0") (("1" (INST + "e!1/2") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (INST + "-e!1/2") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (CASE "x!1 > 0") (("1" (EXPAND "NQ") (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (INST + "x!1/2") (("1" (SKOSIMP*) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST + "-x!1/2") (("1" (SKOSIMP*) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|e!1| SKOLEM-CONST-DECL "posreal" |deriv_sign| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|x!1| SKOLEM-CONST-DECL "nzreal" |deriv_sign| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL)) SHOSTAK)) (|sign_derivable_fun| 0 (|sign_derivable_fun-1| |nil| 3471617730 ("" (EXPAND "derivable?") (("" (SKOSIMP*) (("" (LEMMA "sign_derivable") (("" (INST?) NIL NIL)) NIL)) NIL)) NIL) ((|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|sign_derivable| FORMULA-DECL NIL |deriv_sign| NIL) (|derivable?| CONST-DECL "bool" |derivatives| NIL)) SHOSTAK)) (|deriv_sign_TCC1| 0 (|deriv_sign_TCC1-1| |nil| 3472228554 ("" (LEMMA "sign_derivable_fun") (("" (PROPAX) NIL NIL)) NIL) ((|sign_derivable_fun| FORMULA-DECL NIL |deriv_sign| NIL)) NIL (|deriv_sign| SUBTYPE "restrict[real, nzreal, Sign].restrict(sign.sign)" "deriv_fun[nzreal]"))) (|deriv_sign| 0 (|deriv_sign-2| "" 3882381996 ("" (EXPAND "restrict") (("" (EXPAND "deriv") (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (EXPAND "const_fun") (("1" (LEMMA "deriv_def") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "convergence") (("1" (EXPAND "fullset") (("1" (EXPAND "NQ") (("1" (EXPAND "convergence") (("1" (SPLIT +) (("1" (EXPAND "adh") (("1" (LEMMA "deriv_domain_nzreal") (("1" (EXPAND "deriv_domain?") (("1" (SKOSIMP*) (("1" (INST - "e!1" "x!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (INST + "min(epsilon!1,abs(x!1/2))") (("2" (SKOSIMP*) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (LEMMA "sign_derivable") (("2" (INST?) (("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|deriv_sign-1| |nil| 3472228558 ("" (EXPAND "restrict") (("" (EXPAND "deriv") (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (EXPAND "const_fun") (("1" (LEMMA "deriv_def") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "convergence") (("1" (EXPAND "fullset") (("1" (EXPAND "NQ") (("1" (EXPAND "convergence") (("1" (SPLIT +) (("1" (EXPAND "adh") (("1" (LEMMA "deriv_domain_nzreal") (("1" (EXPAND "deriv_domain?") (("1" (SKOSIMP*) (("1" (INST - E!1 X!1) (("1" (SKOSIMP*) (("1" (INST?) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (INST + "min(epsilon!1,abs(x!1/2))") (("2" (SKOSIMP*) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (LEMMA "sign_derivable") (("2" (INST?) (("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|deriv| CONST-DECL "[T -> real]" |derivatives| NIL) (|sign_derivable| FORMULA-DECL NIL |deriv_sign| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|y!1| SKOLEM-CONST-DECL "{u: nzreal | u + x!1 /= 0}" |deriv_sign| NIL) (|x!1| SKOLEM-CONST-DECL "nzreal" |deriv_sign| NIL) (|deriv_domain_nzreal| FORMULA-DECL NIL |deriv_domain| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|deriv_def| FORMULA-DECL NIL |derivatives_def| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|sign| CONST-DECL "Sign" |sign| |reals|) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|deriv| CONST-DECL "real" |derivatives_def| NIL) (|derivable_const| APPLICATION-JUDGEMENT "deriv_fun[nzreal]" |deriv_sign| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|restrict| CONST-DECL "R" |restrict| NIL)) SHOSTAK)))
