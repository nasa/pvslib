(|interval_minmax| (|min_x_TCC1| 0 (|min_x_TCC1-2| "" 3882418489 ("" (CASE "FORALL (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):
                                    continuous?[J[a, b]](restrict[T, J[a, b], real](f))") (("1" (INST + "(LAMBDA (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):  min_pt[a,b](restrict[T,J[a,b],real](f)))") (("1" (SKOSIMP*) (("1" (PROP) (("1" (NAME "mp" "min_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (REPLACE -1) (("1" (TYPEPRED "mp") (("1" (LEMMA "connected_domain") (("1" (EXPAND "connected?") (("1" (INST?) (("1" (INST -1 "b!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "min_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (EXPAND "is_minimum?") (("1" (INST - "x!1") (("1" (EXPAND "restrict") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -3) (("2" (SKOSIMP*) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST - "a!1" "b!1" "x!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST -1 "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (TYPEPRED "f!1") (("2" (EXPAND "continuous?" 1) (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (ASSERT) (("2" (TYPEPRED "x0!1") (("2" (INST - "a!1" "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "connected_domain") (("3" (EXPAND "connected?") (("3" (INST?) (("3" (INST -1 "b!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|min_x| EXISTENCE "" "[d: [a: T, b: {x: T | a < x}, fun_cont_on(a, b)] -> {mx: interval_minmax.T | booleans.AND(reals.<=(d`1, mx), booleans.AND(reals.<=(mx, d`2), FORALL (x: interval_minmax.T): booleans.IMPLIES(booleans.AND(reals.<=(d`1, x), reals.<=(x, d`2)), reals.<=(d`3(mx), d`3(x)))))}]")) (|min_x_TCC1-1| |nil| 3253546854 ("" (CASE "FORALL (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):
                                    continuous?[J[a, b]](restrict[T, J[a, b], real](f))") (("1" (INST + "(LAMBDA (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):  min_pt[a,b](restrict[T,J[a,b],real](f)))") (("1" (SKOSIMP*) (("1" (PROP) (("1" (NAME "mp" "min_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (REPLACE -1) (("1" (TYPEPRED "mp") (("1" (LEMMA "connected_domain") (("1" (EXPAND "connected?") (("1" (INST?) (("1" (INST -1 "b!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "min_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (EXPAND "is_minimum?") (("1" (INST - "x!1") (("1" (EXPAND "restrict") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -3) (("2" (SKOSIMP*) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST - "a!1" "b!1" "x!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST -1 "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (TYPEPRED "f!1") (("2" (EXPAND "continuous?" 1) (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (ASSERT) (("2" (TYPEPRED "x0!1") (("2" (INST - A!1 B!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "connected_domain") (("3" (EXPAND "connected?") (("3" (INST?) (("3" (INST -1 "b!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|x0!1| SKOLEM-CONST-DECL "J[a!1, b!1]" |interval_minmax| NIL) (|b!1| SKOLEM-CONST-DECL "{x: T | a!1 < x}" |interval_minmax| NIL) (|a!1| SKOLEM-CONST-DECL "T" |interval_minmax| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|is_minimum?| CONST-DECL "bool" |real_fun_preds| |reals|) (|min_pt| CONST-DECL "{xj: J | is_minimum?(xj, f)}" |continuity_interval| NIL) (|connected_domain| FORMULA-DECL NIL |interval_minmax| NIL) (|connected?| CONST-DECL "bool" |deriv_domain_def| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |interval_minmax| NIL) (T FORMAL-SUBTYPE-DECL NIL |interval_minmax| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|fun_cont_on| TYPE-EQ-DECL NIL |interval_minmax| NIL) (J NONEMPTY-TYPE-EQ-DECL NIL |continuity_interval| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) NIL (|min_x| EXISTENCE "" "[d: [a: T, b: {x: T | a < x}, fun_cont_on(a, b)] -> {mx: interval_minmax.T | booleans.AND(reals.<=(d`1, mx), booleans.AND(reals.<=(mx, d`2), FORALL (x: interval_minmax.T): booleans.IMPLIES(booleans.AND(reals.<=(d`1, x), reals.<=(x, d`2)), reals.<=(d`3(mx), d`3(x)))))}]"))) (|max_x_TCC1| 0 (|max_x_TCC1-3| "" 3882418816 ("" (CASE "FORALL (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):        continuous?[J[a, b]](restrict[T, J[a, b], real](f))") (("1" (INST + "(LAMBDA (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):  max_pt[a,b](restrict[T,J[a,b],real](f)))") (("1" (SKOSIMP*) (("1" (PROP) (("1" (NAME "mp" "max_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (REPLACE -1) (("1" (TYPEPRED "mp") (("1" (LEMMA "connected_domain") (("1" (EXPAND "connected?") (("1" (INST?) (("1" (INST -1 "b!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP*) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "max_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (EXPAND "is_maximum?") (("1" (INST - "x!1") (("1" (EXPAND "restrict") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -3) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (INST - "a!1" "b!1" "x!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST -1 "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (TYPEPRED "f!1") (("2" (EXPAND "continuous?" 1) (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST - "a!1" "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "connected_domain") (("3" (EXPAND "connected?") (("3" (INST?) (("3" (INST -1 "b!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|max_x| EXISTENCE "" "[d: [a: T, b: {x: T | a < x}, fun_cont_on(a, b)] -> {mx: interval_minmax.T | booleans.AND(reals.<=(d`1, mx), booleans.AND(reals.<=(mx, d`2), FORALL (x: interval_minmax.T): booleans.IMPLIES(booleans.AND(reals.<=(d`1, x), reals.<=(x, d`2)), reals.>=(d`3(mx), d`3(x)))))}]")) (|max_x_TCC1-2| |nil| 3477750694 ("" (CASE "FORALL (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):        continuous?[J[a, b]](restrict[T, J[a, b], real](f))") (("1" (INST + "(LAMBDA (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):  max_pt[a,b](restrict[T,J[a,b],real](f)))") (("1" (SKOSIMP*) (("1" (PROP) (("1" (NAME "mp" "max_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (REPLACE -1) (("1" (TYPEPRED "mp") (("1" (LEMMA "connected_domain") (("1" (EXPAND "connected?") (("1" (INST?) (("1" (INST -1 "b!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP*) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "max_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (EXPAND "is_maximum?") (("1" (INST - "x!1") (("1" (EXPAND "restrict") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -3) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (INST - "a!1" "b!1" "x!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "x!1") (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST -1 "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (TYPEPRED "f!1") (("2" (EXPAND "continuous?" 1) (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "connected_domain") (("2" (EXPAND "connected?") (("2" (INST?) (("2" (INST - A!1 B!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "connected_domain") (("3" (EXPAND "connected?") (("3" (INST?) (("3" (INST -1 "b!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|x0!1| SKOLEM-CONST-DECL "J[a!1, b!1]" |interval_minmax| NIL) (|b!1| SKOLEM-CONST-DECL "{x: T | a!1 < x}" |interval_minmax| NIL) (|a!1| SKOLEM-CONST-DECL "T" |interval_minmax| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|is_maximum?| CONST-DECL "bool" |real_fun_preds| |reals|) (|max_pt| CONST-DECL "{xj: J | is_maximum?(xj, f)}" |continuity_interval| NIL) (|connected_domain| FORMULA-DECL NIL |interval_minmax| NIL) (|connected?| CONST-DECL "bool" |deriv_domain_def| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |interval_minmax| NIL) (T FORMAL-SUBTYPE-DECL NIL |interval_minmax| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|fun_cont_on| TYPE-EQ-DECL NIL |interval_minmax| NIL) (J NONEMPTY-TYPE-EQ-DECL NIL |continuity_interval| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) NIL (|max_x| EXISTENCE "" "[d: [a: T, b: {x: T | a < x}, fun_cont_on(a, b)] -> {mx: interval_minmax.T | booleans.AND(reals.<=(d`1, mx), booleans.AND(reals.<=(mx, d`2), FORALL (x: interval_minmax.T): booleans.IMPLIES(booleans.AND(reals.<=(d`1, x), reals.<=(x, d`2)), reals.>=(d`3(mx), d`3(x)))))}]")) (|max_x_TCC1-1| |nil| 3253546854 ("" (CASE "FORALL (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):        continuous?[J[a, b]](restrict[T, J[a, b], real](f))") (("1" (INST + "(LAMBDA (a: T, b: {x: T | a < x}, f: fun_cont_on(a, b)):  max_pt[a,b](restrict[T,J[a,b],real](f)))") (("1" (SKOSIMP*) (("1" (PROP) (("1" (NAME "mp" "max_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (REPLACE -1) (("1" (TYPEPRED "mp") (("1" (LEMMA "connected_domain") (("1" (INST?) (("1" (INST -1 "b!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP*) (("2" (TYPEPRED "x1!1") (("2" (LEMMA "connected_domain") (("2" (INST?) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "max_pt[a!1, b!1](restrict[T, J[a!1, b!1], real](f!1))") (("1" (EXPAND "is_maximum?") (("1" (INST - "x!1") (("1" (EXPAND "restrict") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (INST?) (("2" (HIDE -3) (("2" (LEMMA "connected_domain") (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (INST - "a!1" "b!1" "x1!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "x1!1") (("2" (LEMMA "connected_domain") (("2" (INST?) (("2" (INST -1 "b!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (TYPEPRED "f!1") (("2" (EXPAND "continuous?" 1) (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "connected_domain") (("2" (INST?) (("2" (INST - A!1 B!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (TYPEPRED "x1!1") (("3" (LEMMA "connected_domain") (("3" (INST?) (("3" (INST -1 "b!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL) NIL (|max_x| EXISTENCE "" "[d: [a: T, b: {x: T | a < x}, fun_cont_on(a, b)] -> {mx: interval_minmax.T | booleans.AND(reals.<=(d`1, mx), booleans.AND(reals.<=(mx, d`2), FORALL (x: interval_minmax.T): booleans.IMPLIES(booleans.AND(reals.<=(d`1, x), reals.<=(x, d`2)), reals.>=(d`3(mx), d`3(x)))))}]"))))
