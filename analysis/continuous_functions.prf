(|continuous_functions| (|continuity_def| 0 (|continuity_def-2| |nil| 3445335715 ("" (AUTO-REWRITE ("adherence_fullset[T]" "convergence_def[T]" "continuous?")) (("" (ASSERT) NIL NIL)) NIL) ((|convergence_def| FORMULA-DECL NIL |lim_of_functions| NIL) (|adherence_fullset| FORMULA-DECL NIL |lim_of_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL) (|continuity_def-1| |nil| 3302273405 ("" (AUTO-REWRITE ("adherence_fullset[T]" "convergence_def[T]" "continuous")) (("" (ASSERT) NIL NIL)) NIL) (NIL NIL) NIL)) (|continuity_def2| 0 (|continuity_def2-1| |nil| 3302273405 ("" (SKOLEM!) (("" (REWRITE "convergent_in_domain[T]") (("" (LEMMA "continuity_def") (("" (INST?) NIL NIL)) NIL)) NIL)) NIL) ((|convergent_in_domain| FORMULA-DECL NIL |lim_of_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuity_def| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|continuous_on_def| 0 (|continuous_on_def-2| "" 3882423754 ("" (SKOSIMP*) (("" (EXPAND "continuous_on?") (("" (EXPAND "convergence") (("" (SPLIT +) (("1" (FLATTEN) (("1" (SKOSIMP*) (("1" (SPLIT +) (("1" (HIDE -1) (("1" (EXPAND "adh") (("1" (EXPAND "extend") (("1" (SKOSIMP*) (("1" (TYPEPRED "y!1") (("1" (INST + "y!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (INST? -) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + "delta!1") (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "extend") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKOSIMP*) (("2" (INST?) (("2" (FLATTEN) (("2" (HIDE -1) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + "delta!1") (("2" (SKOSIMP*) (("2" (INST?) (("2" (EXPAND "extend") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|continuous_on_def-1| |nil| 3473503534 ("" (SKOSIMP*) (("" (EXPAND "continuous_on?") (("" (EXPAND "convergence") (("" (SPLIT +) (("1" (FLATTEN) (("1" (SKOSIMP*) (("1" (SPLIT +) (("1" (HIDE -1) (("1" (EXPAND "adh") (("1" (EXPAND "extend") (("1" (SKOSIMP*) (("1" (TYPEPRED "y!1") (("1" (INST + "y!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (INST? -) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + DELTA!1) (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "extend") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKOSIMP*) (("2" (INST?) (("2" (FLATTEN) (("2" (HIDE -1) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + DELTA!1) (("2" (SKOSIMP*) (("2" (INST?) (("2" (EXPAND "extend") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|continuous_on?| CONST-DECL "bool" |continuous_functions| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (E!1 SKOLEM-CONST-DECL "setof[T]" |continuous_functions| NIL) (|x!1| SKOLEM-CONST-DECL "T" |continuous_functions| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|extend| CONST-DECL "R" |extend| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|abs_nat| FORMULA-DECL NIL |abs_lems| |reals|) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL)) SHOSTAK)) (|sum_continuous| 0 (|sum_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "sum_fun_convergent[T]")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|sum_fun_convergent| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|diff_continuous| 0 (|diff_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "diff_fun_convergent[T]")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|diff_fun_convergent| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|prod_continuous| 0 (|prod_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "prod_fun_convergent[T]")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|prod_fun_convergent| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|const_continuous| 0 (|const_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "const_fun_convergent[T]" "adherence_fullset[T]")) NIL NIL) ((T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|adherence_fullset| FORMULA-DECL NIL |lim_of_functions| NIL) (|const_fun_convergent| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|scal_continuous| 0 (|scal_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "scal_fun_convergent[T]")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|scal_fun_convergent| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|neg_continuous| 0 (|neg_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "neg_fun_convergent[T]")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|neg_fun_convergent| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|div_continuous| 0 (|div_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE CONTINUITY_DEF2) (("" (REWRITE CONTINUITY_DEF2) (("" (REWRITE CONTINUITY_DEF2) (("" (LEMMA "convergent_in_domain[T]") (("" (INST - "g!1" "x0!1") (("" (ASSERT) (("" (LEMMA "convergent_in_domain[T]") (("" (INST - "f!1" "x0!1") (("" (ASSERT) (("" (HIDE -3 -4) (("" (EXPAND "convergent?") (("" (INST + "f!1(x0!1)/g!1(x0!1)") (("" (LEMMA "cv_div[T]") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (/ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|cv_div| FORMULA-DECL NIL |lim_of_functions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|convergent_in_domain| FORMULA-DECL NIL |lim_of_functions| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL)) (|inv_continuous| 0 (|inv_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE CONTINUITY_DEF2) (("" (REWRITE CONTINUITY_DEF2) (("" (REWRITE "convergent_in_domain[T]") (("" (LEMMA "cv_inv[T]") (("" (INST?) (("" (EXPAND "convergent?") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|convergent_in_domain| FORMULA-DECL NIL |lim_of_functions| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|cv_inv| FORMULA-DECL NIL |lim_of_functions| NIL) (/ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL)) (|identity_continuous| 0 (|identity_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuity_def2" "adherence_fullset[T]" "convergent_identity[T]")) NIL NIL) ((T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|adherence_fullset| FORMULA-DECL NIL |lim_of_functions| NIL) (|convergent_identity| FORMULA-DECL NIL |lim_of_functions| NIL) (|continuity_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|expt_continuous| 0 (|expt_continuous-2| "" 3882424459 ("" (SKOLEM 1 ("f" "_" "x0")) (("" (INDUCT "n") (("1" (FLATTEN) (("1" (LEMMA "const_continuous" ("u" "1")) (("1" (INST - "x0") (("1" (EXPAND "const_fun") (("1" (LEMMA "extensionality_postulate[T, real]" ("f" "LAMBDA (x: T): 1" "g" "f^0")) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP) (("2" (EXPAND "^") (("2" (EXPAND "^") (("2" (EXPAND "expt") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (ASSERT) (("2" (LEMMA "prod_continuous" ("x0" "x0" "f1" "f" "f2" "f^j!1")) (("2" (ASSERT) (("2" (LEMMA "extensionality_postulate[T, real]" ("f" "f * f ^ j!1" "g" "f^(1+j!1)")) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP) (("2" (EXPAND "*") (("2" (EXPAND "^") (("2" (EXPAND "^") (("2" (EXPAND "expt" 1 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|expt_continuous-1| |nil| 3322394322 ("" (SKOLEM 1 ("f" "_" "x0")) (("" (INDUCT "n") (("1" (FLATTEN) (("1" (LEMMA "const_continuous" ("u" "1")) (("1" (INST - "x0") (("1" (EXPAND "const_fun") (("1" (LEMMA "extensionality_postulate" ("f" "LAMBDA (x: T): 1" "g" "f^0")) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP) (("2" (EXPAND "^") (("2" (EXPAND "^") (("2" (EXPAND "expt") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (ASSERT) (("2" (LEMMA "prod_continuous" ("x0" "x0" "f1" "f" "f2" "f^j!1")) (("2" (ASSERT) (("2" (LEMMA "extensionality_postulate" ("f" "f * f ^ j!1" "g" "f^(1+j!1)")) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -1) (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (SKOSIMP) (("2" (EXPAND "*") (("2" (EXPAND "^") (("2" (EXPAND "^") (("2" (EXPAND "expt" 1 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (^ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (|const_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (^ CONST-DECL "real" |exponentiation| NIL) (|expt| DEF-DECL "real" |exponentiation| NIL) (|extensionality_postulate| FORMULA-DECL NIL |functions| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|prod_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|sum_set_continuous| 0 (|sum_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_sum[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (+ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence_sum| FORMULA-DECL NIL |convergence_functions| NIL)) NIL)) (|diff_set_continuous| 0 (|diff_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_diff[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence_diff| FORMULA-DECL NIL |convergence_functions| NIL)) NIL)) (|prod_set_continuous| 0 (|prod_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_prod[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence_prod| FORMULA-DECL NIL |convergence_functions| NIL)) NIL)) (|const_set_continuous| 0 (|const_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (GRIND :EXCLUDE ("convergence" "adh") :REWRITES ("convergence_const[T]" "member_adherent[T]")) NIL NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|extend| CONST-DECL "R" |extend| NIL) (|member_adherent| FORMULA-DECL NIL |convergence_functions| NIL) (|convergence_const| FORMULA-DECL NIL |convergence_functions| NIL)) NIL)) (|scal_set_continuous| 0 (|scal_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST - "y!1") (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_scal[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence_scal| FORMULA-DECL NIL |convergence_functions| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|)) NIL)) (|neg_set_continuous| 0 (|neg_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST?) (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_neg[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence_neg| FORMULA-DECL NIL |convergence_functions| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|)) NIL)) (|div_set_continuous| 0 (|div_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_div[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (/ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|convergence_div| FORMULA-DECL NIL |convergence_functions| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL)) (|inv_set_continuous| 0 (|inv_set_continuous-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (REWRITE "continuous_on_def") (("" (REWRITE "continuous_on_def") (("" (SKOSIMP*) (("" (INST - "y!1") (("" (GRIND :EXCLUDE "convergence" :REWRITES ("convergence_inv[T]")) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous_on_def| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|convergence_inv| FORMULA-DECL NIL |convergence_functions| NIL) (/ CONST-DECL "[T -> real]" |real_fun_ops| |reals|)) NIL)) (|identity_set_continuous| 0 (|identity_set_continuous-1| |nil| 3302273405 ("" (GRIND :EXCLUDE ("convergence" "adh") :REWRITES ("convergence_identity[T]" "member_adherent[T]")) NIL NIL) ((|I_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (I CONST-DECL "(bijective?[T, T])" |identity| NIL) (|continuous_on?| CONST-DECL "bool" |continuous_functions| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL)) (|continuous_def2| 0 (|continuous_def2-2| "" 3882424513 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SPLIT +) (("1" (FLATTEN) (("1" (EXPAND "continuous_on?") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST?) (("1" (INST - "epsilon!1") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKOSIMP*) (("2" (EXPAND "continuous_on?") (("2" (EXPAND "continuous?") (("2" (SKOSIMP*) (("2" (INST?) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|continuous_def2-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SPLIT +) (("1" (FLATTEN) (("1" (EXPAND "continuous_on?") (("1" (EXPAND "continuous?") (("1" (SKOSIMP*) (("1" (INST?) (("1" (INST - "epsilon!1") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST + DELTA!1) (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKOSIMP*) (("2" (EXPAND "continuous_on?") (("2" (EXPAND "continuous?") (("2" (SKOSIMP*) (("2" (INST?) (("1" (INST - "epsilon!1") (("1" (SKOSIMP*) (("1" (INST + DELTA!1) (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|x!1| SKOLEM-CONST-DECL "T" |continuous_functions| NIL) (|x0!1| SKOLEM-CONST-DECL "T" |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|continuous_on?| CONST-DECL "bool" |continuous_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|continuity_subset2| 0 (|continuity_subset2-1| |nil| 3302273405 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (EXPAND "continuous?") (("" (EXPAND "continuous_on?") (("" (SKOSIMP*) (("" (INST?) (("" (INST - "epsilon!1") (("" (SKOSIMP*) (("" (INST + "delta!1") (("" (SKOSIMP*) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_on?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|continuous_fun_TCC1| 0 (|continuous_fun_TCC1-2| "" 3790089917 ("" (INST + "I[T]") (("" (REWRITE "continuous_def2") (("" (REWRITE "identity_set_continuous") NIL NIL)) NIL)) NIL) ((|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL) (|identity_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (I CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK (|continuous_fun| EXISTENCE "" "{f | continuous_functions.continuous?(continuous_functions.f)}")) (|continuous_fun_TCC1-1| |nil| 3302273405 ("" (INST + "I[T]") (("" (REWRITE "continuous_def2") (("" (REWRITE "identity_set_continuous") (("" (REWRITE "subset_reflexive") NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|continuous_fun| EXISTENCE "" "{f | continuous_functions.continuous?(continuous_functions.f)}"))) (|sum_fun_continuous| 0 (|sum_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "sum_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (|sum_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL (|sum_fun_continuous| SUBTYPE "(real_fun_ops[T].+)(continuous_functions.h1, continuous_functions.h2)" "continuous_fun"))) (|diff_fun_continuous| 0 (|diff_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "diff_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (|diff_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL (|diff_fun_continuous| SUBTYPE "(real_fun_ops[T].-)(continuous_functions.h1, continuous_functions.h2)" "continuous_fun"))) (|prod_fun_continuous| 0 (|prod_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "prod_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (|prod_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL (|prod_fun_continuous| SUBTYPE "real_fun_ops[T].*(continuous_functions.h1, continuous_functions.h2)" "continuous_fun"))) (|const_fun_continuous| 0 (|const_fun_continuous-1| |nil| 3302273405 ("" (EXPAND "continuous?") (("" (GRIND :DEFS NIL :REWRITES ("const_continuous")) NIL NIL)) NIL) ((|const_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) NIL (|const_fun_continuous| SUBTYPE "real_fun_ops[T].const_fun(continuous_functions.u)" "continuous_fun"))) (|scal_fun_continuous| 0 (|scal_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "scal_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (|scal_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL (|scal_fun_continuous| SUBTYPE "real_fun_ops[T].*(continuous_functions.u, continuous_functions.h)" "continuous_fun"))) (|neg_fun_continuous| 0 (|neg_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "neg_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (|neg_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL (|neg_fun_continuous| SUBTYPE "(real_fun_ops[T].-)(continuous_functions.h)" "continuous_fun"))) (|div_fun_continuous| 0 (|div_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "div_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|nz_continuous_fun| TYPE-EQ-DECL NIL |continuous_functions| NIL) (|div_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL (|div_fun_continuous| SUBTYPE "real_fun_ops[T]./(continuous_functions.h, continuous_functions.h3)" "continuous_fun"))) (|id_fun_continuous| 0 (|id_fun_continuous-1| |nil| 3302273405 ("" (EXPAND "continuous?") (("" (SKOLEM!) (("" (REWRITE "identity_continuous") NIL NIL)) NIL)) NIL) ((T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|identity_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) NIL (|id_fun_continuous| SUBTYPE "identity[T].I" "continuous_fun"))) (|inv_fun_continuous| 0 (|inv_fun_continuous-1| |nil| 3302273405 ("" (GRIND :DEFS NIL :REWRITES ("continuous_def2" "inv_set_continuous" "subset_reflexive")) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|nz_continuous_fun| TYPE-EQ-DECL NIL |continuous_functions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|inv_set_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous_def2| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|linear_fun_cont| 0 (|linear_fun_cont-1| |nil| 3320166004 ("" (SKOSIMP*) (("" (CASE-REPLACE "(LAMBDA x: m!1 * x + b!1) = m!1 * I[T] + const_fun(b!1)") (("1" (HIDE -1) (("1" (AUTO-REWRITE "scal_fun_continuous") (("1" (AUTO-REWRITE "sum_fun_continuous") (("1" (AUTO-REWRITE "const_fun_continuous") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (I CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (+ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|sum_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (|const_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (|scal_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (|id_fun_continuous| NAME-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|one_over_x_cont_TCC1| 0 (|one_over_x_cont_TCC1-1| |nil| 3320157836 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|one_over_x_cont| SUBTYPE "continuous_functions.x" "nznum"))) (|one_over_x_cont| 0 (|one_over_x_cont-2| "" 3790089919 ("" (LEMMA "inv_fun_continuous") (("" (INST - "I") (("" (EXPAND "I") (("" (EXPAND "/") (("" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|nz_continuous_fun| TYPE-EQ-DECL NIL |continuous_functions| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (I CONST-DECL "(bijective?[T, T])" |identity| NIL) (|id_fun_continuous| NAME-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (/ CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|inv_fun_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) SHOSTAK) (|one_over_x_cont-1| |nil| 3320166157 ("" (LEMMA "inv_fun_continuous") (("" (INST - "I") (("1" (EXPAND "I") (("1" (EXPAND "/") (("1" (FLATTEN) NIL NIL)) NIL)) NIL) ("2" (EXPAND "I") (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|x_to_n_continuous_TCC1| 0 (|x_to_n_continuous_TCC1-1| |nil| 3320166272 ("" (SUBTYPE-TCC) NIL NIL) ((/= CONST-DECL "boolean" |notequal| NIL)) NIL (|x_to_n_continuous| SUBTYPE "continuous_functions.n" "{i: integers.int | booleans.OR(continuous_functions.x /= 0, reals.>=(i, 0))}"))) (|x_to_n_continuous| 0 (|x_to_n_continuous-2| |nil| 3306078831 ("" (INDUCT "n" 1) (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (LEMMA "const_fun_continuous") (("1" (INST?) (("1" (EXPAND "const_fun") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (CASE-REPLACE "(LAMBDA x: x ^ (j!1 + 1)) = (LAMBDA x: x*x ^ j!1)") (("1" (HIDE -1) (("1" (LEMMA "prod_fun_continuous") (("1" (INST -1 "(LAMBDA x: x)" "(LAMBDA x: x ^ j!1)") (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (LEMMA "id_fun_continuous") (("2" (EXPAND "I") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (APPLY-EXTENSIONALITY :HIDE? T) (("2" (EXPAND "^" 1) (("2" (EXPAND "expt" 1 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|j!1| SKOLEM-CONST-DECL "nat" |continuous_functions| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|id_fun_continuous| JUDGEMENT-TCC NIL |continuous_functions| NIL) (I CONST-DECL "(bijective?[T, T])" |identity| NIL) (|prod_fun_continuous| JUDGEMENT-TCC NIL |continuous_functions| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|const_fun_continuous| JUDGEMENT-TCC NIL |continuous_functions| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|expt| DEF-DECL "real" |exponentiation| NIL) (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL) (|x_to_n_continuous-1| |nil| 3302273425 ("" (INDUCT "n" 1) (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (LEMMA "const_fun_continuous[T]") (("1" (INST?) (("1" (EXPAND "const_fun") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (CASE-REPLACE "(LAMBDA x: x ^ (j!1 + 1)) = (LAMBDA x: x*x ^ j!1)") (("1" (HIDE -1) (("1" (LEMMA "prod_fun_continuous[T]") (("1" (INST -1 "(LAMBDA x: x)" "(LAMBDA x: x ^ j!1)") (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (LEMMA "id_fun_continuous[T]") (("2" (EXPAND "I") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (APPLY-EXTENSIONALITY :HIDE? T) (("2" (EXPAND "^" 1) (("2" (EXPAND "expt" 1 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL) NIL)) (|expt_fun_continuous| 0 (|expt_fun_continuous-1| |nil| 3322394393 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST - "x0!1") (("" (LEMMA "expt_continuous") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|expt_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) SHOSTAK)) (|sum_cont_fun| 0 (|sum_cont_fun-1| |nil| 3393866517 ("" (SKOSIMP*) (("" (ASSERT) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (LEMMA "sum_fun_continuous") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|continuous_fun| NONEMPTY-TYPE-EQ-DECL NIL |continuous_functions| NIL) (|sum_fun_continuous| JUDGEMENT-TCC NIL |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) SHOSTAK)) (|diff_cont_fun| 0 (|diff_cont_fun-1| |nil| 3393866553 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (REWRITE "diff_continuous") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|diff_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) SHOSTAK)) (|prod_cont_fun| 0 (|prod_cont_fun-1| |nil| 3393866579 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (REWRITE "prod_continuous") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|prod_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) SHOSTAK)) (|const_cont_fun| 0 (|const_cont_fun-1| |nil| 3393866606 ("" (SKOSIMP*) (("" (LEMMA "const_fun_continuous") (("" (INST?) NIL NIL)) NIL)) NIL) ((|const_fun_continuous| JUDGEMENT-TCC NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)) SHOSTAK)) (|scal_cont_fun| 0 (|scal_cont_fun-1| |nil| 3393866656 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST -1 "x0!1") (("" (REWRITE "scal_continuous") NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|scal_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) SHOSTAK)) (|neg_cont_fun| 0 (|neg_cont_fun-1| |nil| 3393866960 ("" (SKOSIMP*) (("" (ASSERT) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST?) (("" (REWRITE "neg_continuous") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|neg_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) SHOSTAK)) (|div_cont_fun| 0 (|div_cont_fun-1| |nil| 3393867018 ("" (SKOSIMP*) (("" (ASSERT) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST?) (("" (INST?) (("" (REWRITE "div_continuous") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|div_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) NIL)) (|inv_cont_fun| 0 (|inv_cont_fun-1| |nil| 3393867066 ("" (SKOSIMP*) (("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (INST -1 "x0!1") (("" (REWRITE "inv_continuous") NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|continuous?| CONST-DECL "bool" |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|inv_continuous| FORMULA-DECL NIL |continuous_functions| NIL)) NIL)) (|identity_cont_fun| 0 (|identity_cont_fun-1| |nil| 3393867114 ("" (EXPAND "continuous?") (("" (SKOSIMP*) (("" (REWRITE "identity_continuous") NIL NIL)) NIL)) NIL) ((T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|identity_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| NIL)) SHOSTAK)) (|expt_cont_fun| 0 (|expt_cont_fun-1| |nil| 3393867172 ("" (SKOSIMP*) (("" (REWRITE "expt_fun_continuous") NIL NIL)) NIL) ((|expt_fun_continuous| FORMULA-DECL NIL |continuous_functions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |continuous_functions| NIL) (T FORMAL-SUBTYPE-DECL NIL |continuous_functions| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK)))
