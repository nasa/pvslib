nth_derivative_subtype  [T: TYPE FROM real, S: TYPE FROM T ] % Welcome

: THEORY

  BEGIN
%-------------------------------------------------------------------------
%%Assume that the domain is a derivative domain, and does not have one
%  element. 
%-------------------------------------------------------------------------

  ASSUMING
    IMPORTING deriv_domain_def

    deriv_domain     : ASSUMPTION deriv_domain?[T]
    not_one_element  : ASSUMPTION not_one_element?[T]

  ENDASSUMING

IMPORTING nth_derivatives
IMPORTING derivatives_subtype

%-------------------------------------------------------------------------
%%If a function is derivable on a larger domain, and the smaller
%  sub-domain is a derivative domain, then the function is derivable
%  on the smaller domain 
%-------------------------------------------------------------------------

  derivable_subtype_nth: LEMMA FORALL(n:nat,f:[T->real]):
    derivable_n_times?[T](f,n) AND deriv_domain?[S] AND not_one_element?[S] 
      IMPLIES derivable_n_times?[S](f,n)

%-------------------------------------------------------------------------
%%The derivative of a function on a subdomain is the same as the
%  derivative on the larger domain, given that the subdomain is an open
%  set
%-------------------------------------------------------------------------

  nderiv_subtype: LEMMA FORALL(n:nat,f:[T->real]):
    derivable_n_times?[T](f,n) AND  deriv_domain?[S] AND not_one_element?[S] 
      IMPLIES nderiv[S](n,f) = (LAMBDA (s:S): nderiv[T](n,f)(s))
      
 %-------------------------------------------------------------------------
%%If the subdomain contains all elements of the larger domain around a
%  point, then derivability at the point is equivalent regardless of the
%  which domain is being considered  (T or S)
%-------------------------------------------------------------------------

  %derivable_nth_subtype_del: LEMMA
  %  FORALL(n:nat,f:[T->real],g:[S->real]):
  %  (FORALL(x:S):  EXISTS(del:posreal):
  %            FORALL(y:T): abs(x-y)<del IMPLIES
%		member[T](y,fullset[S])) AND 
 %      ((deriv_domain?[S] AND not_one_element?[S])
 %      AND (LAMBDA(s:S): f(s)) = g)
 %        IMPLIES (derivable_n_times?[S](g,n) IFF derivable_n_times?[T](f,n))

%-------------------------------------------------------------------------
%%If the subdomain contains all elements of the larger domain around a
%  point, then the derivative at the point is equivalent regardless of the
%  which domain is being considered  (T or S)
%-------------------------------------------------------------------------

 % nderiv_subtype_del: LEMMA
 %   FORALL(f:[T->real],g:[S->real],
 %   x:{xx:S | EXISTS(del:posreal):
 %             FORALL(y:T): abs(xx-y)<del IMPLIES%
%	        member[T](y,fullset[S])}):
%       (((deriv_domain?[S] AND not_one_element?[S])
%       AND (LAMBDA(s:S): f(s)) = g)
%       AND (derivable?[S](g,x) OR derivable?[T](f,x)))
%	  IMPLIES (deriv[S](g,x) = deriv[T](f,x))

  END nth_derivative_subtype
