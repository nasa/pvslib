(|deriv_domain|
 (|deriv_domain_real| 0
  (|deriv_domain_real-1| |nil| 3471608467
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*) (("" (INST + "e!1/2") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL))
   SHOSTAK))
 (|deriv_domain_nzreal| 0
  (|deriv_domain_nzreal-1| |nil| 3472403211
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*)
      (("" (CASE "x!1 > 0")
        (("1" (INST + "e!1/2") (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL))
          NIL)
         ("2" (INST + "-e!1/2") (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|x!1| SKOLEM-CONST-DECL "nzreal" |deriv_domain| NIL)
    (|e!1| SKOLEM-CONST-DECL "posreal" |deriv_domain| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL))
   SHOSTAK))
 (|deriv_domain_posreal| 0
  (|deriv_domain_posreal-1| |nil| 3472403239
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*) (("" (INST + "e!1/2") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL))
   SHOSTAK))
 (|deriv_domain_nnreal| 0
  (|deriv_domain_nnreal-1| |nil| 3472467811
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*) (("" (INST + "e!1/2") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL))
   NIL))
 (|deriv_domain_negreal| 0
  (|deriv_domain_negreal-1| |nil| 3472467855
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*) (("" (INST + "-e!1/2") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonpos_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|negreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL))
   NIL))
 (|deriv_domain_open| 0
  (|deriv_domain_open-1| |nil| 3472403253
   ("" (SKOSIMP*)
    (("" (EXPAND "deriv_domain?")
      (("" (SKOSIMP*)
        (("" (INST + "min((b!1-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|deriv_domain_closed| 0
  (|deriv_domain_closed-2| |nil| 3472477426
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*)
      (("" (CASE "x!1 = b!1")
        (("1" (INST + "-min((b!1-a!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
         ("2" (INST + "min((b!1-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL)
  (|deriv_domain_closed-1| |nil| 3472403314
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*)
      (("" (CASE "x!1 = b")
        (("1" (INST + "-min((b-a)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
         ("2" (INST + "min((b-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) NIL))
 (|deriv_domain_oc| 0
  (|deriv_domain_oc-1| |nil| 3472492490
   ("" (SKOSIMP*)
    (("" (EXPAND "deriv_domain?")
      (("" (SKOSIMP*)
        (("" (INST + "-min((x!1-a!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   SHOSTAK))
 (|deriv_domain_co| 0
  (|deriv_domain_co-1| |nil| 3474889145
   ("" (SKOSIMP*)
    (("" (EXPAND "deriv_domain?")
      (("" (SKOSIMP*)
        (("" (INST + "min((b!1-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|deriv_domain_posreal_le| 0
  (|deriv_domain_posreal_le-1| |nil| 3472477455
   ("" (EXPAND "deriv_domain?")
    (("" (SKOSIMP*)
      (("" (CASE "x!1 = a!1")
        (("1" (INST + "-min((a!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
         ("2" (INST + "min((a!1-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   SHOSTAK))
 (|deriv_domain_posreal_lt| 0
  (|deriv_domain_posreal_lt-1| |nil| 3472492558
   ("" (SKOSIMP*)
    (("" (EXPAND "deriv_domain?")
      (("" (SKOSIMP*)
        (("" (INST + "min((a!1-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|deriv_domain_nnreal_lt| 0
  (|deriv_domain_nnreal_lt-1| |nil| 3472477526
   ("" (SKOSIMP*)
    (("" (EXPAND "deriv_domain?")
      (("" (SKOSIMP*)
        (("" (INST + "min((a!1-x!1)/2,e!1/2)")
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|not_one_element_real| 0
  (|not_one_element_real-1| |nil| 3477818619
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP*) (("" (INST + "x!1+1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|not_one_element_nzreal| 0
  (|not_one_element_nzreal-1| |nil| 3477818670
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP*)
      (("" (INST-CP + "1")
        (("" (ASSERT)
          (("" (GROUND) (("" (INST-CP + "2") (("" (GROUND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|not_one_element_posreal| 0
  (|not_one_element_posreal-1| |nil| 3477818716
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP*) (("" (INST + "x!1+1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|not_one_element_nnreal| 0
  (|not_one_element_nnreal-1| |nil| 3477818723
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP*) (("" (INST + "x!1+1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|not_one_element_negreal| 0
  (|not_one_element_negreal-1| |nil| 3477818729
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP*)
      (("" (INST-CP + "-1")
        (("" (INST-CP + "-2") (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|deriv_domain_noe| 0
  (|deriv_domain_noe-1| |nil| 3828101867
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain?" -1)
      (("" (EXPAND "not_one_element?" 1)
        (("" (SKEEP)
          (("" (INST -1 "1" "x")
            (("" (SKEEP)
              (("" (TYPEPRED "y")
                (("" (INST 1 "y+x") (("" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL))
 (|noe_open| 0
  (|noe_open-1| |nil| 3901122253
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?" 2)
      (("" (SKEEP)
        (("" (CASE "b>a")
          (("1" (INST-CP 2 "a + (b-a)/2")
            (("1" (INST 2 "a+(b-a)/3") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL)
   SHOSTAK))
 (|noe_closed| 0
  (|noe_closed-1| |nil| 3901122859
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?" 2)
      (("" (SKEEP)
        (("" (INST-CP 2 "a") (("" (INST 2 "b") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|connected_real| 0
  (|connected_real-1| |nil| 3477844808
   ("" (EXPAND "connected?") (("" (PROPAX) NIL NIL)) NIL) (NIL) SHOSTAK))
 (|connected_posreal| 0
  (|connected_posreal-1| |nil| 3477845129
   ("" (EXPAND "connected?") (("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   (NIL NIL NIL) SHOSTAK))
 (|connected_nnreal| 0
  (|connected_nnreal-1| |nil| 3477845139
   ("" (EXPAND "connected?") (("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL)) NIL)
   (NIL NIL NIL) SHOSTAK))
 (|connected_negreal| 0
  (|connected_negreal-1| |nil| 3477845146
   ("" (EXPAND "not_one_element?")
    (("" (SKOSIMP*) (("" (INST + "x!1-1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK)))

