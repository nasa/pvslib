(|rs_integral_prep| (|IMP_rs_integral_def_TCC1| 0 (|IMP_rs_integral_def_TCC1-1| |nil| 3786728950 ("" (USE "connected_domain") NIL NIL) ((|connected_domain| FORMULA-DECL NIL |rs_integral_prep| NIL)) NIL (|IMP_rs_integral_def| ASSUMING "rs_integral_def[T].rs_integral_def" "connected_domain: ASSUMPTION deriv_domain_def[T].connected?"))) (|IMP_rs_integral_def_TCC2| 0 (|IMP_rs_integral_def_TCC2-1| |nil| 3786728950 ("" (USE "not_one_element") NIL NIL) ((|not_one_element| FORMULA-DECL NIL |rs_integral_prep| NIL)) NIL (|IMP_rs_integral_def| ASSUMING "rs_integral_def[T].rs_integral_def" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|integral_const_fun| 0 (|integral_const_fun-1| |nil| 3253532115 ("" (SKOSIMP*) (("" (REWRITE "integral_def") (("" (EXPAND "integral?") (("" (SKOSIMP*) (("" (AUTO-REWRITE "Rie_sum") (("" (INST + "1") (("" (SKOSIMP*) (("" (CASE-REPLACE "R!1 = D!1*(g!1(b!1)-g!1(a!1))") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "R!1") (("2" (EXPAND "Riemann_sum?") (("2" (SKOSIMP*) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (ASSERT) (("2" (EXPAND "const_fun") (("2" (CASE "FORALL (n: below(length(P!1))): n > 0 IMPLIES          sigma[below(length(P!1) - 1)]          (0, n-1,           LAMBDA (n: below(length(P!1) - 1)):             g!1(seq(P!1)(1 + n)) * D!1 - g!1(seq(P!1)(n)) * D!1) =   D!1*g!1(seq(P!1)(n)) - D!1*g!1(seq(P!1)(0))") (("1" (INST -1 "length(P!1)-1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (INDUCT "n" 1 "below_induction[length(P!1)]") (("1" (ASSERT) NIL NIL) ("2" (SKOSIMP*) (("2" (ASSERT) (("2" (CASE-REPLACE "jb!1 = 0") (("1" (HIDE -3) (("1" (EXPAND "sigma") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "sigma" 2) (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKOSIMP*) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKOSIMP*) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (<= CONST-DECL "bool" |reals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|sigma_0_neg| FORMULA-DECL NIL |sigma_below| |reals|) (|below_induction| FORMULA-DECL NIL |bounded_nat_inductions| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL)) (|integral_const_restrict| 0 (|integral_const_restrict-3| |nil| 3278176127 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST?) (("" (ASSERT) (("" (FLATTEN) (("" (TYPEPRED "integral(a!1, b!1,g!1, const_fun(D!1))") (("" (EXPAND "integral?") (("" (SKOSIMP*) (("" (INST -1 "epsi!1") (("" (SKOSIMP*) (("" (INST + "delta!1") (("" (SKOSIMP*) (("" (INST?) (("" (ASSERT) (("" (REPLACE -3) (("" (TYPEPRED "R!1") (("" (INST -2 "R!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (EXPAND "Riemann_sum?") (("2" (AUTO-REWRITE "Rie_sum") (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (INST + "xis!1") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (ASSERT) (("2" (EXPAND "const_fun") (("2" (REWRITE "sigma_restrict_eq[below(length(P!1) - 1)]") (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "xis!1") (("2" (INST - "x!1") (("2" (TYPEPRED "P!1") (("2" (INST-CP - "x!1") (("2" (INST - "x!1+1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_const_fun| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|sigma_restrict_eq| FORMULA-DECL NIL |sigma| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|restrict| CONST-DECL "[T -> real]" |sigma| |reals|) (|x!1| SKOLEM-CONST-DECL "below(length(P!1) - 1)" |rs_integral_prep| NIL) (|xis!1| SKOLEM-CONST-DECL "xis?[T](a!1, b!1, P!1)" |rs_integral_prep| NIL) (|closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (D!1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (R!1 SKOLEM-CONST-DECL "(Riemann_sum?[T](a!1, b!1, P!1, g!1, f!1))" |rs_integral_prep| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL) (|integral_const_restrict-2| |nil| 3277741047 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST?) (("" (ASSERT) (("" (FLATTEN) (("" (TYPEPRED "integral(a!1, b!1, const_fun[T](D!1))") (("1" (EXPAND "integral?") (("1" (SKOSIMP*) (("1" (INST -1 "epsi!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -3) (("1" (TYPEPRED "R!1") (("1" (INST -2 "R!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (EXPAND "Riemann_sum?") (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (INST + "xis!1") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (ASSERT) (("2" (EXPAND "const_fun") (("2" (REWRITE "sigma_restrict_eq[below(length(P!1) - 1)]") (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (TYPEPRED "P!1") (("2" (TYPEPRED "xis!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "xis!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (HIDE 2) (("2" (TYPEPRED "xis!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL) NIL) (|integral_const_restrict-1| |nil| 3253532115 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST?) (("" (ASSERT) (("" (FLATTEN) (("" (TYPEPRED "integral(a!1, b!1, const_fun[T](D!1))") (("1" (EXPAND "is_integral") (("1" (SKOSIMP*) (("1" (INST -1 "epsi!1") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (CASE-REPLACE "Riemann_sum(a!1, b!1, P!1, f!1) = Riemann_sum(a!1, b!1, P!1, const_fun[T](D!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (EXPAND "Riemann_sum") (("2" (REWRITE "sigma_restrict_eq") (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "const_fun") (("1" (INST?) (("1" (REPLACE -3) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (TYPEPRED "P!1") (("2" (INST - "i!1-1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (TYPEPRED "P!1") (("2" (INST - "n!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (SKOSIMP*) (("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL) NIL)) (|integral_scal| 0 (|integral_scal-4| "" 3790091073 ("" (SKOSIMP*) (("" (CASE-REPLACE "D!1 = 0") (("1" (ASSERT) (("1" (EXPAND "*") (("1" (LEMMA "integral_const_fun") (("1" (INST - "0" "a!1" "b!1" "g!1") (("1" (EXPAND "const_fun") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "integral_def") (("2" (TYPEPRED "integral(a!1, b!1, g!1,f!1)") (("2" (EXPAND "integral?") (("2" (SKOSIMP*) (("2" (INST -1 "epsi!1/abs(D!1)") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (AUTO-REWRITE "Rie_sum") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1,g!1, P!1, xis!1, D!1 * f!1) = D!1*Rie_sum(a!1, b!1, g!1,P!1, xis!1, f!1)") (("1" (EXPAND "Rie_sum") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (INST - "sigma[below(length(P!1) - 1)]
                                              (0, length(P!1) - 2,
                                               LAMBDA (n: below(length(P!1) - 1)):
                                                 g!1(P!1`seq(1 + n)) * f!1(xis!1(n)) -
                                                  g!1(P!1`seq(n)) * f!1(xis!1(n)))") (("1" (CROSS-MULT -1) (("1" (ASSERT) (("1" (REWRITE "abs_mult " :DIR RL) (("1" (ASSERT) NIL NIL) ("2" (HIDE 3) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2)) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 3) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (EXPAND "Rie_sum") (("2" (ASSERT) (("2" (LEMMA "sigma_scal[below(length(P!1) - 1)]") (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "epsi!1 / abs(D!1) > 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (CROSS-MULT 1) NIL NIL)) NIL) ("3" (LEMMA "abs_eq_0") (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "abs_eq_0") (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|integral_const_fun| FORMULA-DECL NIL |rs_integral_prep| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL) (|abs_nat| FORMULA-DECL NIL |abs_lems| |reals|) (|abs_eq_0| FORMULA-DECL NIL |abs_lems| |reals|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|div_mult_pos_neg_lt2| FORMULA-DECL NIL |extra_real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|abs_mult| FORMULA-DECL NIL |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|sigma| DEF-DECL "real" |sigma| |reals|) (|xis!1| SKOLEM-CONST-DECL "xis?[T](a!1, b!1, P!1)" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|epsi!1| SKOLEM-CONST-DECL "posreal" |rs_integral_prep| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (D!1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (< CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL)) SHOSTAK) (|integral_scal-3| |nil| 3280253820 ("" (SKOSIMP*) (("" (CASE-REPLACE "D!1 = 0") (("1" (ASSERT) (("1" (EXPAND "*") (("1" (LEMMA "integral_const_fun") (("1" (INST - "0" "a!1" "b!1" "g!1") (("1" (EXPAND "const_fun") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "integral_def") (("2" (TYPEPRED "integral(a!1, b!1, g!1,f!1)") (("2" (EXPAND "integral?") (("2" (SKOSIMP*) (("2" (INST -1 "epsi!1/abs(D!1)") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (AUTO-REWRITE "Rie_sum") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1,g!1, P!1, xis!1, D!1 * f!1) = D!1*Rie_sum(a!1, b!1, g!1,P!1, xis!1, f!1)") (("1" (EXPAND "Rie_sum") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (INST - "sigma[below(length(P!1) - 1)]
                                              (0, length(P!1) - 2,
                                               LAMBDA (n: below(length(P!1) - 1)):
                                                 g!1(P!1`seq(1 + n)) * f!1(xis!1(n)) -
                                                  g!1(P!1`seq(n)) * f!1(xis!1(n)))") (("1" (CROSS-MULT -1) (("1" (ASSERT) (("1" (SPLIT -1) (("1" (FLATTEN) (("1" (REWRITE "abs_mult " :DIR RL) (("1" (ASSERT) NIL NIL) ("2" (HIDE 3) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (1 2)) (("2" (EXPAND "abs") (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2)) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 3) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (EXPAND "Rie_sum") (("2" (ASSERT) (("2" (LEMMA "sigma_scal[below(length(P!1) - 1)]") (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "epsi!1 / abs(D!1) > 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (LEMMA "abs_eq_0") (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "abs_eq_0") (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|integral_scal-2| |nil| 3278176311 ("" (SKOSIMP*) (("" (CASE-REPLACE "D!1 = 0") (("1" (ASSERT) (("1" (EXPAND "*") (("1" (LEMMA "integral_const_fun") (("1" (INST - "0" "a!1" "b!1") (("1" (EXPAND "const_fun") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "integral_def") (("2" (TYPEPRED "integral(a!1, b!1, f!1)") (("1" (EXPAND "integral?") (("1" (SKOSIMP*) (("1" (INST -1 "epsi!1/abs(D!1)") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (AUTO-REWRITE "Rie_sum") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1, P!1, xis!1, D!1 * f!1) = D!1*Rie_sum(a!1, b!1, P!1, xis!1, f!1)") (("1" (EXPAND "Rie_sum") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (INST - "sigma[below(length(P!1) - 1)]
                          (0, length(P!1) - 2,
                           LAMBDA (n: below(length(P!1) - 1)):
                             P!1`seq(1 + n) * f!1(xis!1`seq(n)) -
                              P!1`seq(n) * f!1(xis!1`seq(n)))") (("1" (CROSS-MULT -1) (("1" (ASSERT) (("1" (SPLIT -1) (("1" (FLATTEN) (("1" (REWRITE "abs_mult " :DIR RL) (("1" (ASSERT) NIL NIL) ("2" (HIDE 3) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) (("3" (TYPEPRED "xis!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (1 2)) (("2" (EXPAND "abs") (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) (("3" (TYPEPRED "xis!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (1 2)) (("4" (EXPAND "abs") (("4" (LIFT-IF) (("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "Riemann_sum?") (("2" (ASSERT) (("2" (INST + "xis!1") NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "xis!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (EXPAND "Rie_sum") (("2" (ASSERT) (("2" (LEMMA "sigma_scal[below(length(P!1) - 1)]") (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "*") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (TYPEPRED "xis!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (ASSERT) (("2" (CASE "epsi!1 / abs(D!1) > 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -2) (("2" (CROSS-MULT 1) (("1" (GRIND) NIL NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 3) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL) NIL) (|integral_scal-1| |nil| 3253532115 ("" (SKOSIMP*) (("" (CASE-REPLACE "D!1 = 0") (("1" (ASSERT) (("1" (EXPAND "*") (("1" (LEMMA "integral_const_fun") (("1" (INST - "0" "a!1" "b!1") (("1" (EXPAND "const_fun") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "integral_def") (("2" (TYPEPRED "integral(a!1, b!1, f!1)") (("1" (EXPAND "integral?") (("1" (SKOSIMP*) (("1" (INST -1 "epsi!1/abs(D!1)") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1, P!1, xis!1, D!1 * f!1) = D!1*Rie_sum(a!1, b!1, P!1, xis!1, f!1)") (("1" (EXPAND "Rie_sum") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (INST - "sigma[below(length(P!1) - 1)]
                (0, length(P!1) - 2,
                 LAMBDA (n: below(length(P!1) - 1)):
                   P!1`seq(1 + n) * f!1(xis!1`seq(n)) -
                    P!1`seq(n) * f!1(xis!1`seq(n)))") (("1" (CROSS-MULT -1) (("1" (ASSERT) (("1" (SPLIT -1) (("1" (FLATTEN) (("1" (REWRITE "abs_mult " :DIR RL) (("1" (ASSERT) NIL NIL) ("2" (HIDE 3) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) (("3" (TYPEPRED "xis!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (1 2)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) (("3" (TYPEPRED "xis!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (1 2)) (("4" (EXPAND "abs") (("4" (LIFT-IF) (("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "Riemann_sum?") (("2" (ASSERT) (("2" (INST + "xis!1") NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "xis!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (EXPAND "Rie_sum") (("2" (ASSERT) (("2" (LEMMA "sigma_scal[below(length(P!1) - 1)]") (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "*") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) (("2" (TYPEPRED "xis!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (ASSERT) (("2" (CASE "epsi!1 / abs(D!1) > 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -2) (("2" (CROSS-MULT 1) (("1" (GRIND) NIL NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 3) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL) NIL)) (|integral_scal_g| 0 (|integral_scal_g-2| "" 3790091077 ("" (SKOSIMP*) (("" (CASE-REPLACE "D!1 = 0") (("1" (ASSERT) (("1" (CASE "integral?(a!1, b!1, LAMBDA (x: T): 0 * g!1(x), f!1, 0)") (("1" (EXPAND "integrable?") (("1" (SPLIT +) (("1" (INST + "0") (("1" (ASSERT) (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "integral(a!1, b!1, 0 * g!1, f!1)") (("2" (LEMMA "integral_unique") (("2" (INST - "0" "integral(a!1, b!1, 0 * g!1, f!1)" "a!1" "b!1" "f!1" "0*g!1") (("2" (ASSERT) (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "integral?") (("2" (SKOSIMP*) (("2" (INST + "1") (("2" (SKOSIMP*) (("2" (TYPEPRED "R!1") (("2" (EXPAND "Riemann_sum?") (("2" (SKOSIMP*) (("2" (CASE "Rie_sum(a!1, b!1, LAMBDA (x: T): 0 * g!1(x), P!1, xis!1, f!1) = 0") (("1" (LEMMA "abs_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "Rie_sum") (("2" (LEMMA "sigma_zero[below(P!1`length-1)]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "integral_def") (("2" (TYPEPRED "integral(a!1, b!1, g!1,f!1)") (("2" (EXPAND "integral?") (("2" (SKOSIMP*) (("2" (INST -1 "epsi!1/abs(D!1)") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (AUTO-REWRITE "Rie_sum") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1,g!1, P!1, xis!1, D!1 * f!1) = D!1*Rie_sum(a!1, b!1, g!1,P!1, xis!1, f!1)") (("1" (EXPAND "Rie_sum") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST - "sigma[below(P!1`length - 1)]
                                                 (0, P!1`length - 2,
                                                  LAMBDA (n: below(P!1`length - 1)):
                                                    g!1(P!1`seq(1 + n)) * f!1(xis!1`seq(n)) -
                                                     g!1(P!1`seq(n)) * f!1(xis!1`seq(n)))") (("1" (CROSS-MULT -1) (("1" (ASSERT) (("1" (LEMMA "sigma_scal[below(P!1`length - 1)]") (("1" (INST?) (("1" (INST - "D!1") (("1" (EXPAND "*") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (LEMMA "abs_mult") (("1" (INST - "integral(a!1, b!1, g!1, f!1) -
                                                           sigma[below(P!1`length - 1)]
                                                               (0, P!1`length - 2,
                                                                LAMBDA (n: below(P!1`length - 1)):
                                                                  g!1(P!1`seq(1 + n)) * f!1(xis!1`seq(n)) -
                                                                   g!1(P!1`seq(n)) * f!1(xis!1`seq(n)))" "D!1") (("1" (ASSERT) NIL NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "Riemann_sum?") (("2" (INST + "xis!1") (("2" (EXPAND "Rie_sum") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (HIDE 3) (("2" (EXPAND "Rie_sum") (("2" (EXPAND "*") (("2" (LEMMA "sigma_scal[below(P!1`length - 1)]") (("1" (INST - "LAMBDA (n: below(P!1`length - 1)):
                                           f!1(xis!1`seq(n)) * g!1(P!1`seq(1 + n)) -
                                            f!1(xis!1`seq(n)) * g!1(P!1`seq(n))" "D!1" "P!1`length-2" "0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "epsi!1/abs(D!1)>0") (("1" (ASSERT) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|integral_unique| FORMULA-DECL NIL |rs_integral_def| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|sigma_nat| APPLICATION-JUDGEMENT "nat" |sigma_below| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|) (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|) (|abs_nat| FORMULA-DECL NIL |abs_lems| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}" |real_defs| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|xis!1| SKOLEM-CONST-DECL "xis?[T](a!1, b!1, P!1)" |rs_integral_prep| NIL) (|sigma| DEF-DECL "real" |sigma| |reals|) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|abs_mult| FORMULA-DECL NIL |real_props| NIL) (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|div_mult_pos_neg_lt2| FORMULA-DECL NIL |extra_real_props| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|epsi!1| SKOLEM-CONST-DECL "posreal" |rs_integral_prep| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (D!1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL)) SHOSTAK) (|integral_scal_g-1| |nil| 3488722885 ("" (SKOSIMP*) (("" (CASE-REPLACE "D!1 = 0") (("1" (ASSERT) (("1" (CASE "integral?(a!1, b!1, LAMBDA (x: T): 0 * g!1(x), f!1, 0)") (("1" (EXPAND "integrable?") (("1" (SPLIT +) (("1" (INST + "0") (("1" (ASSERT) (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "integral(a!1, b!1, 0 * g!1, f!1)") (("2" (LEMMA "integral_unique") (("2" (INST - "0" "integral(a!1, b!1, 0 * g!1, f!1)" "a!1" "b!1" "f!1" "0*g!1") (("2" (ASSERT) (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "integral?") (("2" (SKOSIMP*) (("2" (INST + "1") (("2" (SKOSIMP*) (("2" (TYPEPRED "R!1") (("2" (EXPAND "Riemann_sum?") (("2" (SKOSIMP*) (("2" (CASE "Rie_sum(a!1, b!1, LAMBDA (x: T): 0 * g!1(x), P!1, xis!1, f!1) = 0") (("1" (LEMMA "abs_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (EXPAND "Rie_sum") (("2" (LEMMA "sigma_zero[below(P!1`length-1)]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "integral_def") (("2" (TYPEPRED "integral(a!1, b!1, g!1,f!1)") (("2" (EXPAND "integral?") (("2" (SKOSIMP*) (("2" (INST -1 "epsi!1/abs(D!1)") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (AUTO-REWRITE "Rie_sum") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1,g!1, P!1, xis!1, D!1 * f!1) = D!1*Rie_sum(a!1, b!1, g!1,P!1, xis!1, f!1)") (("1" (EXPAND "Rie_sum") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST - "sigma[below(P!1`length - 1)]
                                                 (0, P!1`length - 2,
                                                  LAMBDA (n: below(P!1`length - 1)):
                                                    g!1(P!1`seq(1 + n)) * f!1(xis!1`seq(n)) -
                                                     g!1(P!1`seq(n)) * f!1(xis!1`seq(n)))") (("1" (CROSS-MULT -1) (("1" (ASSERT) (("1" (SPLIT -1) (("1" (FLATTEN) (("1" (LEMMA "sigma_scal[below(P!1`length - 1)]") (("1" (INST?) (("1" (INST - "D!1") (("1" (EXPAND "*") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (LEMMA "abs_mult") (("1" (INST - "integral(a!1, b!1, g!1, f!1) -
                                                           sigma[below(P!1`length - 1)]
                                                               (0, P!1`length - 2,
                                                                LAMBDA (n: below(P!1`length - 1)):
                                                                  g!1(P!1`seq(1 + n)) * f!1(xis!1`seq(n)) -
                                                                   g!1(P!1`seq(n)) * f!1(xis!1`seq(n)))" "D!1") (("1" (ASSERT) NIL NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (1 2)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "Riemann_sum?") (("2" (INST + "xis!1") (("2" (EXPAND "Rie_sum") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (HIDE 3) (("2" (EXPAND "Rie_sum") (("2" (EXPAND "*") (("2" (LEMMA "sigma_scal[below(P!1`length - 1)]") (("1" (INST - "LAMBDA (n: below(P!1`length - 1)):
                                           f!1(xis!1`seq(n)) * g!1(P!1`seq(1 + n)) -
                                            f!1(xis!1`seq(n)) * g!1(P!1`seq(n))" "D!1" "P!1`length-2" "0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "epsi!1/abs(D!1)>0") (("1" (ASSERT) NIL NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL)) (|integral_sum| 0 (|integral_sum-1| |nil| 3253532115 ("" (SKOSIMP*) (("" (REWRITE "integral_def") (("" (TYPEPRED "integral(a!1, b!1, g!1, f!1)") (("" (TYPEPRED "integral(a!1, b!1, g!1, h!1)") (("" (NAME-REPLACE "I1" "integral(a!1, b!1, g!1, f!1)") (("" (NAME-REPLACE "I2" "integral(a!1, b!1, g!1, h!1)") (("" (EXPAND "integral?") (("" (SKOSIMP*) (("" (INST -1 "epsi!1/2") (("" (INST - "epsi!1/2") (("" (SKOSIMP*) (("" (INST + "min(delta!1,delta!2)") (("" (SKOSIMP*) (("" (INST - "P!1") (("" (INST - "P!1") (("" (SPLIT -1) (("1" (SPLIT -2) (("1" (HIDE -4 -5 -6) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1, g!1, P!1, xis!1, LAMBDA x: f!1(x) + h!1(x)) =                       Rie_sum(a!1, b!1, g!1,P!1, xis!1, f!1) + Rie_sum(a!1, b!1, g!1,P!1, xis!1, h!1)") (("1" (HIDE -1) (("1" (INST - "Rie_sum(a!1, b!1, g!1, P!1, xis!1, f!1)") (("1" (INST - "Rie_sum(a!1, b!1, g!1, P!1, xis!1, h!1)") (("1" (LEMMA "triangle") (("1" (INST -1 "I1 - Rie_sum(a!1, b!1,g!1, P!1, xis!1, f!1)" "I2 - Rie_sum(a!1, b!1, g!1,P!1, xis!1, h!1)") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Riemann_sum?") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Riemann_sum?") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2) (("2" (EXPAND "Rie_sum") (("2" (ASSERT) (("2" (LEMMA "sigma_sum[below(length(P!1) - 1)]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (< CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|xis!1| SKOLEM-CONST-DECL "xis?[T](a!1, b!1, P!1)" |rs_integral_prep| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|triangle| FORMULA-DECL NIL |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|h!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|sigma_sum| FORMULA-DECL NIL |sigma| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)) NIL)) (|integral_sum_g| 0 (|integral_sum_g-1| |nil| 3488732672 ("" (SKOSIMP*) (("" (REWRITE "integral_def") (("" (TYPEPRED "integral(a!1, b!1, g!1, f!1)") (("" (TYPEPRED "integral(a!1, b!1, h!1, f!1)") (("" (NAME-REPLACE "I1" "integral(a!1, b!1, g!1, f!1)") (("" (NAME-REPLACE "I2" "integral(a!1, b!1, h!1, f!1)") (("" (EXPAND "integral?") (("" (SKOSIMP*) (("" (INST -1 "epsi!1/2") (("" (INST - "epsi!1/2") (("" (SKOSIMP*) (("" (INST + "min(delta!1,delta!2)") (("" (SKOSIMP*) (("" (INST - "P!1") (("" (INST - "P!1") (("" (SPLIT -1) (("1" (SPLIT -2) (("1" (HIDE -4 -5 -6) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE-REPLACE "Rie_sum(a!1, b!1, LAMBDA x: g!1(x) + h!1(x), P!1, xis!1, f!1) =                       Rie_sum(a!1, b!1, g!1,P!1, xis!1, f!1) + Rie_sum(a!1, b!1, h!1,P!1, xis!1, f!1)") (("1" (HIDE -1) (("1" (INST - "Rie_sum(a!1, b!1, g!1, P!1, xis!1, f!1)") (("1" (INST - "Rie_sum(a!1, b!1, h!1, P!1, xis!1, f!1)") (("1" (LEMMA "triangle") (("1" (INST -1 "I1 - Rie_sum(a!1, b!1,g!1, P!1, xis!1, f!1)" "I2 - Rie_sum(a!1, b!1, h!1,P!1, xis!1, f!1)") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Riemann_sum?") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Riemann_sum?") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -1 -2) (("2" (EXPAND "Rie_sum") (("2" (ASSERT) (("2" (LEMMA "sigma_sum[below(length(P!1) - 1)]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (< CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|xis!1| SKOLEM-CONST-DECL "xis?[T](a!1, b!1, P!1)" |rs_integral_prep| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|triangle| FORMULA-DECL NIL |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|h!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|sigma_sum| FORMULA-DECL NIL |sigma| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)) NIL)) (|integral?_sum| 0 (|integral?_sum-1| |nil| 3278177576 ("" (SKOSIMP*) (("" (LEMMA "integral_sum") (("" (INST?) (("" (INST?) (("" (ASSERT) (("" (LEMMA "integral_def") (("" (INST - "a!1" "b!1" "f!1" "g!1" "v1!1") (("" (ASSERT) (("" (LEMMA "integral_def") (("" (INST - "a!1" "b!1" "h!1" "g!1" "v2!1") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (INST - "g!1") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_sum| FORMULA-DECL NIL |rs_integral_prep| NIL) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|integral?_sum_g| 0 (|integral?_sum_g-1| |nil| 3489152310 ("" (SKOSIMP*) (("" (LEMMA "integral_sum_g") (("" (INST?) (("" (INST?) (("" (INST - "f!1") (("" (ASSERT) (("" (LEMMA "integral_def") (("" (INST - "a!1" "b!1" "f!1" "g!1" "v1!1") (("" (ASSERT) (("" (LEMMA "integral_def") (("" (INST - "a!1" "b!1" "f!1" "h!1" "v2!1") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (REPLACE -2) (("" (REPLACE -4) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_sum_g| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|integral_def| FORMULA-DECL NIL |rs_integral_def| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL)) (|integral_diff| 0 (|integral_diff-2| "" 3754889541 ("" (SKOSIMP*) (("" (LEMMA "integral_sum") (("" (INST -1 "a!1" "b!1" "f!1" "g!1" "-h!1") (("" (ASSERT) (("" (SPLIT -1) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (ASSERT) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "integral_scal") (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (CASE-REPLACE "(LAMBDA (x: T): -h!1(x)) = -1 * h!1") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (EXPAND "*") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "integral_scal") (("2" (INST -1 "-1" "a!1" "b!1" "h!1" "g!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (CASE-REPLACE "-h!1 = -1*h!1") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (EXPAND "*") (("2" (ASSERT) (("2" (EXPAND "-") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_sum| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|integral_scal| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK) (|integral_diff-1| |nil| 3253532115 ("" (SKOSIMP*) (("" (LEMMA "integral_sum") (("" (INST -1 "a!1" "b!1" "f!1" "g!1" "-h!1") (("" (ASSERT) (("" (SPLIT -1) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (ASSERT) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "integral_scal") (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (CASE-REPLACE "(LAMBDA (x: T): -h!1(x)) = -1 * h!1") (("1" (ASSERT) NIL NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "integral_scal") (("2" (INST -1 "-1" "a!1" "b!1" "h!1" "g!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (CASE-REPLACE "-h!1 = -1*h!1") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (EXPAND "*") (("2" (ASSERT) (("2" (EXPAND "-") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|integral_diff_g| 0 (|integral_diff_g-1| |nil| 3489152523 ("" (SKOSIMP*) (("" (LEMMA "integral_sum_g") (("" (INST -1 "a!1" "b!1" "f!1" "g!1" "-h!1") (("" (ASSERT) (("" (SPLIT -1) (("1" (FLATTEN) (("1" (ASSERT) (("1" (CASE "(LAMBDA x: (-h!1)(x) + g!1(x)) = (LAMBDA x: g!1(x) - h!1(x))") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a!1" "b!1" "f!1" "h!1") (("1" (ASSERT) (("1" (FLATTEN) (("1" (CASE "-1*h!1 = -h!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "*") (("2" (DECOMPOSE-EQUALITY) (("2" (EXPAND "-") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a!1" "b!1" "f!1" "h!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (CASE "-1*h!1 = -h!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (DECOMPOSE-EQUALITY) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_sum_g| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|integral_scal_g| FORMULA-DECL NIL |rs_integral_prep| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL)) (|integral_ge_0| 0 (|integral_ge_0-2| "" 3882418345 ("" (SKOSIMP*) (("" (TYPEPRED "integral(a!1, b!1,g!1, f!1)") (("" (EXPAND "integral?") (("" (CASE "FORALL (eps: posreal): integral(a!1, b!1, g!1, f!1) >= -eps") (("1" (HIDE -2 -3 -5) (("1" (INST -1 "-integral(a!1, b!1, g!1, f!1)/2") (("1" (ASSERT) NIL NIL) ("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) (("2" (INST -1 "eps!1") (("2" (SKOSIMP*) (("2" (LEMMA "axiom_of_archimedes") (("2" (INST -1 "(b!1-a!1)/delta!1+2") (("2" (SKOSIMP*) (("2" (NAME "NM" "real_defs.max(i!1,2)") (("2" (INST - "eq_partition(a!1,b!1,NM)") (("1" (SPLIT -3) (("1" (INST - "Rie_sum(a!1, b!1, g!1, eq_partition(a!1, b!1, NM), gen_xis(a!1, b!1, eq_partition(a!1, b!1, NM)), f!1)") (("1" (NAME-REPLACE "II" "integral(a!1, b!1, g!1, f!1)") (("1" (CASE "Rie_sum(a!1, b!1, g!1, eq_partition(a!1, b!1, NM), gen_xis(a!1,b!1,eq_partition(a!1, b!1, NM)), f!1) >= 0") (("1" (EXPAND "abs") (("1" (LIFT-IF) (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1 -4 2 3) (("2" (NAME "NN" "eq_partition(a!1, b!1, NM)") (("2" (REPLACE -1) (("2" (EXPAND "Rie_sum") (("2" (LEMMA "sigma_nonneg[below(length(NN) - 1)]") (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (SKOSIMP*) (("1" (FACTOR 1 L) (("1" (INST?) (("1" (CASE "g!1(NN`seq(1 + i!2)) - g!1(NN`seq(i!2)) >= 0") (("1" (MULT-BY -1 "f!1(gen_xis(a!1, b!1, NN)`seq(i!2))") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "NN") (("2" (INST - "i!2") (("2" (ASSERT) (("2" (EXPAND "increasing?") (("2" (ASSERT) (("2" (INST -9 "seq(NN)(i!2)" "seq(NN)(1+i!2)") (("2" (ASSERT) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (TYPEPRED "gen_xis(a!1, b!1, NN)") (("2" (INST - "i!2") (("2" (FLATTEN) (("2" (TYPEPRED "NN") (("2" (INST-CP - "i!2") (("2" (INST - "i!2+1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST -1 "a!1" "b!1" "f!1" "g!1") (("2" (SPLIT -) (("1" (INST?) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "max" -1) (("3" (LIFT-IF) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "width_eq_part") (("2" (HIDE -3 -4 -5 2 3) (("2" (NAME-REPLACE "ba" "b!1-a!1") (("2" (MOVE-TERMS -2 L 2) (("2" (CASE "ba / delta!1 < i!1 - 1") (("1" (HIDE -3) (("1" (MULT-BY -1 "delta!1") (("1" (MULT-BY 1 "NM-1") (("1" (EXPAND "max") (("1" (LIFT-IF) (("1" (GROUND) (("1" (REPLACE -2 * RL) (("1" (HIDE -2) (("1" (ASSERT) (("1" (TYPEPRED "i!1") (("1" (FACTOR -3 R) (("1" (CASE "i!1-1 < 1") (("1" (MULT-BY -1 "delta!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|integral_ge_0-1| |nil| 3253532115 ("" (SKOSIMP*) (("" (TYPEPRED "integral(a!1, b!1,g!1, f!1)") (("" (EXPAND "integral?") (("" (CASE "FORALL (eps: posreal): integral(a!1, b!1, g!1, f!1) >= -eps") (("1" (HIDE -2 -3 -5) (("1" (INST -1 "-integral(a!1, b!1, g!1, f!1)/2") (("1" (ASSERT) NIL NIL) ("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) (("2" (INST -1 "eps!1") (("2" (SKOSIMP*) (("2" (LEMMA "axiom_of_archimedes") (("2" (INST -1 "(b!1-a!1)/delta!1+2") (("2" (SKOSIMP*) (("2" (NAME "NM" "real_defs.max(i!1,2)") (("2" (INST - "eq_partition(a!1,b!1,NM)") (("1" (SPLIT -3) (("1" (INST - "Rie_sum(a!1, b!1, g!1, eq_partition(a!1, b!1, NM), gen_xis(a!1, b!1, eq_partition(a!1, b!1, NM)), f!1)") (("1" (NAME-REPLACE "II" "integral(a!1, b!1, g!1, f!1)") (("1" (CASE "Rie_sum(a!1, b!1, g!1, eq_partition(a!1, b!1, NM), gen_xis(a!1,b!1,eq_partition(a!1, b!1, NM)), f!1) >= 0") (("1" (EXPAND "abs") (("1" (LIFT-IF) (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1 -4 2 3) (("2" (NAME "NN" "eq_partition(a!1, b!1, NM)") (("2" (REPLACE -1) (("2" (EXPAND "Rie_sum") (("2" (LEMMA "sigma_nonneg[below(length(NN) - 1)]") (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (SKOSIMP*) (("1" (FACTOR 1 L) (("1" (INST?) (("1" (CASE "g!1(NN`seq(1 + i!2)) - g!1(NN`seq(i!2)) >= 0") (("1" (MULT-BY -1 "f!1(gen_xis(a!1, b!1, NN)`seq(i!2))") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "NN") (("2" (INST - "i!2") (("2" (ASSERT) (("2" (EXPAND "increasing?") (("2" (ASSERT) (("2" (INST -9 "seq(NN)(i!2)" "seq(NN)(1+i!2)") (("2" (ASSERT) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (TYPEPRED "gen_xis(a!1, b!1, NN)") (("2" (INST - "i!2") (("2" (FLATTEN) (("2" (TYPEPRED "NN") (("2" (INST-CP - "i!2") (("2" (INST - "i!2+1") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST -1 "a!1" "b!1" "f!1" "g!1") (("2" (SPLIT -) (("1" (INST?) NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "max" -1) (("3" (LIFT-IF) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "width_eq_part") (("2" (HIDE -3 -4 -5 2 3) (("2" (NAME-REPLACE BA "b!1-a!1") (("2" (MOVE-TERMS -2 L 2) (("2" (CASE "ba / delta!1 < i!1 - 1") (("1" (HIDE -3) (("1" (MULT-BY -1 "delta!1") (("1" (MULT-BY 1 "NM-1") (("1" (EXPAND "max") (("1" (LIFT-IF) (("1" (GROUND) (("1" (REPLACE -2 * RL) (("1" (HIDE -2) (("1" (ASSERT) (("1" (TYPEPRED "i!1") (("1" (FACTOR -3 R) (("1" (CASE "i!1-1 < 1") (("1" (MULT-BY -1 "delta!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (< CONST-DECL "bool" |reals| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (<= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|rat_max| APPLICATION-JUDGEMENT "{s: rat | s >= q AND s >= r}" |real_defs| NIL) (|int_max| APPLICATION-JUDGEMENT "{k: int | i <= k AND j <= k}" |real_defs| NIL) (|Riemann?_Rie| FORMULA-DECL NIL |rs_integral_def| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|sigma_nonneg| FORMULA-DECL NIL |sigma| |reals|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|increasing?| CONST-DECL "bool" |real_fun_preds| |reals|) (|closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|) (NN SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|i!2| SKOLEM-CONST-DECL "below(length(NN) - 1)" |rs_integral_prep| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|gen_xis| CONST-DECL "xis?(a, b, P)" |rs_integral_def| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_cancel2| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|width_eq_part| FORMULA-DECL NIL |rs_partition| NIL) (|eq_partition| CONST-DECL "partition(a, b)" |rs_partition| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|restrict| CONST-DECL "R" |restrict| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|i!1| SKOLEM-CONST-DECL "int" |rs_integral_prep| NIL) (NM SKOLEM-CONST-DECL "{k: int | i!1 <= k AND 2 <= k}" |rs_integral_prep| NIL) (|axiom_of_archimedes| FORMULA-DECL NIL |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL)) (|integral_restr_eq| 0 (|integral_restr_eq-1| |nil| 3281700217 ("" (SKOSIMP*) (("" (LEMMA "integral_restrict_eq") (("" (INST?) (("" (ASSERT) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|integral_restrict_eq| FORMULA-DECL NIL |rs_integral_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL)) (|integral_bound_above| 0 (|integral_bound_above-2| |nil| 3494858073 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST -1 "_" "a!1" "b!1" "g!1") (("" (LEMMA "integral_diff") (("" (INST -1 "a!1" "b!1" "_" "g!1" "_") (("" (LEMMA "integral_ge_0") (("" (INST -1 "a!1" "b!1" "(LAMBDA (t:T): M!1 - f!1(t))" "g!1") (("" (ASSERT) (("" (CASE "integrable?(a!1, b!1, g!1,(LAMBDA (t: T): M!1 - f!1(t)))") (("1" (ASSERT) (("1" (INST -4 "M!1") (("1" (FLATTEN) (("1" (EXPAND "const_fun") (("1" (INST -3 "(LAMBDA (x: T): M!1)" "f!1") (("1" (ASSERT) (("1" (SPLIT -2) (("1" (REPLACE -5) (("1" (HIDE -5) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 -6 2) (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "(LAMBDA (x: T): M!1)" "f!1") (("2" (ASSERT) (("2" (INST -2 "M!1") (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "const_fun") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_const_fun| FORMULA-DECL NIL |rs_integral_prep| NIL) (|integral_diff| FORMULA-DECL NIL |rs_integral_prep| NIL) (|integral_ge_0| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|const_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL) (|integral_bound_above-1| |nil| 3489155712 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST -1 "_" "a!1" "b!1" "g!1") (("" (LEMMA "integral_diff") (("" (INST -1 "a!1" "b!1" "_" "g!1" "_") (("" (LEMMA "integral_ge_0") (("" (INST -1 "a!1" "b!1" "(LAMBDA (t:real): M!1 - f!1(t))" "g!1") (("" (ASSERT) (("" (CASE "integrable?(a!1, b!1, g!1,(LAMBDA (t: real): M!1 - f!1(t)))") (("1" (ASSERT) (("1" (INST -4 "M!1") (("1" (FLATTEN) (("1" (EXPAND "const_fun") (("1" (INST -3 "(LAMBDA (x: real): M!1)" "f!1") (("1" (ASSERT) (("1" (SPLIT -2) (("1" (REPLACE -5) (("1" (HIDE -5) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 -4 -6 2) (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "(LAMBDA (x: real): M!1)" "f!1") (("2" (ASSERT) (("2" (INST -2 "M!1") (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "const_fun") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL) NIL)) (|integral_bound_below| 0 (|integral_bound_below-2| |nil| 3494858091 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST -1 "_" "a!1" "b!1" "g!1") (("" (LEMMA "integral_diff") (("" (INST -1 "a!1" "b!1" "_" "g!1" "_") (("" (LEMMA "integral_ge_0") (("" (INST -1 "a!1" "b!1" "(LAMBDA (t:T): f!1(t) - m!1)" "g!1") (("" (ASSERT) (("" (CASE "integrable?(a!1, b!1, g!1,(LAMBDA (t: T): f!1(t) - m!1))") (("1" (ASSERT) (("1" (INST -4 "m!1") (("1" (FLATTEN) (("1" (INST -3 "f!1" "const_fun(m!1)") (("1" (ASSERT) (("1" (EXPAND "const_fun") (("1" (REPLACE -5) (("1" (HIDE -5) (("1" (SPLIT -2) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 2) (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "f!1" "const_fun(m!1)") (("2" (ASSERT) (("2" (INST -3 "m!1") (("2" (EXPAND "const_fun") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_const_fun| FORMULA-DECL NIL |rs_integral_prep| NIL) (|integral_diff| FORMULA-DECL NIL |rs_integral_prep| NIL) (|integral_ge_0| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|const_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun" |continuous_functions| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL) (|integral_bound_below-1| |nil| 3489155718 ("" (SKOSIMP*) (("" (LEMMA "integral_const_fun") (("" (INST -1 "_" "a!1" "b!1" "g!1") (("" (LEMMA "integral_diff") (("" (INST -1 "a!1" "b!1" "_" "g!1" "_") (("" (LEMMA "integral_ge_0") (("" (INST -1 "a!1" "b!1" "(LAMBDA (t:real): f!1(t) - m!1)" "g!1") (("" (ASSERT) (("" (CASE "integrable?(a!1, b!1, g!1,(LAMBDA (t: real): f!1(t) - m!1))") (("1" (ASSERT) (("1" (INST -4 "m!1") (("1" (FLATTEN) (("1" (INST -3 "f!1" "const_fun(m!1)") (("1" (ASSERT) (("1" (EXPAND "const_fun") (("1" (REPLACE -5) (("1" (HIDE -5) (("1" (SPLIT -2) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 2) (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "f!1" "const_fun(m!1)") (("2" (ASSERT) (("2" (INST -3 "m!1") (("2" (EXPAND "const_fun") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL) NIL)) (|integral_le| 0 (|integral_le-1| |nil| 3297781017 ("" (SKOSIMP*) (("" (LEMMA "integral_diff") (("" (INST - "a!1" "b!1" "h!1" "g!1" "f!1") (("" (ASSERT) (("" (FLATTEN) (("" (CASE "integral(a!1, b!1, g!1, LAMBDA x: h!1(x) - f!1(x)) >= 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "integral_bound_below") (("2" (INST - "a!1" "b!1" "LAMBDA x: h!1(x) - f!1(x)" "g!1" "0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integral_diff| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|integral| CONST-DECL "{S: real | integral?(a, b, gg, ff, S)}" |rs_integral_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|integral_bound_below| FORMULA-DECL NIL |rs_integral_prep| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|Lemma_1| 0 (|Lemma_1-3| "" 3790091094 ("" (SKOSIMP*) (("" (EXPAND "integrable?") (("" (SKOSIMP*) (("" (EXPAND "integral?") (("" (INST - "eps!1/2") (("" (SKOSIMP*) (("" (INST + "delta!1") (("" (SKOSIMP*) (("" (COPY -2) (("" (INST - "P1!1") (("" (INST - "P2!1") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (NAME "R1" "Rie_sum(a!1, b!1,g!1, P1!1, xis1!1, f!1)") (("" (REPLACE -1) (("" (NAME "R2" "Rie_sum(a!1, b!1, g!1,P2!1, xis2!1, f!1)") (("" (REPLACE -1) (("" (CASE-REPLACE "R1 - R2 = (R1 - S!1) - (R2 - S!1)") (("1" (LEMMA "triangle") (("1" (INST - "R1-S!1" "-(R2 - S!1)") (("1" (ASSERT) (("1" (CASE-REPLACE "abs(S!1 - R2) = abs(R2 - S!1)") (("1" (CASE-REPLACE "abs(S!1 - R1) = abs(R1 - S!1)") (("1" (ASSERT) (("1" (INST - "R1") (("1" (INST - "R2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a!1" "b!1" "f!1" "g!1") (("2" (SPLIT -1) (("1" (INST - "P2!1" "xis2!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a!1" "b!1" "f!1" "g!1") (("2" (SPLIT -1) (("1" (INST - "P1!1" "xis1!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (<= CONST-DECL "bool" |reals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|triangle| FORMULA-DECL NIL |real_props| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (R1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (P1!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|Riemann?_Rie| FORMULA-DECL NIL |rs_integral_def| NIL) (P2!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (R2 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|Lemma_1-2| |nil| 3282496507 ("" (SKOSIMP*) (("" (EXPAND "integrable?") (("" (SKOSIMP*) (("" (EXPAND "integral?") (("" (INST - "eps!1/2") (("" (SKOSIMP*) (("" (INST + "delta!1") (("" (SKOSIMP*) (("" (COPY -2) (("" (INST - "P1!1") (("" (INST - "P2!1") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (NAME "R1" "Rie_sum(a!1, b!1,g!1, P1!1, xis1!1, f!1)") (("" (REPLACE -1) (("" (NAME "R2" "Rie_sum(a!1, b!1, g!1,P2!1, xis2!1, f!1)") (("" (REPLACE -1) (("" (CASE-REPLACE "R1 - R2 = (R1 - S!1) - (R2 - S!1)") (("1" (LEMMA "triangle") (("1" (INST - "R1-S!1" "-(R2 - S!1)") (("1" (ASSERT) (("1" (ASSERT) (("1" (CASE-REPLACE "abs(S!1 - R2) = abs(R2 - S!1)") (("1" (CASE-REPLACE "abs(S!1 - R1) = abs(R1 - S!1)") (("1" (ASSERT) (("1" (INST - "R1") (("1" (INST - "R2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a!1" "b!1" "f!1" "g!1") (("2" (SPLIT -1) (("1" (INST - "P2!1" "xis2!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a!1" "b!1" "f!1" "g!1") (("2" (SPLIT -1) (("1" (INST - "P1!1" "xis1!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|Lemma_1-1| |nil| 3282496495 ("" (POSTPONE) NIL NIL) NIL SHOSTAK)) (|integrable_lem| 0 (|integrable_lem-3| "DEbugging PVS 3.2" 3495206489 ("" (AUTO-REWRITE + "member") (("" (SKOSIMP*) (("" (PROP) (("1" (SKOSIMP*) (("1" (EXPAND "integrable?") (("1" (SKOSIMP*) (("1" (EXPAND "integral?") (("1" (INST -1 "epsi!1/2") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (INST-CP -1 "P1!1") (("1" (INST -1 "P2!1") (("1" (ASSERT) (("1" (INST -1 "RS2!1") (("1" (INST -2 "RS1!1") (("1" (CASE-REPLACE "RS1!1 - RS2!1 = (RS1!1 - S!1) - (RS2!1 - S!1)") (("1" (LEMMA "triangle") (("1" (INST -1 "RS1!1-S!1" "-(RS2!1-S!1)") (("1" (CASE-REPLACE "abs(-(RS2!1 - S!1)) = abs(S!1 - RS2!1)") (("1" (CASE-REPLACE "abs(RS1!1 - S!1) = abs(S!1 - RS1!1)") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "abs") (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "abs") (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "  FORALL (n: nat): nonempty?({S: real |  EXISTS (P: partition(a!1, b!1),xis:xis?(a!1,b!1,P)):  width(a!1, b!1, P) < 1 / (1 + n) AND  S = Rie_sum(a!1, b!1, g!1,P, xis, f!1)})") (("1" (NAME "SS" "(LAMBDA (n: nat): choose({S:real| EXISTS (P: partition(a!1,b!1),
                                                                                                                                                                xis: xis?(a!1, b!1, P)):
                                                                                                                             width(a!1,b!1,P) < 1/(n+1) AND
                                                                                                                                    S = Rie_sum(a!1, b!1, g!1,P, xis, f!1)})                                    )") (("1" (CASE "cauchy(SS)") (("1" (LEMMA "convergence_cauchy2") (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "convergent?") (("1" (SKOSIMP*) (("1" (EXPAND "integrable?") (("1" (INST + "l!1") (("1" (EXPAND "integral?") (("1" (SKOSIMP*) (("1" (INST -5 "epsi!1/2") (("1" (SKOSIMP*) (("1" (INST + "delta!1") (("1" (SKOSIMP*) (("1" (TYPEPRED "R!1") (("1" (EXPAND "Riemann_sum?") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "convergence") (("1" (INST - "epsi!1/2") (("1" (SKOSIMP*) (("1" (NAME "NN" "choose({nn: nat | nn > n!1 AND nn > 1/delta!1})") (("1" (INST - "NN") (("1" (ASSERT) (("1" (TYPEPRED "choose({S: real | EXISTS (P: partition(a!1, b!1),
                                                                                                                                                       xis: xis?(a!1, b!1, P)):
                                                                                                                                                  width(a!1, b!1, P) < 1 / (NN+1) AND  S = Rie_sum(a!1, b!1, g!1,P, xis, f!1)})") (("1" (SKOSIMP*) (("1" (INST -8 "P!1" "P!2") (("1" (ASSERT) (("1" (CASE "width(a!1, b!1, P!2) < delta!1") (("1" (ASSERT) (("1" (NAME "ST" "Rie_sum(a!1, b!1,g!1, P!1, xis!1, f!1)") (("1" (REPLACE -1) (("1" (CASE-REPLACE "abs(l!1 - ST) = abs(ST - l!1)") (("1" (CASE-REPLACE "ST- l!1 = (ST - SS(NN))  + (SS(NN) - l!1)") (("1" (LEMMA "triangle") (("1" (INST - "ST- SS(NN)" "SS(NN) - l!1") (("1" (INST -13 "ST" "SS(NN)") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "SS(NN) = Rie_sum(a!1, b!1, g!1,P!2, xis!2, f!1)") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "Riemann?_Rie") (("1" (INST - "a!1" "b!1" "f!1" "g!1") (("1" (SPLIT -1) (("1" (INST?) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE -11 + RL) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE -4 + RL) (("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a!1" "b!1" "f!1" "g!1") (("3" (SPLIT -1) (("1" (INST?) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (CASE "1 / (1 + NN) < delta!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CROSS-MULT 1) (("2" (TYPEPRED "NN") (("2" (CROSS-MULT -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -5 "NN") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "nonempty?") (("2" (EXPAND "empty?") (("2" (EXPAND "member") (("2" (LEMMA "axiom_of_archimedes") (("2" (CASE "n!1 > 1/delta!1") (("1" (INST -2 "n!1") (("1" (SKOSIMP*) (("1" (INST -3 "i!1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST -1 "1/delta!1") (("2" (SKOSIMP*) (("2" (INST -2 "i!1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "cauchy") (("2" (SKOSIMP*) (("2" (INST -3 "epsilon!1") (("2" (SKOSIMP*) (("2" (NAME "NN" "choose({n: posnat | 1/n < delta!1})") (("1" (INST + "NN") (("1" (SKOSIMP*) (("1" (TYPEPRED "choose({S: real | EXISTS (P: partition(a!1, b!1),
                                                                                                                                                               xis: xis?(a!1, b!1, P)):
                                                                                                                                               width(a!1, b!1, P) < 1 / (i!1 + 1) AND
                                                                                                                                        S = Rie_sum(a!1, b!1,g!1, P, xis, f!1)})") (("1" (SKOSIMP*) (("1" (TYPEPRED "choose({S: real |  EXISTS (P: partition(a!1, b!1),
                                                                                                                                                                                     xis: xis?(a!1, b!1, P)):
                                                                                                                                                  width(a!1, b!1, P) < 1 / (j!1 + 1) AND
                                                                                                                                                      S = Rie_sum(a!1, b!1, g!1,P, xis, f!1)})") (("1" (SKOSIMP*) (("1" (ASSERT) (("1" (INST - "P!1" "P!2") (("1" (SPLIT -10) (("1" (ASSERT) (("1" (HIDE -2 -4 -8) (("1" (INST?) (("1" (HIDE 2) (("1" (REPLACE -5 :DIR RL) (("1" (BETA) (("1" (REPLACE -1) (("1" (EXPAND "Riemann_sum?") (("1" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE -5 :DIR RL) (("2" (BETA) (("2" (REPLACE -2) (("2" (EXPAND "Riemann_sum?") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -4 -8) (("2" (CASE "1 / NN < delta!1") (("1" (CASE "1 / (1 + i!1) <= 1/NN") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2 3) (("2" (HIDE -1 -2 -3 -7) (("2" (NAME "ip1" "i!1+1") (("2" (REPLACE -1) (("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CASE-REPLACE "1 / (1 + j!1) <= 1/NN") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2 3) (("2" (HIDE -1 -2 -3 -4 -5 -8 -9) (("2" (NAME "jp1" "j!1+1") (("2" (REPLACE -1) (("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -7 "j!1") NIL NIL)) NIL)) NIL) ("2" (INST -5 "i!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE 2) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "nonempty?") (("2" (EXPAND "empty?") (("2" (EXPAND "member") (("2" (LEMMA "axiom_of_archimedes") (("2" (INST -1 "1/delta!1") (("2" (SKOSIMP*) (("2" (INST -2 "i!1") (("1" (CASE "i!1 >= 0") (("1" (LEMMA "div_mult_pos_lt1") (("1" (INST?) (("1" (LEMMA "div_mult_pos_lt1") (("1" (INST -1 "i!1" "delta!1" "1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL) ("2" (SKOSIMP*) (("2" (HIDE -1 2) (("2" (EXPAND "nonempty?") (("2" (EXPAND "empty?") (("2" (EXPAND "member") (("2" (ASSERT) (("2" (NAME "BMA" "b!1-a!1") (("2" (NAME "NP" "choose({n: above(1) | BMA/(n-1) < 1/(1+n!1)})") (("1" (INST - "Rie_sum(a!1, b!1,g!1, eq_partition(a!1,b!1,NP), gen_xis(a!1,b!1,eq_partition(a!1,b!1,NP)), f!1)") (("1" (INST?) (("1" (REWRITE "width_eq_part") (("1" (ASSERT) (("1" (REPLACE -2 :DIR RL) (("1" (HIDE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nonempty?") (("2" (EXPAND "empty?") (("2" (EXPAND "member") (("2" (LEMMA "axiom_of_archimedes") (("2" (INST -1 "2 + BMA*(n!1+1)") (("2" (SKOSIMP*) (("2" (LEMMA "pos_times_lt") (("2" (INST?) (("2" (ASSERT) (("2" (INST - "i!1") (("2" (CASE "BMA / (i!1 - 1) < BMA / (1 + BMA * (n!1 + 1) )") (("1" (NAME "np1" "n!1+1") (("1" (CASE-REPLACE "BMA / (1 + BMA * np1) < 1/np1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -6) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -4) (("2" (HIDE 2) (("2" (ASSERT) (("2" (CASE-REPLACE "1 + BMA + BMA * n!1 < i!1 -1") (("1" (HIDE -3) (("1" (NAME "TT" "1 + BMA + BMA * n!1") (("1" (NAME "im1" "i!1-1") (("1" (CANCEL 1) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|width| CONST-DECL "posreal" |rs_partition| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|cauchy| CONST-DECL "bool" |convergence_sequences| NIL) (|sequence| TYPE-EQ-DECL NIL |sequences| NIL) (|convergent?| CONST-DECL "bool" |convergence_sequences| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|div_mult_pos_gt2| FORMULA-DECL NIL |extra_real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|Riemann?_Rie| FORMULA-DECL NIL |rs_integral_def| NIL) (P!2 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (SS SKOLEM-CONST-DECL "[n: nat ->
   ({S: real |
       EXISTS (P: partition(a!1, b!1), xis: xis?(a!1, b!1, P)):
         width(a!1, b!1, P) < 1 / (n + 1) AND
          S = Rie_sum(a!1, b!1, g!1, P, xis, f!1)})]" |rs_integral_prep| NIL) (|n!1| SKOLEM-CONST-DECL "nat" |rs_integral_prep| NIL) (|delta!1| SKOLEM-CONST-DECL "posreal" |rs_integral_prep| NIL) (NN SKOLEM-CONST-DECL "({nn: nat | nn > n!1 AND nn > 1 / delta!1})" |rs_integral_prep| NIL) (|a!1| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|b!1| SKOLEM-CONST-DECL "{b | a!1 < b}" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|g!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (ST SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|empty?| CONST-DECL "bool" |sets| NIL) (|axiom_of_archimedes| FORMULA-DECL NIL |real_props| NIL) (|i!1| SKOLEM-CONST-DECL "int" |rs_integral_prep| NIL) (|i!1| SKOLEM-CONST-DECL "int" |rs_integral_prep| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|convergence| CONST-DECL "bool" |convergence_sequences| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|convergence_cauchy2| FORMULA-DECL NIL |convergence_sequences| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|i!1| SKOLEM-CONST-DECL "nat" |rs_integral_prep| NIL) (P!1 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|j!1| SKOLEM-CONST-DECL "nat" |rs_integral_prep| NIL) (P!2 SKOLEM-CONST-DECL "partition[T](a!1, b!1)" |rs_integral_prep| NIL) (|i!1| SKOLEM-CONST-DECL "int" |rs_integral_prep| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|choose| CONST-DECL "(p)" |sets| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|width_eq_part| FORMULA-DECL NIL |rs_partition| NIL) (|gen_xis| CONST-DECL "xis?(a, b, P)" |rs_integral_def| NIL) (|eq_partition| CONST-DECL "partition(a, b)" |rs_partition| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|both_sides_div_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (BMA SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|np1| SKOLEM-CONST-DECL "posint" |rs_integral_prep| NIL) (|pos_times_lt| FORMULA-DECL NIL |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (<= CONST-DECL "bool" |reals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|triangle| FORMULA-DECL NIL |real_props| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|integral?| CONST-DECL "bool" |rs_integral_def| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL)) NIL)) (|integrable_lem2_alt| 0 (|integrable_lem2_alt-2| |nil| 3786474719 ("" (CASE "FORALL (a:T, (b|a<b), f, g: [T -> real]):
                                                                              a < b AND
                                                                               increasing?[(LAMBDA (x:T): a <= x AND x <= b)]
                                                                                   (restrict[T, (LAMBDA (x:T): a <= x AND x <= b), real]
                                                                                        (g))
                                                                               IMPLIES
                                                                               (integrable?(a, b, g, f) IFF
                                                                                 (FORALL (epsi: posreal):
                                                                                    EXISTS (delta: posreal):
                                                                                      FORALL (P: partition(a, b)):
                                                                                        width(a, b, P) < delta IMPLIES
                                                                                         (FORALL (RS1: (Riemann_sum?(a, b, P, g, f)),
                                                                                                  RS2: (Riemann_sum?(a, b, P, g, f))):
                                                                                            abs(RS1 - RS2) < epsi)))") (("1" (SKOLEM 1 ("a" "b" "f" "gg")) (("1" (ASSERT) (("1" (EXPAND "monotonic?") (("1" (FLATTEN) (("1" (SPLIT -) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT increasing?[(closed_intv(a,b))](-gg)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "increasing?") (("1" (EXPAND "decreasing?") (("1" (SKEEP) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST - "a" "b" "f" "-gg") (("2" (ASSERT) (("2" (SPLIT +) (("1" (FLATTEN) (("1" (CASE "integrable?(a,b,-gg,f)") (("1" (ASSERT) (("1" (HIDE -5) (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -4) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P") (("1" (ASSERT) (("1" (SKOLEM 1 ("RSS1" "RSS2")) (("1" (TYPEPRED "RSS1") (("1" (TYPEPRED "RSS2") (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM -1 "xis2") (("1" (SKOLEM -2 "xis1") (("1" (NAME "RSP1" "Rie_sum(a,b,-gg,P,xis1,f)") (("1" (NAME "RSP2" "Rie_sum(a,b,-gg,P,xis2,f)") (("1" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -11 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -3 + :DIR RL) (("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "-gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -4 + :DIR RL) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "-gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   f(xis1`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                                    f(xis1`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   f(xis2`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                                    f(xis2`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a" "b" "f" "gg") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "-") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "integrable?(a,b,-gg,f)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a" "b" "f" "-gg") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (CASE "gg = (LAMBDA (x_1:T): -1 * -gg(x_1))") (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) (("2" (HIDE -3) (("2" (HIDE 1) (("2" (SKEEP) (("2" (INST - "epsi") (("2" (SKEEP -1) (("2" (INST + "delta") (("2" (SKEEP) (("2" (INST - "P") (("2" (ASSERT) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xis2") (("2" (SKOLEM -2 "xis1") (("2" (NAME "RSP1" "Rie_sum(a,b,gg,P,xis1,f)") (("2" (NAME "RSP2" "Rie_sum(a,b,gg,P,xis2,f)") (("2" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -7 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   (-gg)(P`seq(1 + n)) * f(xis1`seq(n)) -
                                                                                                                                                                                                    (-gg)(P`seq(n)) * f(xis1`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   (-gg)(P`seq(1 + n)) * f(xis2`seq(n)) -
                                                                                                                                                                                                    (-gg)(P`seq(n)) * f(xis2`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 ("a" "b" "f" "gg")) (("2" (FLATTEN) (("2" (LABEL "gincreasing?" -2) (("2" (HIDE "gincreasing?") (("2" (GROUND) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P" "P") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (epsi:posreal): EXISTS (delta: posreal):
                                                                                                                               FORALL (P1, P2: partition(a,b)):
                                                                                                                                 width(a, b, P1) < delta IMPLIES
                                                                                                                                  (FORALL (RS1: (Riemann_sum?(a, b, P1, gg, f)),
                                                                                                                                           RS2: (Riemann_sum?(a, b, partition_union(a,b)(P1,P2), gg, f))):
                                                                                                                                     abs(RS1 - RS2) < epsi)") (("1" (HIDE -2) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi/2") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST-CP - "P1" "P2") (("1" (INST - "P2" "P1") (("1" (ASSERT) (("1" (CASE "EXISTS (RS12: (Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg,f))): TRUE") (("1" (SKEEP -1) (("1" (SKOSIMP*) (("1" (INST - "RS2!1" "RS12") (("1" (INST - "RS1!1" "RS12") (("1" (HIDE -3) (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "RS12") (("2" (LEMMA "partition_union_sym") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "partition_union(a,b)(P1,P2)" "gen_xis(a,b,partition_union(a,b)(P1,P2))") (("1" (INST + "Rie_sum(a, b, gg, partition_union(a, b)(P1, P2),
                                                                                                                                                             gen_xis(a, b, partition_union(a, b)(P1, P2)), f)") NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "Rie_sum_diff_extend_union") (("2" (SKEEP) (("2" (INST -2 "epsi") (("2" (SKEEP -2) (("2" (INST + "delta") (("2" (SKOLEM 1 ("P" "Q")) (("2" (INST - "a" "b" "f" "gg") (("2" (ASSERT) (("2" (REVEAL "gincreasing?") (("2" (REPLACE "gincreasing?") (("2" (HIDE "gincreasing?") (("2" (INST - "P" "Q") (("2" (FLATTEN) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xispq") (("2" (SKOLEM -2 "xis") (("2" (INST - "xispq" "xis") (("2" (SKEEP -3) (("2" (INST - "P") (("2" (ASSERT) (("2" (INST - "RSS1" "Rie_sum(a, b, gg, P, xis2, f)") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|partition_union| CONST-DECL "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" |rs_partition| NIL) (|strictly_increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|member| CONST-DECL "bool" |fseqs| |structures|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|gen_xis| CONST-DECL "xis?(a, b, P)" |rs_integral_def| NIL) (RS12 SKOLEM-CONST-DECL "(Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg, f))" |rs_integral_prep| NIL) (|f| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|gg| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (P1 SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (P2 SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (|b| SKOLEM-CONST-DECL "{b | a < b}" |rs_integral_prep| NIL) (|a| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|partition_union_sym| FORMULA-DECL NIL |rs_partition| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|Rie_sum_diff_extend_union| FORMULA-DECL NIL |rs_integral_def| NIL) (P SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (|xis2| SKOLEM-CONST-DECL "xis?[T](a, b, P)" |rs_integral_prep| NIL) (|integrable_lem| FORMULA-DECL NIL |rs_integral_prep| NIL) (|monotonic?| CONST-DECL "bool" |real_fun_preds| |reals|) (RSP2 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (P SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (RSP1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|integral_scal_g| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|restrict| CONST-DECL "[T -> real]" |sigma| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|sigma_restrict_eq| FORMULA-DECL NIL |sigma| |reals|) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Riemann?_Rie| FORMULA-DECL NIL |rs_integral_def| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (RSP2 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|a| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|b| SKOLEM-CONST-DECL "{b | a < b}" |rs_integral_prep| NIL) (P SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (|gg| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|f| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (RSP1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|decreasing?| CONST-DECL "bool" |real_fun_preds| |reals|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|width| CONST-DECL "posreal" |rs_partition| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|increasing?| CONST-DECL "bool" |real_fun_preds| |reals|) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL) (|integrable_lem2_alt-1| |nil| 3492182124 ("" (CASE "FORALL (a, b:T, f, g: [T -> real]):
                                                                       a < b AND
                                                                        increasing?[(LAMBDA (x:T): a <= x AND x <= b)]
                                                                            (restrict[T, (LAMBDA (x:T): a <= x AND x <= b), real]
                                                                                 (g))
                                                                        IMPLIES
                                                                        (integrable?(a, b, g, f) IFF
                                                                          (FORALL (epsi: posreal):
                                                                             EXISTS (delta: posreal):
                                                                               FORALL (P: partition(a, b)):
                                                                                 width(a, b, P) < delta IMPLIES
                                                                                  (FORALL (RS1: (Riemann_sum?(a, b, P, g, f)),
                                                                                           RS2: (Riemann_sum?(a, b, P, g, f))):
                                                                                     abs(RS1 - RS2) < epsi)))") (("1" (SKOLEM 1 ("a" "b" "f" "gg")) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "monotonic?") (("1" (FLATTEN) (("1" (SPLIT -) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT increasing?[(closed_intv(a,b))](-gg)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "increasing?") (("1" (EXPAND "decreasing?") (("1" (SKEEP) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST - "a" "b" "f" "-gg") (("2" (ASSERT) (("2" (SPLIT +) (("1" (FLATTEN) (("1" (CASE "integrable?(a,b,-gg,f)") (("1" (ASSERT) (("1" (HIDE -5) (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -4) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P") (("1" (ASSERT) (("1" (SKOLEM 1 ("RSS1" "RSS2")) (("1" (TYPEPRED "RSS1") (("1" (TYPEPRED "RSS2") (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM -1 "xis2") (("1" (SKOLEM -2 "xis1") (("1" (NAME "RSP1" "Rie_sum(a,b,-gg,P,xis1,f)") (("1" (NAME "RSP2" "Rie_sum(a,b,-gg,P,xis2,f)") (("1" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -11 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -3 + :DIR RL) (("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "-gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -4 + :DIR RL) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "-gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 f(xis1`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                  f(xis1`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 f(xis2`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                  f(xis2`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a" "b" "f" "gg") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "-") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "integrable?(a,b,-gg,f)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a" "b" "f" "-gg") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (CASE "gg = (LAMBDA (x_1:T): -1 * -gg(x_1))") (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) (("2" (HIDE -3) (("2" (HIDE 1) (("2" (SKEEP) (("2" (INST - "epsi") (("2" (SKEEP -1) (("2" (INST + "delta") (("2" (SKEEP) (("2" (INST - "P") (("2" (ASSERT) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xis2") (("2" (SKOLEM -2 "xis1") (("2" (NAME "RSP1" "Rie_sum(a,b,gg,P,xis1,f)") (("2" (NAME "RSP2" "Rie_sum(a,b,gg,P,xis2,f)") (("2" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -7 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 (-gg)(P`seq(1 + n)) * f(xis1`seq(n)) -
                                                                                                                                                                                  (-gg)(P`seq(n)) * f(xis1`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 (-gg)(P`seq(1 + n)) * f(xis2`seq(n)) -
                                                                                                                                                                                  (-gg)(P`seq(n)) * f(xis2`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 ("a" "b" "f" "gg")) (("2" (FLATTEN) (("2" (LABEL "gincreasing?" -2) (("2" (HIDE "gincreasing?") (("2" (GROUND) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P" "P") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (epsi:posreal): EXISTS (delta: posreal):
                                                                                                                    FORALL (P1, P2: partition(a,b)):
                                                                                                                      width(a, b, P1) < delta IMPLIES
                                                                                                                       (FORALL (RS1: (Riemann_sum?(a, b, P1, gg, f)),
                                                                                                                                RS2: (Riemann_sum?(a, b, partition_union(a,b)(P1,P2), gg, f))):
                                                                                                                          abs(RS1 - RS2) < epsi)") (("1" (HIDE -2) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi/2") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST-CP - "P1" "P2") (("1" (INST - "P2" "P1") (("1" (ASSERT) (("1" (CASE "EXISTS (RS12: (Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg,f))): TRUE") (("1" (SKEEP -1) (("1" (SKOSIMP*) (("1" (INST - "RS2!1" "RS12") (("1" (INST - "RS1!1" "RS12") (("1" (HIDE -3) (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "RS12") (("2" (LEMMA "partition_union_sym") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "partition_union(a,b)(P1,P2)" "gen_xis(a,b,partition_union(a,b)(P1,P2))") (("1" (INST + "Rie_sum(a, b, gg, partition_union(a, b)(P1, P2),
                                                                                                                                                 gen_xis(a, b, partition_union(a, b)(P1, P2)), f)") NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "Rie_sum_diff_extend_union") (("2" (SKEEP) (("2" (INST -2 "epsi") (("2" (SKEEP -2) (("2" (INST + "delta") (("2" (SKOLEM 1 ("P" "Q")) (("2" (INST - "a" "b" "f" "gg") (("2" (ASSERT) (("2" (REVEAL "gincreasing?") (("2" (REPLACE "gincreasing?") (("2" (HIDE "gincreasing?") (("2" (INST - "P" "Q") (("2" (FLATTEN) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xispq") (("2" (SKOLEM -2 "xis") (("2" (INST - "xispq" "xis") (("2" (SKEEP -3) (("2" (INST - "P") (("2" (ASSERT) (("2" (INST - "RSS1" "Rie_sum(a, b, gg, P, xis2, f)") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL)) (|integrable_lem2| 0 (|integrable_lem2-4| |nil| 3786474774 ("" (CASE "FORALL (a:T, b:{x:T|a<x}, f, g: [T -> real]):
                                                                                     a < b AND
                                                                                      increasing?[(LAMBDA (x:T): a <= x AND x <= b)]
                                                                                          (restrict[T, (LAMBDA (x:T): a <= x AND x <= b), real]
                                                                                               (g))
                                                                                      IMPLIES
                                                                                      (integrable?(a, b, g, f) IFF
                                                                                        (FORALL (epsi: posreal):
                                                                                           EXISTS (delta: posreal):
                                                                                             FORALL (P: partition(a, b)):
                                                                                               width(a, b, P) < delta IMPLIES
                                                                                                (FORALL (RS1: (Riemann_sum?(a, b, P, g, f)),
                                                                                                         RS2: (Riemann_sum?(a, b, P, g, f))):
                                                                                                   abs(RS1 - RS2) < epsi)))") (("1" (SKOLEM 1 ("a" "b" "f" "gg")) (("1" (ASSERT) (("1" (EXPAND "monotonic?") (("1" (FLATTEN) (("1" (SPLIT -) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT increasing?[(closed_intv(a,b))](-gg)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "increasing?") (("1" (EXPAND "decreasing?") (("1" (SKEEP) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST - "a" "b" "f" "-gg") (("2" (ASSERT) (("2" (SPLIT +) (("1" (FLATTEN) (("1" (CASE "integrable?(a,b,-gg,f)") (("1" (ASSERT) (("1" (HIDE -5) (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -4) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P") (("1" (ASSERT) (("1" (SKOLEM 1 ("RSS1" "RSS2")) (("1" (TYPEPRED "RSS1") (("1" (TYPEPRED "RSS2") (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM -1 "xis2") (("1" (SKOLEM -2 "xis1") (("1" (NAME "RSP1" "Rie_sum(a,b,-gg,P,xis1,f)") (("1" (NAME "RSP2" "Rie_sum(a,b,-gg,P,xis2,f)") (("1" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -11 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -3 + :DIR RL) (("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "-gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -4 + :DIR RL) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "-gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                     f(xis1`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                                                      f(xis1`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                     f(xis2`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                                                      f(xis2`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a" "b" "f" "gg") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "-") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "integrable?(a,b,-gg,f)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a" "b" "f" "-gg") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (CASE "gg = (LAMBDA (x_1:T): -1 * -gg(x_1))") (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) (("2" (HIDE -3) (("2" (HIDE 1) (("2" (SKEEP) (("2" (INST - "epsi") (("2" (SKEEP -1) (("2" (INST + "delta") (("2" (SKEEP) (("2" (INST - "P") (("2" (ASSERT) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xis2") (("2" (SKOLEM -2 "xis1") (("2" (NAME "RSP1" "Rie_sum(a,b,gg,P,xis1,f)") (("2" (NAME "RSP2" "Rie_sum(a,b,gg,P,xis2,f)") (("2" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -7 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                     (-gg)(P`seq(1 + n)) * f(xis1`seq(n)) -
                                                                                                                                                                                                                      (-gg)(P`seq(n)) * f(xis1`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                                     (-gg)(P`seq(1 + n)) * f(xis2`seq(n)) -
                                                                                                                                                                                                                      (-gg)(P`seq(n)) * f(xis2`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 ("a" "b" "f" "gg")) (("2" (FLATTEN) (("2" (LABEL "gincreasing?" -2) (("2" (HIDE "gincreasing?") (("2" (GROUND) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P" "P") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (epsi:posreal): EXISTS (delta: posreal):
                                                                                                                                          FORALL (P1, P2: partition(a,b)):
                                                                                                                                            width(a, b, P1) < delta IMPLIES
                                                                                                                                             (FORALL (RS1: (Riemann_sum?(a, b, P1, gg, f)),
                                                                                                                                                      RS2: (Riemann_sum?(a, b, partition_union(a,b)(P1,P2), gg, f))):
                                                                                                                                                abs(RS1 - RS2) < epsi)") (("1" (HIDE -2) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi/2") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST-CP - "P1" "P2") (("1" (INST - "P2" "P1") (("1" (ASSERT) (("1" (CASE "EXISTS (RS12: (Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg,f))): TRUE") (("1" (SKEEP -1) (("1" (SKOSIMP*) (("1" (INST - "RS2!1" "RS12") (("1" (INST - "RS1!1" "RS12") (("1" (HIDE -3) (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "RS12") (("2" (LEMMA "partition_union_sym") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "partition_union(a,b)(P1,P2)" "gen_xis(a,b,partition_union(a,b)(P1,P2))") (("1" (INST + "Rie_sum(a, b, gg, partition_union(a, b)(P1, P2),
                                                                                                                                                                         gen_xis(a, b, partition_union(a, b)(P1, P2)), f)") NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "Rie_sum_diff_extend_union") (("2" (SKEEP) (("2" (INST -2 "epsi") (("2" (SKEEP -2) (("2" (INST + "delta") (("2" (SKOLEM 1 ("P" "Q")) (("2" (INST - "a" "b" "f" "gg") (("2" (ASSERT) (("2" (REVEAL "gincreasing?") (("2" (REPLACE "gincreasing?") (("2" (HIDE "gincreasing?") (("2" (INST - "P" "Q") (("2" (FLATTEN) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xispq") (("2" (SKOLEM -2 "xis") (("2" (INST - "xispq" "xis") (("2" (SKEEP -3) (("2" (INST - "P") (("2" (ASSERT) (("2" (INST - "RSS1" "Rie_sum(a, b, gg, P, xis2, f)") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|partition_union| CONST-DECL "{PQ: partition(a, b) |
   (FORALL (x: T): member(x, PQ) IFF (member(x, P) OR member(x, Q))) AND
    strictly_increasing?(PQ)}" |rs_partition| NIL) (|strictly_increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|member| CONST-DECL "bool" |fseqs| |structures|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|gen_xis| CONST-DECL "xis?(a, b, P)" |rs_integral_def| NIL) (RS12 SKOLEM-CONST-DECL "(Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg, f))" |rs_integral_prep| NIL) (|f| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|gg| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (P1 SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (P2 SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (|b| SKOLEM-CONST-DECL "{x: T | a < x}" |rs_integral_prep| NIL) (|a| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|partition_union_sym| FORMULA-DECL NIL |rs_partition| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|Rie_sum_diff_extend_union| FORMULA-DECL NIL |rs_integral_def| NIL) (P SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (|xis2| SKOLEM-CONST-DECL "xis?[T](a, b, P)" |rs_integral_prep| NIL) (|integrable_lem| FORMULA-DECL NIL |rs_integral_prep| NIL) (|monotonic?| CONST-DECL "bool" |real_fun_preds| |reals|) (RSP2 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (P SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (RSP1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|integral_scal_g| FORMULA-DECL NIL |rs_integral_prep| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|) (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) (|restrict| CONST-DECL "[T -> real]" |sigma| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|sigma_restrict_eq| FORMULA-DECL NIL |sigma| |reals|) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|Riemann?_Rie| FORMULA-DECL NIL |rs_integral_def| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (RSP2 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (|a| SKOLEM-CONST-DECL "T" |rs_integral_prep| NIL) (|b| SKOLEM-CONST-DECL "{b | a < b}" |rs_integral_prep| NIL) (P SKOLEM-CONST-DECL "partition[T](a, b)" |rs_integral_prep| NIL) (|gg| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (|f| SKOLEM-CONST-DECL "[T -> real]" |rs_integral_prep| NIL) (RSP1 SKOLEM-CONST-DECL "real" |rs_integral_prep| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|xis?| TYPE-EQ-DECL NIL |rs_integral_def| NIL) (|Rie_sum| CONST-DECL "real" |rs_integral_def| NIL) (|decreasing?| CONST-DECL "bool" |real_fun_preds| |reals|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|Riemann_sum?| CONST-DECL "bool" |rs_integral_def| NIL) (|width| CONST-DECL "posreal" |rs_partition| NIL) (|partition| TYPE-EQ-DECL NIL |rs_partition| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|integrable?| CONST-DECL "bool" |rs_integral_def| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|increasing?| CONST-DECL "bool" |real_fun_preds| |reals|) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (T FORMAL-NONEMPTY-SUBTYPE-DECL NIL |rs_integral_prep| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |rs_integral_prep| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL) (|integrable_lem2-3| |nil| 3494858376 ("" (CASE "FORALL (a, b:T, f, g: [T -> real]):
                                                                              a < b AND
                                                                               increasing?[(LAMBDA (x:T): a <= x AND x <= b)]
                                                                                   (restrict[T, (LAMBDA (x:T): a <= x AND x <= b), real]
                                                                                        (g))
                                                                               IMPLIES
                                                                               (integrable?(a, b, g, f) IFF
                                                                                 (FORALL (epsi: posreal):
                                                                                    EXISTS (delta: posreal):
                                                                                      FORALL (P: partition(a, b)):
                                                                                        width(a, b, P) < delta IMPLIES
                                                                                         (FORALL (RS1: (Riemann_sum?(a, b, P, g, f)),
                                                                                                  RS2: (Riemann_sum?(a, b, P, g, f))):
                                                                                            abs(RS1 - RS2) < epsi)))") (("1" (SKOLEM 1 ("a" "b" "f" "gg")) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "monotonic?") (("1" (FLATTEN) (("1" (SPLIT -) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT increasing?[(closed_intv(a,b))](-gg)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "increasing?") (("1" (EXPAND "decreasing?") (("1" (SKEEP) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST - "a" "b" "f" "-gg") (("2" (ASSERT) (("2" (SPLIT +) (("1" (FLATTEN) (("1" (CASE "integrable?(a,b,-gg,f)") (("1" (ASSERT) (("1" (HIDE -5) (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -4) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P") (("1" (ASSERT) (("1" (SKOLEM 1 ("RSS1" "RSS2")) (("1" (TYPEPRED "RSS1") (("1" (TYPEPRED "RSS2") (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM -1 "xis2") (("1" (SKOLEM -2 "xis1") (("1" (NAME "RSP1" "Rie_sum(a,b,-gg,P,xis1,f)") (("1" (NAME "RSP2" "Rie_sum(a,b,-gg,P,xis2,f)") (("1" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -11 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -3 + :DIR RL) (("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "-gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -4 + :DIR RL) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "-gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   f(xis1`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                                    f(xis1`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   f(xis2`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                                    f(xis2`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a" "b" "f" "gg") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "-") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "integrable?(a,b,-gg,f)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a" "b" "f" "-gg") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (CASE "gg = (LAMBDA (x_1:T): -1 * -gg(x_1))") (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) (("2" (HIDE -3) (("2" (HIDE 1) (("2" (SKEEP) (("2" (INST - "epsi") (("2" (SKEEP -1) (("2" (INST + "delta") (("2" (SKEEP) (("2" (INST - "P") (("2" (ASSERT) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xis2") (("2" (SKOLEM -2 "xis1") (("2" (NAME "RSP1" "Rie_sum(a,b,gg,P,xis1,f)") (("2" (NAME "RSP2" "Rie_sum(a,b,gg,P,xis2,f)") (("2" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -7 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   (-gg)(P`seq(1 + n)) * f(xis1`seq(n)) -
                                                                                                                                                                                                    (-gg)(P`seq(n)) * f(xis1`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                                   (-gg)(P`seq(1 + n)) * f(xis2`seq(n)) -
                                                                                                                                                                                                    (-gg)(P`seq(n)) * f(xis2`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 ("a" "b" "f" "gg")) (("2" (FLATTEN) (("2" (LABEL "gincreasing?" -2) (("2" (HIDE "gincreasing?") (("2" (GROUND) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P" "P") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (epsi:posreal): EXISTS (delta: posreal):
                                                                                                                               FORALL (P1, P2: partition(a,b)):
                                                                                                                                 width(a, b, P1) < delta IMPLIES
                                                                                                                                  (FORALL (RS1: (Riemann_sum?(a, b, P1, gg, f)),
                                                                                                                                           RS2: (Riemann_sum?(a, b, partition_union(a,b)(P1,P2), gg, f))):
                                                                                                                                     abs(RS1 - RS2) < epsi)") (("1" (HIDE -2) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi/2") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST-CP - "P1" "P2") (("1" (INST - "P2" "P1") (("1" (ASSERT) (("1" (CASE "EXISTS (RS12: (Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg,f))): TRUE") (("1" (SKEEP -1) (("1" (SKOSIMP*) (("1" (INST - "RS2!1" "RS12") (("1" (INST - "RS1!1" "RS12") (("1" (HIDE -3) (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "RS12") (("2" (LEMMA "partition_union_sym") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "partition_union(a,b)(P1,P2)" "gen_xis(a,b,partition_union(a,b)(P1,P2))") (("1" (INST + "Rie_sum(a, b, gg, partition_union(a, b)(P1, P2),
                                                                                                                                                             gen_xis(a, b, partition_union(a, b)(P1, P2)), f)") NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "Rie_sum_diff_extend_union") (("2" (SKEEP) (("2" (INST -2 "epsi") (("2" (SKEEP -2) (("2" (INST + "delta") (("2" (SKOLEM 1 ("P" "Q")) (("2" (INST - "a" "b" "f" "gg") (("2" (ASSERT) (("2" (REVEAL "gincreasing?") (("2" (REPLACE "gincreasing?") (("2" (HIDE "gincreasing?") (("2" (INST - "P" "Q") (("2" (FLATTEN) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xispq") (("2" (SKOLEM -2 "xis") (("2" (INST - "xispq" "xis") (("2" (SKEEP -3) (("2" (INST - "P") (("2" (ASSERT) (("2" (INST - "RSS1" "Rie_sum(a, b, gg, P, xis2, f)") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|integrable_lem2-2| |nil| 3492513670 ("" (CASE "FORALL (a, b: real, f, g: [real -> real]):
                                                                       a < b AND
                                                                        increasing?[(LAMBDA (x: real): a <= x AND x <= b)]
                                                                            (restrict[real, (LAMBDA (x: real): a <= x AND x <= b), real]
                                                                                 (g))
                                                                        IMPLIES
                                                                        (integrable?(a, b, g, f) IFF
                                                                          (FORALL (epsi: posreal):
                                                                             EXISTS (delta: posreal):
                                                                               FORALL (P: partition(a, b)):
                                                                                 width(a, b, P) < delta IMPLIES
                                                                                  (FORALL (RS1: (Riemann_sum?(a, b, P, g, f)),
                                                                                           RS2: (Riemann_sum?(a, b, P, g, f))):
                                                                                     abs(RS1 - RS2) < epsi)))") (("1" (SKOLEM 1 ("a" "b" "f" "gg")) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "monotonic?") (("1" (FLATTEN) (("1" (SPLIT -) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT increasing?[(closed_intv(a,b))](-gg)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "increasing?") (("1" (EXPAND "decreasing?") (("1" (SKEEP) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST - "a" "b" "f" "-gg") (("2" (ASSERT) (("2" (SPLIT +) (("1" (FLATTEN) (("1" (CASE "integrable?(a,b,-gg,f)") (("1" (ASSERT) (("1" (HIDE -5) (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -4) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P") (("1" (ASSERT) (("1" (SKOLEM 1 ("RSS1" "RSS2")) (("1" (TYPEPRED "RSS1") (("1" (TYPEPRED "RSS2") (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM -1 "xis2") (("1" (SKOLEM -2 "xis1") (("1" (NAME "RSP1" "Rie_sum(a,b,-gg,P,xis1,f)") (("1" (NAME "RSP2" "Rie_sum(a,b,-gg,P,xis2,f)") (("1" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -11 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -3 + :DIR RL) (("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "-gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -4 + :DIR RL) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "-gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 f(xis1`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                  f(xis1`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 f(xis2`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                                                                                                  f(xis2`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a" "b" "f" "gg") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "-") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "integrable?(a,b,-gg,f)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a" "b" "f" "-gg") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (CASE "gg = (LAMBDA (x_1: real): -1 * -gg(x_1))") (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) (("2" (HIDE -3) (("2" (HIDE 1) (("2" (SKEEP) (("2" (INST - "epsi") (("2" (SKEEP -1) (("2" (INST + "delta") (("2" (SKEEP) (("2" (INST - "P") (("2" (ASSERT) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xis2") (("2" (SKOLEM -2 "xis1") (("2" (NAME "RSP1" "Rie_sum(a,b,gg,P,xis1,f)") (("2" (NAME "RSP2" "Rie_sum(a,b,gg,P,xis2,f)") (("2" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -7 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 (-gg)(P`seq(1 + n)) * f(xis1`seq(n)) -
                                                                                                                                                                                  (-gg)(P`seq(n)) * f(xis1`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                                                                                                 (-gg)(P`seq(1 + n)) * f(xis2`seq(n)) -
                                                                                                                                                                                  (-gg)(P`seq(n)) * f(xis2`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 ("a" "b" "f" "gg")) (("2" (FLATTEN) (("2" (LABEL "gincreasing?" -2) (("2" (HIDE "gincreasing?") (("2" (GROUND) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P" "P") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (epsi:posreal): EXISTS (delta: posreal):
                                                                                                                    FORALL (P1, P2: partition(a,b)):
                                                                                                                      width(a, b, P1) < delta IMPLIES
                                                                                                                       (FORALL (RS1: (Riemann_sum?(a, b, P1, gg, f)),
                                                                                                                                RS2: (Riemann_sum?(a, b, partition_union(a,b)(P1,P2), gg, f))):
                                                                                                                          abs(RS1 - RS2) < epsi)") (("1" (HIDE -2) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi/2") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST-CP - "P1" "P2") (("1" (INST - "P2" "P1") (("1" (ASSERT) (("1" (CASE "EXISTS (RS12: (Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg,f))): TRUE") (("1" (SKEEP -1) (("1" (SKOSIMP*) (("1" (INST - "RS2!1" "RS12") (("1" (INST - "RS1!1" "RS12") (("1" (HIDE -3) (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "RS12") (("2" (LEMMA "partition_union_sym") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "partition_union(a,b)(P1,P2)" "gen_xis(a,b,partition_union(a,b)(P1,P2))") (("1" (INST + "Rie_sum(a, b, gg, partition_union(a, b)(P1, P2),
                                                                                                                                                 gen_xis(a, b, partition_union(a, b)(P1, P2)), f)") NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "Rie_sum_diff_extend_union") (("2" (SKEEP) (("2" (INST -2 "epsi") (("2" (SKEEP -2) (("2" (INST + "delta") (("2" (SKOLEM 1 ("P" "Q")) (("2" (INST - "a" "b" "f" "gg") (("2" (ASSERT) (("2" (REVEAL "gincreasing?") (("2" (REPLACE "gincreasing?") (("2" (HIDE "gincreasing?") (("2" (INST - "P" "Q") (("2" (FLATTEN) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xispq") (("2" (SKOLEM -2 "xis") (("2" (INST - "xispq" "xis") (("2" (SKEEP -3) (("2" (INST - "P") (("2" (ASSERT) (("2" (INST - "RSS1" "Rie_sum(a, b, gg, P, xis2, f)") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|integrable_lem2-1| |nil| 3491565290 ("" (CASE "FORALL (a, b: real, f, g: [real -> real]):
                                           a < b AND
                                            increasing?[(LAMBDA (x: real): a <= x AND x <= b)]
                                                (restrict[real, (LAMBDA (x: real): a <= x AND x <= b), real]
                                                     (g))
                                            IMPLIES
                                            (integrable?(a, b, g, f) IFF
                                              (FORALL (epsi: posreal):
                                                 EXISTS (delta: posreal):
                                                   FORALL (P: partition(a, b)):
                                                     width(a, b, P) < delta IMPLIES
                                                      (FORALL (RS1: (Riemann_sum?(a, b, P, g, f)),
                                                               RS2: (Riemann_sum?(a, b, P, g, f))):
                                                         abs(RS1 - RS2) < epsi)))") (("1" (SKOLEM 1 ("a" "b" "f" "gg")) (("1" (FLATTEN) (("1" (EXPAND "monotonic?") (("1" (SPLIT -) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT increasing?[(closed_intv(a,b))](-gg)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "increasing?") (("1" (EXPAND "decreasing?") (("1" (SKEEP) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST - "a" "b" "f" "-gg") (("2" (ASSERT) (("2" (SPLIT +) (("1" (FLATTEN) (("1" (CASE "integrable?(a,b,-gg,f)") (("1" (ASSERT) (("1" (HIDE -5) (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -4) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P") (("1" (ASSERT) (("1" (SKOLEM 1 ("RSS1" "RSS2")) (("1" (TYPEPRED "RSS1") (("1" (TYPEPRED "RSS2") (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM -1 "xis2") (("1" (SKOLEM -2 "xis1") (("1" (NAME "RSP1" "Rie_sum(a,b,-gg,P,xis1,f)") (("1" (NAME "RSP2" "Rie_sum(a,b,-gg,P,xis2,f)") (("1" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -11 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -3 + :DIR RL) (("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "-gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -4 + :DIR RL) (("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "-gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") NIL NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                         f(xis1`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                          f(xis1`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                         f(xis2`seq(n)) * gg(P`seq(1 + n)) -
                                                                                                          f(xis2`seq(n)) * gg(P`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA "integral_scal_g") (("2" (INST - "-1" "a" "b" "f" "gg") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "-") (("2" (EXPAND "*") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "integrable?(a,b,-gg,f)") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (LEMMA "integral_scal_g") (("1" (INST - "-1" "a" "b" "f" "-gg") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (CASE "gg = (LAMBDA (x_1: real): -1 * -gg(x_1))") (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) (("2" (HIDE -3) (("2" (HIDE 1) (("2" (SKEEP) (("2" (INST - "epsi") (("2" (SKEEP -1) (("2" (INST + "delta") (("2" (SKEEP) (("2" (INST - "P") (("2" (ASSERT) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (EXPAND "Riemann_sum?") (("2" (SKOLEM -1 "xis2") (("2" (SKOLEM -2 "xis1") (("2" (NAME "RSP1" "Rie_sum(a,b,gg,P,xis1,f)") (("2" (NAME "RSP2" "Rie_sum(a,b,gg,P,xis2,f)") (("2" (CASE "RSP1 = -RSS1 AND RSP2 = -RSS2") (("1" (FLATTEN) (("1" (INST - "RSP1" "RSP2") (("1" (HIDE-ALL-BUT (-1 -2 -7 +)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "P" "xis2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "P" "xis1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (REPLACE -2 1 :DIR RL) (("2" (REPLACE -3 1) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "Rie_sum") (("2" (SPLIT +) (("1" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                         (-gg)(P`seq(1 + n)) * f(xis1`seq(n)) -
                                                                                                          (-gg)(P`seq(n)) * f(xis1`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sigma_scal[below(P`length-1)]") (("1" (INST - "LAMBDA (n: below(P`length - 1)):
                                                                                                         (-gg)(P`seq(1 + n)) * f(xis2`seq(n)) -
                                                                                                          (-gg)(P`seq(n)) * f(xis2`seq(n))" "-1" "P`length-2" "0") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sigma_restrict_eq[below(P`length-1)]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 ("a" "b" "f" "gg")) (("2" (FLATTEN) (("2" (LABEL "gincreasing?" -2) (("2" (HIDE "gincreasing?") (("2" (GROUND) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST - "P" "P") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "FORALL (epsi:posreal): EXISTS (delta: posreal):
                                                                        FORALL (P1, P2: partition(a,b)):
                                                                          width(a, b, P1) < delta IMPLIES
                                                                           (FORALL (RS1: (Riemann_sum?(a, b, P1, gg, f)),
                                                                                    RS2: (Riemann_sum?(a, b, partition_union(a,b)(P1,P2), gg, f))):
                                                                              abs(RS1 - RS2) < epsi)") (("1" (HIDE -2) (("1" (REWRITE "integrable_lem") (("1" (SKEEP) (("1" (INST - "epsi/2") (("1" (SKEEP -1) (("1" (INST + "delta") (("1" (SKEEP) (("1" (INST-CP - "P1" "P2") (("1" (INST - "P2" "P1") (("1" (ASSERT) (("1" (CASE "EXISTS (RS12: (Riemann_sum?(a, b, partition_union(a, b)(P1, P2), gg,f))): TRUE") (("1" (SKEEP -1) (("1" (SKOSIMP*) (("1" (INST - "RS2!1" "RS12") (("1" (INST - "RS1!1" "RS12") (("1" (HIDE -3) (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "RS12") (("2" (LEMMA "partition_union_sym") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "partition_union(a,b)(P1,P2)" "gen_xis(a,b,partition_union(a,b)(P1,P2))") (("1" (INST + "Rie_sum(a, b, gg, partition_union(a, b)(P1, P2),
                                                                                                 gen_xis(a, b, partition_union(a, b)(P1, P2)), f)") NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOLEM 1 "eps") (("2" (INST - "eps/2") (("2" (SKOLEM -1 "delt") (("2" (INST + "delt") (("2" (SKEEP) (("2" (SKOLEM 1 ("RSS1" "RSS2")) (("2" (TYPEPRED "RSS1") (("2" (TYPEPRED "RSS2") (("2" (LABEL "RSS2name" -1) (("2" (LABEL "RSS1name" -2) (("2" (LABEL "P1widht" -3) (("2" (LABEL "Pcauchy" -4) (("2" (LABEL "altb" -5) (("2" (NAME "PQ" "partition_union(a,b)(P1,P2)") (("2" (REPLACE -1) (("2" (LABEL "PQname" -1) (("2" (INST "Pcauchy" "PQ") (("2" (LEMMA "partition_union_width") (("2" (INST - "a" "b") (("2" (ASSERT) (("2" (INST - "P1" "P2") (("2" (ASSERT) (("2" (CASE "width(a,b,PQ) < delt") (("1" (HIDE -2) (("1" (LABEL "PQwidth" -1) (("1" (EXPAND "Riemann_sum?") (("1" (SKOLEM "RSS2name" "xispq") (("1" (SKOLEM "RSS1name" "xis1") (("1" (CASE "NOT (FORALL (xx1,xx2:xis?(a,b,PQ)): sigma(0, PQ`length - 2,
                                                                                           LAMBDA (i: below(PQ`length - 1)):
                                                                                             abs(f(xx1`seq(i))-f(xx2`seq(i))) * (gg(PQ`seq(1 + i)) -gg(PQ`seq(i))))
                                                                                  < eps / 2)") (("1" (HIDE-ALL-BUT ("Pcauchy" "altb" 1)) (("1" (SKEEP) (("1" (NAME "xmin" "(# length := PQ`length-1, seq := (LAMBDA (ii:nat): If ii >= PQ`length-1 THEN default[real] elsif f(xx1`seq(ii)) >= f(xx2`seq(ii)) THEN xx2`seq(ii) ELSE xx1`seq(ii) ENDIF) #)") (("1" (NAME "xmax" "(# length := PQ`length-1, seq := (LAMBDA (ii:nat): If ii >= PQ`length-1 THEN default[real] elsif f(xx1`seq(ii)) >= f(xx2`seq(ii)) THEN xx1`seq(ii) ELSE xx2`seq(ii) ENDIF) #)") (("1" (CASE "NOT (FORALL (ii:below(PQ`length-1)): abs(f(xx1`seq(ii))-f(xx2`seq(ii))) = f(xmax`seq(ii))-f(xmin`seq(ii)))") (("1" (HIDE 2) (("1" (SKEEP) (("1" (EXPAND "xmax" +) (("1" (EXPAND "xmin" +) (("1" (LIFT-IF) (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "minmaxabs" -1) (("2" (NAME "R1" "Rie_sum(a,b,gg,PQ,xmax,f)") (("1" (LABEL "R1name" -1) (("1" (NAME "R2" "Rie_sum(a,b,gg,PQ,xmin,f)") (("1" (LABEL "R2name" -1) (("1" (CASE "R1-R2 = sigma(0, PQ`length - 2,
                                                                                                                                   LAMBDA (i: below(PQ`length - 1)):
                                                                                                                                     abs(f(xx1`seq(i)) - f(xx2`seq(i))) *
                                                                                                                                      (gg(PQ`seq(1 + i)) - gg(PQ`seq(i))))") (("1" (INST - "R1" "R2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "Riemann?_Rie") (("2" (INST - "a" "b" "f" "gg") (("2" (SPLIT -) (("1" (INST - "PQ" "xmin") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "Riemann?_Rie") (("3" (INST - "a" "b" "f" "gg") (("3" (SPLIT -) (("1" (INST - "PQ" "xmax") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "R1name" + :DIR RL) (("2" (REPLACE "R2name" + :DIR RL) (("2" (EXPAND "Rie_sum" +) (("2" (REWRITE "sigma_minus") (("2" (REWRITE "sigma_restrict_eq") (("2" (EXPAND "restrict") (("2" (DECOMPOSE-EQUALITY +) (("2" (INST - "x!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE-ALL-BUT 1) (("2" (SPLIT) (("1" (SKEEP) (("1" (EXPAND "xmin") (("1" (LIFT-IF) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (TYPEPRED "xx1") (("2" (INST - "ii") (("2" (TYPEPRED "xx2") (("2" (INST - "ii") (("2" (FLATTEN) (("2" (EXPAND "xmin") (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE-ALL-BUT 1) (("2" (SPLIT) (("1" (SKEEP) (("1" (EXPAND "xmax") (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (TYPEPRED "xx1") (("2" (INST - "ii") (("2" (TYPEPRED "xx2") (("2" (INST - "ii") (("2" (FLATTEN) (("2" (EXPAND "xmax") (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "Rie_sum_diff_extend_union") (("2" (INST - "a" "b" "f" "gg") (("2" (REVEAL "gincreasing?") (("2" (ASSERT) (("1" (HIDE "gincreasing?") (("1" (INST - "P1" "P2" "xis1") (("1" (INST - "xispq") (("1" (SKEEP -1) (("1" (REPLACE "PQname") (("1" (REPLACE "RSS1name" :DIR RL) (("1" (REPLACE "RSS2name" :DIR RL) (("1" (INST - "xispq2" "xispq") (("1" (CASE "FORALL (nn:below(PQ`length-1)): sigma[below(PQ`length-1)](0, nn,
                                   LAMBDA (i: below(PQ`length - 1)):
                                     abs(f(xispq2`seq(i)) - f(xispq`seq(i))) * gg(PQ`seq(1 + i)) -
                                      abs(f(xispq2`seq(i)) - f(xispq`seq(i))) * gg(PQ`seq(i))) = sigma[below(partition_union(a, b)(P1, P2)`length - 1)]
                                  (0, nn,
                                   LAMBDA (n: below(partition_union(a, b)(P1, P2)`length - 1)):
                                     abs(f(xispq2`seq(n)) - f(xispq`seq(n))) * gg(PQ`seq(1 + n)) -
                                      abs(f(xispq2`seq(n)) - f(xispq`seq(n))) * gg(PQ`seq(n)))") (("1" (INST - "PQ`length-2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1) (("2" (HIDE -1) (("2" (INDUCT "nn") (("1" (ASSERT) (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 "nn") (("2" (FLATTEN) (("2" (EXPAND "sigma" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKOSIMP*) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1) (("3" (HIDE -1) (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (SKOSIMP*) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "xispq2") (("2" (SKEEP) (("2" (INST - "ii") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (TYPEPRED "xispq") (("2" (INST - "ii") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE -1) (("2" (HIDE -1) (("2" (CASE "partition_union(a,b)(P,Q)`length>=2") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (TYPEPRED "partition_union(a,b)(P,Q)") (("2" (COPY -6) (("2" (INST-CP -1 "a") (("2" (INST -1 "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "partition_union_width") (("2" (INST - "a" "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK)))
