(|derivatives_subtype| (|IMP_derivatives_TCC1| 0 (|IMP_derivatives_TCC1-1| |nil| 3794409500 ("" (LEMMA "deriv_domain") (("" (PROPAX) NIL NIL)) NIL) ((|deriv_domain| FORMULA-DECL NIL |derivatives_subtype| NIL)) NIL (|IMP_derivatives| ASSUMING "derivatives[T].derivatives" "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))) (|IMP_derivatives_TCC2| 0 (|IMP_derivatives_TCC2-1| |nil| 3794409500 ("" (LEMMA "not_one_element") (("" (PROPAX) NIL NIL)) NIL) ((|not_one_element| FORMULA-DECL NIL |derivatives_subtype| NIL)) NIL (|IMP_derivatives| ASSUMING "derivatives[T].derivatives" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|derivable_subtype_TCC1| 0 (|derivable_subtype_TCC1-1| |nil| 3786709590 ("" (ASSUMING-TCC) NIL NIL) ((|derivable?| CONST-DECL "bool" |derivatives| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|derivable_subtype| ASSUMING "derivatives[S].derivatives" "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))) (|derivable_subtype_TCC2| 0 (|derivable_subtype_TCC2-1| |nil| 3786709590 ("" (ASSUMING-TCC) NIL NIL) ((|derivable?| CONST-DECL "bool" |derivatives| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|derivable_subtype| ASSUMING "derivatives[S].derivatives" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|derivable_subtype| 0 (|derivable_subtype-2| "" 3882382065 ("" (SKOSIMP*) (("" (EXPAND "restrict") (("" (EXPAND "derivable?") (("" (SKOSIMP*) (("" (INST?) (("" (EXPAND "derivable?") (("" (EXPAND "convergent?") (("" (SKOSIMP*) (("" (INST + "l!1") (("" (EXPAND "convergence") (("" (EXPAND "fullset") (("" (EXPAND "convergence") (("" (FLATTEN) (("" (ASSERT) (("" (SPLIT +) (("1" (HIDE -2) (("1" (HIDE -1) (("1" (EXPAND "adh") (("1" (EXPAND "deriv_domain?") (("1" (SKOSIMP*) (("1" (INST - "e!1" "x!1") (("1" (SKOSIMP*) (("1" (INST + "y!1") (("1" (EXPAND "A") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (SKOSIMP*) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + "delta!1") (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "x!2") (("2" (ASSERT) (("2" (EXPAND "A") (("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|derivable_subtype-1| |nil| 3474730900 ("" (SKOSIMP*) (("" (EXPAND "restrict") (("" (EXPAND "derivable?") (("" (SKOSIMP*) (("" (INST?) (("" (EXPAND "derivable?") (("" (EXPAND "convergent?") (("" (SKOSIMP*) (("" (INST + "l!1") (("" (EXPAND "convergence") (("" (EXPAND "fullset") (("" (EXPAND "convergence") (("" (FLATTEN) (("" (ASSERT) (("" (SPLIT +) (("1" (HIDE -2) (("1" (HIDE -1) (("1" (EXPAND "adh") (("1" (EXPAND "deriv_domain?") (("1" (SKOSIMP*) (("1" (INST - E!1 X!1) (("1" (SKOSIMP*) (("1" (INST + "y!1") (("1" (EXPAND "A") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (SKOSIMP*) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + "delta!1") (("2" (SKOSIMP*) (("2" (INST?) (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "x!2") (("2" (ASSERT) (("2" (EXPAND "A") (("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|restrict| CONST-DECL "R" |restrict| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (|x!2| SKOLEM-CONST-DECL "(A[S](x!1))" |derivatives_subtype| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|x!1| SKOLEM-CONST-DECL "S" |derivatives_subtype| NIL) (|y!1| SKOLEM-CONST-DECL "{u: nzreal | T_pred(u + x!1) AND S_pred(u + x!1)}" |derivatives_subtype| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|derivable?| CONST-DECL "bool" |derivatives| NIL)) SHOSTAK)) (|deriv_subtype_TCC1| 0 (|deriv_subtype_TCC1-1| |nil| 3474730877 ("" (SKOSIMP*) (("" (LEMMA DERIVABLE_SUBTYPE) (("" (INST?) (("" (ASSERT) (("" (LEMMA "del_neigh_all_lem[S]") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (|del_neigh_all_lem| FORMULA-DECL NIL |deriv_domain_def| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|deriv_subtype| SUBTYPE "restrict[T, S, real].restrict(derivatives_subtype.f)" "deriv_fun[S]"))) (|deriv_subtype_TCC2| 0 (|deriv_subtype_TCC2-1| |nil| 3786709590 ("" (SKOSIMP*) (("" (LEMMA "del_neigh_all_lem[S]") (("" (ASSERT) NIL NIL)) NIL)) NIL) ((S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|del_neigh_all_lem| FORMULA-DECL NIL |deriv_domain_def| NIL)) NIL (|deriv_subtype| ASSUMING "derivatives[S].derivatives" "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))) (|deriv_subtype_TCC3| 0 (|deriv_subtype_TCC3-1| |nil| 3786709590 ("" (ASSUMING-TCC) NIL NIL) ((|derivable?| CONST-DECL "bool" |derivatives| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|del_neigh_all?| CONST-DECL "bool" |deriv_domain_def| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|deriv_subtype| ASSUMING "derivatives[S].derivatives" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|deriv_subtype| 0 (|deriv_subtype-3| "" 3786709826 ("" (SKOSIMP*) (("" (LEMMA "del_neigh_all_lem[S]") (("" (ASSERT) (("" (LEMMA "derivable_subtype") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict") (("" (EXPAND "deriv" 1 1) (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (NAME "L1" "deriv[S](LAMBDA (s: S): f!1(s), x!1)") (("1" (REPLACE -1) (("1" (NAME "L2" "deriv[T](f!1)(x!1)") (("1" (REPLACE -1) (("1" (EXPAND "derivable?") (("1" (INST?) (("1" (INST?) (("1" (EXPAND "derivable?") (("1" (LEMMA "lim_e_del[(derivatives_def[S].A(x!1))]") (("1" (INST - "0" "NQ(LAMBDA (s: S): f!1(s), x!1)" "L1") (("1" (ASSERT) (("1" (LEMMA "lim_e_del[(derivatives_def[T].A(x!1))]") (("1" (INST - "0" "NQ(f!1, x!1)" "L1") (("1" (ASSERT) (("1" (EXPAND "deriv") (("1" (EXPAND "deriv") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5) (("1" (SKOSIMP*) (("1" (INST - "e!1") (("1" (SKOSIMP*) (("1" (EXPAND "del_neigh_all?") (("1" (INST -3 "x!1") (("1" (SKOSIMP*) (("1" (INST + "min(del!1,del!2)") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "x!2") (("2" (EXPAND "A") (("2" (ASSERT) (("2" (FLATTEN) (("2" (INST -4 "x!1+x!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND "derivable?" -1) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|del_neigh_all_lem| FORMULA-DECL NIL |deriv_domain_def| NIL) (|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| NIL) (|deriv| CONST-DECL "[T -> real]" |derivatives| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|lim_e_del| FORMULA-DECL NIL |lim_of_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|x!2| SKOLEM-CONST-DECL "(derivatives_def[T].A(x!1))" |derivatives_subtype| NIL) (|x!1| SKOLEM-CONST-DECL "S" |derivatives_subtype| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|del_neigh_all?| CONST-DECL "bool" |deriv_domain_def| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |derivatives_subtype| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| NIL) (|derivable?| CONST-DECL "bool" |derivatives| NIL) (|deriv| CONST-DECL "real" |derivatives_def| NIL) (|restrict| CONST-DECL "R" |restrict| NIL)) SHOSTAK) (|deriv_subtype-2| |nil| 3474735300 ("" (SKOSIMP*) (("" (LEMMA "del_neigh_all_lem[S]") (("" (ASSERT) (("" (LEMMA "derivable_subtype") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict") (("" (EXPAND "deriv" 1 1) (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (NAME "L1" "deriv(LAMBDA (s: S): f!1(s), x!1)") (("1" (REPLACE -1) (("1" (NAME "L2" "deriv[T](f!1)(x!1)") (("1" (REPLACE -1) (("1" (EXPAND "derivable?") (("1" (INST?) (("1" (INST?) (("1" (EXPAND "derivable?") (("1" (LEMMA "lim_e_del[(derivatives_def[S].A(x!1))]") (("1" (INST - "0" "NQ(LAMBDA (s: S): f!1(s), x!1)" "L1") (("1" (ASSERT) (("1" (LEMMA "lim_e_del[(derivatives_def[T].A(x!1))]") (("1" (INST - "0" "NQ(f!1, x!1)" "L1") (("1" (ASSERT) (("1" (EXPAND "deriv") (("1" (EXPAND "deriv") (("1" (ASSERT) (("1" (HIDE -2 -3 -4 -5) (("1" (SKOSIMP*) (("1" (INST - "e!1") (("1" (SKOSIMP*) (("1" (EXPAND "del_neigh_all?") (("1" (INST -3 "x!1") (("1" (SKOSIMP*) (("1" (INST + "min(del!1,del!2)") (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "x!2") (("2" (EXPAND "A") (("2" (ASSERT) (("2" (FLATTEN) (("2" (INST -4 "x!1+x!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "not_one_element") (("2" (PROPAX) NIL NIL)) NIL) ("3" (LEMMA "deriv_domain") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND "derivable?" -1) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|deriv_subtype-1| |nil| 3474730910 ("" (SKOSIMP*) (("" (LEMMA "derivable_subtype") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict") (("" (EXPAND "deriv" 1 1) (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (TYPEPRED "x!1") (("1" (EXPAND "deriv") (("1" (EXPAND "derivable?") (("1" (INST - "x!1") (("1" (INST - "x!1") (("1" (EXPAND "derivable?") (("1" (EXPAND "convergent?") (("1" (SKOSIMP*) (("1" (LEMMA "lim_fun_def[(derivatives_def[T].A(x!1))]") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE -5) (("1" (LEMMA "lim_fun_def[(derivatives_def[S].A(x!1))]") (("1" (INST - "NQ(LAMBDA (s: S): f!1(s), x!1)" "l!1" "0") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (EXPAND "deriv") (("1" (REPLACE -2) (("1" (HIDE -1 -2) (("1" (REVEAL -4) (("1" (EXPAND "convergence") (("1" (LEMMA "cv_unique[T]") (("1" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "convergent?") (("2" (INST + "l!2") NIL NIL)) NIL) ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND "not_one?") (("2" (INST -4 "x!2") NIL NIL)) NIL)) NIL) ("3" (SKOSIMP*) (("3" (EXPAND "deriv_domain?") (("3" (INST - "e!1" "x!2") NIL NIL)) NIL)) NIL) ("4" (SKOSIMP*) (("4" (EXPAND "derivable?" -1) (("4" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|deriv_subtype_dd_TCC1| 0 (|deriv_subtype_dd_TCC1-1| |nil| 3790597108 ("" (SKEEP) (("" (LEMMA "derivable_subtype") (("" (INST -1 "f") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|deriv_subtype_dd| SUBTYPE "restrict[T, S, real].restrict(derivatives_subtype.f)" "deriv_fun[S]"))) (|deriv_subtype_dd| 0 (|deriv_subtype_dd-1| |nil| 3790597180 ("" (SKOSIMP*) (("" (LEMMA "derivable_subtype") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict") (("" (EXPAND "deriv" 1 1) (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (NAME "L1" "deriv[S](LAMBDA (s: S): f!1(s), x!1)") (("1" (LEMMA "deriv_def[S]") (("1" (INST -1 "LAMBDA (s: S): f!1(s)" "deriv[T](f!1)(x!1)" "x!1") (("1" (ASSERT) (("1" (HIDE 2) (("1" (EXPAND "derivable?" -3) (("1" (INST -3 "x!1") (("1" (EXPAND "derivable?" -3) (("1" (EXPAND "convergent?" -3) (("1" (SKEEP) (("1" (LEMMA "deriv_def[T]") (("1" (INST -1 "f!1" "l" "x!1") (("1" (ASSERT) (("1" (FLATTEN) (("1" (EXPAND "deriv" 1 1) (("1" (REPLACE -2 1) (("1" (HIDE -1 -2 -3 -4) (("1" (HIDE -2 3) (("1" (EXPAND "convergence") (("1" (EXPAND "convergence") (("1" (FLATTEN) (("1" (SPLIT 1) (("1" (EXPAND "adh" 1) (("1" (SKEEP) (("1" (EXPAND "adh" -1) (("1" (REVEAL -) (("1" (HIDE -7 -8 -9 -10) (("1" (EXPAND "deriv_domain?" -1) (("1" (INST -1 "e" "x!1") (("1" (SKEEP) (("1" (INST 1 "y") (("1" (ASSERT) (("1" (EXPAND "fullset" 1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "A" 1 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (INST -2 "epsilon") (("2" (SKEEP) (("2" (INST 1 "delta") (("2" (SKEEP) (("2" (INST -4 "x") (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (ASSERT) (("2" (TYPEPRED "x!1") (("2" (TYPEPRED "x") (("2" (EXPAND "A" -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (EXPAND "derivable?" -1) (("2" (INST -1 "x") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| NIL) (|deriv| CONST-DECL "[T -> real]" |derivatives| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|x| SKOLEM-CONST-DECL "(A(x!1))" |derivatives_subtype| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|y| SKOLEM-CONST-DECL "{u: nzreal | T_pred(u + x!1) AND S_pred(u + x!1)}" |derivatives_subtype| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|x!1| SKOLEM-CONST-DECL "S" |derivatives_subtype| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|deriv_def| FORMULA-DECL NIL |derivatives_def| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|f!1| SKOLEM-CONST-DECL "[T -> real]" |derivatives_subtype| NIL) (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| NIL) (|derivable?| CONST-DECL "bool" |derivatives| NIL) (|deriv| CONST-DECL "real" |derivatives_def| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|deriv_subtype_eq| 0 (|deriv_subtype_eq-1| |nil| 3794254913 ("" (SKEEP) (("" (LEMMA "derivable_subtype") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict" -1) (("" (ASSERT) (("" (LEMMA "deriv_subtype_dd") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict" -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| NIL) (|deriv_subtype_dd| FORMULA-DECL NIL |derivatives_subtype| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|derivable_subtype_del_TCC1| 0 (|derivable_subtype_del_TCC2-1| |nil| 3794308947 ("" (ASSUMING-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|extend| CONST-DECL "R" |extend| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|derivable_subtype_del| ASSUMING "derivatives_def[S].derivatives_def" "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))) (|derivable_subtype_del_TCC2| 0 (|derivable_subtype_del_TCC3-1| |nil| 3794308947 ("" (ASSUMING-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|extend| CONST-DECL "R" |extend| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|derivable_subtype_del| ASSUMING "derivatives_def[S].derivatives_def" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|derivable_subtype_del| 0 (|derivable_subtype_del-1| |nil| 3794312858 ("" (SKEEP) (("" (SPLIT 1) (("1" (FLATTEN) (("1" (TYPEPRED "x") (("1" (SKEEP) (("1" (EXPAND "derivable?") (("1" (HIDE -5 -6) (("1" (EXPAND "convergent?") (("1" (SKEEP) (("1" (INST 1 "l") (("1" (EXPAND "convergence") (("1" (EXPAND "convergence") (("1" (FLATTEN) (("1" (SPLIT 1) (("1" (EXPAND "adh" 1) (("1" (SKEEP) (("1" (EXPAND "adh" -4) (("1" (INST -4 "min(e,del)") (("1" (SKEEP) (("1" (INST 1 "x2") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "A") (("2" (TYPEPRED "x2") (("2" (EXPAND "A" -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (INST -5 "epsilon") (("2" (SKEEP) (("2" (INST 1 "min(delta,del)") (("2" (SKEEP) (("2" (INST -7 "x2") (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -8) (("1" (INST-CP -1 "x") (("1" (INST-CP -1 "x2+x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A") (("2" (TYPEPRED "x2") (("2" (EXPAND "A" -2) (("2" (ASSERT) (("2" (INST -7 "x2+x") (("2" (ASSERT) (("2" (FLATTEN) (("2" (SPLIT -6) (("1" (EXPAND "member" -1) (("1" (EXPAND "extend" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE -4 -5 -6 -7 -8) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (TYPEPRED "x") (("2" (EXPAND "derivable?") (("2" (SKEEP) (("2" (EXPAND "convergent?") (("2" (SKEEP) (("2" (INST 1 "l") (("2" (EXPAND "convergence") (("2" (EXPAND "convergence") (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (EXPAND "adh" 1) (("1" (SKEEP) (("1" (EXPAND "adh" -4) (("1" (INST -4 "min(e,del)") (("1" (SKEEP) (("1" (INST 1 "x2") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "A") (("2" (TYPEPRED "x2") (("2" (EXPAND "A" -2) (("2" (ASSERT) (("2" (INST -5 "x2+x") (("2" (ASSERT) (("2" (FLATTEN) (("2" (SPLIT -4) (("1" (EXPAND "extend" -1) (("1" (EXPAND "member" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKEEP) (("2" (INST -5 "epsilon") (("2" (SKEEP) (("2" (INST 1 "min(delta,del)") (("2" (SKEEP) (("2" (INST -7 "x2") (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (DECOMPOSE-EQUALITY -10) (("1" (INST-CP -1 "x") (("1" (INST -1 "x2+x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (TYPEPRED "x2") (("2" (EXPAND "A") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|extend| CONST-DECL "R" |extend| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|x2| SKOLEM-CONST-DECL "(A[S](x))" |derivatives_subtype| NIL) (|x| SKOLEM-CONST-DECL "{xx: S |
   EXISTS (del: posreal):
     FORALL (y: T):
       abs(xx - y) < del IMPLIES
        member[T](y, extend[T, S, bool, FALSE](fullset[S]))}" |derivatives_subtype| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|x2| SKOLEM-CONST-DECL "(A[T](x))" |derivatives_subtype| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (|x2| SKOLEM-CONST-DECL "(A[T](x))" |derivatives_subtype| NIL) (|x2| SKOLEM-CONST-DECL "(A[S](x))" |derivatives_subtype| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|deriv_subtype_del_TCC1| 0 (|deriv_subtype_del_TCC1-1| |nil| 3794383922 ("" (SKEEP) (("" (LEMMA "derivable_subtype_del") (("" (INST?) (("" (INST -1 "f") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|derivable_subtype_del| FORMULA-DECL NIL |derivatives_subtype| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|extend| CONST-DECL "R" |extend| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|deriv_subtype_del| SUBTYPE "derivatives_subtype.x" "{x | derivatives_def[S].derivable?(derivatives_subtype.g, x)}"))) (|deriv_subtype_del_TCC2| 0 (|deriv_subtype_del_TCC3-1| |nil| 3794383922 ("" (SKEEP) (("" (ASSERT) (("" (LEMMA "derivable_subtype_del") (("" (INST?) (("" (INST -1 "f") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|extend| CONST-DECL "R" |extend| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|derivable_subtype_del| FORMULA-DECL NIL |derivatives_subtype| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|deriv_subtype_del| SUBTYPE "derivatives_subtype.x" "{x | derivatives_def[T].derivable?(derivatives_subtype.f, x)}"))) (|deriv_subtype_del| 0 (|deriv_subtype_del-1| |nil| 3794384513 ("" (SKEEP) (("" (LEMMA "deriv_def") (("" (LEMMA "derivable_subtype_del") (("" (INST -1 "f" "g" "x") (("" (ASSERT) (("" (FLATTEN) (("" (CASE "NOT (derivable?[S](g, x) AND derivable?[T](f, x))") (("1" (SPLIT 1) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -2 -3) (("2" (HIDE -6) (("2" (FLATTEN) (("2" (LEMMA "deriv_def[S]") (("2" (EXPAND "derivable?") (("2" (EXPAND "convergent?" -2) (("2" (EXPAND "convergent?" -3) (("2" (SKEEP*) (("2" (INST -1 "g" "l" "x") (("2" (ASSERT) (("2" (FLATTEN) (("2" (INST -5 "f" "deriv[S](g,x)" "x") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE -2) (("2" (HIDE -4) (("2" (TYPEPRED "x") (("2" (SKEEP) (("2" (EXPAND "convergence") (("2" (EXPAND "convergence") (("2" (FLATTEN) (("2" (SPLIT 1) (("1" (EXPAND "adh" 1) (("1" (SKEEP) (("1" (EXPAND "adh" -6) (("1" (HIDE -1 -2) (("1" (INST -4 "min(e,del)") (("1" (SKEEP) (("1" (INST 1 "x2") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "A") (("2" (TYPEPRED "x2") (("2" (EXPAND "A" -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE -1 -2) (("2" (INST -5 "epsilon") (("2" (SKEEP) (("2" (INST 1 "min(delta,del)") (("2" (SKEEP) (("2" (INST -7 "x2") (("1" (ASSERT) (("1" (EXPAND "NQ") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -10) (("1" (INST-CP -1 "x") (("1" (INST-CP -1 "x2+x") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A") (("2" (TYPEPRED "x2") (("2" (EXPAND "A" -2) (("2" (ASSERT) (("2" (INST -5 "x2+x") (("2" (ASSERT) (("2" (FLATTEN) (("2" (SPLIT -4) (("1" (EXPAND "member" -1) (("1" (EXPAND "extend" -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE -4 -5 -6 -7 -8) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|deriv_def| FORMULA-DECL NIL |derivatives_def| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|T_pred| CONST-DECL "[real -> boolean]" |derivatives_subtype| NIL) (T FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|S_pred| CONST-DECL "[T -> boolean]" |derivatives_subtype| NIL) (S FORMAL-SUBTYPE-DECL NIL |derivatives_subtype| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|extend| CONST-DECL "R" |extend| NIL) (|fullset| CONST-DECL "set" |sets| NIL) (|convergence| CONST-DECL "bool" |lim_of_functions| NIL) (|x2| SKOLEM-CONST-DECL "(A(x))" |derivatives_subtype| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NQ CONST-DECL "real" |derivatives_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|adh| CONST-DECL "setof[real]" |convergence_functions| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|x2| SKOLEM-CONST-DECL "(A(x))" |derivatives_subtype| NIL) (|x| SKOLEM-CONST-DECL "{xx: S |
   EXISTS (del: posreal):
     FORALL (y: T):
       abs(xx - y) < del IMPLIES
        member[T](y, extend[T, S, bool, FALSE](fullset[S]))}" |derivatives_subtype| NIL) (A CONST-DECL "setof[nzreal]" |derivatives_def| NIL) (|setof| TYPE-EQ-DECL NIL |defined_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|convergence| CONST-DECL "bool" |convergence_functions| NIL) (|deriv| CONST-DECL "real" |derivatives_def| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|convergent?| CONST-DECL "bool" |lim_of_functions| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|derivable?| CONST-DECL "bool" |derivatives_def| NIL) (|derivable_subtype_del| FORMULA-DECL NIL |derivatives_subtype| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)))
