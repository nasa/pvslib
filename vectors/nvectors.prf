(|nvectors|
 (|difference_TCC1| 0
  (|difference_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|difference| SUBTYPE "nvectors.v`length" "posnat")))
 (|difference_TCC2| 0
  (|difference_TCC2-1| |nil| 3500755723
   ("" (SKOSIMP*)
    (("" (TYPEPRED "v!1`seq") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|difference| SUBTYPE
    "LAMBDA (i: naturalnumbers.nat): (number_fields.-)(nvectors.v`seq(i))"
    "barray[real, 0](nvectors.v`length)")))
 (|plus_TCC1| 0
  (|plus_TCC1-1| |nil| 3500755723
   ("" (SKOSIMP*)
    (("" (TYPEPRED "u!1`seq")
      (("" (INST?)
        (("" (ASSERT)
          (("" (TYPEPRED "v!1`seq") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   NIL
   (|plus| SUBTYPE
    "(LAMBDA (i: naturalnumbers.nat): (number_fields.+)(nvectors.u`seq(i), nvectors.v`seq(i)))"
    "barray[real, 0](nvectors.u`length)")))
 (|plus_TCC2| 0
  (|plus_TCC2-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|plus| SUBTYPE
    "(# length := nvectors.u`length, seq := (LAMBDA (i: naturalnumbers.nat): (number_fields.+)(nvectors.u`seq(i), nvectors.v`seq(i))) #)"
    "Vect(nvectors.u`length)")))
 (|difference_TCC3| 0
  (|difference_TCC3-1| |nil| 3501234730 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|difference| SUBTYPE "(nvectors.-)(nvectors.v)"
    "Vect(nvectors.u`length)")))
 (|times_TCC1| 0
  (|times_TCC1-2| "" 3757796518
   ("" (SKEEP :PREDS? T)
    (("" (SKEEP)
      (("" (TYPEPRED "v`seq") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK
   (|times| SUBTYPE
    "LAMBDA (i: naturalnumbers.nat): number_fields.*(nvectors.a, nvectors.v`seq(i))"
    "barray[real, 0](nvectors.v`length)"))
  (|times_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|times| SUBTYPE
    "LAMBDA (i: naturalnumbers.nat): number_fields.*(nvectors.a, nvectors.v`seq(i))"
    "barray[real, 0](nvectors.v`length)")))
 (|sqv_TCC1| 0
  (|sqv_TCC1-1| |nil| 3500755723
   ("" (SKOSIMP*)
    (("" (EXPAND "*")
      (("" (LEMMA "sigma_ge_0[nat]") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "real" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma_ge_0| FORMULA-DECL NIL |sigma| |reals|))
   NIL (|sqv| SUBTYPE "nvectors.*(nvectors.v, nvectors.v)" "nnreal")))
 (|zero_TCC1| 0
  (|zero_TCC1-2| "" 3790092922 ("" (SKOSIMP*) NIL NIL) NIL SHOSTAK
   (|zero| SUBTYPE "LAMBDA (i: naturalnumbers.nat): 0"
    "barray[real, 0](nvectors.n)"))
  (|zero_TCC1-1| |nil| 3500755723
   ("" (SKOSIMP*)
    (("" (EXPAND "const_seq")
      (("" (EXPAND "norm")
        (("" (EXPAND "sqv")
          (("" (EXPAND "*")
            (("" (LEMMA "sigma_const")
              (("" (INST?)
                (("" (ASSERT) (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|zero| SUBTYPE "LAMBDA (i: naturalnumbers.nat): 0"
    "barray[real, 0](nvectors.n)")))
 (|zero_TCC2| 0
  (|zero_TCC2-1| |nil| 3501326694
   ("" (SKOSIMP*)
    (("" (ASSERT)
      (("" (EXPAND "norm")
        (("" (EXPAND "sqv")
          (("" (EXPAND "*")
            (("" (REWRITE "sqrt_eq_0")
              (("" (LEMMA "sigma_const")
                (("" (INST?)
                  (("" (ASSERT) (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_eq_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) NIL
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sigma_const| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL))
   NIL
   (|zero| SUBTYPE
    "(# length := nvectors.n, seq := LAMBDA (i: naturalnumbers.nat): 0 #)"
    "Zero_vect(nvectors.n)")))
 (|unity_TCC1| 0
  (|unity_TCC1-1| NIL 3882932151 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL))
   NIL
   (|unity| SUBTYPE "nvectors.zero(nvectors.n)`seq WITH [(nvectors.i) := 1]"
    "barray[real, 0](nvectors.zero(nvectors.n)`length)")))
 (|unity_TCC2| 0
  (|unity_TCC1-1| |nil| 3500755723
   ("" (SKOSIMP*)
    (("" (EXPAND "zero")
      (("" (EXPAND "norm")
        ((""
          (CASE "sqv((# length := n!1,
                   seq := (LAMBDA (i: nat): 0) WITH [(i!1) := 1] #)) = 1")
          (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
           ("2" (HIDE 2)
            (("2" (EXPAND "sqv")
              (("2"
                (CASE-REPLACE
                 "(# length := n!1, seq := (LAMBDA (i: nat): 0::nat) WITH [(i!1) := 1] #) *
       (# length := n!1, seq := (LAMBDA (i: nat): 0::nat) WITH [(i!1) := 1] #) =
         sigma(0, n!1 - 1,
            LAMBDA (j: nat): (LAMBDA (i: nat): 0::nat) WITH [(i!1) := 1](j))")
                (("1" (HIDE -1)
                  (("1" (ASSERT)
                    (("1"
                      (CASE-REPLACE
                       "(LAMBDA (j: nat): (LAMBDA (i: nat): 0::nat) WITH [(i!1) := 1](j)) =
                     (LAMBDA (j: nat): if (j = i!1) then 1 else 0 endif)")
                      (("1" (HIDE -1)
                        (("1" (LEMMA "sigma_middle")
                          (("1" (INST?)
                            (("1" (INST - "i!1")
                              (("1" (ASSERT)
                                (("1" (REPLACE -1)
                                  (("1" (HIDE -1)
                                    (("1" (LEMMA "sigma_restrict_eq")
                                      (("1" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (INST - "(LAMBDA (j: nat): 0)")
                                            (("1" (ASSERT)
                                              (("1" (SPLIT -1)
                                                (("1" (REPLACE -1)
                                                  (("1" (REWRITE "sigma_const")
                                                    (("1" (ASSERT)
                                                      (("1" (HIDE -1)
                                                        (("1"
                                                          (LEMMA
                                                           "sigma_restrict_eq")
                                                          (("1" (INST?)
                                                            (("1"
                                                              (INST -
                                                               "(LAMBDA (j: nat): 0)")
                                                              (("1" (SPLIT -1)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("1"
                                                                      (HIDE -1)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "sigma_const")
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (HIDE 2)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "restrict")
                                                                    (("2"
                                                                      (PROPAX)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE 2)
                                                  (("2" (EXPAND "restrict")
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                          (("2" (LIFT-IF) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (EXPAND "*")
                    (("2" (LEMMA "sigma_restrict_eq")
                      (("2" (INST?)
                        (("2" (ASSERT)
                          (("2" (HIDE 2)
                            (("2" (EXPAND "restrict")
                              (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                                (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (SKOSIMP*) (("3" (HIDE 2) (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (SKOSIMP*) (("3" (HIDE 2) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sqrt_1| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|times_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|exp2| DEF-DECL "posnat" |exp2| NIL)
    (|uint8| TYPE-EQ-DECL NIL |integertypes| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (|sigma_middle| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_restrict_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|restrict| CONST-DECL "[T -> real]" |sigma| |reals|)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sigma_const| FORMULA-DECL NIL |sigma| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sigma_nat| APPLICATION-JUDGEMENT "nat" |sigma_nat| |reals|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL))
   NIL
   (|unity| SUBTYPE "nvectors.zero(nvectors.n) WITH [`seq(nvectors.i) := 1]"
    "Normalized_vect(nvectors.n)")))
 (|const_vec_TCC1| 0
  (|const_vec_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|const_seq| CONST-DECL "fseq" |fseqs_def| |structures|))
   NIL
   (|const_vec| SUBTYPE "fseqs_def[real, 0].const_seq(nvectors.n, nvectors.a)"
    "Vect(nvectors.n)")))
 (|comp_distr_add| 0
  (|comp_distr_add-1| |nil| 3500783129 ("" (GRIND) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) SHOSTAK))
 (|comp_distr_sub| 0
  (|comp_distr_sub-1| |nil| 3500783135 ("" (GRIND) NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|comp_distr_scal| 0
  (|comp_distr_scal-1| |nil| 3500783142 ("" (GRIND) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) SHOSTAK))
 (|comp_zero| 0
  (|comp_zero-1| |nil| 3500783145 ("" (GRIND) NIL NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)) SHOSTAK))
 (|comp_eq| 0
  (|comp_eq-1| |nil| 3500783149
   ("" (SKOSIMP*)
    (("" (PROP)
      (("1" (ASSERT) NIL NIL)
       ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("2" (APPLY-EXTENSIONALITY :HIDE? T)
          (("2" (INST?)
            (("2" (ASSERT)
              (("2" (TYPEPRED "w!1`seq")
                (("2" (TYPEPRED "u!1`seq")
                  (("2" (INST?) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|add_zero_left_TCC1| 0
  (|add_zero_left_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)) NIL
   (|add_zero_left| SUBTYPE "nvectors.v"
    "Vect(nvectors.zero(nvectors.n)`length)")))
 (|add_zero_left| 0
  (|add_zero_left-2| "" 3790092923
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK)
  (|add_zero_left-1| |nil| 3500783169
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (TYPEPRED "v!1`seq(x1!1)") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   NIL SHOSTAK))
 (|add_zero_right_TCC1| 0
  (|add_zero_right_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)) NIL
   (|add_zero_right| SUBTYPE "nvectors.zero(nvectors.n)"
    "Vect(nvectors.v`length)")))
 (|add_zero_right| 0
  (|add_zero_right-2| "" 3790092923
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK)
  (|add_zero_right-1| |nil| 3500783182
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (TYPEPRED "v!1`seq(x1!1)") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   NIL SHOSTAK))
 (|add_comm_TCC1| 0
  (|add_comm_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|add_comm| SUBTYPE "nvectors.u" "Vect(nvectors.v`length)")))
 (|add_comm| 0
  (|add_comm-1| |nil| 3500783188 ("" (GRIND-WITH-EXT) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) SHOSTAK))
 (|add_assoc_TCC1| 0
  (|add_assoc_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|add_assoc| SUBTYPE "nvectors.w" "Vect(nvectors.v`length)")))
 (|add_assoc_TCC2| 0
  (|add_assoc_TCC2-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) NIL
   (|add_assoc| SUBTYPE "((nvectors.+)(nvectors.v, nvectors.w))"
    "Vect(nvectors.u`length)")))
 (|add_assoc_TCC3| 0
  (|add_assoc_TCC3-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) NIL
   (|add_assoc| SUBTYPE "nvectors.w"
    "Vect(((nvectors.+)(nvectors.u, nvectors.v))`length)")))
 (|add_assoc| 0
  (|add_assoc-1| |nil| 3500783193 ("" (GRIND-WITH-EXT) NIL NIL)
   ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK))
 (|add_move_right| 0
  (|add_move_right-2| "" 3790092923
   ("" (SKOSIMP*)
    (("" (PROP)
      (("1" (REPLACE -1 * RL)
        (("1" (ASSERT)
          (("1" (HIDE -1)
            (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
              (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (REPLACE -1)
        (("2" (ASSERT)
          (("2" (HIDE -1)
            (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
              (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL))
   SHOSTAK)
  (|add_move_right-1| |nil| 3500783197
   ("" (SKOSIMP*)
    (("" (PROP)
      (("1" (REPLACE -1 * RL)
        (("1" (ASSERT)
          (("1" (HIDE -1)
            (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
              (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                (("1" (GRIND)
                  (("1" (TYPEPRED "u!1`seq")
                    (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (REPLACE -1)
        (("2" (ASSERT)
          (("2" (HIDE -1)
            (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
              (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                (("2" (GRIND)
                  (("2" (TYPEPRED "v!1`seq")
                    (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|add_move_both| 0
  (|add_move_both-2| "" 3790092924
   ("" (SKOSIMP*)
    (("" (PROP)
      (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK)
  (|add_move_both-1| |nil| 3500783287
   ("" (SKOSIMP*)
    (("" (PROP)
      (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
          (("1" (GRIND)
            (("1" (TYPEPRED "u!1`seq")
              (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
          (("2" (GRIND)
            (("2" (TYPEPRED "v!1`seq")
              (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|add_neg_sub_TCC1| 0
  (|add_neg_sub_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|add_neg_sub| SUBTYPE "(nvectors.-)(nvectors.u)"
    "Vect(nvectors.v`length)")))
 (|add_neg_sub| 0
  (|add_neg_sub-1| |nil| 3500783295
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|add_cancel_TCC1| 0
  (|add_cancel_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) NIL
   (|add_cancel| SUBTYPE "nvectors.v"
    "Vect(((nvectors.+)(nvectors.v, nvectors.w))`length)")))
 (|add_cancel| 0
  (|add_cancel-2| "" 3790092924
   ("" (SKOSIMP*)
    (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
      (("" (GRIND :EXCLUDE "default")
        (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK)
  (|add_cancel-1| |nil| 3500783299
   ("" (SKOSIMP*)
    (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
      (("" (GRIND :EXCLUDE "default")
        (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
          (("" (LIFT-IF)
            (("" (GROUND)
              (("" (TYPEPRED "w!1`seq")
                (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|add_cancel_neg_TCC1| 0
  (|add_cancel_neg_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|add_cancel_neg| SUBTYPE "nvectors.w"
    "Vect(((nvectors.-)(nvectors.v))`length)")))
 (|add_cancel_neg_TCC2| 0
  (|add_cancel_neg_TCC2-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL))
   NIL
   (|add_cancel_neg| SUBTYPE "nvectors.v"
    "Vect(((nvectors.+)((nvectors.-)(nvectors.v), nvectors.w))`length)")))
 (|add_cancel_neg| 0
  (|add_cancel_neg-2| "" 3790092924
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK)
  (|add_cancel_neg-1| |nil| 3500783303
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("1" (TYPEPRED "w!1`seq")
      (("1" (INST?)
        (("1" (ASSERT) (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("2" (TYPEPRED "w!1`seq(x1!1)") (("2" (PROPAX) NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|add_cancel2_TCC1| 0
  (|add_cancel2_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   NIL
   (|add_cancel2| SUBTYPE "nvectors.v"
    "Vect(((nvectors.-)(nvectors.w, nvectors.v))`length)")))
 (|add_cancel2| 0
  (|add_cancel2-2| "" 3790092924
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK)
  (|add_cancel2-1| |nil| 3500783307
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("1" (TYPEPRED "w!1`seq(x!1)")
      (("1" (TYPEPRED "w!1`seq")
        (("1" (INST?)
          (("1" (ASSERT) (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (TYPEPRED "w!1`seq(x1!1)") (("2" (PROPAX) NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|add_cancel_neg2_TCC1| 0
  (|add_cancel_neg2_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) NIL
   (|add_cancel_neg2| SUBTYPE "nvectors.v"
    "Vect(((nvectors.+)(nvectors.w, nvectors.v))`length)")))
 (|add_cancel_neg2| 0
  (|add_cancel_neg2-2| "" 3790092924
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK)
  (|add_cancel_neg2-1| |nil| 3500783311
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("1" (TYPEPRED "w!1`seq")
      (("1" (INST?)
        (("1" (ASSERT) (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("2" (TYPEPRED "w!1`seq(x1!1)") (("2" (PROPAX) NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|sub_zero_left| 0
  (|sub_zero_left-2| "" 3790092924
   ("" (SKOSIMP*)
    (("" (EXPAND "zero")
      (("" (ASSERT)
        (("" (EXPAND "-")
          (("" (EXPAND "+ ")
            (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   SHOSTAK)
  (|sub_zero_left-1| |nil| 3500783315
   ("" (SKOSIMP*)
    (("" (EXPAND "zero")
      (("" (EXPAND "const_seq")
        (("" (ASSERT)
          (("" (EXPAND "-")
            (("" (EXPAND "+ ")
              (("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|sub_zero_right| 0
  (|sub_zero_right-2| "" 3790092925
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK)
  (|sub_zero_right-1| |nil| 3500783319
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (TYPEPRED "v!1`seq(x1!1)") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   NIL SHOSTAK))
 (|sub_eq_args| 0
  (|sub_eq_args-1| |nil| 3500783323
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|sub_eq_zero_TCC1| 0
  (|sub_eq_zero_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|sub_eq_zero| SUBTYPE "nvectors.v" "Vect(nvectors.u`length)")))
 (|sub_eq_zero| 0
  (|sub_eq_zero-2| "" 3790092925
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (DECOMPOSE-EQUALITY) (("" (INST?) (("" (GROUND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL))
   SHOSTAK)
  (|sub_eq_zero-1| |nil| 3500783328
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (DECOMPOSE-EQUALITY)
      (("" (INST?)
        (("" (GROUND)
          (("" (LIFT-IF)
            (("" (GROUND)
              (("" (TYPEPRED "u!1`seq")
                (("" (TYPEPRED "v!1`seq")
                  (("" (INST?) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|sub_cancel_TCC1| 0
  (|sub_cancel_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   NIL
   (|sub_cancel| SUBTYPE "nvectors.v"
    "Vect(((nvectors.-)(nvectors.v, nvectors.w))`length)")))
 (|sub_cancel| 0
  (|sub_cancel-1| |nil| 3500783354
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|sub_cancel_neg_TCC1| 0
  (|sub_cancel_neg_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   NIL
   (|sub_cancel_neg| SUBTYPE "nvectors.v"
    "Vect(((nvectors.-)((nvectors.-)(nvectors.v), nvectors.w))`length)")))
 (|sub_cancel_neg| 0
  (|sub_cancel_neg-1| |nil| 3500783361
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|neg_add_left_TCC1| 0
  (|neg_add_left_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|neg_add_left| SUBTYPE "nvectors.v"
    "Vect(((nvectors.-)(nvectors.v))`length)")))
 (|neg_add_left| 0
  (|neg_add_left-1| |nil| 3500783364
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|neg_add_right| 0
  (|neg_add_right-1| |nil| 3500783370
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|neg_distr_sub| 0
  (|neg_distr_sub-1| |nil| 3500783373
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|neg_neg| 0
  (|neg_neg-1| |nil| 3500783377
   ("" (SKOSIMP*)
    (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
      (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("" (EXPAND "-") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL))
   SHOSTAK))
 (|neg_distr_add_TCC1| 0
  (|neg_distr_add_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|neg_distr_add| SUBTYPE "nvectors.v"
    "Vect(((nvectors.-)(nvectors.u))`length)")))
 (|neg_distr_add| 0
  (|neg_distr_add-1| |nil| 3500783381
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK))
 (|dot_neg_left| 0
  (|dot_neg_left-2| "" 3790092925
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (LEMMA "sigma_scal[nat]")
          ((""
            (INST -1 "LAMBDA (i_1: nat): -u!1`seq(i_1) * w!1`seq(i_1)" "-1"
             "u!1`length-1" "0")
            (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_neg_left-1| |nil| 3500783385
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (LEMMA "sigma_scal[nat]")
          ((""
            (INST -1 "LAMBDA (i_1: nat): -u!1`seq(i_1) * w!1`seq(i_1)" "-1"
             "u!1`length-1" "0")
            (("" (REPLACE -1)
              (("" (ASSERT)
                (("" (HIDE -1)
                  (("" (LEMMA "sigma_restrict_eq")
                    (("" (INST?)
                      (("" (ASSERT)
                        ((""
                          (INST -
                           "LAMBDA (i_1: nat): -u!1`seq(i_1) * w!1`seq(i_1)")
                          (("" (ASSERT)
                            (("" (EXPAND "restrict") (("" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_neg_right| 0
  (|dot_neg_right-3| "" 3790092925
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (LEMMA "sigma_scal[nat]")
          ((""
            (INST -1 "LAMBDA (i_1: nat): -u!1`seq(i_1) * w!1`seq(i_1)" "-1"
             "u!1`length-1" "0")
            (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_neg_right-2| |nil| 3501260680
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (LEMMA "sigma_scal[nat]")
          ((""
            (INST -1 "LAMBDA (i_1: nat): -u!1`seq(i_1) * w!1`seq(i_1)" "-1"
             "u!1`length-1" "0")
            (("" (REPLACE -1)
              (("" (ASSERT)
                (("" (HIDE -1)
                  (("" (LEMMA "sigma_restrict_eq")
                    (("" (INST?)
                      (("" (ASSERT)
                        ((""
                          (INST -
                           "LAMBDA (i_1: nat): -u!1`seq(i_1) * w!1`seq(i_1)")
                          (("" (ASSERT)
                            (("" (EXPAND "restrict")
                              (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                                (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|dot_neg_right-1| |nil| 3500784674
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (EXPAND "fseq_appl")
          (("" (LEMMA "sigma_scal[nat]")
            ((""
              (INST -1 "LAMBDA (i_1: nat): u!1`seq(i_1) * -w!1`seq(i_1)" "-1"
               "u!1`length-1" "0")
              (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_neg_sq| 0
  (|dot_neg_sq-2| "" 3790092926
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK)
  (|dot_neg_sq-1| |nil| 3500784794
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (LEMMA "sigma_restrict_eq")
      (("" (INST?)
        (("" (INST - "(LAMBDA (i: nat): v!1`seq(i) * v!1`seq(i))")
          (("" (ASSERT)
            (("" (EXPAND "restrict")
              (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                (("" (LIFT-IF) (("" (HIDE 2) (("" (GROUND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_zero_left_TCC1| 0
  (|dot_zero_left_TCC1-1| |nil| 3500785044 ("" (SUBTYPE-TCC) NIL NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)) NIL
   (|dot_zero_left| SUBTYPE "nvectors.v"
    "Vect(nvectors.zero(nvectors.v`length)`length)")))
 (|dot_zero_left| 0
  (|dot_zero_left-2| "" 3790092926
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (LEMMA "sigma_restrict_eq")
      (("" (INST?)
        (("" (LEMMA "sigma_zero[nat]")
          (("" (INST - "v!1`length - 2" "0")
            (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sigma_restrict_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|) NIL
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL))
   SHOSTAK)
  (|dot_zero_left-1| |nil| 3500784801
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (LEMMA "sigma_restrict_eq")
      (("" (INST?)
        (("" (LEMMA "sigma_zero[nat]")
          (("" (INST - "v!1`length - 2" "0")
            (("" (INST?)
              (("" (ASSERT)
                (("" (EXPAND "restrict")
                  (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                    (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_zero_right| 0
  (|dot_zero_right-3| "" 3790092926
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (LEMMA "sigma_restrict_eq")
      (("" (INST?)
        (("" (LEMMA "sigma_zero[nat]")
          (("" (INST - "v!1`length - 2" "0") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sigma_restrict_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL))
   SHOSTAK)
  (|dot_zero_right-2| |nil| 3501260122
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (LEMMA "sigma_restrict_eq")
      (("" (INST?)
        (("" (LEMMA "sigma_zero[nat]")
          (("" (INST - "v!1`length - 2" "0")
            (("" (INST?)
              (("" (ASSERT)
                (("" (EXPAND "restrict") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|dot_zero_right-1| |nil| 3500785150
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (USE "sigma_zero[nat]") NIL NIL)) NIL)
   NIL SHOSTAK))
 (|dot_comm| 0
  (|dot_comm-2| "" 3790092926 ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK)
  (|dot_comm-1| |nil| 3500785167
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (LEMMA "sigma_eq[nat]")
      ((""
        (INST -1 "LAMBDA (i: nat): u!1`seq(i) * v!1`seq(i)"
         "LAMBDA (i: nat): v!1`seq(i) * u!1`seq(i)" "u!1`length - 2" "0")
        (("1" (ASSERT)
          (("1" (ASSERT)
            (("1" (REPLACE -1 :HIDE? T)
              (("1" (ASSERT)
                (("1" (REPLACE -2 :ACTUALS? T) (("1" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_assoc_TCC1| 0
  (|dot_assoc_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|dot_assoc| SUBTYPE "nvectors.w"
    "Vect((nvectors.*(nvectors.a, nvectors.v))`length)")))
 (|dot_assoc| 0
  (|dot_assoc-1| |nil| 3500785460
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (USE "sigma_scal[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|dot_eq_args_ge| 0
  (|dot_eq_args_ge-1| |nil| 3500785551
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (USE "sigma_ge_0[nat]")
      (("" (PROP)
        (("1" (ASSERT) NIL NIL)
         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sigma_ge_0| FORMULA-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL))
   SHOSTAK))
 (|dot_distr_add_left| 0
  (|dot_distr_add_left-1| |nil| 3500785603
   ("" (GRIND-WITH-EXT :EXCLUDE "default")
    (("" (USE "sigma_sum[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|sigma_sum| FORMULA-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL))
   SHOSTAK))
 (|dot_distr_add_right_TCC1| 0
  (|dot_distr_add_right_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)) NIL
   (|dot_distr_add_right| SUBTYPE "nvectors.u"
    "Vect(((nvectors.+)(nvectors.v, nvectors.w))`length)")))
 (|dot_distr_add_right_TCC2| 0
  (|dot_distr_add_right_TCC2-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL (|dot_distr_add_right| SUBTYPE "nvectors.u" "Vect(nvectors.w`length)")))
 (|dot_distr_add_right| 0
  (|dot_distr_add_right-2| "" 3790092927
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "+")
      (("" (EXPAND "*")
        (("" (REPLACE -3 :ACTUALS? T)
          (("" (REPLACE -5 :ACTUALS? T)
            (("" (USE "sigma_sum[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_sum| FORMULA-DECL NIL |sigma| |reals|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_distr_add_right-1| |nil| 3500785664
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "+")
      (("" (EXPAND "*")
        (("" (EXPAND "fseq_appl")
          (("" (REPLACE -3 :ACTUALS? T)
            (("" (REPLACE -5 :ACTUALS? T)
              (("" (USE "sigma_sum[nat]")
                (("1" (ASSERT)
                  (("1" (REPLACE -1 :HIDE? T)
                    (("1" (USE "sigma_eq[nat]")
                      (("1" (PROP)
                        (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)
                 ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_distr_sub_left_TCC1| 0
  (|dot_distr_sub_left_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   NIL
   (|dot_distr_sub_left| SUBTYPE "((nvectors.-)(nvectors.v, nvectors.w))"
    "Vect(nvectors.u`length)")))
 (|dot_distr_sub_left| 0
  (|dot_distr_sub_left-2| "" 3790092927
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (REPLACE -3 :ACTUALS? T)
          (("" (REPLACE -5 :ACTUALS? T)
            (("" (HIDE-ALL-BUT 1)
              (("" (USE "sigma_minus[nat]")
                (("" (REPLACE -1 :HIDE? T)
                  (("" (USE "sigma_eq[nat]")
                    (("1" (PROP)
                      (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                     ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    NIL NIL (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_minus| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_distr_sub_left-1| |nil| 3500785912
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "*")
        (("" (REPLACE -3 :ACTUALS? T)
          (("" (REPLACE -5 :ACTUALS? T)
            (("" (HIDE-ALL-BUT 1)
              (("" (EXPAND "fseq_appl")
                (("" (USE "sigma_minus[nat]")
                  (("" (REPLACE -1 :HIDE? T)
                    (("" (USE "sigma_eq[nat]")
                      (("1" (PROP)
                        (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)
                       ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_distr_sub_right_TCC1| 0
  (|dot_distr_sub_right_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   NIL
   (|dot_distr_sub_right| SUBTYPE "nvectors.u"
    "Vect(((nvectors.-)(nvectors.v, nvectors.w))`length)")))
 (|dot_distr_sub_right| 0
  (|dot_distr_sub_right-2| "" 3790092928
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "-")
        (("" (EXPAND "+")
          (("" (EXPAND "*")
            (("" (REPLACE -3 :ACTUALS? T)
              (("" (REPLACE -5 :ACTUALS? T)
                (("" (HIDE-ALL-BUT 1)
                  (("" (USE "sigma_minus[nat]")
                    (("" (REPLACE -1 :HIDE? T)
                      (("" (USE "sigma_eq[nat]")
                        (("" (PROP)
                          (("" (HIDE-ALL-BUT 1) (("" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_minus| FORMULA-DECL NIL |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_distr_sub_right-1| |nil| 3500786067
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "-")
        (("" (EXPAND "+")
          (("" (EXPAND "*")
            (("" (EXPAND "fseq_appl")
              (("" (REPLACE -3 :ACTUALS? T)
                (("" (REPLACE -5 :ACTUALS? T)
                  (("" (HIDE-ALL-BUT 1)
                    (("" (USE "sigma_minus[nat]")
                      (("1" (REPLACE -1 :HIDE? T)
                        (("1" (USE "sigma_eq[nat]")
                          (("1" (PROP)
                            (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)
                       ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_divby| 0
  (|dot_divby-2| "" 3790092928
   ("" (SKOSIMP :PREDS? T)
    (("" (APPLY-EXTENSIONALITY 2 :HIDE? T)
      (("" (EXPAND "*")
        (("" (DECOMPOSE-EQUALITY)
          (("" (DECOMPOSE-EQUALITY) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_divby-1| |nil| 3500786326
   ("" (SKOSIMP :PREDS? T)
    (("" (APPLY-EXTENSIONALITY 2 :HIDE? T)
      (("" (EXPAND "*")
        (("" (DECOMPOSE-EQUALITY)
          (("" (DECOMPOSE-EQUALITY)
            (("" (EXPAND "fseq_appl")
              (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_scal_left_TCC1| 0
  (|dot_scal_left_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|dot_scal_left| SUBTYPE "nvectors.v"
    "Vect((nvectors.*(nvectors.a, nvectors.u))`length)")))
 (|dot_scal_left| 0
  (|dot_scal_left-2| "" 3790092928
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (USE "sigma_scal[nat]")
        (("" (REPLACE -1 :DIR RL :HIDE? T)
          (("" (USE "sigma_eq[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_scal_left-1| |nil| 3500786422
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "fseq_appl")
        (("" (USE "sigma_scal[nat]")
          (("" (REPLACE -1 :DIR RL :HIDE? T)
            (("" (USE "sigma_eq[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_scal_right_TCC1| 0
  (|dot_scal_right_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|dot_scal_right| SUBTYPE "(nvectors.*(nvectors.a, nvectors.v))"
    "Vect(nvectors.u`length)")))
 (|dot_scal_right| 0
  (|dot_scal_right-2| "" 3790092928
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (USE "sigma_scal[nat]")
        (("" (REPLACE -1 :DIR RL :HIDE? T)
          (("" (USE "sigma_eq[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_scal_right-1| |nil| 3500786537
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "fseq_appl")
        (("" (USE "sigma_scal[nat]")
          (("" (REPLACE -1 :DIR RL :HIDE? T)
            (("" (USE "sigma_eq[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_scal_assoc| 0
  (|dot_scal_assoc-1| |nil| 3500786577
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|dot_scal_canon_TCC1| 0
  (|dot_scal_canon_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|dot_scal_canon| SUBTYPE "(nvectors.*(nvectors.b, nvectors.v))"
    "Vect((nvectors.*(nvectors.a, nvectors.u))`length)")))
 (|dot_scal_canon| 0
  (|dot_scal_canon-2| "" 3790092928
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (LEMMA "sigma_scal[nat]")
        ((""
          (INST -1 "LAMBDA (i: nat): u!1`seq(i) * v!1`seq(i)" "a!1 *
b!1"
           "u!1`length - 1" "0")
          (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sigma_scal| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_scal_canon-1| |nil| 3500786586
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "fseq_appl")
        (("" (LEMMA "sigma_scal[nat]")
          ((""
            (INST -1 "LAMBDA (i: nat): u!1`seq(i) * v!1`seq(i)" "a!1 *
b!1"
             "u!1`length - 1" "0")
            (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_scal_distr_add_TCC1| 0
  (|dot_scal_distr_add_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|dot_scal_distr_add| SUBTYPE "nvectors.*(nvectors.b, nvectors.u)"
    "Vect((nvectors.*(nvectors.a, nvectors.u))`length)")))
 (|dot_scal_distr_add| 0
  (|dot_scal_distr_add-1| |nil| 3500786724
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|dot_scal_distr_sub| 0
  (|dot_scal_distr_sub-1| |nil| 3500786730
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|scal_add_distr_TCC1| 0
  (|scal_add_distr_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|scal_add_distr| SUBTYPE "nvectors.*(nvectors.a, nvectors.v)"
    "Vect((nvectors.*(nvectors.a, nvectors.u))`length)")))
 (|scal_add_distr| 0
  (|scal_add_distr-1| |nil| 3500786734
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK))
 (|scal_sub_distr| 0
  (|scal_sub_distr-1| |nil| 3500786738
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|scal_zero| 0
  (|scal_zero-1| |nil| 3500786742
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|scal_0| 0
  (|scal_0-1| |nil| 3500786750 ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL))
   SHOSTAK))
 (|scal_1| 0
  (|scal_1-1| |nil| 3501329009
   ("" (SKOSIMP*)
    (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
      (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
        (("" (EXPAND "*") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL))
   SHOSTAK))
 (|scal_cancel| 0
  (|scal_cancel-1| |nil| 3500826110
   ("" (SKOSIMP*)
    (("" (EXPAND "*")
      (("" (ASSERT)
        (("" (TYPEPRED "nzv!1")
          (("" (FLATTEN)
            (("" (EXPAND "norm")
              (("" (CASE "sqv(nzv!1) = 0")
                (("1" (ASSERT)
                  (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (HIDE 2)
                  (("2" (EXPAND "sqv")
                    (("2" (DECOMPOSE-EQUALITY)
                      (("2" (EXPAND "*")
                        (("2" (CASE "FORALL (x: nat): nzv!1`seq(x) = 0")
                          (("1" (HIDE -2)
                            (("1"
                              (CASE-REPLACE
                               "(LAMBDA (i: nat): nzv!1`seq(i) * nzv!1`seq(i)) = (LAMBDA (i:nat): 0)")
                              (("1" (LEMMA "sigma_const")
                                (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL))
                                NIL)
                               ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (SKOSIMP*)
                              (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|) NIL
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sigma_const| FORMULA-DECL NIL |sigma| |reals|)
    (* CONST-DECL "real" |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|scal_dot_eq_0| 0
  (|scal_dot_eq_0-2| "" 3790092929
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "zero")
        (("" (DECOMPOSE-EQUALITY)
          (("" (APPLY-EXTENSIONALITY 2 :HIDE? T)
            (("" (APPLY-EXTENSIONALITY :HIDE? T)
              (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|scal_dot_eq_0-1| |nil| 3500786759
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "zero")
        (("" (DECOMPOSE-EQUALITY)
          (("" (APPLY-EXTENSIONALITY 2 :HIDE? T)
            (("" (APPLY-EXTENSIONALITY :HIDE? T)
              (("1" (INST?)
                (("1" (ASSERT)
                  (("1" (EXPAND "fseq_appl") (("1" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("2" (HIDE-ALL-BUT (1 -5)) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_ge_dist_TCC1| 0
  (|dot_ge_dist_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|dot_ge_dist| SUBTYPE "nvectors.v" "Vect(nvectors.w`length)")))
 (|dot_ge_dist_TCC2| 0
  (|dot_ge_dist_TCC2-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL))
   NIL
   (|dot_ge_dist| SUBTYPE "((nvectors.-)(nvectors.u, nvectors.v))"
    "Vect(nvectors.w`length)")))
 (|dot_ge_dist| 0
  (|dot_ge_dist-2| "" 3790092930
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "-")
        (("" (LEMMA "sigma_minus[nat]")
          ((""
            (INST -1 "LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i)"
             "LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i)" "w!1`length -
      1"
             "0")
            (("" (ASSERT)
              ((""
                (NAME-REPLACE "s1" "sigma(0, w!1`length - 1,
            LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i))"
                 :HIDE? T)
                ((""
                  (NAME-REPLACE "s2" "sigma(0, w!1`length - 1,
             LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i))"
                   :HIDE? T)
                  (("" (LEMMA "sigma_eq[nat]")
                    ((""
                      (INST -1 "LAMBDA (i_1: nat):
               w!1`seq(i_1) * u!1`seq(i_1) - w!1`seq(i_1) * v!1`seq(i_1)"
                       "LAMBDA (i: nat):
              w!1`seq(i) * (u!1 + -v!1)`seq(i)"
                       "w!1`length - 1" "0")
                      (("1" (ASSERT)
                        (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "real" |nvectors| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_minus| FORMULA-DECL NIL |sigma| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) NIL
    NIL (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_ge_dist-1| |nil| 3500786888
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "-")
        (("" (EXPAND "fseq_appl")
          (("" (LEMMA "sigma_minus[nat]")
            ((""
              (INST -1 "LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i)"
               "LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i)" "w!1`length -
      1"
               "0")
              (("" (ASSERT)
                ((""
                  (NAME-REPLACE "s1" "sigma(0, w!1`length - 1,
            LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i))"
                   :HIDE? T)
                  ((""
                    (NAME-REPLACE "s2" "sigma(0, w!1`length - 1,
             LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i))"
                     :HIDE? T)
                    (("" (LEMMA "sigma_eq[nat]")
                      ((""
                        (INST -1 "LAMBDA (i_1: nat):
               w!1`seq(i_1) * u!1`seq(i_1) - w!1`seq(i_1) * v!1`seq(i_1)"
                         "LAMBDA (i: nat):
              w!1`seq(i) * (u!1 + -v!1)`seq(i)"
                         "w!1`length - 1" "0")
                        (("1" (ASSERT)
                          (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL))
                          NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)
                         ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_gt_dist_TCC1| 0
  (|dot_gt_dist_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL))
   NIL
   (|dot_gt_dist| SUBTYPE "((nvectors.-)(nvectors.u, nvectors.v))"
    "Vect(nvectors.w`length)")))
 (|dot_gt_dist| 0
  (|dot_gt_dist-2| "" 3790092930
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "-")
        (("" (EXPAND "+")
          (("" (EXPAND "*")
            (("" (LEMMA "sigma_minus[nat]")
              ((""
                (INST -1 "LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i)"
                 "LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i)" "w!1`length - 1"
                 "0")
                ((""
                  (NAME-REPLACE "s1" "sigma(0, w!1`length - 1,
            LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i))"
                   :HIDE? T)
                  ((""
                    (NAME-REPLACE "s2" "sigma(0, w!1`length - 1,
             LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i))"
                     :HIDE? T)
                    (("" (LEMMA "sigma_eq[nat]")
                      ((""
                        (INST -1 "LAMBDA (i_1: nat):
               w!1`seq(i_1) * u!1`seq(i_1) - w!1`seq(i_1) * v!1`seq(i_1)"
                         "LAMBDA (i: nat):
              w!1`seq(i) * (u!1 + -v!1)`seq(i)"
                         "w!1`length - 1" "0")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_minus| FORMULA-DECL NIL |sigma| |reals|)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL NIL
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|dot_gt_dist-1| |nil| 3500787454
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "-")
      (("" (EXPAND "-")
        (("" (EXPAND "+")
          (("" (EXPAND "*")
            (("" (EXPAND "fseq_appl")
              (("" (LEMMA "sigma_minus[nat]")
                ((""
                  (INST -1 "LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i)"
                   "LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i)" "w!1`length - 1"
                   "0")
                  ((""
                    (NAME-REPLACE "s1" "sigma(0, w!1`length - 1,
            LAMBDA (i: nat): w!1`seq(i) * u!1`seq(i))"
                     :HIDE? T)
                    ((""
                      (NAME-REPLACE "s2" "sigma(0, w!1`length - 1,
             LAMBDA (i: nat): w!1`seq(i) * v!1`seq(i))"
                       :HIDE? T)
                      (("" (LEMMA "sigma_eq[nat]")
                        ((""
                          (INST -1 "LAMBDA (i_1: nat):
               w!1`seq(i_1) * u!1`seq(i_1) - w!1`seq(i_1) * v!1`seq(i_1)"
                           "LAMBDA (i: nat):
              w!1`seq(i) * (u!1 + -v!1)`seq(i)"
                           "w!1`length - 1" "0")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)
                           ("3" (HIDE-ALL-BUT 1) (("3" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|sq_dot_eq| 0
  (|sq_dot_eq-1| |nil| 3500788721
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "*")
      (("" (EXPAND "zero")
        (("" (PROP)
          (("1" (APPLY-EXTENSIONALITY :HIDE? T)
            (("1" (LEMMA "sigma_nonneg_eq_0")
              (("1" (INST?)
                (("1" (ASSERT)
                  (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                    (("1" (INST?)
                      (("1" (TYPEPRED "x!1")
                        (("1" (SPLIT -2)
                          (("1" (ASSERT) (("1" (MULT-CASES -1) NIL NIL)) NIL)
                           ("2" (TYPEPRED "v!1`seq")
                            (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (REPLACE -1)
            (("2" (ASSERT) (("2" (USE "sigma_zero[nat]") NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "real" |nvectors| NIL)
    (|sigma_nonneg_eq_0| FORMULA-DECL NIL |sigma| |reals|)
    (|zero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqv_sq| 0
  (|sqv_sq-1| |nil| 3500789105 ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sq| CONST-DECL "nnreal" |nvectors| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|sq_sqv| 0
  (|sq_sqv-1| |nil| 3500789110 ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) NIL
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sq| CONST-DECL "nnreal" |nvectors| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   SHOSTAK))
 (|sq_lem| 0
  (|sq_lem-1| |nil| 3500789113 ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) NIL
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq| CONST-DECL "nnreal" |nvectors| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   SHOSTAK))
 (|sqv_lem| 0
  (|sqv_lem-1| |nil| 3500789120
   ("" (GRIND-WITH-EXT :EXCLUDE "default") NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|sqv_zero| 0
  (|sqv_zero-1| |nil| 3500789123
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "zero")
      (("" (EXPAND "sqv")
        (("" (EXPAND "*") (("" (USE "sigma_zero[nat]") NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL))
   SHOSTAK))
 (|sqv_eq_0| 0
  (|sqv_eq_0-1| |nil| 3500789189
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv") (("" (USE "sq_dot_eq") NIL NIL)) NIL)) NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|sq_dot_eq| FORMULA-DECL NIL |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqv_neg| 0
  (|sqv_neg-1| |nil| 3500789338
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv") (("" (USE "dot_neg_sq") NIL NIL)) NIL)) NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|dot_neg_sq| FORMULA-DECL NIL |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqv_add_TCC1| 0
  (|sqv_add_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|sqv_add| SUBTYPE "nvectors.v"
    "Vect((nvectors.*(2, nvectors.u))`length)")))
 (|sqv_add| 0
  (|sqv_add-1| |nil| 3500789436
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv")
      (("" (LEMMA "dot_distr_add_right")
        (("" (INST -1 "(u!1 + v!1)" "u!1" "v!1")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "dot_distr_add_left")
              (("1" (REWRITE "dot_distr_add_left")
                (("1" (LEMMA "dot_comm")
                  (("1" (INST -1 "v!1" "u!1")
                    (("1" (REPLACE -1 :HIDE? T)
                      (("1" (LEMMA "add_comm")
                        (("1" (ASSERT)
                          (("1" (ASSERT)
                            (("1" (REWRITE "dot_scal_left") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL) NIL
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL) NIL
    (|dot_distr_add_left| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_comm| FORMULA-DECL NIL |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|add_comm| FORMULA-DECL NIL |nvectors| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_distr_add_right| FORMULA-DECL NIL |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqv_sub| 0
  (|sqv_sub-1| |nil| 3500791344
   ("" (SKOSIMP*)
    (("" (EXPAND "sqv")
      (("" (LEMMA "dot_distr_sub_right")
        (("" (INST -1 "(u!1 - v!1)" "u!1" "v!1")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "dot_distr_sub_left")
              (("1" (REWRITE "dot_distr_sub_left")
                (("1" (ASSERT)
                  (("1" (REWRITE "dot_comm")
                    (("1" (ASSERT)
                      (("1" (REWRITE "dot_assoc" :DIR RL)
                        (("1" (ASSERT) (("1" (REWRITE "dot_comm") NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL) NIL
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL) NIL
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|dot_distr_sub_left| FORMULA-DECL NIL |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|dot_assoc| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_comm| FORMULA-DECL NIL |nvectors| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_distr_sub_right| FORMULA-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqv_sym| 0
  (|sqv_sym-2| "" 3790092931
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv")
      (("" (EXPAND "-")
        (("" (EXPAND "-")
          (("" (EXPAND "+")
            (("" (EXPAND "*")
              (("" (REPLACE -3 :ACTUALS? T)
                (("" (USE "sigma_eq[nat]") (("" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|sqv_sym-1| |nil| 3500791556
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv")
      (("" (EXPAND "-")
        (("" (EXPAND "-")
          (("" (EXPAND "+")
            (("" (EXPAND "*")
              (("" (EXPAND "fseq_appl")
                (("" (REPLACE -3 :ACTUALS? T)
                  (("" (USE "sigma_eq[nat]")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|sqv_scal| 0
  (|sqv_scal-1| |nil| 3500791721
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv")
      (("" (EXPAND "sq")
        (("" (ASSERT) (("" (REWRITE "dot_scal_canon") NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_scal_canon| FORMULA-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqrt_sqv_sq| 0
  (|sqrt_sqv_sq-1| |nil| 3500791898
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "sqv")
      (("" (TYPEPRED "sqrt(v!1 * v!1)")
        (("1" (PROPAX) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|norm_sym| 0
  (|norm_sym-1| |nil| 3500791987
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "norm") (("" (REWRITE "sqv_sym") NIL NIL)) NIL)) NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|sqv_sym| FORMULA-DECL NIL |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|norm_neg| 0
  (|norm_neg-1| |nil| 3500792117
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "norm")
      (("" (LEMMA "norm_sym")
        (("" (INST -1 "zero(u!1`length)" "u!1")
          (("1" (REWRITE "sub_zero_left")
            (("1" (REWRITE "sub_zero_right")
              (("1" (EXPAND "norm") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (EXPAND "zero") (("2" (PROPAX) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|Zero_vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sub_zero_right| FORMULA-DECL NIL |nvectors| NIL)
    (|sub_zero_left| FORMULA-DECL NIL |nvectors| NIL)
    (|norm_sym| FORMULA-DECL NIL |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|dot_sq_norm| 0
  (|dot_sq_norm-1| |nil| 3500792266
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "norm")
      (("" (EXPAND "sq")
        (("" (REWRITE "sqrt_sqv_sq")
          (("" (ASSERT) (("" (EXPAND "sqv") (("" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|sqrt_sqv_sq| FORMULA-DECL NIL |nvectors| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sq_norm| 0
  (|sq_norm-1| |nil| 3500792329
   ("" (SKOSIMP :PREDS? T) (("" (REWRITE "dot_sq_norm") NIL NIL)) NIL)
   ((|dot_sq_norm| FORMULA-DECL NIL |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|sqrt_sqv_norm| 0
  (|sqrt_sqv_norm-1| |nil| 3500792356
   ("" (SKOSIMP :PREDS? T) (("" (EXPAND "norm") (("" (PROPAX) NIL NIL)) NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|norm_eq_0| 0
  (|norm_eq_0-2| "" 3882932671
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "norm")
      (("" (EXPAND "sqv")
        (("" (PROP)
          (("1" (LEMMA "sqrt_eq_0")
            (("1" (INST - "v!1*v!1")
              (("1" (SPLIT -1)
                (("1" (HIDE -2)
                  (("1" (LEMMA "sq_dot_eq")
                    (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("2" (PROPAX) NIL NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (REPLACE -1)
            (("2" (EXPAND "zero")
              (("2" (EXPAND "*")
                (("2" (LEMMA "sigma_zero")
                  (("2" (INST?)
                    (("2" (ASSERT)
                      (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|norm_eq_0-1| |nil| 3500792378
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "norm")
      (("" (EXPAND "sqv")
        (("" (PROP)
          (("1" (LEMMA "sqrt_eq_0")
            (("1" (INST - V!1*V!1)
              (("1" (SPLIT -1)
                (("1" (HIDE -2)
                  (("1" (LEMMA "sq_dot_eq")
                    (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("2" (PROPAX) NIL NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (REPLACE -1)
            (("2" (EXPAND "zero")
              (("2" (EXPAND "*")
                (("2" (LEMMA "sigma_zero")
                  (("2" (INST?)
                    (("2" (ASSERT)
                      (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) NIL
    (* CONST-DECL "real" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq_dot_eq| FORMULA-DECL NIL |nvectors| NIL)
    (|sqrt_eq_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|norms_eq_sqv| 0
  (|norms_eq_sqv-1| |nil| 3500792831
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "norm")
      (("" (PROP)
        (("1" (TYPEPRED "sqrt(sqv(u!1))")
          (("1" (TYPEPRED "sqrt(sqv(v!1))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|norm_scal| 0
  (|norm_scal-1| |nil| 3500793051
   ("" (SKOSIMP*)
    (("" (EXPAND "norm")
      (("" (REWRITE "sqv_scal")
        (("" (REWRITE "sqrt_times") (("" (REWRITE "sqrt_sq_abs") NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|sqrt_sq_abs| FORMULA-DECL NIL |sqrt| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sqv_scal| FORMULA-DECL NIL |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL))
   SHOSTAK))
 (|idem_right| 0
  (|idem_right-2| "" 3790092932
   ("" (SKOSIMP :PREDS? T)
    (("" (PROP)
      (("1" (APPLY-EXTENSIONALITY 2 :HIDE? T)
        (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
          (("1" (EXPAND "zero")
            (("1" (LEMMA "scal_cancel")
              (("1" (INST -1 "a!1" "1" "v!1")
                (("1" (ASSERT)
                  (("1" (REPLACE -1) (("1" (REWRITE "scal_1") NIL NIL)) NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (LEMMA "norm_eq_0")
                    (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (REPLACE -1)
          (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
            (("2" (EXPAND "*")
              (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("3" (REPLACE -1)
        (("3" (EXPAND "zero")
          (("3" (ASSERT) (("3" (EXPAND "*") (("3" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal_cancel| FORMULA-DECL NIL |nvectors| NIL)
    (|norm_eq_0| FORMULA-DECL NIL |nvectors| NIL)
    (|scal_1| FORMULA-DECL NIL |nvectors| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) NIL
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|Zero_vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|idem_right-1| |nil| 3500788316
   ("" (SKOSIMP :PREDS? T)
    (("" (PROP)
      (("1" (APPLY-EXTENSIONALITY 2 :HIDE? T)
        (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T)
          (("1" (EXPAND "zero")
            (("1" (LEMMA "scal_cancel")
              (("1" (INST -1 "a!1" "1" "v!1")
                (("1" (ASSERT)
                  (("1" (REPLACE -1) (("1" (REWRITE "scal_1") NIL NIL)) NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (LEMMA "norm_eq_0")
                    (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (REPLACE -1)
          (("2" (ASSERT)
            (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
              (("2" (EXPAND "*")
                (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (REPLACE -1)
        (("3" (EXPAND "zero")
          (("3" (ASSERT) (("3" (EXPAND "*") (("3" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|caret_TCC1| 0
  (|caret_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   NIL (|caret| SUBTYPE "nvectors.norm(nvectors.nzv)" "nznum")))
 (|caret_TCC2| 0
  (|caret_TCC2-1| |nil| 3500755723
   ("" (SKOSIMP :PREDS? T)
    (("" (USE "norm_scal")
      (("" (REPLACE -1 :HIDE? T)
        (("" (EXPAND "abs")
          (("" (LIFT-IF)
            (("" (ASSERT)
              (("" (PROP)
                (("" (HIDE -2)
                  (("" (EXPAND "norm")
                    (("" (EXPAND "sqv")
                      (("" (EXPAND "*")
                        (("" (USE "sigma_ge_0[nat]")
                          (("" (PROP)
                            (("1"
                              (NAME-REPLACE "ss" "sigma(0, nzv!1`length - 1,
                LAMBDA (i: nat): nzv!1`seq(i) * nzv!1`seq(i))"
                               :HIDE? T)
                              (("1" (TYPEPRED "sqrt(ss)")
                                (("1" (ASSERT)
                                  (("1" (REWRITE "quotient_neg_lt") NIL NIL))
                                  NIL)
                                 ("2" (PROPAX) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|norm_scal| FORMULA-DECL NIL |nvectors| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|sigma_ge_0| FORMULA-DECL NIL |sigma| |reals|)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|quotient_neg_lt| FORMULA-DECL NIL |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (* CONST-DECL "real" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   NIL
   (|caret| SUBTYPE
    "nvectors.*((number_fields./(1, nvectors.norm(nvectors.nzv))), nvectors.nzv)"
    "Normalized")))
 (|dot_normalize_TCC1| 0
  (|dot_normalize_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (^ CONST-DECL "Normalized" |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL))
   NIL
   (|dot_normalize| SUBTYPE "nvectors.^(nvectors.nzv)"
    "Vect(nvectors.^(nvectors.nzu)`length)")))
 (|dot_normalize_TCC2| 0
  (|dot_normalize_TCC2-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|Nz_vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   NIL
   (|dot_normalize| SUBTYPE
    "(number_fields.*(nvectors.norm(nvectors.nzu), nvectors.norm(nvectors.nzv)))"
    "nznum")))
 (|dot_normalize| 0
  (|dot_normalize-1| |nil| 3500793449
   ("" (SKOSIMP*)
    (("" (EXPAND "^")
      (("" (ASSERT)
        (("" (REWRITE "dot_scal_right")
          (("" (ASSERT)
            (("" (REWRITE "dot_scal_left") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((^ CONST-DECL "Normalized" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_scal_right| FORMULA-DECL NIL |nvectors| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|Nz_vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL))
   SHOSTAK))
 (|normalize_normalize_TCC1| 0
  (|normalize_normalize_TCC1-1| |nil| 3500755723
   ("" (SKOSIMP :PREDS? T)
    (("" (REWRITE "norm_eq_0")
      (("" (EXPAND "zero") (("" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|norm_eq_0| FORMULA-DECL NIL |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL))
   NIL (|normalize_normalize| SUBTYPE "nvectors.^(nvectors.nzv)" "Nz_vector")))
 (|normalize_normalize| 0
  (|normalize_normalize-2| "" 3790092933
   ("" (SKOSIMP*)
    (("" (ASSERT)
      (("" (EXPAND "^")
        (("" (REWRITE "norm_scal")
          (("" (EXPAND "abs")
            (("" (LIFT-IF)
              (("" (SPLIT +)
                (("1" (FLATTEN) (("1" (CROSS-MULT -1) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|norm_scal| FORMULA-DECL NIL |nvectors| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (^ CONST-DECL "Normalized" |nvectors| NIL))
   SHOSTAK)
  (|normalize_normalize-1| |nil| 3500793485
   ("" (SKOSIMP*)
    (("" (ASSERT)
      (("" (EXPAND "^")
        (("" (REWRITE "norm_scal")
          (("" (EXPAND "abs")
            (("" (LIFT-IF)
              (("" (SPLIT +)
                (("1" (FLATTEN)
                  (("1" (CROSS-MULT -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (EXPAND "*")
                    (("2" (ASSERT)
                      (("2" (APPLY-EXTENSIONALITY 2 :HIDE? T)
                        (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|sqv_minus_dot_TCC1| 0
  (|sqv_minus_dot_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((* CONST-DECL "Vect(v`length)" |nvectors| NIL)) NIL
   (|sqv_minus_dot| SUBTYPE "nvectors.v"
    "Vect((nvectors.*(number_fields.*(2, nvectors.a), nvectors.u))`length)")))
 (|sqv_minus_dot| 0
  (|sqv_minus_dot-1| |nil| 3500793554
   ("" (SKOSIMP*)
    (("" (EXPAND "sqv" 1 1)
      (("" (LEMMA "dot_distr_sub_left")
        (("" (INST -1 "(u!1 - a!1 * v!1)" "u!1" "a!1*v!1")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (LEMMA "dot_distr_sub_right")
              (("1" (INST -1 "u!1" "u!1" "a!1 * v!1")
                (("1" (REPLACE -1 :HIDE? T)
                  (("1" (LEMMA "dot_distr_sub_right")
                    (("1" (INST -1 "a!1 * v!1" "u!1" "a!1 * v!1")
                      (("1" (REPLACE -1 :HIDE? T)
                        (("1" (EXPAND "sqv")
                          (("1" (EXPAND "sq")
                            (("1" (ASSERT)
                              (("1" (REWRITE "dot_scal_right")
                                (("1" (REWRITE "dot_scal_right")
                                  (("1"
                                    (CASE-REPLACE
                                     "a!1 * v!1 * u!1 = a!1 * u!1 * v!1")
                                    (("1" (HIDE -1)
                                      (("1"
                                        (CASE-REPLACE
                                         "v!1 * v!1 * a!1 * a!1 = a!1*a!1*v!1 * v!1")
                                        (("1" (HIDE -1)
                                          (("1"
                                            (CASE-REPLACE
                                             "a!1 * u!1 * v!1 = a!1 * ( u!1 * v!1)")
                                            (("1"
                                              (CASE-REPLACE
                                               "2 * a!1 * u!1 * v!1 = 2 * a!1 * ( u!1 * v!1)")
                                              (("1"
                                                (NAME-REPLACE UDOTV
                                                 "u!1 * v!1")
                                                (("1"
                                                  (CASE-REPLACE
                                                   "a!1 * a!1 * v!1 * v!1 = a!1 *( a!1 * v!1 * v!1)")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (HIDE -1 -2 2)
                                                    (("2"
                                                      (LEMMA "dot_scal_assoc")
                                                      (("2"
                                                        (INST -1 "a!1" "a!1"
                                                         "v!1")
                                                        (("2" (REPLACE -1 * RL)
                                                          (("2"
                                                            (REWRITE
                                                             "dot_scal_left")
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE -1 2)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (REWRITE "dot_scal_left")
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE 2)
                                              (("2" (ASSERT)
                                                (("2" (REWRITE "dot_scal_left")
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE 2)
                                          (("2" (ASSERT)
                                            (("2" (REWRITE "dot_scal_left") NIL
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (HIDE 2) (("3" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE 2)
                                      (("2" (REWRITE "dot_scal_left")
                                        (("2" (ASSERT)
                                          (("2" (REWRITE "dot_comm")
                                            (("2" (ASSERT)
                                              (("2"
                                                (REWRITE "dot_scal_left" :DIR
                                                 RL)
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL) NIL NIL
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL) NIL
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|dot_distr_sub_right| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_comm| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_scal_assoc| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|dot_scal_right| FORMULA-DECL NIL |nvectors| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|dot_distr_sub_left| FORMULA-DECL NIL |nvectors| NIL))
   SHOSTAK))
 (|cauchy_schwarz| 0
  (|cauchy_schwarz-2| "" 3790092935
   ("" (SKOSIMP :PREDS? T)
    (("" (CASE "sqv(v!1) = 0")
      (("1" (REWRITE "sqv_eq_0")
        (("1" (REPLACE -4)
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "dot_zero_right")
              (("1" (REWRITE "sq_0") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "(FORALL (t:real): sqv(u!1-t*v!1) >= 0)")
        (("1" (INST -1 "(u!1*v!1)/sqv(v!1)")
          (("1" (REWRITE "sqv_minus_dot")
            (("1" (NAME-REPLACE "UDOTV" "u!1 * v!1")
              (("1"
                (CASE-REPLACE
                 "2 * (UDOTV / sqv(v!1)) * u!1 * v!1 = 2 * sq(UDOTV) / sqv(v!1) ")
                (("1" (HIDE -1)
                  (("1"
                    (CASE-REPLACE
                     "sq(UDOTV / sqv(v!1)) * sqv(v!1) = sq(UDOTV) / sqv(v!1) ")
                    (("1" (HIDE -1)
                      (("1" (ASSERT)
                        (("1"
                          (CASE-REPLACE
                           "sqv(u!1) + sq(UDOTV) / sqv(v!1) - 2 * sq(UDOTV) / sqv(v!1) = sqv(u!1) - sq(UDOTV) / sqv(v!1)")
                          (("1" (HIDE -1)
                            (("1" (MULT-BY -1 "sqv(v!1)")
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL)
                           ("2" (LEMMA "sqv_eq_0")
                            (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REWRITE "sq_div")
                      (("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (REVEAL -1)
                    (("2"
                      (CASE-REPLACE
                       "2 * (UDOTV / sqv(v!1)) * u!1 * v!1 = 2 * (UDOTV / sqv(v!1)) * (u!1 * v!1)")
                      (("1" (HIDE -1)
                        (("1" (REPLACE -1)
                          (("1" (HIDE -1)
                            (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -1 2 3)
                        (("2" (REWRITE "dot_scal_left") NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL)
         ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
         ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|dot_zero_right| FORMULA-DECL NIL |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sqv_eq_0| FORMULA-DECL NIL |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL) NIL NIL
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sqv_minus_dot| FORMULA-DECL NIL |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL))
   SHOSTAK)
  (|cauchy_schwarz-1| |nil| 3500794264
   ("" (SKOSIMP :PREDS? T)
    (("" (CASE "sqv(v!1) = 0")
      (("1" (REWRITE "sqv_eq_0")
        (("1" (REPLACE -4)
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "dot_zero_right")
              (("1" (REWRITE "sq_0") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "(FORALL (t:real): sqv(u!1-t*v!1) >= 0)")
        (("1" (INST -1 "(u!1*v!1)/sqv(v!1)")
          (("1" (REWRITE "sqv_minus_dot")
            (("1" (NAME-REPLACE "UDOTV" "u!1 * v!1")
              (("1"
                (CASE-REPLACE
                 "2 * (UDOTV / sqv(v!1)) * u!1 * v!1 = 2 * sq(UDOTV) / sqv(v!1) ")
                (("1" (HIDE -1)
                  (("1"
                    (CASE-REPLACE
                     "sq(UDOTV / sqv(v!1)) * sqv(v!1) = sq(UDOTV) / sqv(v!1) ")
                    (("1" (HIDE -1)
                      (("1" (ASSERT)
                        (("1"
                          (CASE-REPLACE
                           "sqv(u!1) + sq(UDOTV) / sqv(v!1) - 2 * sq(UDOTV) / sqv(v!1) = sqv(u!1) - sq(UDOTV) / sqv(v!1)")
                          (("1" (HIDE -1)
                            (("1" (ASSERT)
                              (("1" (MULT-BY -1 "sqv(v!1)")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "sqv_eq_0")
                            (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REWRITE "sq_div")
                      (("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (REVEAL -1)
                    (("2"
                      (CASE-REPLACE
                       "2 * (UDOTV / sqv(v!1)) * u!1 * v!1 = 2 * (UDOTV / sqv(v!1)) * (u!1 * v!1)")
                      (("1" (HIDE -1)
                        (("1" (REPLACE -1)
                          (("1" (HIDE -1)
                            (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -1 2 3)
                        (("2" (REWRITE "dot_scal_left") NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL)
         ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
         ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|dot_norm| 0
  (|dot_norm-1| |nil| 3500823230
   ("" (SKOSIMP*)
    (("" (LEMMA "cauchy_schwarz")
      (("" (INST?)
        (("" (LEMMA "sqrt_le")
          (("" (INST?)
            (("" (ASSERT)
              (("" (HIDE -2)
                (("" (LEMMA "sqrt_sq_abs")
                  (("" (INST?)
                    (("" (ASSERT)
                      (("" (REPLACE -1)
                        (("" (HIDE -1)
                          (("" (REWRITE "sqrt_times")
                            (("" (EXPAND "norm")
                              (("" (EXPAND "abs")
                                (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cauchy_schwarz| FORMULA-DECL NIL |nvectors| NIL)
    (|sqrt_le| FORMULA-DECL NIL |sqrt| |reals|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sqrt_sq_abs| FORMULA-DECL NIL |sqrt| |reals|)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|norm_add_le| 0
  (|norm_add_le-1| |nil| 3500823296
   ("" (SKOSIMP*)
    (("" (EXPAND "norm")
      (("" (LEMMA "sqrt_le")
        (("" (INST -1 "sqv(u!1 + v!1)" "sq(sqrt(sqv(u!1)) + sqrt(sqv(v!1)))")
          (("" (REWRITE "sqrt_sq")
            (("" (ASSERT)
              (("" (HIDE 2)
                (("" (REWRITE "sqv_add")
                  (("" (EXPAND "sq")
                    (("" (REWRITE "sqrt_sqv_sq")
                      (("" (REWRITE "sqrt_sqv_sq")
                        (("" (REWRITE "sqrt_sqv_norm")
                          (("" (REWRITE "sqrt_sqv_norm")
                            (("" (LEMMA "dot_norm")
                              (("" (INST -1 "u!1" "v!1")
                                (("" (FLATTEN)
                                  (("" (REWRITE "dot_scal_left")
                                    (("" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sqv_add| FORMULA-DECL NIL |nvectors| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sqrt_sqv_sq| FORMULA-DECL NIL |nvectors| NIL)
    (|sqrt_sqv_norm| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_norm| FORMULA-DECL NIL |nvectors| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_le| FORMULA-DECL NIL |sqrt| |reals|))
   SHOSTAK))
 (|norm_sub_le| 0
  (|norm_sub_le-1| |nil| 3500823344
   ("" (SKOSIMP*)
    (("" (EXPAND "norm")
      (("" (LEMMA "sq_le")
        (("" (INST?)
          (("" (ASSERT)
            (("" (HIDE 2)
              (("" (EXPAND "sq")
                (("" (REWRITE "sq_rew")
                  (("" (REWRITE "sq_rew")
                    (("" (REWRITE "sqv_sub")
                      (("" (ASSERT)
                        (("" (REWRITE "sqrt_sqv_norm")
                          (("" (REWRITE "sqrt_sqv_norm")
                            (("" (ASSERT)
                              (("" (LEMMA "dot_norm")
                                (("" (INST -1 "-u!1" "v!1")
                                  (("1" (FLATTEN)
                                    (("1" (ASSERT)
                                      (("1" (REWRITE "norm_neg")
                                        (("1" (REWRITE "dot_neg_left")
                                          (("1" (ASSERT)
                                            (("1" (REWRITE "dot_scal_left")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sq_rew| FORMULA-DECL NIL |sq| |reals|)
    (|sqv_sub| FORMULA-DECL NIL |nvectors| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sqrt_sqv_norm| FORMULA-DECL NIL |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL) NIL NIL
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_neg_left| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (|norm_neg| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_norm| FORMULA-DECL NIL |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq_le| FORMULA-DECL NIL |sq| |reals|))
   SHOSTAK))
 (|norm_sub_ge| 0
  (|norm_sub_ge-1| |nil| 3500823649
   ("" (SKOSIMP*)
    (("" (LEMMA "norm_add_le")
      (("" (INST -1 "u!1-v!1" "v!1")
        (("1" (ASSERT)
          (("1" (REWRITE "add_cancel2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|norm_add_le| FORMULA-DECL NIL |nvectors| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|add_cancel2| FORMULA-DECL NIL |nvectors| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL) NIL
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL) NIL
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL))
   SHOSTAK))
 (|norm_ge_comps| 0
  (|norm_ge_comps-2| "" 3790092936
   ("" (SKOSIMP*)
    (("" (EXPAND "norm")
      (("" (EXPAND "sqv")
        (("" (EXPAND "*")
          (("" (REWRITE "sqrt_sq_abs" :DIR RL)
            ((""
              (CASE-REPLACE "(LAMBDA (i: nat): u!1`seq(i) * u!1`seq(i)) =
                             (LAMBDA (i: nat): sq(u!1`seq(i)))")
              (("1" (HIDE -1)
                (("1" (LEMMA "sqrt_ge")
                  (("1" (INST?)
                    (("1" (ASSERT)
                      (("1" (HIDE 2)
                        (("1" (LEMMA "sigma_nn_ge_comps")
                          (("1" (INST?)
                            (("1" (INST - "i!1")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "u!1`seq")
                                  (("1" (INST?)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -1)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                  (("2" (EXPAND "sq") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt_ge| FORMULA-DECL NIL |sqrt| |reals|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sigma_nn_ge_comps| FORMULA-DECL NIL |sigma| |reals|)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) NIL
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sqrt_sq_abs| FORMULA-DECL NIL |sqrt| |reals|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL))
   SHOSTAK)
  (|norm_ge_comps-1| |nil| 3500823676
   ("" (SKOSIMP*)
    (("" (EXPAND "norm")
      (("" (EXPAND "sqv")
        (("" (EXPAND "*")
          (("" (REWRITE "sqrt_sq_abs" :DIR RL)
            ((""
              (CASE-REPLACE "(LAMBDA (i: nat): u!1`seq(i) * u!1`seq(i)) =
                             (LAMBDA (i: nat): sq(u!1`seq(i)))")
              (("1" (HIDE -1)
                (("1" (LEMMA "sqrt_ge")
                  (("1" (INST?)
                    (("1" (ASSERT)
                      (("1" (HIDE 2)
                        (("1" (LEMMA "sigma_nn_ge_comps")
                          (("1" (INST?)
                            (("1" (INST - "i!1")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "u!1`seq")
                                  (("1" (INST?)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -1)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "sigma_Fnnr")
                                            (("1" (INST?) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (LEMMA "sigma_Fnnr") (("2" (INST?) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                  (("2" (EXPAND "sq") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|norm_triangle_TCC1| 0
  (|norm_triangle_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (+ CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (- CONST-DECL "Vect(v`length)" |nvectors| NIL))
   NIL
   (|norm_triangle| SUBTYPE "nvectors.b"
    "Vect((nvectors.*(2, nvectors.a))`length)")))
 (|norm_triangle| 0
  (|norm_triangle-1| |nil| 3500825007
   ("" (SKOSIMP*)
    (("" (EXPAND "norm")
      (("" (REWRITE "sq_sqrt")
        (("" (REWRITE "sq_sqrt")
          (("" (REWRITE "sq_sqrt")
            (("" (AUTO-REWRITE "sqv_sub")
              (("" (AUTO-REWRITE "scal_sub_distr")
                (("" (AUTO-REWRITE "dot_distr_sub_left")
                  (("" (AUTO-REWRITE "dot_distr_sub_right")
                    (("" (AUTO-REWRITE "sub_cancel")
                      (("" (ASSERT)
                        (("" (EXPAND "sqv")
                          (("" (AUTO-REWRITE "dot_scal_assoc")
                            (("" (AUTO-REWRITE "dot_scal_right")
                              (("" (AUTO-REWRITE "dot_scal_left")
                                (("" (ASSERT)
                                  (("" (LEMMA "dot_comm")
                                    (("" (INST -1 "v0!1" "v1!1")
                                      (("" (REPLACE -1)
                                        (("" (HIDE -1)
                                          (("" (LEMMA "dot_comm")
                                            (("" (INST?)
                                              (("" (ASSERT)
                                                ((""
                                                  (REWRITE "scal_sub_distr"
                                                   :DIR RL)
                                                  ((""
                                                    (LEMMA
                                                     "dot_distr_sub_right")
                                                    ((""
                                                      (INST -1 "v2!1"
                                                       "2 * v1!1" "2 * v0!1")
                                                      (("" (REPLACE -1)
                                                        (("" (ASSERT) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_distr_sub_left| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_distr_sub_right| FORMULA-DECL NIL |nvectors| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |nvectors| NIL)
    (* CONST-DECL "Vect(v`length)" |nvectors| NIL)
    (|dot_comm| FORMULA-DECL NIL |nvectors| NIL)
    (|sqv_sub| FORMULA-DECL NIL |nvectors| NIL)
    (|scal_sub_distr| FORMULA-DECL NIL |nvectors| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (- CONST-DECL "Vect(u`length)" |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK))
 (|nzvec_has_nz| 0
  (|nzvec_has_nz-2| "" 3790092937
   ("" (SKOSIMP*)
    (("" (TYPEPRED "nzv!1")
      (("" (FLATTEN)
        (("" (LEMMA "norm_eq_0")
          (("" (INST?)
            (("" (ASSERT)
              (("" (HIDE 2)
                (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                  (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                    (("" (INST?)
                      (("1" (ASSERT)
                        (("1" (FLATTEN)
                          (("1" (REPLACE -2)
                            (("1" (EXPAND "zero") (("1" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "nzv!1`seq")
                        (("2" (INST?)
                          (("2" (ASSERT)
                            (("2" (REPLACE -1)
                              (("2" (EXPAND "zero") (("2" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|norm_eq_0| FORMULA-DECL NIL |nvectors| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|Zero_vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL NIL (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK)
  (|nzvec_has_nz-1| |nil| 3500825996
   ("" (SKOSIMP*)
    (("" (TYPEPRED "nzv!1")
      (("" (FLATTEN)
        (("" (LEMMA "norm_eq_0")
          (("" (INST?)
            (("" (ASSERT)
              (("" (HIDE 2)
                (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                  (("" (APPLY-EXTENSIONALITY 1 :HIDE? T)
                    (("" (INST?)
                      (("1" (ASSERT)
                        (("1" (FLATTEN)
                          (("1" (REPLACE -2)
                            (("1" (EXPAND "zero")
                              (("1" (EXPAND "const_seq")
                                (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "nzv!1`seq")
                        (("2" (INST?)
                          (("2" (ASSERT)
                            (("2" (REPLACE -1)
                              (("2" (EXPAND "zero")
                                (("2" (EXPAND "const_seq")
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|nzvec_neq_zero_TCC1| 0
  (|nzvec_neq_zero_TCC1-1| |nil| 3500755723 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|nzvec_neq_zero| SUBTYPE "nvectors.nzv`length" "posnat")))
 (|nzvec_neq_zero| 0
  (|nzvec_neq_zero-2| "" 3790092937
   ("" (SKOSIMP*)
    (("" (LEMMA "nzvec_has_nz")
      (("" (INST?)
        (("" (SKOSIMP*)
          (("" (REPLACE -1) (("" (EXPAND "zero") (("" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nzvec_has_nz| FORMULA-DECL NIL |nvectors| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK)
  (|nzvec_neq_zero-1| |nil| 3500826085
   ("" (SKOSIMP*)
    (("" (LEMMA "nzvec_has_nz")
      (("" (INST?)
        (("" (SKOSIMP*)
          (("" (REPLACE -1)
            (("" (EXPAND "zero")
              (("" (EXPAND "const_seq") (("" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|v_neq_0| 0
  (|v_neq_0-2| "" 3790092937
   ("" (SKEEP)
    (("" (LEMMA "norm_eq_0")
      (("" (INST?)
        (("" (ASSERT)
          (("" (EXPAND "norm")
            (("" (FLATTEN)
              (("" (SPLIT +)
                (("1" (FLATTEN)
                  (("1" (EXPAND "sqv")
                    (("1" (CASE-REPLACE "v*v = 0")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE 2)
                        (("2" (ASSERT)
                          (("2" (EXPAND "*")
                            (("2" (LEMMA "sigma_Fnnr[nat]")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "sq") (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (REPLACE -2)
                    (("2" (EXPAND "zero")
                      (("2" (EXPAND "sq")
                        (("2" (LEMMA "sigma_zero[nat]")
                          (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|norm_eq_0| FORMULA-DECL NIL |nvectors| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|zero| CONST-DECL "Zero_vect(n)" |nvectors| NIL)
    (|sigma_zero| FORMULA-DECL NIL |sigma| |reals|) NIL
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Vect| TYPE-EQ-DECL NIL |nvectors| NIL)
    (* CONST-DECL "real" |nvectors| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|sigma_Fnnr| FORMULA-DECL NIL |sigma| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (<= CONST-DECL "bool" |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sqv| CONST-DECL "nnreal" |nvectors| NIL)
    (|norm| CONST-DECL "nnreal" |nvectors| NIL)
    (|Vector| TYPE-EQ-DECL NIL |nvectors| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|fseq| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|barray| TYPE-EQ-DECL NIL |fseqs_def| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK)
  (|v_neq_0-1| |nil| 3500826283
   ("" (SKEEP)
    (("" (LEMMA "norm_eq_0")
      (("" (INST?)
        (("" (ASSERT)
          (("" (EXPAND "norm")
            (("" (FLATTEN)
              (("" (SPLIT +)
                (("1" (FLATTEN)
                  (("1" (EXPAND "sqv")
                    (("1" (CASE-REPLACE "v*v = 0")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE 2)
                        (("2" (ASSERT)
                          (("2" (EXPAND "*")
                            (("2" (EXPAND "fseq_appl")
                              (("2" (LEMMA "sigma_Fnnr[nat]")
                                (("2" (INST?)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "sq")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (REPLACE -2)
                    (("2" (EXPAND "zero")
                      (("2" (EXPAND "sq")
                        (("2" (LEMMA "sigma_zero[nat]")
                          (("2" (EXPAND "fseq_appl")
                            (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

