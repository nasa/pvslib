(|stdtokenizer|
 (|set_error_TCC1| 0
  (|set_error_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|set_error| SUBTYPE "stdtokenizer.t WITH [`error := stdtokenizer.code]"
    "TokenizerOfLength(stdtokenizer.t`length)")))
 (|last_token_TCC1| 0
  (|last_token_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|last_token| SUBTYPE "(number_fields.-)(stdtokenizer.t`pos, 1)" "nat")))
 (|peek_TCC1| 0
  (|peek_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|peek| SUBTYPE
    "(number_fields.-)((number_fields.+)(stdtokenizer.t`pos, stdtokenizer.n), 1)"
    "nat")))
 (|next_token_TCC1| 0
  (|next_token_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|next_token| SUBTYPE
    "(number_fields.-)((number_fields.+)(stdtokenizer.t`pos, 1), 1)" "nat")))
 (|tostr_TCC1| 0
  (|tostr_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|tostr| SUBTYPE "(number_fields.-)(stdtokenizer.t`length, stdtokenizer.i)"
    "naturalnumber")))
 (|tostr_TCC2| 0
  (|tostr_TCC2-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|tostr| SUBTYPE "(number_fields.+)(stdtokenizer.i, 1)"
    "upto(stdtokenizer.t`length)")))
 (|tostr_TCC3| 0
  (|tostr_TCC3-1| NIL 3902178435 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|tostr| TERMINATION
    "stdtokenizer.tostr(stdtokenizer.t, (number_fields.+)(stdtokenizer.i, 1))"
    "NIL")))
 (|tostr_TCC4| 0
  (|tostr_TCC4-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|tostr| SUBTYPE "(number_fields.+)(stdtokenizer.i, 1)"
    "upto(stdtokenizer.t`length)")))
 (|tostr_TCC5| 0
  (|tostr_TCC5-1| NIL 3902178435 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|tostr| TERMINATION
    "stdtokenizer.tostr(stdtokenizer.t, (number_fields.+)(stdtokenizer.i, 1))"
    "NIL")))
 (|add_token_TCC1| 0
  (|add_token_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|add_token| SUBTYPE "stdtokenizer.t`pos"
    "upto((number_fields.+)(1, stdtokenizer.n))")))
 (|line_tokenizer_TCC1| 0
  (|line_tokenizer_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|line_tokenizer| SUBTYPE "stdio.str" "(stdio.input_mode?)")))
 (|line_tokenizer_TCC2| 0
  (|line_tokenizer_TCC2-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|line_tokenizer| SUBTYPE "stdtokenizer.myt`pos"
    "upto((number_fields.+)(1, stdtokenizer.n))")))
 (|line_tokenizer_TCC3| 0
  (|line_tokenizer_TCC3-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|line_tokenizer| SUBTYPE
    "stdprog[[Tokenizer, numfield]].prog(stdio.fclose(stdtokenizer.g), (stdtokenizer.nt, (number_fields.+)(stdtokenizer.l, 1)))"
    "[Tokenizer, nat]")))
 (|str2tokenizer_TCC1| 0
  (|str2tokenizer_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|str2tokenizer| SUBTYPE "stdio.str" "(stdio.input_mode?)")))
 (|consume_TCC1| 0
  (|consume_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|consume| SUBTYPE "(number_fields.+)(stdtokenizer.t`pos, stdtokenizer.n)"
    "upto(stdtokenizer.t`length)")))
 (|go_back_TCC1| 0
  (|go_back_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|go_back| SUBTYPE "(number_fields.-)(stdtokenizer.t`pos, 1)"
    "upto(stdtokenizer.t`length)")))
 (|pos_go_next| 0
  (|pos_go_next-1| NIL 3902178859 ("" (GRIND) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|consume| CONST-DECL "TokenizerOfLength(t`length)" |stdtokenizer| NIL)
    (|EndOfTokenizer| CONST-DECL "nat" |stdtokenizer| NIL)
    (|eot?| CONST-DECL "bool" |stdtokenizer| NIL)
    (|NoError| CONST-DECL "nat" |stdtokenizer| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   SHOSTAK))
 (|accept_word_TCC1| 0
  (|accept_word_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|accept_word| SUBTYPE "(number_fields.+)(stdtokenizer.t`pos, 1)"
    "upto(stdtokenizer.t`length)")))
 (|pos_accept_word| 0
  (|pos_accept_word-1| NIL 3902178872 ("" (GRIND) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|NoError| CONST-DECL "nat" |stdtokenizer| NIL)
    (|eot?| CONST-DECL "bool" |stdtokenizer| NIL)
    (|EndOfTokenizer| CONST-DECL "nat" |stdtokenizer| NIL)
    (|ExpectingWord| CONST-DECL "nat" |stdtokenizer| NIL)
    (|ExpectingTestWord| CONST-DECL "nat" |stdtokenizer| NIL)
    (|accept_word| CONST-DECL "TokenizerOfLength(t`length)" |stdtokenizer|
     NIL))
   SHOSTAK))
 (|accept_int_TCC1| 0
  (|accept_int_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|accept_int| SUBTYPE "(number_fields.+)(stdtokenizer.t`pos, 1)"
    "upto(stdtokenizer.t`length)")))
 (|pos_accept_int| 0
  (|pos_accept_int-1| NIL 3902178880 ("" (GRIND) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|NoError| CONST-DECL "nat" |stdtokenizer| NIL)
    (|eot?| CONST-DECL "bool" |stdtokenizer| NIL)
    (|EndOfTokenizer| CONST-DECL "nat" |stdtokenizer| NIL)
    (|ExpectingInt| CONST-DECL "nat" |stdtokenizer| NIL)
    (|ExpectingTestInt| CONST-DECL "nat" |stdtokenizer| NIL)
    (|accept_int| CONST-DECL "TokenizerOfLength(t`length)" |stdtokenizer| NIL))
   SHOSTAK))
 (|accept_real_TCC1| 0
  (|accept_real_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|accept_real| SUBTYPE "(number_fields.+)(stdtokenizer.t`pos, 1)"
    "upto(stdtokenizer.t`length)")))
 (|pos_accept_real| 0
  (|pos_accept_real-1| NIL 3902178888 ("" (GRIND) NIL NIL)
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|NoError| CONST-DECL "nat" |stdtokenizer| NIL)
    (|eot?| CONST-DECL "bool" |stdtokenizer| NIL)
    (|EndOfTokenizer| CONST-DECL "nat" |stdtokenizer| NIL)
    (|ExpectingReal| CONST-DECL "nat" |stdtokenizer| NIL)
    (|ExpectingTestReal| CONST-DECL "nat" |stdtokenizer| NIL)
    (|accept_real| CONST-DECL "TokenizerOfLength(t`length)" |stdtokenizer|
     NIL))
   SHOSTAK))
 (|tokenizer2str_TCC1| 0
  (|tokenizer2str_TCC1-1| NIL 3902178435 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|tokenizer2str| SUBTYPE "0" "upto(stdtokenizer.t`length)"))))

