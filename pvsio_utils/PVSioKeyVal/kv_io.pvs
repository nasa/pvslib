kv_io : THEORY
BEGIN

  IMPORTING kv_store

  KeyValFile : Global[string,"KeyVal.io"]

  IMPORTING structures@Maybe

  kv_fwrite_lisp(f:OStream,key:string) : void

  % Write KeyVal store to a given file
  kv_write(mode:(output_mode?),filename:string) : void =
    with_openout_file(mode,filename,LAMBDA(file:OStream):
      LET N = kv_length IN
      FORALL (i:below(N)):
        LET key_type = kv_index(i) IN
	  fwrite(file,key_type) &
	  kv_fwrite_lisp(file,key_type`1))

  kv_write(filename:string) : void =
    kv_write(rename,filename)

  % Download KeyVal store to a local file
  kv_download : void =
    LET filename = val(KeyValFile) IN
      kv_write(create,filename) &
      printf("Downloaded ~a~%",filename)

  kv_fread_lisp(f:IStream,key:string) : void

  % Upload KeyVal store from a given file file
  kv_read(mode:(input_mode?),filename:string) : void =
    with_openin_file(val(KeyValFile),LAMBDA(file:IStream):
      while(NOT eof?(file),
        LET (key,typ) = fread[kv_KeyType](file) IN
        kv_fread_lisp(file,key) &
	kv_add_index(key,typ)))

  kv_read(filename:string) : void =
    kv_read(input,filename)

  % Upload KeyVal store from local file
  kv_upload : void =
    LET filename = val(KeyValFile) IN
      kv_read(filename) &
      printf("Uploaded ~a~%",filename)

END kv_io
