(|pvsio_json|
 (|parse_json_dict_TCC1| 0
  (|parse_json_dict_TCC1-1| NIL 3964359736
   ("" (SKEEP*) (("" (REWRITE "length_cdr") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| SUBTYPE "list_adt[pvsio_json.Token].cdr(pvsio_json.ll)"
    "ListTokenLt(pvsio_json.ll)" (96 19 96 26))))
 (|parse_json_dict_TCC2| 0
  (|parse_json_dict_TCC2-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 2)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| SUBTYPE "0" "below[length[Token](ll)]" (97 23 97 24))))
 (|parse_json_dict_TCC3| 0
  (|parse_json_dict_TCC3-1| NIL 3964359736 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|parse_json_dict| SUBTYPE "0" "below[length[Token](restl)]"
    (100 30 100 31))))
 (|parse_json_dict_TCC4| 0
  (|parse_json_dict_TCC4-1| NIL 3964359736 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|parse_json_dict| SUBTYPE "1" "below[length[Token](restl)]"
    (101 25 101 26))))
 (|parse_json_dict_TCC5| 0
  (|parse_json_dict_TCC5-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE (-2 -3 -6 -7 1)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|nth| DEF-DECL "T" |list_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| SUBTYPE "pvsio_json.restl"
    "(list_adt[pvsio_json.Token].cons?)" (102 44 102 49))))
 (|parse_json_dict_TCC6| 0
  (|parse_json_dict_TCC6-1| NIL 3964359736
   ("" (SKEEP*)
    (("" (HIDE (-2 -3 -6 -7 1))
      (("" (CASE-REPLACE "comma?(nth(ll,0))")
        (("1" (REPLACES -3)
          (("1" (EXPAND "length") (("1" (GRIND) NIL NIL)) NIL)) NIL)
         ("2" (ASSERT) (("2" (EXPAND "length") (("2" (GRIND) NIL NIL)) NIL))
          NIL)
         ("3" (HIDE-ALL-BUT (-1 1)) (("3" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|comma?| ADT-RECOGNIZER-DECL "[Token -> boolean]" |pvsio_json| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| SUBTYPE
    "list_adt[pvsio_json.Token].cdr(pvsio_json.restl)"
    "(list_adt[pvsio_json.Token].cons?)" (102 40 102 50))))
 (|parse_json_dict_TCC7| 0
  (|parse_json_dict_TCC7-1| NIL 3964359736
   ("" (SKEEP*)
    (("" (TYPEPRED "rest")
      (("" (HIDE-ALL-BUT (-1 -2 -5 -6 2))
        (("" (REWRITE "length_cdr")
          (("" (REWRITE "length_cdr")
            (("" (CASE-REPLACE "comma?(nth(ll,0))")
              (("1" (REPLACES -4)
                (("1" (REWRITE "length_cdr") (("1" (ASSERT) NIL NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL)
               ("3" (HIDE-ALL-BUT (-2 1)) (("3" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|comma?| ADT-RECOGNIZER-DECL "[Token -> boolean]" |pvsio_json| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| TERMINATION
    "pvsio_json.parse_json_dict(pvsio_json.parse_json_f)(pvsio_json.rest, list_props[[string, pvsio_json.JValue]].append(pvsio_json.acc, (: (pvsio_json.str(list_props[pvsio_json.Token].nth(pvsio_json.restl, 0)), pvsio_json.jv) :)))"
    "NIL" (103 14 103 90))))
 (|parse_json_dict_TCC8| 0
  (|parse_json_dict_TCC8-1| NIL 3964359736
   ("" (SKEEP*)
    ((""
      (NAME-REPLACE "VV" "v(parse_json_f)
            (rest,
             append[[string, JValue]]
                 (acc, (: (str(nth[Token](restl, 0)), jv) :)))")
      (("" (TYPEPRED "VV`2")
        (("" (HIDE-ALL-BUT (-1 -2 -5 -6 2))
          (("" (TYPEPRED "rest")
            (("" (REWRITE "length_cdr")
              (("" (REWRITE "length_cdr")
                (("" (CASE-REPLACE "comma?(nth(ll,0))")
                  (("1" (REPLACES -5)
                    (("1" (REWRITE "length_cdr") (("1" (ASSERT) NIL NIL)) NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL)
                   ("3" (HIDE-ALL-BUT (-3 1)) (("3" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|str?| ADT-RECOGNIZER-DECL "[Token -> boolean]" |pvsio_json| NIL)
    (|str| ADT-ACCESSOR-DECL "[(str?) -> string]" |pvsio_json| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|comma?| ADT-RECOGNIZER-DECL "[Token -> boolean]" |pvsio_json| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| SUBTYPE
    "pvsio_json.parse_json_dict(pvsio_json.parse_json_f)(pvsio_json.rest, list_props[[string, pvsio_json.JValue]].append(pvsio_json.acc, (: (pvsio_json.str(list_props[pvsio_json.Token].nth(pvsio_json.restl, 0)), pvsio_json.jv) :)))"
    "[pvsio_json.JValue, ListTokenLt(pvsio_json.ll)]" (103 14 103 90))))
 (|parse_json_dict_TCC9| 0
  (|parse_json_dict_TCC9-1| NIL 3965929626
   ("" (SKEEP*)
    (("" (INST 3 "(JNull,cdr(ll))")
      (("" (REWRITE "length_cdr") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (|jnull?| ADT-RECOGNIZER-DECL "[JValue -> boolean]" |pvsio_json| NIL)
    (|JNull| ADT-CONSTRUCTOR-DECL "(jnull?)" |pvsio_json| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_dict| EXISTENCE ""
    "[pvsio_json.JValue, ListTokenLt(pvsio_json.ll)]" (294 4 294 14))))
 (|parse_json_array_TCC1| 0
  (|parse_json_array_TCC1-1| NIL 3964359736
   ("" (SKEEP*) (("" (REWRITE "length_cdr") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_array| SUBTYPE "list_adt[pvsio_json.Token].cdr(pvsio_json.ll)"
    "ListTokenLt(pvsio_json.ll)" (122 18 122 25))))
 (|parse_json_array_TCC2| 0
  (|parse_json_array_TCC2-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 2)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_array| SUBTYPE "0" "below[length[Token](ll)]"
    (123 23 123 24))))
 (|parse_json_array_TCC3| 0
  (|parse_json_array_TCC3-1| NIL 3964359736
   ("" (SKEEP*)
    (("" (HIDE-ALL-BUT (-1 -4 2))
      (("" (TYPEPRED "rest")
        (("" (CASE-REPLACE "comma?(nth(ll, 0))")
          (("1" (REPLACES -4)
            (("1" (REWRITE "length_cdr") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
           ("2" (ASSERT) NIL NIL)
           ("3" (HIDE-ALL-BUT (-2 1)) (("3" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|comma?| ADT-RECOGNIZER-DECL "[Token -> boolean]" |pvsio_json| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_array| TERMINATION
    "pvsio_json.parse_json_array(pvsio_json.parse_json_f)(pvsio_json.rest, list_props[pvsio_json.JValue].append(pvsio_json.acc, (: pvsio_json.jv :)))"
    "NIL" (126 14 126 71))))
 (|parse_json_array_TCC4| 0
  (|parse_json_array_TCC4-1| NIL 3964359736
   ("" (SKEEP*)
    ((""
      (NAME-REPLACE "VV" "v(parse_json_f)
            (rest,
             append[JValue]
                 (acc, (: jv :)))")
      (("" (TYPEPRED "VV`2")
        (("" (HIDE-ALL-BUT (-1 -2 -5 2))
          (("" (TYPEPRED "rest") (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_array| SUBTYPE
    "pvsio_json.parse_json_array(pvsio_json.parse_json_f)(pvsio_json.rest, list_props[pvsio_json.JValue].append(pvsio_json.acc, (: pvsio_json.jv :)))"
    "[pvsio_json.JValue, ListTokenLt(pvsio_json.ll)]" (126 14 126 71))))
 (|parse_json_array_TCC5| 0
  (|parse_json_array_TCC5-1| NIL 3965929626
   ("" (SKEEP*)
    (("" (INST 3 "(JNull,cdr(ll))")
      (("" (REWRITE "length_cdr") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|ll| SKOLEM-CONST-DECL "list[Token]" |pvsio_json| NIL)
    (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (|jnull?| ADT-RECOGNIZER-DECL "[JValue -> boolean]" |pvsio_json| NIL)
    (|JNull| ADT-CONSTRUCTOR-DECL "(jnull?)" |pvsio_json| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length_cdr| FORMULA-DECL NIL |list_lemmas| |structures|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json_array| EXISTENCE ""
    "[pvsio_json.JValue, ListTokenLt(pvsio_json.ll)]" (294 4 294 14))))
 (|parse_json_TCC1| 0
  (|parse_json_TCC1-1| NIL 3964359736 ("" (SUBTYPE-TCC) NIL NIL)
   ((|token_to_string| CONST-DECL "string" |pvsio_json| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.ll" "(list_adt[pvsio_json.Token].cons?)"
    (141 45 141 47))))
 (|parse_json_TCC2| 0
  (|parse_json_TCC7-1| NIL 3964359736 ("" (SUBTYPE-TCC) NIL NIL)
   ((|token_to_string| CONST-DECL "string" |pvsio_json| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.ll" "(list_adt[pvsio_json.Token].cons?)"
    (142 46 142 48))))
 (|parse_json_TCC3| 0
  (|parse_json_TCC2-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 1)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.tail" "ListTokenLt(pvsio_json.ll)"
    (143 30 143 34))))
 (|parse_json_TCC4| 0
  (|parse_json_TCC3-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 1)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.tail" "ListTokenLt(pvsio_json.ll)"
    (144 30 144 34))))
 (|parse_json_TCC5| 0
  (|parse_json_TCC4-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 1)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.tail" "ListTokenLt(pvsio_json.ll)"
    (145 29 145 33))))
 (|parse_json_TCC6| 0
  (|parse_json_TCC5-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 1)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.tail" "ListTokenLt(pvsio_json.ll)"
    (146 30 146 34))))
 (|parse_json_TCC7| 0
  (|parse_json_TCC6-1| NIL 3964359736
   ("" (SKEEP*) (("" (HIDE-ALL-BUT (-1 1)) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json| SUBTYPE "pvsio_json.tail" "ListTokenLt(pvsio_json.ll)"
    (147 23 147 27))))
 (|parse_json_TCC8| 0
  (|parse_json_TCC8-1| NIL 3965929626
   ("" (SKEEP)
    (("" (INST 8 "(JNull,tail)")
      (("" (REPLACES -1)
        (("" (EXPAND "length" 1 2) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|JNull| ADT-CONSTRUCTOR-DECL "(jnull?)" |pvsio_json| NIL)
    (|jnull?| ADT-RECOGNIZER-DECL "[JValue -> boolean]" |pvsio_json| NIL)
    (|ListTokenLt| TYPE-EQ-DECL NIL |pvsio_json| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Token| TYPE-DECL NIL |pvsio_json| NIL)
    (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|tail| SKOLEM-CONST-DECL "list[Token]" |pvsio_json| NIL)
    (|ll| SKOLEM-CONST-DECL "list[Token]" |pvsio_json| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|parse_json| EXISTENCE "" "[pvsio_json.JValue, ListTokenLt(pvsio_json.ll)]"
    (294 4 294 14))))
 (|remove_whitespace_TCC1| 0
  (|remove_whitespace_TCC1-1| NIL 3964359736 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|remove_whitespace| TERMINATION
    "pvsio_json.remove_whitespace(pvsio_json.xs)" "NIL" (167 18 167 39))))
 (|remove_whitespace_TCC2| 0
  (|remove_whitespace_TCC2-1| NIL 3964359736 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[list])" |list_adt| NIL)) NIL
   (|remove_whitespace| TERMINATION
    "pvsio_json.remove_whitespace(pvsio_json.xs)" "NIL" (169 26 169 47))))
 (|textfile_to_string_TCC1| 0
  (|textfile_to_string_TCC1-1| NIL 3964534856 ("" (SUBTYPE-TCC) NIL NIL)
   ((|input_mode?| CONST-DECL "bool" |stdio| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL))
   NIL
   (|textfile_to_string| SUBTYPE "stdio.input" "(stdio.input_mode?)"
    (815 21 815 26))))
 (|jobject_field_value_TCC1| 0
  (|jobject_field_value_TCC1-1| NIL 3964534856 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|jobject| ADT-ACCESSOR-DECL "[(jobject?) -> list[[string, JValue]]]"
     |pvsio_json| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|jobject?| ADT-RECOGNIZER-DECL "[JValue -> boolean]" |pvsio_json| NIL)
    (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|jobject_field_value| SUBTYPE "pvsio_json.l"
    "(list_adt[[string, pvsio_json.JValue]].cons?)" (209 10 209 11))))
 (|jfield_to_string_TCC1| 0
  (|jfield_to_string_TCC1-1| NIL 3964534856 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL (|jfield_to_string| SUBTYPE "pvsio_json.indent" "nat" (228 37 228 43))))
 (|jfield_to_string_TCC2| 0
  (|jfield_to_string_TCC2-1| NIL 3964534856
   ("" (SKEEP)
    (("" (INST 2 "(spaces(indent),emptystr,emptystr)") (("" (ASSERT) NIL NIL))
      NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|emptystr| CONST-DECL "string" |stdstr| NIL)
    (|spaces| CONST-DECL "{str: string | length(str) = n}" |stdstr| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|jfield_to_string| EXISTENCE ""
    "[{str: strings.string | length(str) = pvsio_json.indent}, string, string]"
    (228 27 228 99))))
 (|json_to_string_aux_TCC1| 0
  (|json_to_string_aux_TCC1-1| NIL 3964534856
   ("" (SKEEP)
    (("" (EXPAND "<<")
      (("" (GRIND)
        (("" (REWRITE "every_nth")
          (("" (SKEEP :PREDS? T)
            (("" (REWRITE "some_nth") (("" (INST 1 "i") NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[JValue])" |pvsio_json| NIL)
    (|every_nth| FORMULA-DECL NIL |list_props| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|some_nth| FORMULA-DECL NIL |list_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.jobj"
    "list_adt[[string, JValueLt(pvsio_json.jval)]].list" (235 67 235 71))))
 (|json_to_string_aux_TCC2| 0
  (|json_to_string_aux_TCC2-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (238 28 238 34))))
 (|json_to_string_aux_TCC3| 0
  (|json_to_string_aux_TCC3-1| NIL 3964613118
   ("" (SKEEP)
    (("" (EXPAND "<<")
      (("" (GRIND)
        (("" (REWRITE "every_nth")
          (("" (SKEEP :PREDS? T)
            (("" (REWRITE "some_nth") (("" (INST 5 "i") NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[JValue])" |pvsio_json| NIL)
    (|every_nth| FORMULA-DECL NIL |list_props| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|JValue| TYPE-DECL NIL |pvsio_json| NIL)
    (|some_nth| FORMULA-DECL NIL |list_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL NIL)
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.jobj"
    "list_adt[[string, JValueLt(pvsio_json.jval)]].list" (240 76 240 80))))
 (|json_to_string_aux_TCC4| 0
  (|json_to_string_aux_TCC4-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|val| CONST-DECL "T" |stdprog| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (241 44 241 50))))
 (|json_to_string_aux_TCC5| 0
  (|json_to_string_aux_TCC3-1| NIL 3964534856
   ("" (SKEEP*)
    (("" (INST 3 "(spaces(indent),to_lisp(null),spaces(indent))")
      (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   (NIL (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Lisp| NONEMPTY-TYPE-DECL NIL |stdpvs| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|spaces| CONST-DECL "{str: string | length(str) = n}" |stdstr| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|to_lisp| CONST-DECL "Lisp[T]" |stdpvs| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|json_to_string_aux| EXISTENCE ""
    "[{str: strings.string | length(str) = pvsio_json.indent}, stdpvs.Lisp[list[string]], {str: strings.string | length(str) = pvsio_json.indent}]"
    (241 34 241 80))))
 (|json_to_string_aux_TCC6| 0
  (|json_to_string_aux_TCC5-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (249 28 249 34))))
 (|json_to_string_aux_TCC7| 0
  (|json_to_string_aux_TCC7-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|val| CONST-DECL "T" |stdprog| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (252 44 252 50))))
 (|json_to_string_aux_TCC8| 0
  (|json_to_string_aux_TCC8-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real2str| CONST-DECL "string" |stdstr| NIL)
    (|real2decstr| CONST-DECL "string" |stdstr| NIL) NIL
    (|val| CONST-DECL "T" |stdprog| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (257 34 257 40))))
 (|json_to_string_aux_TCC9| 0
  (|json_to_string_aux_TCC4-1| NIL 3964534856
   ("" (SKEEP)
    (("" (INST 2 "(spaces(indent),emptystr)") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|emptystr| CONST-DECL "string" |stdstr| NIL)
    (|spaces| CONST-DECL "{str: string | length(str) = n}" |stdstr| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|json_to_string_aux| EXISTENCE ""
    "[{str: strings.string | length(str) = pvsio_json.indent}, string]"
    (257 24 257 48))))
 (|json_to_string_aux_TCC10| 0
  (|json_to_string_aux_TCC9-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (261 34 261 40))))
 (|json_to_string_aux_TCC11| 0
  (|json_to_string_aux_TCC10-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (266 34 266 40))))
 (|json_to_string_aux_TCC12| 0
  (|json_to_string_aux_TCC11-1| NIL 3964613118 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|json_to_string_aux| SUBTYPE "pvsio_json.indent" "nat" (270 33 270 39))))
 (|json_to_file_TCC1| 0
  (|json_to_file_TCC1-1| NIL 3964535588 ("" (SUBTYPE-TCC) NIL NIL)
   ((|output_mode?| CONST-DECL "bool" |stdio| NIL)) NIL
   (|json_to_file| SUBTYPE "stdio.output" "(stdio.output_mode?)"
    (844 22 844 28)))))

