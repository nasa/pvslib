(|pigeonhole|
 (|pigeonhole| 0
  (|pigeonhole-1| |nil| 3266842135
   ("" (SKOSIMP*)
    (("" (CASE "card(intersection(A!1, B!1)) >= 1")
      (("1" (HIDE -2)
        (("1" (FORWARD-CHAIN "card_1_has_1")
          (("1" (HIDE -2)
            (("1" (SKOSIMP*)
              (("1" (EXPAND* "intersection" "member") (("1" (INST?) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (USE "card_plus[T]") (("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   NIL NIL))
 (|card_difference_alt| 0
  (|card_difference_alt-1| |nil| 3363507964
   ("" (SKOSIMP*)
    (("" (REWRITE "difference_intersection")
      (("" (LEMMA "card_disj_union[T]")
        (("" (INST?)
          (("" (INVOKE (INST - "%1") (! 1 R 1 1))
            (("" (SPLIT -)
              (("1" (REWRITE "distribute_intersection_union" :DIR RL)
                (("1" (INVOKE (CASE-REPLACE "%1 = %2") (! -1 L 1) (! -1 L 1 1))
                  (("1" (GROUND) NIL NIL)
                   ("2" (HIDE-ALL-BUT 1)
                    (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                      (("2" (IFF) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|pigeonhole_difference| 0
  (|pigeonhole_difference-1| |nil| 3363458043
   ("" (SKOSIMP*)
    (("" (LEMMA "pigeonhole")
      (("" (INST - "A!1" "intersection(S!1, B!1)")
        (("" (PROP)
          (("1" (SKOSIMP*)
            (("1" (EXPAND "intersection")
              (("1" (EXPAND "member")
                (("1" (FLATTEN) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (CASE "subset?(union(A!1, intersection(S!1, B!1)), S!1)")
            (("1" (FORWARD-CHAIN "card_subset")
              (("1" (REWRITE "card_difference_alt") (("1" (ASSERT) NIL NIL))
                NIL))
              NIL)
             ("2" (REWRITE "union_upper_bound")
              (("2" (REWRITE "intersection_subset1") NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|simple_majority_subset| 0
  (|simple_majority_subset-1| |nil| 3397651319
   ("" (SKOSIMP*)
    (("" (PROP)
      (("1" (EXPAND "majority_subset?")
        (("1" (EXPAND "simple_majority?")
          (("1" (ASSERT) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (EXPAND "simple_majority?")
        (("2" (EXPAND "majority_subset?") (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|majority_subset_nonempty| 0
  (|majority_subset_nonempty-1| |nil| 3267459600
   ("" (SKOSIMP*)
    (("" (EXPAND "majority_subset?")
      (("" (FLATTEN)
        (("" (USE "nonempty_card[T]")
          (("" (ASSERT)
            (("" (EXPAND* "nonempty?" "empty?" "subset?" "member")
              (("" (SKOSIMP*)
                (("" (INST?) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|simple_majority_nonempty| 0
  (|simple_majority_nonempty-1| |nil| 3397654037
   ("" (SKOSIMP*)
    (("" (REWRITE "simple_majority_subset")
      (("" (FORWARD-CHAIN "majority_subset_nonempty") NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|majority_nonempty| 0
  (|majority_nonempty-1| |nil| 3276456345
   ("" (SKOSIMP*)
    (("" (LEMMA "majority_subset_nonempty")
      (("" (INST?)
        (("" (ASSERT)
          (("" (EXPAND "majority_subset?")
            (("" (FLATTEN)
              (("" (LEMMA "card_empty?[T]")
                (("" (INST-CP - "S!1")
                  (("" (INST - "A!1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|majority_pigeonhole| 0
  (|majority_pigeonhole-1| |nil| 3266842135
   ("" (SKOSIMP*)
    (("" (CASE "card(union(A!1,B!1)) <= card(S!1)")
      (("1" (USE "pigeonhole") (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (HIDE -1 -3 2)
        (("2" (REWRITE "card_subset")
          (("2" (REWRITE "union_upper_bound") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|simple_majority_pigeonhole| 0
  (|simple_majority_pigeonhole-1| |nil| 3400434247
   ("" (SKOSIMP*)
    (("" (EXPAND "simple_majority?")
      ((""
        (CASE
            "card(union(intersection(A!1,S!1),intersection(B!1,S!1))) <= card(S!1)")
        (("1" (LEMMA "pigeonhole")
          (("1" (INST - "intersection(A!1, S!1)" "intersection(B!1, S!1)")
            (("1" (ASSERT)
              (("1" (SKOSIMP*)
                (("1" (INST?)
                  (("1" (EXPAND "intersection")
                    (("1" (EXPAND "member")
                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (REWRITE "card_subset")
          (("2" (HIDE -1 -2 2 3)
            (("2" (AUTO-REWRITE-DEFS)
              (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (GROUND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|median_pigeonhole| 0
  (|median_pigeonhole-1| |nil| 3363648177
   ("" (SKOSIMP*)
    (("" (CASE "subset?(S1!1, S2!1)")
      (("1" (LEMMA "majority_pigeonhole")
        (("1" (INST - "B!1" "A!1" "S2!1")
          (("1" (ASSERT)
            (("1" (EXPAND "majority_subset?")
              (("1" (FLATTEN)
                (("1" (ASSERT)
                  (("1" (LEMMA "card_subset[T]")
                    (("1" (INST? -1 :WHERE -3)
                      (("1" (ASSERT)
                        (("1" (PROP)
                          (("1" (SKOSIMP*)
                            (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                           ("2" (REWRITE "union_subset2")
                            (("2" (REWRITE "intersection_subset2")
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL)
                           ("3" (HIDE -1 -3 -5 -6 -7 2)
                            (("3" (LEMMA "subset_transitive[T]")
                              (("3" (INST?)
                                (("3" (INST - "S1!1") (("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "subset?(S2!1, S1!1)")
        (("1" (REWRITE "union_commutative")
          (("1" (REWRITE "intersection_commutative")
            (("1" (REWRITE "union_subset2")
              (("1" (REWRITE "intersection_subset2")
                (("1" (EXPAND "majority_subset?")
                  (("1" (FLATTEN)
                    (("1" (LEMMA "majority_pigeonhole")
                      (("1" (INST - "A!1" "B!1" "S1!1")
                        (("1" (ASSERT)
                          (("1" (PROP)
                            (("1" (HIDE -2 -3 -4 -6 2 3)
                              (("1" (LEMMA "subset_transitive[T]")
                                (("1" (INST?)
                                  (("1" (INST - "S2!1")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE -1 -2 3)
          (("2"
            (CASE
                "card(difference(union(S1!1, S2!1), intersection(S1!1, S2!1))) >= 2")
            (("1" (USE "card_diff_subset[T]")
              (("1" (ASSERT)
                (("1" (HIDE-ALL-BUT 1)
                  (("1" (EXPAND "subset?")
                    (("1" (EXPAND "intersection")
                      (("1" (EXPAND "union")
                        (("1" (EXPAND "member") (("1" (SKOSIMP*) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE -1)
              (("2" (EXPAND "subset?")
                (("2" (SKOSIMP*)
                  (("2"
                    (CASE
                        "subset?((: x!1, x!2 :), difference(union(S1!1, S2!1), intersection(S1!1, S2!1)))")
                    (("1" (FORWARD-CHAIN "card_subset")
                      (("1" (HIDE -2)
                        (("1" (EXPAND "list2set")
                          (("1" (EXPAND "list2set")
                            (("1" (EXPAND "list2set")
                              (("1" (REWRITE "card_add")
                                (("1" (REWRITE "card_add")
                                  (("1" (REWRITE "card_emptyset")
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "emptyset")
                                        (("1" (EXPAND "add")
                                          (("1" (EXPAND "member")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (EXPAND "list2set")
                        (("2" (EXPAND "list2set")
                          (("2" (EXPAND "list2set") (("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE 2)
                      (("2" (EXPAND "list2set")
                        (("2" (EXPAND "list2set")
                          (("2" (EXPAND "list2set")
                            (("2" (EXPAND "add")
                              (("2" (EXPAND "subset?")
                                (("2" (EXPAND "intersection")
                                  (("2" (EXPAND "union")
                                    (("2" (EXPAND "difference")
                                      (("2" (EXPAND "emptyset")
                                        (("2" (EXPAND "member")
                                          (("2" (SKOSIMP*)
                                            (("2" (ASSERT)
                                              (("2" (GROUND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |pigeonhole| NIL)
    (|majority_subset?| CONST-DECL "bool" |pigeonhole| NIL)
    (|intersection_subset2| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|union_subset2| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|subset_transitive| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|card_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finite_intersection1| APPLICATION-JUDGEMENT "finite_set" |finite_sets|
     NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])"
     |sets_lemmas| NIL)
    (|majority_pigeonhole| FORMULA-DECL NIL |pigeonhole| NIL)
    (|plus_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|plus_u16_u16| APPLICATION-JUDGEMENT "uint32" |integertypes| NIL)
    (|plus_u16_i16| APPLICATION-JUDGEMENT "int32" |integertypes| NIL)
    (|card_emptyset| FORMULA-DECL NIL |finite_sets| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|card_add| FORMULA-DECL NIL |finite_sets| NIL)
    (|nonempty_add_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|list2set| DEF-DECL "set[T]" |list2set| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|card_diff_subset| FORMULA-DECL NIL |finite_sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|difference| CONST-DECL "set" |sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_difference| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|intersection_commutative| FORMULA-DECL NIL |sets_lemmas| NIL))
   SHOSTAK))
 (|intersection_nonempty| 0
  (|intersection_nonempty-1| |nil| 3395056471
   ("" (SKOSIMP*)
    (("" (EXPAND "intersection_majority?")
      (("" (USE "nonempty_card[T]")
        (("" (ASSERT)
          (("" (EXPAND "nonempty?")
            (("" (EXPAND "empty?")
              (("" (EXPAND "member")
                (("" (EXPAND "intersection")
                  (("" (EXPAND "member")
                    (("" (SKOSIMP*) (("" (INST?) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|two_thirds_overlap_pigeonhole| 0
  (|two_thirds_overlap_pigeonhole-1| |nil| 3361957346
   ("" (EXPAND "intersection_majority?")
    (("" (SKOSIMP*)
      (("" (REWRITE "pigeonhole")
        (("" (HIDE 2)
          (("" (EXPAND "two_thirds_majority_subset?")
            (("" (FLATTEN)
              (("" (INVOKE (CASE "%1 <= %2") (! 1 R) (! -5 R))
                (("1"
                  (INVOKE (THEN (CASE "%1 > %2") (ASSERT)) (! 1 L) (! -1 R))
                  (("1" (HIDE -1 -3 -5 2)
                    (("1" (REWRITE "card_union") (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (REWRITE "card_subset")
                  (("2" (HIDE-ALL-BUT (-2 -4 1))
                    (("2" (EXPAND "subset?")
                      (("2" (EXPAND "union")
                        (("2" (EXPAND "member")
                          (("2" (SKOSIMP*)
                            (("2" (INST?)
                              (("2" (INST?) (("2" (PROP) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|quorum?_TCC1| 0
  (|quorum?_TCC1-1| |nil| 3408976160
   ("" (SKOSIMP*)
    (("" (USE "nonempty_card[T]")
      (("" (EXPAND "nonempty?") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   NIL NIL
   (|quorum?| SUBTYPE "finite_sets[pigeonhole.T].card(pigeonhole.s1)"
    "posnat")))
 (M_TCC1 0
  (M_TCC1-1 |nil| 3398087512
   ("" (SKOSIMP*)
    (("" (USE "nonempty_card[T]")
      (("" (ASSERT)
        (("" (TYPEPRED "e!1")
          (("" (EXPAND "nonempty?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (M SUBTYPE "finite_sets[pigeonhole.T].card(pigeonhole.e)" "posnat")))
 (M_TCC2 0
  (M_TCC2-1 |nil| 3408976160 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (M SUBTYPE
    "(number_fields.-)(finite_sets[pigeonhole.T].card(pigeonhole.e), number_fields.*(2, pigeonhole.t(finite_sets[pigeonhole.T].card(pigeonhole.e))))"
    "posnat")))
 (|nada_reduce| 0
  (|nada_reduce-1| |nil| 3398087779
   ("" (EXPAND "M") (("" (EXPAND "nada") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|nada| CONST-DECL "tau_type" |tau_declaration| NIL)) NIL))
 (|mid_reduce| 0
  (|mid_reduce-1| |nil| 3398087793
   ("" (EXPAND "M")
    (("" (EXPAND "mid") (("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|mid| CONST-DECL "tau_type" |tau_declaration| NIL)) NIL))
 (|byz_reduce| 0
  (|byz_reduce-1| |nil| 3398087809
   ("" (SKOSIMP*)
    (("" (EXPAND "M") (("" (EXPAND "byz") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|byz| CONST-DECL "tau_type" |tau_declaration| NIL)) NIL)))

