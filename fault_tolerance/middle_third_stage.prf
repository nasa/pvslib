(|middle_third_stage|
 (|byzantine_overlap| 0
  (|byzantine_overlap-1| |nil| 3403960816
   ("" (EXPAND "byz_overlap_imprecision?")
    (("" (SKOSIMP*)
      (("" (FORWARD-CHAIN "byzantine_intersection_nonempty")
        (("" (EXPAND "overlap_imprecision?")
          (("" (INST?)
            (("" (ASSERT)
              (("" (EXPAND "reduce_overlap?")
                (("" (SKOSIMP*)
                  (("" (EXPAND "enabled_nonempty?")
                    (("" (INST-CP - "d2!1")
                      (("" (INST - "d1!1")
                        (("" (EXPAND "byzantine_intersection_majority?")
                          (("" (USE "middle_third_overlap")
                            (("" (ASSERT)
                              (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|overlap_imprecision?| CONST-DECL "bool" |inexact_reduce_stage| NIL)
    (|byzantine_intersection_majority?| CONST-DECL "bool"
     |fault_assumptions_stage| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|enabled| CONST-DECL "finite_set[below(S)]" |fault_assumptions_stage| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|middle_third_overlap| FORMULA-DECL NIL |middle_third_overlap| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|enabled_nonempty?| CONST-DECL "bool" |fault_assumptions_stage| NIL)
    (|reduce_overlap?| CONST-DECL "bool" |reduce_choice| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|byzantine_intersection_nonempty| FORMULA-DECL NIL
     |fault_assumptions_stage| NIL)
    (|byz_overlap_imprecision?| CONST-DECL "bool" |middle_third_stage| NIL))
   SHOSTAK))
 (|middle_third_convergence| 0
  (|middle_third_convergence-1| |nil| 3403962308
   ("" (SKOSIMP*)
    (("" (FORWARD-CHAIN "byzantine_overlap")
      (("" (USE "convergence") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|byzantine_overlap| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (|byz| CONST-DECL "tau_type" |tau_declaration| NIL)
    (|convergence| FORMULA-DECL NIL |inexact_reduce_stage| NIL)
    (|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL))
   SHOSTAK))
 (|reduce_convergence2| 0
  (|reduce_convergence2-1| |nil| 3893326206
   ("" (SKOSIMP*)
    (("" (LEMMA "reduce_agreement_propagation")
      (("" (INST - "max" "min" _ "d1!1" "d2!1" _ _ _ _ _ _)
        (("" (INST?)
          (("" (INST?)
            (("" (ASSERT)
              (("" (EXPAND "quorum_imprecision?")
                (("" (SKOSIMP*)
                  (("" (FORWARD-CHAIN "quorum_nonempty")
                    (("" (FORWARD-CHAIN "convergence_overlap")
                      (("" (EXPAND "overlap?")
                        (("" (INST - "d1!1" "d2!1")
                          (("" (EXPAND "enabled_nonempty?")
                            (("" (INST-CP - "d1!1")
                              (("" (INST - "d2!1")
                                (("" (EXPAND "reduce_choice")
                                  (("" (EXPAND "reduce_choice")
                                    (("" (ASSERT)
                                      (("" (HIDE -3 -4 -5 -6 -7 1 2)
                                        (("" (EXPAND "convergent?")
                                          (("" (INST?)
                                            (("" (ASSERT)
                                              (("" (HIDE-ALL-BUT 1)
                                                ((""
                                                  (REWRITE
                                                   "reduce_length[S,real,<=]")
                                                  ((""
                                                    (LEMMA "max_length_bound")
                                                    (("" (INST?)
                                                      (("" (INST-CP - "d1!1")
                                                        (("" (INST - "d2!1")
                                                          (("" (EXPAND "M" -)
                                                            (("" (ASSERT)
                                                              ((""
                                                                (REWRITE
                                                                 "reduce_length[S,real,<=]")
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|reduce_agreement_propagation| FORMULA-DECL NIL |inexact_reduce_stage|
     NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|convergence_overlap| FORMULA-DECL NIL |inexact_reduce_stage| NIL)
    (|reduce_choice| CONST-DECL "T" |reduce_choice| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|convergent?| CONST-DECL "bool" |middle_third_stage| NIL)
    (|reduce_length| FORMULA-DECL NIL |reduce_properties| NIL)
    (M CONST-DECL "nat" |reduce_choice| NIL)
    (|max_length_bound| FORMULA-DECL NIL |reduce_choice| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|enabled| CONST-DECL "finite_set[below(S)]" |fault_assumptions_stage| NIL)
    (|reduce| CONST-DECL "ne_seqs" |reduce_properties| NIL)
    (|vec| TYPE-EQ-DECL NIL |node| NIL)
    (|reduce_choice| CONST-DECL "T" |reduce_properties| NIL)
    (|enabled_nonempty?| CONST-DECL "bool" |fault_assumptions_stage| NIL)
    (|overlap?| CONST-DECL "bool" |inexact_reduce_stage| NIL)
    (|quorum_nonempty| FORMULA-DECL NIL |fault_assumptions_stage| NIL)
    (|quorum_imprecision?| CONST-DECL "bool" |inexact_comm_stage| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|min_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|max_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|convergence2| 0
  (|convergence2-1| |nil| 3893326039
   ("" (SKOSIMP*)
    (("" (USE "v_min_witness[D, real, <=]")
      (("" (USE "v_max_witness[D, real, <=]")
        (("" (SKOSIMP*)
          (("" (REPLACE*)
            (("" (HIDE -4 -2)
              (("" (USE "reduce_convergence2")
                (("" (GROUND)
                  (("" (USE "minmax_diameter") (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|v_min_witness| FORMULA-DECL NIL |select_minmax| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|reduce_choice| CONST-DECL "T" |reduce_choice| NIL)
    (|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|vec| TYPE-EQ-DECL NIL |node| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minmax_diameter| FORMULA-DECL NIL |inexact_reduce_stage| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|reduce_convergence2| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|v_max_witness| FORMULA-DECL NIL |select_minmax| NIL))
   SHOSTAK))
 (|middle_third_convergence_2| 0
  (|middle_third_convergence_2-1| |nil| 3892825316
   ("" (SKOSIMP*)
    (("" (FORWARD-CHAIN "byzantine_overlap")
      (("" (USE "convergence2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|byzantine_overlap| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (|byz| CONST-DECL "tau_type" |tau_declaration| NIL)
    (|convergence2| FORMULA-DECL NIL |middle_third_stage| NIL))
   SHOSTAK))
 (|mean_convergence_midpoint| 0
  (|mean_convergence_midpoint-1| |nil| 3893330793
   ("" (SKOSIMP*)
    (("" (EXPAND "midpoint")
      (("" (REWRITE "min_minmax" :DIR RL)
        (("" (LEMMA "mean_convergence")
          (("" (INST?)
            (("" (INST -1 "k!1")
              (("" (ASSERT)
                (("" (REWRITE "min_minmax")
                  (("" (ASSERT)
                    (("" (REWRITE "max_minmax")
                      (("" (ASSERT)
                        (("" (HIDE 2)
                          (("" (EXPAND "minmax" 1)
                            (("" (EXPAND "list2finseq")
                              (("" (EXPAND "length" 1)
                                (("" (EXPAND "length" 1)
                                  (("" (EXPAND "length" 1)
                                    (("" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|midpoint| CONST-DECL "real" |real_finite_sequences| NIL)
    (|mean_convergence| FORMULA-DECL NIL |real_finite_sequences| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|max_minmax| FORMULA-DECL NIL |ordered_finite_sequences| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minmax| CONST-DECL "ne_seqs" |ordered_finite_sequences| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|min_minmax| FORMULA-DECL NIL |ordered_finite_sequences| NIL)
    (|min_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|mean_convergence_midpoint_0| 0
  (|mean_convergence_midpoint_0-1| |nil| 3893341625
   ("" (SKOSIMP*)
    (("" (EXPAND "midpoint")
      (("" (REWRITE "min_minmax" :DIR RL)
        (("" (LEMMA "mean_convergence")
          (("" (INST?)
            (("" (INST -1 "k!1")
              (("" (ASSERT)
                (("" (REWRITE "min_minmax")
                  (("" (ASSERT)
                    (("" (REWRITE "max_minmax")
                      (("" (ASSERT)
                        (("" (HIDE 2)
                          (("" (EXPAND "minmax" 1)
                            (("" (EXPAND "list2finseq")
                              (("" (EXPAND "length" 1)
                                (("" (EXPAND "length" 1)
                                  (("" (EXPAND "length" 1)
                                    (("" (REVEAL +)
                                      (("" (TYPEPRED "k!1")
                                        (("" (CASE "NOT k!1=1")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (REPLACE -1)
                                            (("2" (ASSERT)
                                              (("2" (HIDE 2)
                                                (("2" (HIDE -2)
                                                  (("2" (TYPEPRED "s2!1")
                                                    (("2" (TYPEPRED "s1!1")
                                                      (("2"
                                                        (CASE
                                                            "NOT s1!1`length=1")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2"
                                                          (CASE
                                                              "NOT s2!1`length=1")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "mean" 1 1)
                                                            (("2" (REPLACE -2)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND "sum"
                                                                          1)
                                                                  (("2"
                                                                    (REPLACE
                                                                     -2)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "sigma"
                                                                         1)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "sigma"
                                                                           1)
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "min(s1!1)")
                                                                            (("2"
                                                                              (SKEEP
                                                                               -2)
                                                                              (("2"
                                                                                (TYPEPRED
                                                                                 "jj")
                                                                                (("2"
                                                                                  (CASE
                                                                                      "NOT jj=0")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("2"
                                                                                      (CASE
                                                                                          " mean(minmax(s2!1)) =  max(s2!1)")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (HIDE
                                                                                         2)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "minmax"
                                                                                           1)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "list2finseq"
                                                                                             1)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "mean"
                                                                                               1)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "length"
                                                                                                 1
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "length"
                                                                                                   1
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "length"
                                                                                                     1
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "length"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (EXPAND
                                                                                                           "length"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "sum"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (EXPAND
                                                                                                               "sigma"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (EXPAND
                                                                                                                 "sigma"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "sigma"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "nth"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (EXPAND
                                                                                                                       "nth"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (TYPEPRED
                                                                                                                         "min(s2!1)")
                                                                                                                        (("2"
                                                                                                                          (TYPEPRED
                                                                                                                           "max(s2!1)")
                                                                                                                          (("2"
                                                                                                                            (SKEEP*)
                                                                                                                            (("2"
                                                                                                                              (CASE
                                                                                                                                  "NOT jj!1 = 0")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL)
                                                                                                                               ("2"
                                                                                                                                (CASE
                                                                                                                                    "NOT jj!2=0")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|midpoint| CONST-DECL "real" |real_finite_sequences| NIL)
    (|mean_convergence| FORMULA-DECL NIL |real_finite_sequences| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|max_minmax| FORMULA-DECL NIL |ordered_finite_sequences| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sum| CONST-DECL "real" |real_finite_sequences| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|minus_i16_u16| APPLICATION-JUDGEMENT "int32" |integertypes| NIL)
    (|minus_i32_u32| APPLICATION-JUDGEMENT "int64" |integertypes| NIL)
    (|minus_u8_u8| APPLICATION-JUDGEMENT "int16" |integertypes| NIL)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|mean| CONST-DECL "real" |real_finite_sequences| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minmax| CONST-DECL "ne_seqs" |ordered_finite_sequences| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|min_minmax| FORMULA-DECL NIL |ordered_finite_sequences| NIL)
    (|min_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|midpoint_convergence_mean| 0
  (|midpoint_convergence_mean-1| |nil| 3893333524
   ("" (SKOSIMP*)
    (("" (EXPAND "midpoint")
      (("" (REWRITE "max_minmax" :DIR RL)
        (("" (LEMMA "mean_convergence")
          (("" (INST?)
            (("" (INST - "k!1")
              (("" (ASSERT)
                (("" (REWRITE "min_minmax")
                  (("" (REWRITE "max_minmax")
                    (("" (ASSERT)
                      (("" (HIDE-ALL-BUT 1)
                        (("" (EXPAND "minmax")
                          (("" (EXPAND "list2finseq")
                            (("" (EXPAND "length")
                              (("" (EXPAND "length")
                                (("" (EXPAND "length")
                                  (("" (REVEAL -) (("" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|midpoint| CONST-DECL "real" |real_finite_sequences| NIL)
    (|mean_convergence| FORMULA-DECL NIL |real_finite_sequences| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|min_minmax| FORMULA-DECL NIL |ordered_finite_sequences| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|min_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minmax| CONST-DECL "ne_seqs" |ordered_finite_sequences| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|max_minmax| FORMULA-DECL NIL |ordered_finite_sequences| NIL)
    (|max_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|convergent_mean_midpoint| 0
  (|convergent_mean_midpoint-1| |nil| 3893333833
   ("" (EXPAND "convergent?")
    (("" (SKOSIMP*)
      (("" (LEMMA "mean_convergence_midpoint")
        (("" (INST?)
          (("" (INST - "k!1")
            (("" (ASSERT)
              (("" (ASSERT)
                ((""
                  (CASE
                      " (delta!1 * k!1 - delta!1) / k!1 <=  (delta!1 * i!1 - delta!1 + delta!1 * k!1) / (i!1 + k!1)")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (ASSERT)
                    (("2" (HIDE 2) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|midpoint_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|min_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|max_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|mean_convergence_midpoint| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|convergent?| CONST-DECL "bool" |middle_third_stage| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL))
   SHOSTAK))
 (|convergent_midpoint_mean| 0
  (|convergent_midpoint_mean-1| |nil| 3893334185
   ("" (EXPAND "convergent?")
    (("" (SKOSIMP*)
      (("" (LEMMA "midpoint_convergence_mean")
        (("" (INST?)
          (("" (INST - "k!1")
            (("" (ASSERT)
              (("" (ASSERT)
                ((""
                  (CASE
                      " (delta!1 * k!1 - delta!1) / k!1 <=  (delta!1 * i!1 - delta!1 + delta!1 * k!1) / (i!1 + k!1)")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (ASSERT)
                    (("2" (HIDE 2) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|midpoint_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|min_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|max_in_consensus| NAME-JUDGEMENT "in_consensus_function"
     |inexact_reduce_stage| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL)
    (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|midpoint_convergence_mean| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|convergent?| CONST-DECL "bool" |middle_third_stage| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL))
   SHOSTAK))
 (|middle_third_convergence_mean_midpoint| 0
  (|middle_third_convergence_mean_midpoint-1| |nil| 3893334222
   ("" (SKOSIMP*)
    (("" (LEMMA "middle_third_convergence_2")
      (("" (INST?)
        (("" (INST?)
          (("" (ASSERT)
            (("" (LEMMA "convergent_mean_midpoint")
              ((""
                (INST -1 "X!1 -  max_length(rcvd!1, check!1, byz)"
                 " max_length(rcvd!1, check!1, byz)")
                (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|middle_third_convergence_2| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|convergent_mean_midpoint| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|byz| CONST-DECL "tau_type" |tau_declaration| NIL)
    (|max_length| CONST-DECL "nat" |reduce_choice| NIL)
    (|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|midpoint| CONST-DECL "real" |real_finite_sequences| NIL)
    (|mean| CONST-DECL "real" |real_finite_sequences| NIL)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|midpoint_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL))
   SHOSTAK))
 (|middle_third_convergence_midpoint_mean| 0
  (|middle_third_convergence_midpoint_mean-1| |nil| 3893334669
   ("" (SKOSIMP*)
    (("" (LEMMA "middle_third_convergence_2")
      (("" (INST?)
        (("" (INST?)
          (("" (ASSERT)
            (("" (LEMMA "convergent_midpoint_mean")
              ((""
                (INST -1 "X!1 -  max_length(rcvd!1, check!1, byz)"
                 " max_length(rcvd!1, check!1, byz)")
                (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|middle_third_convergence_2| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|convergent_midpoint_mean| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|byz| CONST-DECL "tau_type" |tau_declaration| NIL)
    (|max_length| CONST-DECL "nat" |reduce_choice| NIL)
    (|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|mean| CONST-DECL "real" |real_finite_sequences| NIL)
    (|midpoint| CONST-DECL "real" |real_finite_sequences| NIL)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|midpoint_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL))
   SHOSTAK))
 (|mean_convergence| 0
  (|mean_convergence-1| |nil| 3403969276
   ("" (SKOSIMP*)
    (("" (USE "middle_third_convergence")
      (("" (ASSERT)
        (("" (REPLACE*) (("" (REWRITE "convergent_mean") NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|middle_third_convergence| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|mean| CONST-DECL "real" |real_finite_sequences| NIL)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|mean_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|convergent_mean| FORMULA-DECL NIL |real_finite_sequences| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL)
    (|max_length| CONST-DECL "nat" |reduce_choice| NIL)
    (|byz| CONST-DECL "tau_type" |tau_declaration| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|midpoint_convergence| 0
  (|midpoint_convergence-1| |nil| 3403969481
   ("" (SKOSIMP*)
    (("" (LEMMA "middle_third_convergence")
      (("" (INST?)
        (("" (INST?)
          (("" (INST - 2 "epsilon!1")
            (("" (REWRITE "convergent_midpoint") (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|middle_third_convergence| FORMULA-DECL NIL |middle_third_stage| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sent_vec_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|byz| CONST-DECL "tau_type" |tau_declaration| NIL)
    (|max_length| CONST-DECL "nat" |reduce_choice| NIL)
    (|error| FORMAL-CONST-DECL "real" |middle_third_stage| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tau_declaration| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|convergent_midpoint| FORMULA-DECL NIL |real_finite_sequences| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|rcvd_matrix_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (|non_empty_finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|check_stage| TYPE-EQ-DECL NIL |node_functions_stage| NIL)
    (S FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (D FORMAL-CONST-DECL "posnat" |middle_third_stage| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|midpoint| CONST-DECL "real" |real_finite_sequences| NIL)
    (|consensus_function| TYPE-EQ-DECL NIL |ordered_finite_sequences| NIL)
    (|max| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): seq(s)(ii) <= t) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |max_seq| |structures|)
    (|dom| TYPE-EQ-DECL NIL |max_seq| |structures|)
    (|min| CONST-DECL "{t: T |
   (FORALL (ii: dom(s)): t <= seq(s)(ii)) AND
    (EXISTS (jj: dom(s)): seq(s)(jj) = t)}"
     |min_seq| |structures|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|dom| TYPE-EQ-DECL NIL |min_seq| |structures|)
    (> CONST-DECL "bool" |reals| NIL)
    (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|ne_seqs| TYPE-EQ-DECL NIL |seqs| |structures|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|midpoint_consensus| NAME-JUDGEMENT "consensus_function"
     |real_finite_sequences| NIL))
   SHOSTAK)))

