(|tan_props| (|tan_fast_approx_bound_TCC1| 0 (|tan_fast_approx_bound_TCC1-2| |nil| 3634494197 ("" (SKEEP) (("" (EXPAND "Tan?") (("" (LEMMA "cos_eq_0") (("" (INST -1 "x") (("" (FLATTEN) (("" (HIDE -2) (("" (SPLIT -1) (("1" (SKEEP -1) (("1" (CASE "abs(x)<=3.139/2") (("1" (HIDE -3) (("1" (EXPAND "abs") (("1" (LIFT-IF -1) (("1" (SPLIT -1) (("1" (FLATTEN) (("1" (REPLACES -3) (("1" (SIMPLIFY) (("1" (CASE "i<0") (("1" (CASE "3139/2000< pi/2") (("1" (CASE "-i*pi< pi") (("1" (CANCEL-BY -1 "pi") NIL NIL) ("2" (GROUND) NIL NIL)) NIL) ("2" (LEMMA "atan_approx.pi_bound") (("2" (EXPAND "pi_lb") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CANCEL-BY -1 "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (FLIP-INEQ 1) (("2" (CASE "3139/2000< pi/2") (("1" (CASE "i<0") (("1" (GROUND) (("1" (CASE "x+pi/2>= pi/2") (("1" (REPLACE -6 -1) (("1" (CANCEL-BY -1 "pi") NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (FLIP-INEQ 1) (("2" (GROUND) (("2" (CASE "pi>0") (("1" (MULT-INEQ -1 -2) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "atan_approx.pi_bound") (("2" (EXPAND "pi_lb") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL) (|gt_times_gt_any1| FORMULA-DECL NIL |extra_real_props| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (DIV_30 SKOLEM-CONST-DECL "{x2:
   {x1: {x: real | x > 2 AND x < 4 AND cos(x / 2) = 0} |
      pi_lb < x1 AND x1 < pi_ub} |
   pi_lb_new <= x2 AND x2 <= pi_ub_new}" |tan_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb < r AND r < pi_ub}" |atan_approx| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|zero_div| FORMULA-DECL NIL |extra_tegies| NIL) (DIV_29 SKOLEM-CONST-DECL "{x2:
   {x1: {x: real | x > 2 AND x < 4 AND cos(x / 2) = 0} |
      pi_lb < x1 AND x1 < pi_ub} |
   pi_lb_new <= x2 AND x2 <= pi_ub_new}" |tan_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (|pos_div_gt| FORMULA-DECL NIL |real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|neg_one_times| FORMULA-DECL NIL |extra_tegies| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (DIV_28 SKOLEM-CONST-DECL "{x2:
   {x1: {x: real | x > 2 AND x < 4 AND cos(x / 2) = 0} |
      pi_lb < x1 AND x1 < pi_ub} |
   pi_lb_new <= x2 AND x2 <= pi_ub_new}" |tan_props| NIL) (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|pi_lb| CONST-DECL "posreal" |atan_approx| |trig|) (|pi_ub| CONST-DECL "posreal" |atan_approx| |trig|) (|pi_lb_new| CONST-DECL "posreal" |pi_def| |trig|) (|pi_ub_new| CONST-DECL "posreal" |pi_def| |trig|) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pi_bound| JUDGEMENT-TCC NIL |atan_approx| |trig|) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_eq_0| FORMULA-DECL NIL |sincos| |trig|)) NIL (|tan_fast_approx_bound| SUBTYPE "tan_props.x" "(trig_basic.Tan?)")) (|tan_fast_approx_bound_TCC1-1| |nil| 3634405907 ("" (SKEEP) (("" (EXPAND "Tan?") (("" (POSTPONE) NIL NIL)) NIL)) NIL) NIL NIL (|tan_fast_approx_bound| SUBTYPE "tan_props.x" "(trig_basic.Tan?)"))) (|tan_fast_approx_bound_TCC2| 0 (|tan_fast_approx_bound_TCC2-1| |nil| 3634405907 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL)) NIL (|tan_fast_approx_bound| SUBTYPE "tan_props.x" "{a | reals.<(real_defs.abs(fast_approx.a), 7)}"))) (|tan_fast_approx_bound| 0 (|tan_fast_approx_bound-4| "" 3884581047 ("" (CASE "FORALL (x: posreal, eps: posreal):
                                                                (x <= 1.3 AND eps <= 10 ^ -1) OR
                                                                 (x <= 3.139 / 2 AND eps <= 10 ^ -4)
                                                                 IMPLIES abs(tan(x) - tan_fast_approx(x, eps)) <= eps") (("1" (SKEEP) (("1" (CASE-REPLACE "x=0") (("1" (REWRITE "tan_0") (("1" (EXPAND "tan_fast_approx") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "x<0") (("1" (LEMMA "tan_neg") (("1" (INST -1 "x") (("1" (CASE "abs(tan(x)-tan_fast_approx(x,eps)) = abs(-tan(x)+tan_fast_approx(x, eps))") (("1" (REPLACES -1) (("1" (REPLACES -1 :DIR RL) (("1" (EXPAND "tan_fast_approx") (("1" (LIFT-IF 2) (("1" (SPLIT 2) (("1" (FLATTEN) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (INST -2 "-x" "eps") (("1" (EXPAND "abs" -3) (("1" (LIFT-IF -3) (("1" (SPLIT -3) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "abs") (("2" (GROUND) (("2" (LIFT-IF 1) (("2" (GROUND) (("2" (LIFT-IF 2) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "x" "eps") (("1" (EXPAND "abs" -2) (("1" (LIFT-IF -2) (("1" (SPLIT -2) (("1" (GROUND) NIL NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (CASE " FORALL ((CL: real | CL<=cos(x) AND CL-eps>0), (CU: real | CU>=cos(x))):
                                                                    abs(tan(x)-tan_pos_fast_approx(x,eps,CL, CU))<=eps") (("1" (SPLASH -2) (("1" (GROUND) NIL NIL) ("2" (EXPAND "tan_fast_approx") (("2" (EXPAND "tan_pos") (("2" (LIFT-IF 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (HIDE (-5 1)) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (HIDE (-3 2 3)) (("1" (EXPAND "tan_pos_inst2") (("1" (INST -3 "1 - x * x / 2 -
                                                                                    x * x / 2 * (x * x / 12) * (x * x / 30)
                                                                                    + x * x / 2 * (x * x / 12)" " 1 + x ^ 8 / 40320 - x * x / 2 -
                                                                                    x * x / 2 * (x * x / 12) * (x * x / 30)
                                                                                    + x * x / 2 * (x * x / 12)") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "2") (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "px" "3139/2000") (("2" (CASE "1 - x * x / 2 - x * x / 2 * (x * x / 12) * (x * x / 30) +
                                                                                                                x * x / 2 * (x * x / 12)>= 1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                                                                                                                px * px / 2 * (px * px / 12)") (("1" (CASE "1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                                                                                                                           px * px / 2 * (px * px / 12) -eps>0") (("1" (EXPAND "px") (("1" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "px") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (EXPAND "px") (("2" (HIDE (-1 -3 2 3)) (("2" (TYPEPRED ("x")) (("2" (HIDE -1) (("2" (METIT *) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "tan_fast_approx") (("3" (EXPAND "tan_pos") (("3" (LIFT-IF 1) (("3" (SPLIT 1) (("1" (GROUND) (("1" (HIDE (-3 -4)) (("1" (EXPAND "tan_pos_inst1") (("1" (INST -3 "1 - x * x / 2" "1 + x * x * x * x / 24 - x * x / 2") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (FLATTEN) (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "0") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (FLATTEN) (("1" (EXPAND "cos_term") (("1" (EXPAND "sigma") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (MOVE-TERMS 1 L 2) (("2" (MOVE-TERMS 1 L 2) (("2" (HIDE 2) (("2" (TYPEPRED ("x")) (("2" (CASE "FORALL (a,b:posreal): a<=b IMPLIES a*a<=b*b") (("1" (INST -1 "x" "13/10") (("1" (GROUND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (MULT-INEQ -1 -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (EXPAND "tan_pos_fast_approx") (("2" (EXPAND "tan") (("2" (LEMMA "sin_fast_approx_bound") (("2" (NAME-REPLACE "d1" " (CL * CL * eps - CL * eps * eps) / 2 / CU ") (("2" (NAME-REPLACE "d2" " min((CL * CL * eps - CL * eps * eps) / 2 / x,eps) ") (("2" (LEMMA "cos_fast_approx_bound") (("2" (INST -1 "x" "d2") (("1" (INST -2 "x" "d1") (("1" (CASE-REPLACE "abs(sin(x) / cos(x) - sin_fast_approx(x, d1) / cos_fast_approx(x, d2)) = abs((sin(x)*cos_fast_approx(x,d2) - sin_fast_approx(x,d1)*cos(x))/(cos(x)*cos_fast_approx(x,d2)))") (("1" (CASE "EXISTS ((D2: real | abs(D2)<=d2)): cos_fast_approx(x,d2) = cos(x)+D2") (("1" (SKEEP -1) (("1" (REPLACES -1) (("1" (CASE "EXISTS ((D1: real | abs(D1)<=d1)): sin_fast_approx(x,d1) = sin(x)+D1") (("1" (SKEEP) (("1" (REPLACES -1) (("1" (SIMPLIFY 1) (("1" (LEMMA "triangle") (("1" (INST -1 "sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2)" " (- cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2)") (("1" (CASE-REPLACE "sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2) +
                                                           (-cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2) = (sin(x) * D2 - cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2)") (("1" (HIDE -1) (("1" (HIDE -2) (("1" (CASE "abs(sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2))<=eps/2") (("1" (CASE "abs((-cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2))<=eps/2") (("1" (GROUND) NIL NIL) ("2" (CASE "d2<=eps") (("1" (CASE "D2>=-eps") (("1" (TYPEPRED ("CL")) (("1" (CASE "CL-eps<=cos(x)+D2") (("1" (MULT-INEQ -1 -2) (("1" (SIMPLIFY -1) (("1" (HIDE 2) (("1" (REWRITE "abs_div") (("1" (REWRITE "abs_mult") (("1" (CASE "abs(-cos(x))<=CU") (("1" (CASE " abs(D1) / abs((cos(x) * cos(x) + cos(x) * D2))<= d1/(CL * CL - CL * eps)") (("1" (MULT-INEQ -1 -2) (("1" (CASE "CL>0") (("1" (MULT-INEQ -1 -8) (("1" (CASE-REPLACE "(d1 / (CL * CL - CL * eps)) * CU =eps/2") (("1" (GROUND) NIL NIL) ("2" (EXPAND "d1") (("2" (FIELD 1) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (EXPAND "abs" 1 1) (("1" (HIDE -15) (("1" (GROUND) (("1" (EXPAND "abs" 1 1) (("1" (EXPAND "abs" 1 2) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (REWRITE "abs_div" :DIR RL) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "CL>0") (("1" (MULT-INEQ -1 -6) (("1" (SIMPLIFY 1) (("1" (TYPEPRED ("D1")) (("1" (EXPAND "abs" 1 2) (("1" (LIFT-IF 1) (("1" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (CROSS-MULT 2) (("2" (MULT-INEQ -1 -5) (("1" (GROUND) NIL NIL) ("2" (EXPAND "abs" 1 1) (("2" (EXPAND "abs" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL) ("3" (CASE "CL>0") (("1" (MULT-INEQ -1 -6) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (CASE "abs(-cos(x)) = cos(x)") (("1" (REPLACES -1) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-11 1)) (("2" (CASE "cos(x)>=0") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "x<=pi/2") (("1" (HIDE -2) (("1" (TYPEPRED ("x")) (("1" (HIDE -2) (("1" (SPLIT-INEQ -2) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "pi") (("2" (EXPAND "pi_lb") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (TYPEPRED ("D2")) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d2<=eps") (("1" (CASE "D2>=-eps") (("1" (TYPEPRED ("CL")) (("1" (CASE "CL-eps<=cos(x)+D2") (("1" (MULT-INEQ -1 -2) (("1" (SIMPLIFY -1) (("1" (CASE "CL>0") (("1" (MULT-INEQ -1 -5) (("1" (SIMPLIFY 1) (("1" (REWRITE "abs_div" 1) (("1" (SIMPLIFY -1) (("1" (EXPAND "abs" 1 2) (("1" (LIFT-IF 1) (("1" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (FLIP-INEQ 1) (("2" (REWRITE "abs_mult" 1) (("2" (CASE "abs(sin(x))<=x") (("1" (CASE "abs(D2)<=(CL * CL * eps - CL * eps * eps) / 2 / x") (("1" (CASE "1/(cos(x) * cos(x) + cos(x) * D2)<= 1/(CL * CL - CL * eps)") (("1" (MULT-INEQ -3 -2) (("1" (MULT-INEQ -1 -2) (("1" (CASE-REPLACE "(x * ((CL * CL * eps - CL * eps * eps) / 2 / x)) *
                                                (1 / (CL * CL - CL * eps)) = eps/2") (("1" (GROUND) NIL NIL) ("2" (FIELD 1) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (SPLIT 1) (("1" (EXPAND "abs" 1 1) (("1" (EXPAND "abs" 1 3) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "abs" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (LIFT-IF 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (CROSS-MULT 1) NIL NIL)) NIL)) NIL) ("2" (EXPAND "abs" 1 1) (("2" (EXPAND "abs" 1 1) (("2" (EXPAND "abs" 1 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) NIL NIL) ("3" (GROUND) NIL NIL)) NIL) ("2" (TYPEPRED ("D2")) (("2" (EXPAND "d2") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "abs(sin(x)) = sin(x)") (("1" (LEMMA "sin_pos_bnds") (("1" (INST -1 "x") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-13 1)) (("2" (CASE "x<=pi/2") (("1" (CASE "sin(x)>=0") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE (-2 2)) (("2" (TYPEPRED ("x")) (("2" (HIDE -2) (("2" (SPLIT-INEQ -2) (("2" (SPLIT-INEQ -1) (("2" (LEMMA "sin_pos_0tohalfpi") (("2" (INST -1 "x") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "pi") (("2" (EXPAND "pi_lb") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (TYPEPRED ("D2")) (("2" (EXPAND "abs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "d2") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "sin_fast_approx(x,d1)-sin(x)") (("1" (GROUND) NIL NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (GRIND :EXCLUDE ("sin_fast_approx" "sin")) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (-1 -3 -4 2)) (("2" (INST 1 "cos_fast_approx(x,d2)-cos(x)") (("1" (GROUND) NIL NIL) ("2" (GROUND) (("2" (EXPAND "abs") (("2" (GRIND :EXCLUDE ("cos_fast_approx" "cos")) NIL NIL)) NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL) ("3" (CASE "cos_fast_approx(x,d2)/=0") (("1" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (HIDE -6) (("1" (INST -1 "x") (("1" (FLATTEN) (("1" (HIDE -2) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cos_fast_approx") (("2" (GROUND) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("4" (GROUND) NIL NIL) ("5" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "d1") (("2" (TYPEPRED "CL") (("2" (TYPEPRED "CU") (("2" (CASE "CL>0") (("1" (TYPEPRED ("eps")) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -7) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "d2") (("2" (EXPAND "min") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (TYPEPRED "CL") (("2" (CASE "CL>0") (("1" (TYPEPRED ("eps")) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -6) (("1" (SPLIT 2) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "abs") (("3" (GROUND) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (INST -1 "x") (("1" (EXPAND "Tan?") (("1" (FLATTEN) (("1" (HIDE -4) (("1" (HIDE -2) (("1" (GROUND) (("1" (SKEEP -1) (("1" (CASE "i<0") (("1" (GROUND) (("1" (TYPEPRED ("x")) (("1" (GROUND) (("1" (REPLACE -4) (("1" (CROSS-MULT) (("1" (MOVE-TERMS -2 L 2) (("1" (SIMPLIFY) (("1" (CANCEL-BY -2 "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (TYPEPRED ("x")) (("2" (REPLACES -3) (("2" (GROUND) (("2" (MOVE-TERMS -3 R 1) (("2" (SIMPLIFY) (("2" (CANCEL-BY -4 "pi") (("2" (FLIP-INEQ 2) (("2" (CASE "pi>=pi") (("1" (MULT-INEQ -2 -1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|tan_fast_approx_bound-3| |nil| 3634481795 ("" (CASE "FORALL (x: posreal, eps: posreal):
                                                                (x <= 1.3 AND eps <= 10 ^ -1) OR
                                                                 (x <= 3.139 / 2 AND eps <= 10 ^ -4)
                                                                 IMPLIES abs(tan(x) - tan_fast_approx(x, eps)) <= eps") (("1" (SKEEP) (("1" (CASE-REPLACE "x=0") (("1" (REWRITE "tan_0") (("1" (EXPAND "tan_fast_approx") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "x<0") (("1" (LEMMA "tan_neg") (("1" (INST -1 "x") (("1" (CASE "abs(tan(x)-tan_fast_approx(x,eps)) = abs(-tan(x)+tan_fast_approx(x, eps))") (("1" (REPLACES -1) (("1" (REPLACES -1 :DIR RL) (("1" (EXPAND "tan_fast_approx") (("1" (LIFT-IF 2) (("1" (SPLIT 2) (("1" (FLATTEN) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (INST -2 "-x" "eps") (("1" (EXPAND "abs" -3) (("1" (LIFT-IF -3) (("1" (SPLIT -3) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "abs") (("2" (GROUND) (("2" (LIFT-IF 1) (("2" (GROUND) (("2" (LIFT-IF 2) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "x" "eps") (("1" (EXPAND "abs" -2) (("1" (LIFT-IF -2) (("1" (SPLIT -2) (("1" (GROUND) NIL NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (CASE " FORALL ((CL: real | CL<=cos(x) AND CL-eps>0), (CU: real | CU>=cos(x))):
                                                                    abs(tan(x)-tan_pos_fast_approx(x,eps,CL, CU))<=eps") (("1" (SPLASH -2) (("1" (GROUND) NIL NIL) ("2" (EXPAND "tan_fast_approx") (("2" (EXPAND "tan_pos") (("2" (LIFT-IF 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (HIDE (-5 1)) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (HIDE (-3 2 3)) (("1" (EXPAND "tan_pos_inst2") (("1" (INST -3 "1 - x * x / 2 -
                                                                                    x * x / 2 * (x * x / 12) * (x * x / 30)
                                                                                    + x * x / 2 * (x * x / 12)" " 1 + x ^ 8 / 40320 - x * x / 2 -
                                                                                    x * x / 2 * (x * x / 12) * (x * x / 30)
                                                                                    + x * x / 2 * (x * x / 12)") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "2") (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "px" "3139/2000") (("2" (CASE "1 - x * x / 2 - x * x / 2 * (x * x / 12) * (x * x / 30) +
                                                                                                                x * x / 2 * (x * x / 12)>= 1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                                                                                                                px * px / 2 * (px * px / 12)") (("1" (CASE "1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                                                                                                                           px * px / 2 * (px * px / 12) -eps>0") (("1" (EXPAND "px") (("1" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "px") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (EXPAND "px") (("2" (HIDE (-1 -3 2 3)) (("2" (TYPEPRED (X)) (("2" (HIDE -1) (("2" (METIT *) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "tan_fast_approx") (("3" (EXPAND "tan_pos") (("3" (LIFT-IF 1) (("3" (SPLIT 1) (("1" (GROUND) (("1" (HIDE (-3 -4)) (("1" (EXPAND "tan_pos_inst1") (("1" (INST -3 "1 - x * x / 2" "1 + x * x * x * x / 24 - x * x / 2") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (FLATTEN) (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "0") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (FLATTEN) (("1" (EXPAND "cos_term") (("1" (EXPAND "sigma") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (MOVE-TERMS 1 L 2) (("2" (MOVE-TERMS 1 L 2) (("2" (HIDE 2) (("2" (TYPEPRED (X)) (("2" (CASE "FORALL (a,b:posreal): a<=b IMPLIES a*a<=b*b") (("1" (INST -1 "x" "13/10") (("1" (GROUND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (MULT-INEQ -1 -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (EXPAND "tan_pos_fast_approx") (("2" (EXPAND "tan") (("2" (LEMMA "sin_fast_approx_bound") (("2" (NAME-REPLACE "d1" " (CL * CL * eps - CL * eps * eps) / 2 / CU ") (("2" (NAME-REPLACE "d2" " min((CL * CL * eps - CL * eps * eps) / 2 / x,eps) ") (("2" (LEMMA "cos_fast_approx_bound") (("2" (INST -1 "x" "d2") (("1" (INST -2 "x" "d1") (("1" (CASE-REPLACE "abs(sin(x) / cos(x) - sin_fast_approx(x, d1) / cos_fast_approx(x, d2)) = abs((sin(x)*cos_fast_approx(x,d2) - sin_fast_approx(x,d1)*cos(x))/(cos(x)*cos_fast_approx(x,d2)))") (("1" (CASE "EXISTS ((D2: real | abs(D2)<=d2)): cos_fast_approx(x,d2) = cos(x)+D2") (("1" (SKEEP -1) (("1" (REPLACES -1) (("1" (CASE "EXISTS ((D1: real | abs(D1)<=d1)): sin_fast_approx(x,d1) = sin(x)+D1") (("1" (SKEEP) (("1" (REPLACES -1) (("1" (SIMPLIFY 1) (("1" (LEMMA "triangle") (("1" (INST -1 "sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2)" " (- cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2)") (("1" (CASE-REPLACE "sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2) +
                                                           (-cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2) = (sin(x) * D2 - cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2)") (("1" (HIDE -1) (("1" (HIDE -2) (("1" (CASE "abs(sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2))<=eps/2") (("1" (CASE "abs((-cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2))<=eps/2") (("1" (GROUND) NIL NIL) ("2" (CASE "d2<=eps") (("1" (CASE "D2>=-eps") (("1" (TYPEPRED (CL)) (("1" (CASE "CL-eps<=cos(x)+D2") (("1" (MULT-INEQ -1 -2) (("1" (SIMPLIFY -1) (("1" (HIDE 2) (("1" (REWRITE "abs_div") (("1" (REWRITE "abs_mult") (("1" (CASE "abs(-cos(x))<=CU") (("1" (CASE " abs(D1) / abs((cos(x) * cos(x) + cos(x) * D2))<= d1/(CL * CL - CL * eps)") (("1" (MULT-INEQ -1 -2) (("1" (CASE "CL>0") (("1" (MULT-INEQ -1 -8) (("1" (CASE-REPLACE "(d1 / (CL * CL - CL * eps)) * CU =eps/2") (("1" (GROUND) NIL NIL) ("2" (EXPAND "d1") (("2" (FIELD 1) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (EXPAND "abs" 1 1) (("1" (HIDE -15) (("1" (GROUND) (("1" (EXPAND "abs" 1 1) (("1" (EXPAND "abs" 1 2) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (REWRITE "abs_div" :DIR RL) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "CL>0") (("1" (MULT-INEQ -1 -6) (("1" (SIMPLIFY 1) (("1" (TYPEPRED (D1)) (("1" (EXPAND "abs" 1 2) (("1" (LIFT-IF 1) (("1" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (CROSS-MULT 2) (("2" (MULT-INEQ -1 -5) (("1" (GROUND) NIL NIL) ("2" (EXPAND "abs" 1 1) (("2" (EXPAND "abs" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL) ("3" (CASE "CL>0") (("1" (MULT-INEQ -1 -6) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (CASE "abs(-cos(x)) = cos(x)") (("1" (REPLACES -1) (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-11 1)) (("2" (CASE "cos(x)>=0") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "x<=pi/2") (("1" (HIDE -2) (("1" (TYPEPRED (X)) (("1" (HIDE -2) (("1" (SPLIT-INEQ -2) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "pi") (("2" (EXPAND "pi_lb") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (TYPEPRED (D2)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "d2<=eps") (("1" (CASE "D2>=-eps") (("1" (TYPEPRED (CL)) (("1" (CASE "CL-eps<=cos(x)+D2") (("1" (MULT-INEQ -1 -2) (("1" (SIMPLIFY -1) (("1" (CASE "CL>0") (("1" (MULT-INEQ -1 -5) (("1" (SIMPLIFY 1) (("1" (REWRITE "abs_div" 1) (("1" (SIMPLIFY -1) (("1" (EXPAND "abs" 1 2) (("1" (LIFT-IF 1) (("1" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (FLIP-INEQ 1) (("2" (REWRITE "abs_mult" 1) (("2" (CASE "abs(sin(x))<=x") (("1" (CASE "abs(D2)<=(CL * CL * eps - CL * eps * eps) / 2 / x") (("1" (CASE "1/(cos(x) * cos(x) + cos(x) * D2)<= 1/(CL * CL - CL * eps)") (("1" (MULT-INEQ -3 -2) (("1" (MULT-INEQ -1 -2) (("1" (CASE-REPLACE "(x * ((CL * CL * eps - CL * eps * eps) / 2 / x)) *
                                                (1 / (CL * CL - CL * eps)) = eps/2") (("1" (GROUND) NIL NIL) ("2" (FIELD 1) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (SPLIT 1) (("1" (EXPAND "abs" 1 1) (("1" (EXPAND "abs" 1 3) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "abs" 1) (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (LIFT-IF 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("3" (FLATTEN) (("3" (CROSS-MULT 1) NIL NIL)) NIL)) NIL) ("2" (EXPAND "abs" 1 1) (("2" (EXPAND "abs" 1 1) (("2" (EXPAND "abs" 1 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) NIL NIL) ("3" (GROUND) NIL NIL)) NIL) ("2" (TYPEPRED (D2)) (("2" (EXPAND "d2") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "abs(sin(x)) = sin(x)") (("1" (LEMMA "sin_pos_bnds") (("1" (INST -1 "x") (("1" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-13 1)) (("2" (CASE "x<=pi/2") (("1" (CASE "sin(x)>=0") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL) ("2" (HIDE (-2 2)) (("2" (TYPEPRED (X)) (("2" (HIDE -2) (("2" (SPLIT-INEQ -2) (("2" (SPLIT-INEQ -1) (("2" (LEMMA "sin_pos_0tohalfpi") (("2" (INST -1 "x") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "pi") (("2" (EXPAND "pi_lb") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (TYPEPRED (D2)) (("2" (EXPAND "abs") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "d2") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "sin_fast_approx(x,d1)-sin(x)") (("1" (GROUND) NIL NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (GRIND :EXCLUDE ("sin_fast_approx" "sin")) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (-1 -3 -4 2)) (("2" (INST 1 "cos_fast_approx(x,d2)-cos(x)") (("1" (GROUND) NIL NIL) ("2" (GROUND) (("2" (EXPAND "abs") (("2" (GRIND :EXCLUDE ("cos_fast_approx" "cos")) NIL NIL)) NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL) ("3" (CASE "cos_fast_approx(x,d2)/=0") (("1" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (HIDE -6) (("1" (INST -1 "x") (("1" (FLATTEN) (("1" (HIDE -2) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cos_fast_approx") (("2" (GROUND) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("4" (GROUND) NIL NIL) ("5" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "d1") (("2" (TYPEPRED "CL") (("2" (TYPEPRED "CU") (("2" (CASE "CL>0") (("1" (TYPEPRED (EPS)) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -7) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "d2") (("2" (EXPAND "min") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (TYPEPRED "CL") (("2" (CASE "CL>0") (("1" (TYPEPRED (EPS)) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -6) (("1" (SPLIT 2) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "abs") (("3" (GROUND) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (INST -1 "x") (("1" (EXPAND "Tan?") (("1" (FLATTEN) (("1" (HIDE -4) (("1" (HIDE -2) (("1" (GROUND) (("1" (SKEEP -1) (("1" (CASE "i<0") (("1" (GROUND) (("1" (TYPEPRED (X)) (("1" (GROUND) (("1" (REPLACE -4) (("1" (CROSS-MULT) (("1" (MOVE-TERMS -2 L 2) (("1" (SIMPLIFY) (("1" (CANCEL-BY -2 "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (TYPEPRED (X)) (("2" (REPLACES -3) (("2" (GROUND) (("2" (MOVE-TERMS -3 R 1) (("2" (SIMPLIFY) (("2" (CANCEL-BY -4 "pi") (("2" (FLIP-INEQ 2) (("2" (CASE "pi>=pi") (("1" (MULT-INEQ -2 -1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|pos_div_gt| FORMULA-DECL NIL |real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (DIV_53 SKOLEM-CONST-DECL "{x2:
   {x1: {x: real | x > 2 AND x < 4 AND cos(x / 2) = 0} |
      pi_lb < x1 AND x1 < pi_ub} |
   pi_lb_new <= x2 AND x2 <= pi_ub_new}" |tan_props| NIL) (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (|ge_times_ge_any1| FORMULA-DECL NIL |extra_real_props| NIL) (|zero_div| FORMULA-DECL NIL |extra_tegies| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (DIV_54 SKOLEM-CONST-DECL "{x2:
   {x1: {x: real | x > 2 AND x < 4 AND cos(x / 2) = 0} |
      pi_lb < x1 AND x1 < pi_ub} |
   pi_lb_new <= x2 AND x2 <= pi_ub_new}" |tan_props| NIL) (|tan_pos_fast_approx| CONST-DECL "real" |fast_approx| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|tan_pos_inst1| CONST-DECL "real" |fast_approx| NIL) (|le_times_le_any1| FORMULA-DECL NIL |extra_real_props| NIL) (|posrat_times_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_exp| APPLICATION-JUDGEMENT "posreal" |exponentiation| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|tan_pos_inst2| CONST-DECL "real" |fast_approx| NIL) (|cos_lb| CONST-DECL "real" |trig_approx| |trig|) (|rat_plus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (|px| SKOLEM-CONST-DECL "posrat" |tan_props| NIL) (|nonneg_rat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|posrat| NONEMPTY-TYPE-EQ-DECL NIL |rationals| NIL) (|cos_bounds| FORMULA-DECL NIL |trig_approx| |trig|) (|cos_ub| CONST-DECL "real" |trig_approx| |trig|) (|sigma| DEF-DECL "real" |sigma| |reals|) (|int_exp| APPLICATION-JUDGEMENT "int" |exponentiation| NIL) (|nzreal_exp| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cos_term| CONST-DECL "real" |trig_approx| |trig|) (|factorial| DEF-DECL "posnat" |factorial| |ints|) (|posreal_expt| APPLICATION-JUDGEMENT "posreal" |exponentiation| NIL) (|nzreal_expt| APPLICATION-JUDGEMENT "nzreal" |exponentiation| NIL) (|int_expt| APPLICATION-JUDGEMENT "int" |exponentiation| NIL) (|cos_approx| CONST-DECL "real" |trig_approx| |trig|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|x| SKOLEM-CONST-DECL "posreal" |tan_props| NIL) (|eps| SKOLEM-CONST-DECL "posreal" |tan_props| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|expt| DEF-DECL "real" |exponentiation| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL) (|tan_pos| CONST-DECL "real" |fast_approx| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_fast_approx_bound| FORMULA-DECL NIL |cos_props| NIL) (|d1| SKOLEM-CONST-DECL "real" |tan_props| NIL) (|pi_bounds0| FORMULA-DECL NIL |atan_approx| |trig|) (|pi_lb_pos| APPLICATION-JUDGEMENT "posreal" |atan_approx| |trig|) (|pi_ub_pos| APPLICATION-JUDGEMENT "posreal" |atan_approx| |trig|) (|pi_bounds| FORMULA-DECL NIL |atan_approx| |trig|) (|cos_eq_0| FORMULA-DECL NIL |sincos| |trig|) (|abs_mult| FORMULA-DECL NIL |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb < r AND r < pi_ub}" |atan_approx| |trig|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|pi_lb| CONST-DECL "posreal" |atan_approx| |trig|) (|pi_ub| CONST-DECL "posreal" |atan_approx| |trig|) (|pi_lb_new| CONST-DECL "posreal" |pi_def| |trig|) (|pi_ub_new| CONST-DECL "posreal" |pi_def| |trig|) (|cross_mult| FORMULA-DECL NIL |real_props| NIL) (|div_div2| FORMULA-DECL NIL |real_props| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|div_distributes| FORMULA-DECL NIL |real_props| NIL) (|both_sides_div_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|nzint_abs_is_pos| APPLICATION-JUDGEMENT "{j: posint | j >= i}" |real_defs| NIL) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (FDX_47 SKOLEM-CONST-DECL "real" |tan_props| NIL) (|gt_times_gt_any1| FORMULA-DECL NIL |extra_real_props| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (D2 SKOLEM-CONST-DECL "{D2: real | abs(D2) <= d2}" |tan_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|abs_div| FORMULA-DECL NIL |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|div_times| FORMULA-DECL NIL |real_props| NIL) (FDX_50 SKOLEM-CONST-DECL "real" |tan_props| NIL) (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}" |real_defs| NIL) (|sin_pos_0tohalfpi| FORMULA-DECL NIL |sincos| |trig|) (|sin_pos_bnds| FORMULA-DECL NIL |sincos| |trig|) (|triangle| FORMULA-DECL NIL |real_props| NIL) (|cos_fast_approx| CONST-DECL "real" |fast_approx| NIL) (|sin_fast_approx| CONST-DECL "real" |fast_approx| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (CL SKOLEM-CONST-DECL "{CL: real | CL <= cos(x) AND CL - eps > 0}" |tan_props| NIL) (|d2| SKOLEM-CONST-DECL "{p: real | p <= (CL * CL * eps - CL * eps * eps) / 2 / x AND p <= eps}" |tan_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|sin_fast_approx_bound| FORMULA-DECL NIL |sin_props| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|x| SKOLEM-CONST-DECL "real" |tan_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|tan_neg| FORMULA-DECL NIL |trig_basic| |trig|) (|tan_0| FORMULA-DECL NIL |trig_basic| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|tan_fast_approx| CONST-DECL "real" |fast_approx| NIL) (< CONST-DECL "bool" |reals| NIL) (|tan| CONST-DECL "real" |trig_basic| |trig|) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (^ CONST-DECL "real" |exponentiation| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL) (|tan_fast_approx_bound-2| |nil| 3634479393 ("" (CASE "FORALL (x: posreal, eps: posreal):
                                           (x <= 1.3 AND eps <= 10 ^ -1) OR
                                            (x <= 3.139 / 2 AND eps <= 10 ^ -4)
                                            IMPLIES abs(tan(x) - tan_fast_approx(x, eps)) <= eps") (("1" (SKEEP) (("1" (CASE-REPLACE "x=0") (("1" (REWRITE "tan_0") (("1" (EXPAND "tan_fast_approx") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "x<0") (("1" (LEMMA "tan_neg") (("1" (INST -1 "x") (("1" (CASE "abs(tan(x)-tan_fast_approx(x,eps)) = abs(-tan(x)+tan_fast_approx(x, eps))") (("1" (REPLACES -1) (("1" (REPLACES -1 :DIR RL) (("1" (EXPAND "tan_fast_approx") (("1" (LIFT-IF 2) (("1" (SPLIT 2) (("1" (FLATTEN) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (INST -2 "-x" "eps") (("1" (EXPAND "abs" -3) (("1" (LIFT-IF -3) (("1" (SPLIT -3) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "abs") (("2" (GROUND) (("2" (LIFT-IF 1) (("2" (GROUND) (("2" (LIFT-IF 2) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "x" "eps") (("1" (EXPAND "abs" -2) (("1" (LIFT-IF -2) (("1" (SPLIT -2) (("1" (GROUND) NIL NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (CASE " FORALL ((CL: real | CL<=cos(x) AND CL-eps>0), (CU: real | CU>=cos(x))):
                                         abs(tan(x)-tan_pos_fast_approx(x,eps,CL, CU))<=eps") (("1" (SPLASH -2) (("1" (GROUND) NIL NIL) ("2" (EXPAND "tan_fast_approx") (("2" (EXPAND "tan_pos") (("2" (LIFT-IF 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (HIDE (-5 1)) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (HIDE (-3 2 3)) (("1" (EXPAND "tan_pos_inst2") (("1" (INST -3 "1 - x * x / 2 -
                                                x * x / 2 * (x * x / 12) * (x * x / 30)
                                                + x * x / 2 * (x * x / 12)" " 1 + x ^ 8 / 40320 - x * x / 2 -
                                                x * x / 2 * (x * x / 12) * (x * x / 30)
                                                + x * x / 2 * (x * x / 12)") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "2") (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "px" "3139/2000") (("2" (CASE "1 - x * x / 2 - x * x / 2 * (x * x / 12) * (x * x / 30) +
                                                 x * x / 2 * (x * x / 12)>= 1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                                                 px * px / 2 * (px * px / 12)") (("1" (CASE "1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                                                      px * px / 2 * (px * px / 12) -eps>0") (("1" (EXPAND "px") (("1" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "px") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (EXPAND "px") (("2" (HIDE (-1 -3 2 3)) (("2" (TYPEPRED (X)) (("2" (HIDE -1) (("2" (METIT *) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "tan_fast_approx") (("3" (EXPAND "tan_pos") (("3" (LIFT-IF 1) (("3" (SPLIT 1) (("1" (GROUND) (("1" (HIDE (-3 -4)) (("1" (EXPAND "tan_pos_inst1") (("1" (INST -3 "1 - x * x / 2" "1 + x * x * x * x / 24 - x * x / 2") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (FLATTEN) (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "0") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (FLATTEN) (("1" (EXPAND "cos_term") (("1" (EXPAND "sigma") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (MOVE-TERMS 1 L 2) (("2" (MOVE-TERMS 1 L 2) (("2" (HIDE 2) (("2" (TYPEPRED (X)) (("2" (CASE "FORALL (a,b:posreal): a<=b IMPLIES a*a<=b*b") (("1" (INST -1 "x" "13/10") (("1" (GROUND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (MULT-INEQ -1 -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (EXPAND "tan_pos_fast_approx") (("2" (EXPAND "tan") (("2" (LEMMA "sin_fast_approx_bound") (("2" (NAME-REPLACE "d1" " (CL * CL * eps - CL * eps * eps) / 2 / CU ") (("2" (NAME-REPLACE "d2" " min((CL * CL * eps - CL * eps * eps) / 2 / x,1/2) ") (("2" (LEMMA "cos_fast_approx_bound") (("2" (INST -1 "x" "d2") (("1" (INST -2 "x" "d1") (("1" (CASE-REPLACE "abs(sin(x) / cos(x) - sin_fast_approx(x, d1) / cos_fast_approx(x, d2)) = abs((sin(x)*cos_fast_approx(x,d2) - sin_fast_approx(x,d1)*cos(x))/(cos(x)*cos_fast_approx(x,d2)))") (("1" (CASE "EXISTS ((D2: real | abs(D2)<=d2)): cos_fast_approx(x,d2) = cos(x)+D2") (("1" (SKEEP -1) (("1" (REPLACES -1) (("1" (CASE "EXISTS ((D1: real | abs(D1)<=d1)): sin_fast_approx(x,d1) = sin(x)+D1") (("1" (SKEEP) (("1" (REPLACES -1) (("1" (SIMPLIFY 1) (("1" (LEMMA "triangle") (("1" (INST -1 "sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2)" " (- cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2)") (("1" (CASE-REPLACE "sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2) +
           (-cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2) = (sin(x) * D2 - cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2)") (("1" (HIDE -1) (("1" (HIDE -2) (("1" (CASE "abs(sin(x) * D2 / (cos(x) * cos(x) + cos(x) * D2))<=eps/2") (("1" (CASE "abs((-cos(x) * D1) / (cos(x) * cos(x) + cos(x) * D2))<=eps/2") (("1" (GROUND) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (CASE "d2<=eps") (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "sin_fast_approx(x,d1)-sin(x)") (("1" (GROUND) NIL NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (GRIND :EXCLUDE ("sin_fast_approx" "sin")) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (-1 -3 -4 2)) (("2" (INST 1 "cos_fast_approx(x,d2)-cos(x)") (("1" (GROUND) NIL NIL) ("2" (GROUND) (("2" (EXPAND "abs") (("2" (GRIND :EXCLUDE ("cos_fast_approx" "cos")) NIL NIL)) NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL) ("3" (CASE "cos_fast_approx(x,d2)/=0") (("1" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (HIDE -6) (("1" (INST -1 "x") (("1" (FLATTEN) (("1" (HIDE -2) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cos_fast_approx") (("2" (GROUND) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("4" (GROUND) NIL NIL) ("5" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "d1") (("2" (TYPEPRED "CL") (("2" (TYPEPRED "CU") (("2" (CASE "CL>0") (("1" (TYPEPRED (EPS)) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -7) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "d2") (("2" (EXPAND "min") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (TYPEPRED "CL") (("2" (CASE "CL>0") (("1" (TYPEPRED (EPS)) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -6) (("1" (SPLIT 2) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "abs") (("3" (GROUND) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (INST -1 "x") (("1" (EXPAND "Tan?") (("1" (FLATTEN) (("1" (HIDE -4) (("1" (HIDE -2) (("1" (GROUND) (("1" (SKEEP -1) (("1" (CASE "i<0") (("1" (GROUND) (("1" (TYPEPRED (X)) (("1" (GROUND) (("1" (REPLACE -4) (("1" (GROUND) (("1" (CROSS-MULT) (("1" (MOVE-TERMS -2 L 2) (("1" (SIMPLIFY) (("1" (CANCEL-BY -2 "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (TYPEPRED (X)) (("2" (REPLACES -3) (("2" (GROUND) (("2" (MOVE-TERMS -3 R 1) (("2" (SIMPLIFY) (("2" (CANCEL-BY -4 "pi") (("2" (FLIP-INEQ 2) (("2" (CASE "pi>=pi") (("1" (MULT-INEQ -2 -1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|tan_fast_approx_bound-1| |nil| 3634405909 ("" (CASE "FORALL (x: posreal, eps: posreal):
                                    (x <= 1.3 AND eps <= 10 ^ -1) OR
                                     (x <= 3.139 / 2 AND eps <= 10 ^ -4)
                                     IMPLIES abs(tan(x) - tan_fast_approx(x, eps)) <= eps") (("1" (SKEEP) (("1" (CASE-REPLACE "x=0") (("1" (REWRITE "tan_0") (("1" (EXPAND "tan_fast_approx") (("1" (EXPAND "abs") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "x<0") (("1" (LEMMA "tan_neg") (("1" (INST -1 "x") (("1" (CASE "abs(tan(x)-tan_fast_approx(x,eps)) = abs(-tan(x)+tan_fast_approx(x, eps))") (("1" (REPLACES -1) (("1" (REPLACES -1 :DIR RL) (("1" (EXPAND "tan_fast_approx") (("1" (LIFT-IF 2) (("1" (SPLIT 2) (("1" (FLATTEN) NIL NIL) ("2" (FLATTEN) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (INST -2 "-x" "eps") (("1" (EXPAND "abs" -3) (("1" (LIFT-IF -3) (("1" (SPLIT -3) (("1" (FLATTEN) (("1" (GROUND) NIL NIL)) NIL) ("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "abs") (("2" (GROUND) (("2" (LIFT-IF 1) (("2" (GROUND) (("2" (LIFT-IF 2) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "x" "eps") (("1" (EXPAND "abs" -2) (("1" (LIFT-IF -2) (("1" (SPLIT -2) (("1" (GROUND) NIL NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (CASE " FORALL ((CL: real | CL<=cos(x) AND CL-eps>0), (CU: real | CU>=cos(x))):
                                abs(tan(x)-tan_pos_fast_approx(x,eps,CL, CU))<=eps") (("1" (SPLASH -2) (("1" (GROUND) NIL NIL) ("2" (EXPAND "tan_fast_approx") (("2" (EXPAND "tan_pos") (("2" (LIFT-IF 2) (("2" (SPLIT 2) (("1" (FLATTEN) (("1" (HIDE (-5 1)) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (SPLIT 2) (("1" (FLATTEN 1) (("1" (HIDE (-3 2 3)) (("1" (EXPAND "tan_pos_inst2") (("1" (INST -3 "1 - x * x / 2 -
                                    x * x / 2 * (x * x / 12) * (x * x / 30)
                                    + x * x / 2 * (x * x / 12)" " 1 + x ^ 8 / 40320 - x * x / 2 -
                                    x * x / 2 * (x * x / 12) * (x * x / 30)
                                    + x * x / 2 * (x * x / 12)") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "2") (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "px" "3139/2000") (("2" (CASE "1 - x * x / 2 - x * x / 2 * (x * x / 12) * (x * x / 30) +
                            x * x / 2 * (x * x / 12)>= 1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                            px * px / 2 * (px * px / 12)") (("1" (CASE "1 - px * px / 2 - px * px / 2 * (px * px / 12) * (px * px / 30) +
                               px * px / 2 * (px * px / 12) -eps>0") (("1" (EXPAND "px") (("1" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "px") (("2" (GROUND) NIL NIL)) NIL)) NIL) ("2" (EXPAND "px") (("2" (HIDE (-1 -3 2 3)) (("2" (TYPEPRED (X)) (("2" (HIDE -1) (("2" (METIT *) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN 1) (("2" (HIDE-ALL-BUT (-1 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "tan_fast_approx") (("3" (EXPAND "tan_pos") (("3" (LIFT-IF 1) (("3" (SPLIT 1) (("1" (GROUND) (("1" (HIDE (-3 -4)) (("1" (EXPAND "tan_pos_inst1") (("1" (INST -3 "1 - x * x / 2" "1 + x * x * x * x / 24 - x * x / 2") (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "1") (("1" (FLATTEN) (("1" (EXPAND "cos_ub") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (EXPAND "cos_term") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT 1) (("1" (LEMMA "cos_bounds") (("1" (INST -1 "x" "0") (("1" (EXPAND "cos_lb") (("1" (EXPAND "cos_approx") (("1" (EXPAND "sigma") (("1" (EXPAND "sigma") (("1" (FLATTEN) (("1" (EXPAND "cos_term") (("1" (EXPAND "sigma") (("1" (EXPAND "^") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "expt") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (EXPAND "factorial") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (MOVE-TERMS 1 L 2) (("2" (MOVE-TERMS 1 L 2) (("2" (HIDE 2) (("2" (TYPEPRED (X)) (("2" (CASE "FORALL (a,b:posreal): a<=b IMPLIES a*a<=b*b") (("1" (INST -1 "x" "13/10") (("1" (GROUND) NIL NIL)) NIL) ("2" (SKEEP) (("2" (MULT-INEQ -1 -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (EXPAND "tan_pos_fast_approx") (("2" (EXPAND "tan") (("2" (LEMMA "sin_fast_approx_bound") (("2" (NAME-REPLACE "d1" " (CL * CL * eps - CL * eps * eps) / 2 / CU ") (("2" (NAME-REPLACE "d2" " min((CL * CL * eps - CL * eps * eps) / 2 / x,1) ") (("2" (LEMMA "cos_fast_approx_bound") (("2" (INST -1 "x" "d2") (("1" (INST -2 "x" "d1") (("1" (CASE-REPLACE "abs(sin(x) / cos(x) - sin_fast_approx(x, d1) / cos_fast_approx(x, d2)) = abs((sin(x)*cos_fast_approx(x,d2) - sin_fast_approx(x,d1)*cos(x))/(cos(x)*cos_fast_approx(x,d2)))") (("1" (POSTPONE) NIL NIL) ("2" (GROUND) NIL NIL) ("3" (CASE "cos_fast_approx(x,d2)/=0") (("1" (POSTPONE) NIL NIL) ("2" (EXPAND "cos_fast_approx") (("2" (GROUND) NIL NIL)) NIL) ("3" (GROUND) NIL NIL)) NIL) ("4" (GROUND) NIL NIL) ("5" (GROUND) NIL NIL)) NIL) ("2" (EXPAND "d1") (("2" (TYPEPRED "CL") (("2" (TYPEPRED "CU") (("2" (CASE "CL>0") (("1" (TYPEPRED (EPS)) (("1" (MULT-INEQ -1 -3) (("1" (MULT-INEQ -1 -7) (("1" (CROSS-MULT 1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "abs") (("3" (GROUND) NIL NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (CASE "x<pi/2") (("1" (LEMMA "cos_eq_0") (("1" (INST -1 "x") (("1" (EXPAND "Tan?") (("1" (FLATTEN) (("1" (HIDE -4) (("1" (HIDE -2) (("1" (GROUND) (("1" (SKEEP -1) (("1" (CASE "i<0") (("1" (GROUND) (("1" (TYPEPRED (X)) (("1" (GROUND) (("1" (REPLACE -4) (("1" (GROUND) (("1" (CROSS-MULT) (("1" (MOVE-TERMS -2 L 2) (("1" (SIMPLIFY) (("1" (CANCEL-BY -2 "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (TYPEPRED (X)) (("2" (REPLACES -3) (("2" (GROUND) (("2" (MOVE-TERMS -3 R 1) (("2" (SIMPLIFY) (("2" (CANCEL-BY -4 "pi") (("2" (FLIP-INEQ 2) (("2" (CASE "pi>=pi") (("1" (MULT-INEQ -2 -1) (("1" (GROUND) NIL NIL)) NIL) ("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pi_bounds0") (("2" (LEMMA "pi_bounds") (("2" (INST -1 "0") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)))
