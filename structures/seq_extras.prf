(|seq_extras| (|first_TCC1| 0 (|first_TCC1-1| |nil| 3385301063 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|first| SUBTYPE "0" "below[length(seq)]"))) (|last_TCC1| 0 (|last_TCC1-1| |nil| 3409227118 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|last| SUBTYPE "(number_fields.-)(seq_extras.seq`length, 1)" "below[length(seq)]"))) (|rest_TCC1| 0 (|rest_TCC1-1| |nil| 3385301063 ("" (SUBTYPE-TCC) NIL NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|rest| SUBTYPE "(number_fields.-)(seq_extras.seq`length, 1)" "nat"))) (|delete_TCC1| 0 (|delete_TCC1-1| |nil| 3388246700 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|delete| SUBTYPE "seq_extras.i" "below[length(seq)]"))) (|delete_TCC2| 0 (|delete_TCC2-1| |nil| 3388246700 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|delete| SUBTYPE "(number_fields.+)(seq_extras.i, 1)" "below[length(seq)]"))) (|insert?_TCC1| 0 (|insert?_TCC1-1| |nil| 3388317884 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) NIL (|insert?| SUBTYPE "seq_extras.i" "below[length(seq)]"))) (|insert?_TCC2| 0 (|insert?_TCC2-1| |nil| 3388317884 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|insert?| SUBTYPE "(number_fields.-)(seq_extras.i, 1)" "below[length(seq)]"))) (|add_first_TCC1| 0 (|add_first_TCC1-1| |nil| 3390053856 ("" (SUBTYPE-TCC) NIL NIL) ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) NIL (|add_first| SUBTYPE "0" "upto[length(seq)]"))) (|add_last_TCC1| 0 (|add_last_TCC1-1| |nil| 3411672012 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|add_last| SUBTYPE "length(seq_extras.seq)" "upto[length(seq)]"))) (|empty_0| 0 (|empty_0-1| |nil| 3384683401 ("" (SKEEP) (("" (GRIND) (("" (DECOMPOSE-EQUALITY) (("1" (APPLY-EXTENSIONALITY) (("1" (GRIND) NIL NIL)) NIL) ("2" (SKEEP) NIL NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|epsilon| CONST-DECL "T" |epsilons| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|empty_o_seq| 0 (|empty_o_seq-1| |nil| 3388766444 ("" (SKEEP) (("" (EXPAND "o") (("" (APPLY-EXTENSIONALITY) (("1" (HIDE 2) (("1" (EXPAND "empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (DECOMPOSE-EQUALITY) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "empty_seq") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (EXPAND "empty_seq") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((O CONST-DECL "finseq" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) SHOSTAK)) (|seq_o_empty| 0 (|seq_o_empty-1| |nil| 3394279023 ("" (SKEEP) (("" (EXPAND "o") (("" (APPLY-EXTENSIONALITY) (("1" (HIDE 2) (("1" (EXPAND "empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (DECOMPOSE-EQUALITY) (("1" (LIFT-IF) (("1" (PROP) (("1" (TYPEPRED "x!1") (("1" (EXPAND "empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (EXPAND "empty_seq") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((O CONST-DECL "finseq" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) SHOSTAK)) (|length_rest| 0 (|length_rest-1| |nil| 3388768632 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) SHOSTAK)) (|length_delete_TCC1| 0 (|length_delete_TCC1-1| |nil| 3411689891 ("" (SUBTYPE-TCC) NIL NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|length_delete| SUBTYPE "(number_fields.-)(length(seq_extras.seq), 1)" "below[length(seq)]"))) (|length_delete| 0 (|length_delete-1| |nil| 3411689938 ("" (SKOSIMP*) (("" (GRIND) NIL NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|seq_empty| 0 (|seq_empty-1| |nil| 3388767794 ("" (SKEEP) (("" (EXPAND* "o" "empty_seq") (("" (FLATTEN) (("" (DECOMPOSE-EQUALITY) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|epsilon| CONST-DECL "T" |epsilons| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)) SHOSTAK)) (|seq_first_rest| 0 (|seq_first_rest-1| |nil| 3385301064 ("" (SKEEP) (("" (EXPAND "add_first") (("" (EXPAND "insert?") (("" (DECOMPOSE-EQUALITY 2) (("1" (EXPAND "rest") (("1" (EXPAND "^") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "min") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "first") (("1" (REPLACES -1) (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (GRIND) NIL NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|add_first| CONST-DECL "finseq" |seq_extras| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (|first| CONST-DECL "T" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|seq_first_rest_1| 0 (|seq_first_rest_1-1| |nil| 3409227118 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 2) (("1" (EXPAND "o") (("1" (GRIND) NIL NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "o") (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|first| CONST-DECL "T" |seq_extras| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)) SHOSTAK)) (|add_first_empty_seq| 0 (|add_first_empty_seq-1| |nil| 3412165021 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|length_rest_0| 0 (|length_rest_0-1| |nil| 3409227389 ("" (SKEEP) (("" (PROP) (("1" (LEMMA "empty_0") (("1" (INST -1 "rest(seq)") (("1" (ASSERT) (("1" (LEMMA "seq_first_rest_1") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -1 2) (("1" (HIDE -1) (("1" (EXPAND "o") (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|seq_first_rest_1| FORMULA-DECL NIL |seq_extras| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| NIL) (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)) SHOSTAK)) (|rest_add_first| 0 (|rest_add_first-1| |nil| 3411750449 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY) (("1" (GRIND) NIL NIL) ("2" (CASE "length(seq) = 0") (("1" (REWRITE "empty_0") (("1" (GRIND) NIL NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|first_add_TCC1| 0 (|first_add_TCC1-1| |nil| 3394562155 ("" (SUBTYPE-TCC) NIL NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|first_add| SUBTYPE "seq_extras.add_first(seq_extras.x, seq_extras.seq)" "not_empty_seq"))) (|first_add| 0 (|first_add-1| |nil| 3394562155 ("" (SKEEP) (("" (EXPAND "first") (("" (EXPAND "finseq_appl") (("" (EXPAND "add_first") (("" (EXPAND "insert?") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|first| CONST-DECL "T" |seq_extras| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|nth_add_first_TCC1| 0 (|nth_add_first_TCC1-1| |nil| 3411750374 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) NIL (|nth_add_first| SUBTYPE "seq_extras.i" "below[length(add_first(x, seq))]"))) (|nth_add_first_TCC2| 0 (|nth_add_first_TCC2-1| |nil| 3411750374 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) NIL (|nth_add_first| SUBTYPE "seq_extras.i" "below[length(add_first(x, seq))]"))) (|nth_add_first_TCC3| 0 (|nth_add_first_TCC3-1| |nil| 3411750374 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|nth_add_first| SUBTYPE "(number_fields.-)(seq_extras.i, 1)" "below[length(seq)]"))) (|nth_add_first| 0 (|nth_add_first-1| |nil| 3411750375 ("" (SKOSIMP*) (("" (PROP) (("1" (REPLACES -1) (("1" (EXPAND* "finseq_appl" "add_first" "insert?") NIL NIL)) NIL) ("2" (EXPAND* "add_first" "insert?" "finseq_appl") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|first_add_last_TCC1| 0 (|first_add_last_TCC1-1| |nil| 3411672012 ("" (SUBTYPE-TCC) NIL NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|first_add_last| SUBTYPE "seq_extras.add_last(seq_extras.seq, seq_extras.x)" "not_empty_seq"))) (|first_add_last| 0 (|first_add_last-1| |nil| 3411672012 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|first| CONST-DECL "T" |seq_extras| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|rest_add_last| 0 (|rest_add_last-1| |nil| 3411672588 ("" (SKEEP) (("" (EXPAND "rest" 2 1) (("" (LIFT-IF) (("" (PROP) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 2) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "^") (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (EXPAND "add_last" 3) (("3" (EXPAND "insert?") (("3" (LIFT-IF) (("3" (PROP) (("1" (GRIND) NIL NIL) ("2" (LIFT-IF) (("2" (PROP) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|rest| CONST-DECL "finseq" |seq_extras| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (< CONST-DECL "bool" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|x| SKOLEM-CONST-DECL "T" |seq_extras| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)) SHOSTAK)) (|add_first_last_commute| 0 (|add_first_last_commute-1| |nil| 3412162557 ("" (SKEEP) (("" (CASE "length(seq) = 0") (("1" (DECOMPOSE-EQUALITY 1) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 2) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND* "add_first" "add_last" "insert?" "finseq_appl") (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|add_first_last| 0 (|add_first_last-2| "" 3790088073 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 2) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND* "add_first" "first" "add_last" "rest" "insert?" "finseq_appl") (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|first| CONST-DECL "T" |seq_extras| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)) SHOSTAK) (|add_first_last-1| |nil| 3411673505 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 2) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND* "add_first" "first" "add_last" "rest" "insert?" "finseq_appl") (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK)) (|add_last_delete| 0 (|add_last_delete-1| |nil| 3411684834 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 2) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|last| CONST-DECL "T" |seq_extras| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (< CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK)) (|add_last_delete_is_o| 0 (|add_last_delete_is_o-1| |nil| 3495983888 ("" (SKOSIMP*) (("" (GRIND) NIL NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|last| CONST-DECL "T" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) SHOSTAK)) (|nth_add_last_TCC1| 0 (|nth_add_last_TCC1-1| |nil| 3411679457 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) NIL (|nth_add_last| SUBTYPE "seq_extras.i" "below[length(add_last(seq, x))]"))) (|nth_add_last_TCC2| 0 (|nth_add_last_TCC2-1| |nil| 3411679457 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) NIL (|nth_add_last| SUBTYPE "seq_extras.i" "below[length(add_last(seq, x))]"))) (|nth_add_last_TCC3| 0 (|nth_add_last_TCC3-1| |nil| 3411679457 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|nth_add_last| SUBTYPE "seq_extras.i" "below[length(seq)]"))) (|nth_add_last| 0 (|nth_add_last-1| |nil| 3411679473 ("" (SKOSIMP*) (("" (PROP) (("1" (REPLACES -1) (("1" (EXPAND* "finseq_appl" "add_last" "insert?") NIL NIL)) NIL) ("2" (EXPAND* "add_last" "insert?" "finseq_appl") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|add_first_compo| 0 (|add_first_compo-1| |nil| 3411750758 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|first_compo_TCC1| 0 (|first_compo_TCC1-1| |nil| 3394276097 ("" (SUBTYPE-TCC) NIL NIL) ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL)) NIL (|first_compo| SUBTYPE "finite_sequences[seq_extras.T].o(seq_extras.seq1, seq_extras.seq2)" "not_empty_seq"))) (|first_compo| 0 (|first_compo-1| |nil| 3394276097 ("" (SKEEP) (("" (EXPAND "first") (("" (EXPAND "o") (("" (EXPAND "finseq_appl") (("" (LIFT-IF) (("" (PROP) (("" (HIDE 2) (("" (TYPEPRED "seq1`length") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|first| CONST-DECL "T" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL)) SHOSTAK)) (|rest_compo| 0 (|rest_compo-1| |nil| 3394277575 ("" (SKEEP) (("" (LEMMA "seq_first_rest") (("" (INST -1 "seq1") (("" (ASSERT) (("" (REPLACES -1 2) (("" (REWRITE "add_first_compo") (("" (REWRITE "rest_add_first") (("" (REWRITE "rest_add_first") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|seq_first_rest| FORMULA-DECL NIL |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_first_compo| FORMULA-DECL NIL |seq_extras| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| NIL) (|first| CONST-DECL "T" |seq_extras| NIL) (|rest_add_first| FORMULA-DECL NIL |seq_extras| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK)) (|rest_pos_TCC1| 0 (|rest_pos_TCC1-1| |nil| 3409318490 ("" (SKOSIMP*) (("" (GRIND) NIL NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) NIL (|rest_pos| SUBTYPE "(number_fields.-)(length(seq_extras.seq), 1)" "nat"))) (|rest_pos_TCC2| 0 (|rest_pos_TCC2-1| |nil| 3411689660 ("" (SUBTYPE-TCC) NIL NIL) ((/= CONST-DECL "boolean" |notequal| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|rest_pos| SUBTYPE "(number_fields.+)(seq_extras.i, 1)" "below[length(seq)]"))) (|rest_pos_TCC3| 0 (|rest_pos_TCC3-1| |nil| 3412162502 ("" (SUBTYPE-TCC) NIL NIL) ((/= CONST-DECL "boolean" |notequal| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|rest_pos| SUBTYPE "seq_extras.i" "below[length(rest(seq))]"))) (|rest_pos| 0 (|rest_pos-1| |nil| 3409318604 ("" (SKOSIMP*) (("" (GRIND) NIL NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|delete_is_empty_TCC1| 0 (|delete_is_empty_TCC1-1| |nil| 3412164710 ("" (SUBTYPE-TCC) NIL NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|delete_is_empty| SUBTYPE "0" "below[length(seq)]"))) (|delete_is_empty| 0 (|delete_is_empty-1| |nil| 3412164710 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (TYPEPRED "x!1") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK)) (|delete_pos_TCC1| 0 (|delete_pos_TCC1-1| |nil| 3411688998 ("" (SUBTYPE-TCC) NIL NIL) ((/= CONST-DECL "boolean" |notequal| NIL)) NIL (|delete_pos| SUBTYPE "seq_extras.i" "below[length(seq)]"))) (|delete_pos_TCC2| 0 (|delete_pos_TCC2-1| |nil| 3411688998 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|delete_pos| SUBTYPE "seq_extras.i" "below[length(delete(seq, length(seq) - 1))]"))) (|delete_pos| 0 (|delete_pos-1| |nil| 3411688999 ("" (SKOSIMP*) (("" (EXPAND "delete") (("" (EXPAND "finseq_appl") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|delete| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|insert_delete_TCC1| 0 (|insert_delete_TCC1-1| |nil| 3390053856 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|insert_delete| SUBTYPE "seq_extras.n" "upto[length(delete(seq, n))]"))) (|insert_delete| 0 (|insert_delete-1| |nil| 3388246701 ("" (SKEEP) (("" (SKOLEM 2 ("n")) (("" (APPLY-EXTENSIONALITY 2) (("1" (HIDE 2) (("1" (EXPAND "delete") (("1" (EXPAND "insert?") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (DECOMPOSE-EQUALITY) (("2" (EXPAND "insert?") (("2" (LIFT-IF) (("2" (SPLIT) (("1" (FLATTEN) (("1" (EXPAND "finseq_appl") (("1" (EXPAND "delete") (("1" (ASSERT) (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (PROP) (("1" (EXPAND "finseq_appl") (("1" (REPLACES -1) NIL NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|upto| NONEMPTY-TYPE-EQ-DECL NIL |nat_types| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (< CONST-DECL "bool" |reals| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK)) (|add_first_delete_TCC1| 0 (|add_first_delete_TCC1-1| |nil| 3412187759 ("" (SUBTYPE-TCC) NIL NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL)) NIL (|add_first_delete| SUBTYPE "0" "below[length(seq)]"))) (|add_first_delete| 0 (|add_first_delete-1| |nil| 3412187760 ("" (SKOSIMP*) (("" (EXPAND "finseq_appl") (("" (CASE "length(rest(delete(seq!1, n!1))) = 0") (("1" (LEMMA "length_rest_0") (("1" (INST?) (("1" (PROP) (("1" (HIDE -1) (("1" (HIDE 1) (("1" (REWRITE "empty_0") (("1" (REPLACES -2) (("1" (REWRITE "add_first_empty_seq") (("1" (TYPEPRED "n!1") (("1" (DECOMPOSE-EQUALITY 3) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (TYPEPRED "x!1") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (1 4)) (("2" (TYPEPRED "n!1") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 4) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (CASE "x!1 = 0") (("1" (REPLACES -1) (("1" (EXPAND "delete" 1 2) (("1" (LEMMA "nth_add_first") (("1" (INST?) (("1" (INST -1 "0") (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "x!1 < n!1") (("1" (EXPAND "delete" 2 2) (("1" (ASSERT) (("1" (LEMMA "nth_add_first") (("1" (INST?) (("1" (INST -1 "x!1") (("1" (ASSERT) (("1" (EXPAND "finseq_appl") (("1" (REPLACES -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "x!1") (("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "delete" 3 2) (("2" (ASSERT) (("2" (LEMMA "nth_add_first") (("2" (INST?) (("2" (INST -1 "x!1") (("1" (ASSERT) (("1" (EXPAND "finseq_appl") (("1" (REPLACES -1) (("1" (LEMMA "rest_pos") (("1" (INST?) (("1" (PROP) (("1" (INST -1 "x!1 - 1") (("1" (EXPAND "finseq_appl") (("1" (REPLACE -1 3 RL) (("1" (HIDE -1) (("1" (EXPAND* "delete" "finseq_appl") NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "x!1") (("2" (HIDE 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "x!1") (("2" (HIDE 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nth_add_first| FORMULA-DECL NIL |seq_extras| NIL) (|rest_pos| FORMULA-DECL NIL |seq_extras| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|x!1| SKOLEM-CONST-DECL "below[add_first(seq!1`seq(0), rest(delete(seq!1, n!1)))`length]" |seq_extras| NIL) (|n!1| SKOLEM-CONST-DECL "below[seq!1`length]" |seq_extras| NIL) (|seq!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|length_rest_0| FORMULA-DECL NIL |seq_extras| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|add_first_empty_seq| FORMULA-DECL NIL |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|delete_rest_TCC1| 0 (|delete_rest_TCC1-1| |nil| 3412191966 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|delete_rest| SUBTYPE "0" "below[length(seq)]"))) (|delete_rest_TCC2| 0 (|delete_rest_TCC2-1| |nil| 3412191966 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|delete_rest| SUBTYPE "(number_fields.-)(seq_extras.n, 1)" "below[length(rest(seq))]"))) (|delete_rest| 0 (|delete_rest-1| |nil| 3412191966 ("" (SKOLEM 1 ("seq" "_")) (("" (CASE "seq`length = 0") (("1" (GRIND) NIL NIL) ("2" (SKOLEM 2 "n") (("2" (PROP) (("1" (DECOMPOSE-EQUALITY 1) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (CASE "length(rest(seq)) = 0") (("1" (LEMMA "length_rest_0") (("1" (INST?) (("1" (ASSERT) (("1" (REWRITE "empty_0") (("1" (REPLACES -2) (("1" (EXPAND "delete") (("1" (EXPAND "finseq_appl") (("1" (TYPEPRED "x!1") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "rest_pos") (("2" (INST?) (("2" (ASSERT) (("2" (INST -1 "x!1") (("1" (EXPAND* "delete" "finseq_appl") NIL NIL) ("2" (TYPEPRED "x!1") (("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 2) (("1" (GRIND) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "delete" 1 1) (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (CASE "length(rest(delete(seq, n))) = 0") (("1" (LEMMA "length_rest_0") (("1" (INST?) (("1" (PROP) (("1" (HIDE (-1 1)) (("1" (REWRITE "empty_0") (("1" (REPLACES -2) (("1" (EXPAND "finseq_appl") (("1" (TYPEPRED "x!1") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE (1 4)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (LEMMA "rest_pos") (("2" (INST?) (("2" (ASSERT) (("2" (INST -1 "x!1") (("1" (EXPAND "finseq_appl") (("1" (REPLACE -1 3 RL) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "x!1") (("2" (HIDE 4) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|rest| CONST-DECL "finseq" |seq_extras| NIL) (|rest_pos| FORMULA-DECL NIL |seq_extras| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|x!1| SKOLEM-CONST-DECL "below[delete(seq, 0)`length]" |seq_extras| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|length_rest_0| FORMULA-DECL NIL |seq_extras| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|x!1| SKOLEM-CONST-DECL "below[delete(rest(seq), n - 1)`length]" |seq_extras| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|n| SKOLEM-CONST-DECL "below[seq`length]" |seq_extras| NIL)) SHOSTAK)) (|first_equal| 0 (|first_equal-1| |nil| 3388765339 ("" (SKEEP) (("" (EXPAND "add_first") (("" (EXPAND "insert?") (("" (PROP) (("1" (DECOMPOSE-EQUALITY) (("1" (INST -1 "0") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1) (("2" (DECOMPOSE-EQUALITY) (("2" (DECOMPOSE-EQUALITY -2) (("2" (INST -1 "x!1 + 1") (("2" (ASSERT) (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|seq1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|nth_x_TCC1| 0 (|nth_x_TCC1-1| |nil| 3390058268 ("" (SUBTYPE-TCC) NIL NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|replace| CONST-DECL "finseq" |seq_extras| NIL)) NIL (|nth_x| SUBTYPE "seq_extras.n" "below[length(replace(x, seq, n))]"))) (|nth_x| 0 (|nth_x-1| |nil| 3390058360 ("" (SKEEP) (("" (EXPAND "finseq_appl") (("" (EXPAND "replace") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|replace| CONST-DECL "finseq" |seq_extras| NIL)) SHOSTAK)) (|replace_nth| 0 (|replace_nth-1| |nil| 3394563383 ("" (SKEEP) (("" (EXPAND "replace") (("" (DECOMPOSE-EQUALITY) (("" (DECOMPOSE-EQUALITY) (("" (LIFT-IF) (("" (PROP) (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL) ("2" (REPLACES -1) (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (EXPAND "finseq_appl") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|replace| CONST-DECL "finseq" |seq_extras| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)) SHOSTAK)) (|replace_n2| 0 (|replace_n2-1| |nil| 3394285422 ("" (SKEEP) (("" (SKEEP 2) (("" (DECOMPOSE-EQUALITY 2) (("1" (EXPAND "replace") (("1" (PROPAX) NIL NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "replace") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "finseq_appl") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|replace| CONST-DECL "finseq" |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK)) (|delete_equivalent| 0 (|delete_equivalent-1| |nil| 3414523883 ("" (SKOSIMP*) (("" (EXPAND "finseq_appl") (("" (EXPAND "equivalent") (("" (PROP) (("1" (EXPAND "delete") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (EXPAND "different_elements") (("2" (SKOSIMP*) (("2" (EXPAND "finseq_appl") (("2" (EXPAND "delete") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "finseq_appl") (("1" (LIFT-IF) (("1" (PROP) (("1" (INST -4 "i!2" "j!2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -3 "i!2" "j!2 + 1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "j!2") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (LIFT-IF) (("2" (PROP) (("1" (INST -3 "1 + i!2" "j!2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -2 "1 + i!2" "1 + j!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-3 1)) (("3" (EXPAND "different_elements") (("3" (SKOSIMP*) (("3" (EXPAND "finseq_appl") (("3" (EXPAND "delete") (("3" (LIFT-IF) (("3" (EXPAND "finseq_appl") (("3" (PROP) (("1" (LIFT-IF) (("1" (PROP) (("1" (INST -4 "i!2" "j!2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -3 "i!2" "j!2 + 1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "j!2") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LIFT-IF) (("2" (PROP) (("1" (INST -3 "1 + i!2" "j!2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -2 "1 + i!2" "1 + j!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKOSIMP*) (("4" (EXPAND "finseq_appl") (("4" (EXPAND "delete") (("4" (EXPAND "finseq_appl") (("4" (CASE "i!2 < i!1") (("1" (INST -5 "i!2") (("1" (SKOSIMP*) (("1" (TYPEPRED "j!2") (("1" (CASE-REPLACE "j!1 = j!2") (("1" (REPLACE -7 -8 RL) (("1" (HIDE-ALL-BUT (-3 -5 -8)) (("1" (EXPAND "different_elements") (("1" (INST -2 "i!1" "i!2") (("1" (ASSERT) (("1" (EXPAND "finseq_appl") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "j!2 < j!1") (("1" (INST 2 "j!2") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "j!1") (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (INST 3 "j!2 -1") (("1" (ASSERT) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL) ("2" (INST -4 "1 + i!2") (("1" (SKOSIMP*) (("1" (TYPEPRED "j!2") (("1" (CASE-REPLACE "j!1 = j!2") (("1" (REPLACE -6 -7 RL) (("1" (HIDE-ALL-BUT (-4 -7 1)) (("1" (EXPAND "different_elements") (("1" (INST -1 "i!1" "1 + i!2") (("1" (ASSERT) (("1" (EXPAND "finseq_appl") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "j!2 < j!1") (("1" (INST 3 "j!2") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "j!1") (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (INST 4 "j!2 -1") (("1" (ASSERT) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) (("2" (TYPEPRED "i!2") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|delete| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|different_elements| CONST-DECL "bool" |seq_extras| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|seq1!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|i!1| SKOLEM-CONST-DECL "below[seq1!1`length]" |seq_extras| NIL) (|j!2| SKOLEM-CONST-DECL "below[delete(seq1!1, i!1)`length]" |seq_extras| NIL) (|seq2!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|j!1| SKOLEM-CONST-DECL "below[seq2!1`length]" |seq_extras| NIL) (|j!2| SKOLEM-CONST-DECL "below[delete(seq2!1, j!1)`length]" |seq_extras| NIL) (|j!2| SKOLEM-CONST-DECL "below[seq2!1`length]" |seq_extras| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|i!2| SKOLEM-CONST-DECL "below[delete(seq1!1, i!1)`length]" |seq_extras| NIL) (|j!2| SKOLEM-CONST-DECL "below[seq2!1`length]" |seq_extras| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|equivalent| CONST-DECL "bool" |seq_extras| NIL)) SHOSTAK)) (|equal_prefix| 0 (|equal_prefix-1| |nil| 3510925510 ("" (SKOSIMP) (("" (CASE "seq!1 = empty_seq") (("1" (REPLACES -1) (("1" (REWRITE EMPTY_O_SEQ) (("1" (REWRITE EMPTY_O_SEQ) NIL NIL)) NIL)) NIL) ("2" (EXPAND O) (("2" (FLATTEN) (("2" (DECOMPOSE-EQUALITY -2) (("2" (DECOMPOSE-EQUALITY 2) (("2" (DECOMPOSE-EQUALITY 1) (("2" (INST -1 "x!1 + seq!1`length") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|empty_o_seq| FORMULA-DECL NIL |seq_extras| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL)) SHOSTAK)) (|o_equals_o| 0 (|o_equals_o-2| "" 3882152608 ("" (SKOSIMP) (("" (EXPAND O) (("" (FLATTEN) (("" (DECOMPOSE-EQUALITY -2) (("" (DECOMPOSE-EQUALITY 1) (("" (DECOMPOSE-EQUALITY 1) (("" (INST -1 "x!1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|o_equals_o-1| |nil| 3510938409 ("" (SKOSIMP) (("" (EXPAND O) (("" (FLATTEN) (("" (DECOMPOSE-EQUALITY -2) (("" (DECOMPOSE-EQUALITY 1) (("" (DECOMPOSE-EQUALITY 1) (("" (INST -1 X!1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((O CONST-DECL "finseq" |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)) SHOSTAK)) (|o_length_o| 0 (|o_length_o-2| "" 3882154190 ("" (SKOSIMP) (("" (INST 1 "(# length := length(seq3!1) - length(seq1!1),
                               seq := (LAMBDA (i : below[length(seq3!1) - length(seq1!1)]):
                                        seq2!1(i)) #)") (("1" (EXPAND* FINSEQ_APPL O) (("1" (FLATTEN) (("1" (DECOMPOSE-EQUALITY -2) (("1" (DECOMPOSE-EQUALITY 1) (("1" (DECOMPOSE-EQUALITY 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (INST -2 "x!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -1 "x!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|o_length_o-1| |nil| 3510942202 ("" (SKOSIMP) (("" (INST 1 "(# length := length(seq3!1) - length(seq1!1),
                               seq := (LAMBDA (i : below[length(seq3!1) - length(seq1!1)]):
                                        seq2!1(i)) #)") (("1" (EXPAND* FINSEQ_APPL O) (("1" (FLATTEN) (("1" (DECOMPOSE-EQUALITY -2) (("1" (DECOMPOSE-EQUALITY 1) (("1" (DECOMPOSE-EQUALITY 1) (("1" (LIFT-IF) (("1" (PROP) (("1" (INST -2 X!1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -1 X!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("2" (HIDE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)) NIL)) NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|seq3!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|seq1!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (< CONST-DECL "bool" |reals| NIL) (|seq2!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL)) SHOSTAK)) (|add_last_is_o| 0 (|add_last_is_o-2| "" 3882154378 ("" (SKOSIMP) (("" (EXPAND O) (("" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND* ADD_LAST INSERT? "#") NIL NIL) ("2" (DECOMPOSE-EQUALITY) (("1" (TYPEPRED "x!2") (("1" (EXPAND ADD_LAST -1) (("1" (EXPAND INSERT? -1) (("1" (LEMMA NTH_ADD_LAST) (("1" (EXPAND FINSEQ_APPL) (("1" (LIFT-IF) (("1" (PROP) (("1" (INST -2 "seq!1" "x!1" "x!2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -1 "seq!1" "x!1" "x!2") (("2" (ASSERT) (("2" (EXPAND "#" 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (EXPAND* ADD_LAST INSERT? "#") NIL NIL)) NIL) ("3" (SKOSIMP) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|add_last_is_o-1| |nil| 3514023607 ("" (SKOSIMP) (("" (EXPAND O) (("" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND* ADD_LAST INSERT? "#") NIL NIL) ("2" (DECOMPOSE-EQUALITY) (("1" (TYPEPRED X!2) (("1" (EXPAND ADD_LAST -1) (("1" (EXPAND INSERT? -1) (("1" (LEMMA NTH_ADD_LAST) (("1" (EXPAND FINSEQ_APPL) (("1" (LIFT-IF) (("1" (PROP) (("1" (INST -2 SEQ!1 X!1 X!2) (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST -1 SEQ!1 X!1 X!2) (("2" (ASSERT) (("2" (EXPAND "#" 2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (EXPAND* ADD_LAST INSERT? "#") NIL NIL)) NIL) ("3" (SKOSIMP) (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((O CONST-DECL "finseq" |finite_sequences| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nth_add_last| FORMULA-DECL NIL |seq_extras| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|x!2| SKOLEM-CONST-DECL "below[add_last(seq!1, x!1)`length]" |seq_extras| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| NIL) (|x!1| SKOLEM-CONST-DECL "T" |seq_extras| NIL) (|seq!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|add_last| CONST-DECL "finseq" |seq_extras| NIL)) SHOSTAK)) (|add_first_is_o| 0 (|add_first_is_o-1| |nil| 3514294413 ("" (SKOSIMP) (("" (EXPAND* "#" O ADD_FIRST INSERT? FINSEQ_APPL) (("" (DECOMPOSE-EQUALITY) (("1" (LIFT-IF) (("1" (GROUND) NIL NIL)) NIL) ("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL) ("3" (SKOSIMP) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|seq!1| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK)) (|caret_o_TCC1| 0 (|caret_o_TCC1-1| |nil| 3660503599 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|caret_o| SUBTYPE "(number_fields.-)(length(seq_extras.seq), 1)" "nat"))) (|caret_o| 0 (|caret_o-1| |nil| 3660503672 ("" (SKEEP :|preds?| T) (("" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "o ") (("1" (EXPAND "^") (("1" (EXPAND "min") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "o ") (("2" (LIFT-IF 1) (("2" (SPLIT 1) (("1" (EXPAND "^") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "^") (("2" (EXPAND "min") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|seq| SKOLEM-CONST-DECL "finseq[T]" |seq_extras| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nat_min| APPLICATION-JUDGEMENT "{k: nat | k <= i AND k <= j}" |real_defs| NIL) (< CONST-DECL "bool" |reals| NIL)) NIL)) (|caret_o_caret| 0 (|caret_o_caret-2| "" 3882154444 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "^") (("1" (EXPAND "min") (("1" (EXPAND "o") (("1" (LIFT-IF 1) (("1" (EXPAND "empty_seq") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "^") (("2" (EXPAND "min") (("2" (EXPAND "o") (("2" (LIFT-IF 1) (("2" (GROUND) (("1" (CASE "i=n") (("1" (TYPEPRED ("x!1")) (("1" (EXPAND "^") (("1" (EXPAND "min") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (TYPEPRED ("x!1")) (("2" (EXPAND "^") (("2" (EXPAND "min") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|caret_o_caret-1| |nil| 3660503717 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "^") (("1" (EXPAND "min") (("1" (EXPAND "o") (("1" (LIFT-IF 1) (("1" (EXPAND "empty_seq") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (EXPAND "^") (("2" (EXPAND "min") (("2" (EXPAND "o") (("2" (LIFT-IF 1) (("2" (GROUND) (("1" (CASE "i=n") (("1" (TYPEPRED (X!1)) (("1" (EXPAND "^") (("1" (EXPAND "min") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (TYPEPRED (X!1)) (("2" (EXPAND "^") (("2" (EXPAND "min") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (T FORMAL-TYPE-DECL NIL |seq_extras| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (< CONST-DECL "bool" |reals| NIL)) NIL)))
