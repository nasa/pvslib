(|linear_ode_1D|
 (|od_ln_TCC1| 0
  (|od_ln_TCC1-1| |nil| 3867520702 ("" (SKEEP*) (("" (GRIND) NIL NIL)) NIL)
   ((|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL)
   NIL
   (|od_ln| SUBTYPE
    "(matrices.+)((: number_fields.*(linear_ode_1D.af(linear_ode_1D.t), list_adt[real].car(linear_ode_1D.v)) :), (: linear_ode_1D.bf(linear_ode_1D.t) :))"
    "VectorN(1)")))
 (|od_ln_TCC2| 0
  (|od_ln_TCC2-1| |nil| 3867528905 ("" (SKEEP) (("" (GRIND) NIL NIL)) NIL)
   ((|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL)
   NIL
   (|od_ln| SUBTYPE
    "(matrices.+)((: number_fields.*(linear_ode_1D.af(linear_ode_1D.t), list_adt[real].car(linear_ode_1D.v)) :), (: linear_ode_1D.bf(linear_ode_1D.t) :))"
    "VectorN(1)")))
 (|lin_lip_TCC1| 0
  (|lin_lip_TCC1-1| |nil| 3867520702 ("" (ASSUMING-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) NIL NIL
    (< CONST-DECL "bool" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) NIL (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    NIL NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL NIL
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL))
   NIL
   (|lin_lip| ASSUMING "ODE_Lipschitz_def[linear_ode_1D.d].ODE_Lipschitz_def"
    "non_empty: ASSUMPTION sets[real].nonempty?(ODE_Lipschitz_def.d)")))
 (|lin_lip_TCC2| 0
  (|lin_lip_TCC2-1| |nil| 3867520702
   ("" (SKEEP) (("" (LEMMA "ci_connected") (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|ci_connected| FORMULA-DECL NIL |interval_def| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) NIL)
   NIL
   (|lin_lip| ASSUMING "ODE_Lipschitz_def[linear_ode_1D.d].ODE_Lipschitz_def"
    "connected: ASSUMPTION deriv_domain_def[(ODE_Lipschitz_def.d)].connected?")))
 (|lin_lip_TCC3| 0
  (|lin_lip_TCC3-1| |nil| 3867520702
   ("" (SKEEP) (("" (LEMMA "ci_not_one_element") (("" (INST?) NIL NIL)) NIL))
    NIL)
   ((|ci_not_one_element| FORMULA-DECL NIL |interval_def| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) NIL)
   NIL
   (|lin_lip| ASSUMING "ODE_Lipschitz_def[linear_ode_1D.d].ODE_Lipschitz_def"
    "not_one_element: ASSUMPTION deriv_domain_def[(ODE_Lipschitz_def.d)].not_one_element?")))
 (|lin_lip| 0
  (|lin_lip-1| |nil| 3867520780
   ("" (SKEEP*)
    (("" (LEMMA "Lip_norm_od_f[(d)]")
      (("" (INST?)
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (EXPAND "Lip_d_E?" 1)
              (("" (TYPEPRED "af" "bf")
                (("" (INST 1 "norm_inf(1)")
                  (("" (LEMMA "max_in_interval[(d)]")
                    (("1" (LEMMA "min_in_interval[(d)]")
                      (("1" (TYPEPRED "d")
                        (("1" (EXPAND "closed_interval?" -1)
                          (("1" (SKEEP)
                            (("1" (INST -2 "a" "b" "af")
                              (("1" (INST -3 "a" "b" "af")
                                (("1" (ASSERT)
                                  (("1" (SKEEP*)
                                    (("1"
                                      (NAME "L" "max(abs(af(c)),abs(af(c!1)))")
                                      (("1" (INST 1 "L")
                                        (("1" (SKEEP)
                                          (("1" (EXPAND "od_ln" 1)
                                            (("1" (EXPAND "+" 1)
                                              (("1" (EXPAND "add" 1)
                                                (("1" (EXPAND "add" 1)
                                                  (("1" (EXPAND "-" 1 1)
                                                    (("1" (EXPAND "sub" 1)
                                                      (("1" (EXPAND "scal" 1)
                                                        (("1" (EXPAND "scal" 1)
                                                          (("1"
                                                            (EXPAND "add" 1)
                                                            (("1"
                                                              (EXPAND "add" 1)
                                                              (("1"
                                                                (CASE
                                                                    " norm_inf(1)(cons(af(t) * car(y1) - af(t) * car(y2), (: :))) = abs(af(t))*norm_inf(1)( (: car(y1) - car(y2):))")
                                                                (("1"
                                                                  (REPLACE -1)
                                                                  (("1"
                                                                    (CASE
                                                                        "abs(af(t))<=L")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "-" 1
                                                                         2)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "sub"
                                                                           1)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "scal"
                                                                             1)
                                                                            (("1"
                                                                              (TYPEPRED
                                                                               "y1"
                                                                               "y2")
                                                                              (("1"
                                                                                (CASE
                                                                                    "cdr(y1)=null")
                                                                                (("1"
                                                                                  (CASE
                                                                                      "cdr(y2)=null")
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "scal"
                                                                                       1)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "add"
                                                                                         1)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "add"
                                                                                           1)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (CASE
                                                                                                    "(: car(y1) - car(y2) :) = cons(car(y1) - car(y2), null)")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (REPLACE
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (MULT-BY
                                                                                                       -8
                                                                                                       " norm_inf(1)(cons(car(y1) - car(y2), null))")
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (HIDE
                                                                                     -2
                                                                                     -4
                                                                                     -6
                                                                                     -7
                                                                                     -8
                                                                                     -9
                                                                                     -10
                                                                                     -11
                                                                                     -12
                                                                                     -13
                                                                                     -14
                                                                                     -15
                                                                                     -16
                                                                                     -17
                                                                                     2)
                                                                                    (("2"
                                                                                      (GRIND)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   -1
                                                                                   -3
                                                                                   -5
                                                                                   -6
                                                                                   -7
                                                                                   -8
                                                                                   -9
                                                                                   -10
                                                                                   -11
                                                                                   -12
                                                                                   -13
                                                                                   -14
                                                                                   -15
                                                                                   -16)
                                                                                  (("2"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (INST
                                                                         -6
                                                                         "t")
                                                                        (("2"
                                                                          (INST
                                                                           -9
                                                                           "t")
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "t")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "closed_interval?"
                                                                               -4)
                                                                              (("2"
                                                                                (INST
                                                                                 -4
                                                                                 "t")
                                                                                (("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (FLATTEN)
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (GRIND)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (HIDE 2)
                                                                  (("2"
                                                                    (HIDE -9
                                                                     -10)
                                                                    (("2"
                                                                      (HIDE -4
                                                                       -8)
                                                                      (("2"
                                                                        (TYPEPRED
                                                                         "norm_inf(1)")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "norm?"
                                                                           -1)
                                                                          (("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (INST
                                                                               -2
                                                                               "(: car(y1) - car(y2) :)"
                                                                               "af(t)")
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -2
                                                                                 1
                                                                                 RL)
                                                                                (("2"
                                                                                  (GRIND)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "closed_interval?")
                                  (("2" (INST -1 "b")
                                    (("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (EXPAND "closed_interval?")
                                  (("3" (INST -1 "a") (("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (EXPAND "closed_interval?" -1)
                                  (("2" (INST -1 "b") (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (EXPAND "closed_interval?" -1)
                                (("3" (INST -1 "a") (("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (LEMMA "ci_connected")
                      (("2" (INST -1 "d")
                        (("2" (EXPAND "connected?") (("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Lip_norm_od_f| FORMULA-DECL NIL |ODE_Lipschitz_def| NIL)
    (|Lip_d_E?| CONST-DECL "bool" |ODE_Lipschitz_def| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| |mv_analysis|)
    (|norm?| CONST-DECL "bool" |norms| |mv_analysis|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|ci_connected| FORMULA-DECL NIL |interval_def| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|min_in_interval| FORMULA-DECL NIL |continuous_functions_props|
     |analysis|)
    NIL NIL (< CONST-DECL "bool" |reals| NIL) NIL
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonneg_real_max| APPLICATION-JUDGEMENT
     "{z: nonneg_real | z >= x AND z >= y}" |real_defs| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    NIL
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|) NIL
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    NIL
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| |mv_analysis|)
    (|max| DEF-DECL "real" |norms| |mv_analysis|)
    (|abs| DEF-DECL "{l: list | length(l) = length(ll)}" |norms| |mv_analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|max_in_interval| FORMULA-DECL NIL |continuous_functions_props|
     |analysis|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) NIL NIL
    (|od_f| TYPE-EQ-DECL NIL |ODE_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|lin_cont_d| 0
  (|lin_cont_d-1| |nil| 3867521723
   ("" (SKEEP*)
    (("" (EXPAND "cont_d?" 1)
      (("" (SKEEP)
        (("" (LEMMA "cont_lift")
          (("" (INST -1 "d" "_")
            (("" (ASSERT)
              (("" (EXPAND "od_ln" 1)
                (("" (INST -1 "LAMBDA(t:(d)): af(t)*car(y1)+bf(t)")
                  (("" (FLATTEN)
                    (("" (HIDE -2)
                      (("" (SPLIT -1)
                        (("1"
                          (CASE "(LAMBDA (v: {vv: VectorN(1) | d(car(vv))}):
               (: af(car(v)) * car(y1) + bf(car(v)) :)) = (LAMBDA (x: {x: VectorN(1) | d(car(x))}):
             (: af(car(x)) * car(y1) :) + (: bf(car(x)) :))")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE 2)
                            (("2" (DECOMPOSE-EQUALITY 1)
                              (("1" (ASSERT)
                                (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (SKEEP)
                                  (("2" (ASSERT)
                                    (("2" (HIDE -1)
                                      (("2" (EXPAND "+" 1)
                                        (("2" (EXPAND "add" 1)
                                          (("2" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (TYPEPRED "af" "bf")
                            (("2" (LEMMA "sum_cont_fun[(d)]")
                              (("2" (INST -1 "car(y1)*af" "bf")
                                (("2" (SPLIT -1)
                                  (("1" (ASSERT)
                                    (("1" (HIDE -2 -3) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (LEMMA "scal_cont_fun[(d)]")
                                      (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("3" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cont_d?| CONST-DECL "bool" |ODE_continuous_def| NIL)
    (|cont_lift| FORMULA-DECL NIL |continuity_multivar| |mv_analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|sum_cont_fun| FORMULA-DECL NIL |continuous_functions| |analysis|) NIL NIL
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|sum_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun"
     |continuous_functions| |analysis|)
    (|scal_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun"
     |continuous_functions| |analysis|)
    (|scal_cont_fun| FORMULA-DECL NIL |continuous_functions| |analysis|) NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    NIL NIL NIL
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    NIL (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) NIL
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|lin_cont_d_hp_TCC1| 0
  (|lin_cont_d_hp_TCC1-1| |nil| 3867528905
   ("" (SKEEP) (("" (LEMMA "hp_ne") (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|hp_ne| FORMULA-DECL NIL |interval_def| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|lin_cont_d_hp| ASSUMING
    "ODE_continuous_def[(interval_def.hp(linear_ode_1D.aa))].ODE_continuous_def"
    "non_empty: ASSUMPTION sets[real].nonempty?(ODE_continuous_def.d)")))
 (|lin_cont_d_hp_TCC2| 0
  (|lin_cont_d_hp_TCC2-1| |nil| 3867528905 ("" (ASSUMING-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) NIL NIL
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   NIL
   (|lin_cont_d_hp| ASSUMING
    "ODE_continuous_def[(interval_def.hp(linear_ode_1D.aa))].ODE_continuous_def"
    "connected: ASSUMPTION deriv_domain_def[(ODE_continuous_def.d)].connected?")))
 (|lin_cont_d_hp_TCC3| 0
  (|lin_cont_d_hp_TCC3-1| |nil| 3867528905
   ("" (SKEEP*) (("" (LEMMA "hp_noe") (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|hp_noe| FORMULA-DECL NIL |interval_def| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|lin_cont_d_hp| ASSUMING
    "ODE_continuous_def[(interval_def.hp(linear_ode_1D.aa))].ODE_continuous_def"
    "not_one_element: ASSUMPTION deriv_domain_def[(ODE_continuous_def.d)].not_one_element?")))
 (|lin_cont_d_hp| 0
  (|lin_cont_d_hp-1| |nil| 3867529028
   ("" (SKEEP*)
    (("" (EXPAND "cont_d?" 1)
      (("" (SKEEP)
        (("" (LEMMA "cont_lift")
          (("" (INST -1 "hp(aa)" "_")
            (("" (ASSERT)
              (("" (EXPAND "od_ln" 1)
                (("" (INST -1 "LAMBDA(t:(hp(aa))): af(t)*car(y1)+bf(t)")
                  (("" (FLATTEN)
                    (("" (HIDE -2)
                      (("" (SPLIT -1)
                        (("1" (ASSERT)
                          (("1"
                            (CASE
                                "(LAMBDA (v: {vv: VectorN(1) | hp(aa)(car(vv))}):
                        (: af(car(v)) * car(y1) + bf(car(v)) :)) = (LAMBDA (x: {x: VectorN(1) | hp(aa)(car(x))}):
                      (: af(car(x)) * car(y1) :) + (: bf(car(x)) :))")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (HIDE 2)
                              (("2" (DECOMPOSE-EQUALITY 1)
                                (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)
                                 ("2" (HIDE 2)
                                  (("2" (SKEEP)
                                    (("2" (ASSERT)
                                      (("2" (HIDE -1)
                                        (("2" (EXPAND "+" 1)
                                          (("2" (EXPAND "add" 1)
                                            (("2" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (TYPEPRED "af" "bf")
                            (("2" (LEMMA "sum_cont_fun[(hp(aa))]")
                              (("2" (INST -1 "car(y1)*af" "bf")
                                (("2" (SPLIT -1)
                                  (("1" (ASSERT)
                                    (("1" (HIDE -2 -3)
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "*" -1)
                                          (("1" (EXPAND "+" -1)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (LEMMA "scal_cont_fun[(hp(aa))]")
                                      (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("3" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cont_d?| CONST-DECL "bool" |ODE_continuous_def| NIL)
    (|cont_lift| FORMULA-DECL NIL |continuity_multivar| |mv_analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|sum_cont_fun| FORMULA-DECL NIL |continuous_functions| |analysis|) NIL
    (|sum_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun"
     |continuous_functions| |analysis|)
    (|scal_fun_continuous| APPLICATION-JUDGEMENT "continuous_fun"
     |continuous_functions| |analysis|)
    (|scal_cont_fun| FORMULA-DECL NIL |continuous_functions| |analysis|) NIL
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    NIL NIL NIL
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL) NIL
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) NIL
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|lin_unique_solution_TCC1| 0
  (|lin_unique_solution_TCC1-1| |nil| 3867528391 ("" (ASSUMING-TCC) NIL NIL)
   NIL NIL
   (|lin_unique_solution| ASSUMING
    "r2v_continuous_extension[linear_ode_1D.d].r2v_continuous_extension"
    "closed_interval: ASSUMPTION interval_def.closed_interval?(r2v_continuous_extension.d)")))
 (|lin_unique_solution_TCC2| 0
  (|lin_unique_solution_TCC2-1| |nil| 3867528391 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|r2v| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|derivable?| CONST-DECL "bool" |r2v_analysis| NIL)
    (|r2v_n| TYPE-EQ-DECL NIL |r2v_def| NIL) NIL NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|nth| CONST-DECL "[(d) -> real]" |r2v_def| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|fullset| CONST-DECL "set" |sets| NIL) NIL NIL
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|lin_unique_solution| SUBTYPE
    "r2v_continuous_extension[linear_ode_1D.d].d_b" "(list_adt[real].cons?)")))
 (|lin_unique_solution_TCC3| 0
  (|lin_unique_solution_TCC3-1| |nil| 3867528391
   ("" (SKEEP*)
    (("" (ASSERT)
      (("" (TYPEPRED "d_b[d]")
        (("" (ASSERT)
          (("" (SKEEP) (("" (INST -5 "dd") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL) NIL
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|d_b| CONST-DECL "{dd: list[real] |
   (length(dd) = 2 AND (d(car(dd)) AND d(car(cdr(dd))))) AND
    FORALL (x: real): (car(dd) <= x AND x <= car(cdr(dd))) IFF d(x)}"
     |r2v_continuous_extension| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) NIL)
   NIL
   (|lin_unique_solution| SUBTYPE
    "list_adt[real].car(r2v_continuous_extension[linear_ode_1D.d].d_b)"
    "{aa: (linear_ode_1D.d) | FORALL (dd: (linear_ode_1D.d)): reals.<=(aa, dd)}")))
 (|lin_unique_solution| 0
  (|lin_unique_solution-1| |nil| 3867528454
   ("" (SKEEP)
    (("" (LEMMA "unique_solution")
      (("" (INST?)
        (("" (LEMMA "lin_lip")
          (("" (LEMMA "lin_cont_d")
            (("" (INST?) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|unique_solution| FORMULA-DECL NIL |ODE_solution_existence_uniqueness|
     NIL)
    (|lin_lip| FORMULA-DECL NIL |linear_ode_1D| NIL)
    (|lin_cont_d| FORMULA-DECL NIL |linear_ode_1D| NIL) NIL NIL NIL NIL NIL
    (|cont_d?| CONST-DECL "bool" |ODE_continuous_def| NIL)
    (|Lip_d?| CONST-DECL "bool" |ODE_Lipschitz_def| NIL)
    (|od_f| TYPE-EQ-DECL NIL |ODE_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) NIL
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) NIL)
   SHOSTAK))
 (|lin_unique_solution_hp_TCC1| 0
  (|lin_unique_solution_hp_TCC1-1| |nil| 3867528905 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|) NIL
    (|r2v| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|derivable?| CONST-DECL "bool" |r2v_analysis| NIL)
    (|r2v_n| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|nth| CONST-DECL "[(d) -> real]" |r2v_def| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|fullset| CONST-DECL "set" |sets| NIL) NIL
    (|hp| CONST-DECL "bool" |interval_def| NIL))
   NIL
   (|lin_unique_solution_hp| SUBTYPE "linear_ode_1D.aa"
    "{aa1: (interval_def.hp(linear_ode_1D.aa)) | FORALL (dd: (interval_def.hp(linear_ode_1D.aa))): reals.<=(aa1, dd)}")))
 (|lin_unique_solution_hp| 0
  (|lin_unique_solution_hp-1| |nil| 3867529325
   ("" (SKEEP*)
    (("" (LEMMA "sol_uniq_hp")
      (("" (INST?)
        (("1" (TCCS-FORMULA -1)
          (("1" (INST? 1)
            (("1" (HIDE-ALL-BUT (-13 1)) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (HIDE-ALL-BUT (-4 1)) (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (LEMMA "lin_cont_d_hp")
          (("2" (INST?)
            (("2" (ASSERT)
              (("2" (EXPAND "Lip_hp?" 1)
                (("2" (SKEEP)
                  (("2" (HIDE 2)
                    (("2" (LEMMA "lin_lip")
                      (("2" (INST?)
                        (("1" (ASSERT)
                          (("1" (EXPAND "restrict" 1)
                            (("1" (TYPEPRED "af" "bf")
                              (("1"
                                (INST -3
                                 "LAMBDA(x:(closed_interval(aa,b))): af(x)"
                                 "_")
                                (("1"
                                  (INST -3
                                   "LAMBDA(x:(closed_interval(aa,b))): bf(x)")
                                  (("1" (HIDE -1 -2)
                                    (("1" (EXPAND "od_ln")
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (HIDE 2)
                                      (("2" (HIDE -1 -3)
                                        (("2" (EXPAND "continuous?")
                                          (("2" (SKEEP)
                                            (("2" (INST -1 "x0")
                                              (("1" (EXPAND "continuous?")
                                                (("1" (SKEEP)
                                                  (("1" (INST -1 "epsilon")
                                                    (("1" (SKEEP)
                                                      (("1" (INST 1 "delta")
                                                        (("1" (SKEEP)
                                                          (("1" (INST -2 "x_1")
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "hp")
                                                (("2" (TYPEPRED "x0")
                                                  (("2"
                                                    (EXPAND "closed_interval"
                                                            -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("3" (HIDE 2)
                                    (("3" (SKEEP)
                                      (("3" (TYPEPRED "x")
                                        (("3" (EXPAND "hp" 1)
                                          (("3" (EXPAND "closed_interval" -1)
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (HIDE -2 -3)
                                    (("2" (EXPAND "continuous?")
                                      (("2" (SKEEP)
                                        (("2" (INST?)
                                          (("1" (EXPAND "continuous?")
                                            (("1" (SKEEP)
                                              (("1" (INST -1 "epsilon")
                                                (("1" (SKEEP)
                                                  (("1" (INST 1 "delta")
                                                    (("1" (SKEEP)
                                                      (("1" (INST -2 "x_1")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "hp" 1)
                                            (("2" (TYPEPRED "x0")
                                              (("2"
                                                (EXPAND "closed_interval" -1)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (HIDE 2)
                                  (("3" (SKEEP)
                                    (("3" (TYPEPRED "x")
                                      (("3" (EXPAND "closed_interval" -)
                                        (("3" (ASSERT)
                                          (("3" (FLATTEN)
                                            (("3" (EXPAND "hp")
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "ci_ci") (("2" (INST?) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sol_uniq_hp| FORMULA-DECL NIL |ODE_solution_existence_uniqueness| NIL)
    (|lin_cont_d_hp| FORMULA-DECL NIL |linear_ode_1D| NIL)
    (|lin_lip| FORMULA-DECL NIL |linear_ode_1D| NIL)
    (|ci_ci| FORMULA-DECL NIL |interval_def| NIL)
    (|x0| SKOLEM-CONST-DECL "(closed_interval(aa, b))" |linear_ode_1D| NIL)
    (|od_ln| CONST-DECL "VectorN(1)" |linear_ode_1D| NIL)
    (|x0| SKOLEM-CONST-DECL "(closed_interval(aa, b))" |linear_ode_1D| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|b| SKOLEM-CONST-DECL "{bb: real | bb > aa}" |linear_ode_1D| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|restrict| CONST-DECL "VectorN(n)" |restrict_ode| NIL)
    (|ceiling| CONST-DECL "{i | x <= i & i < x + 1}" |floor_ceil| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    (|closed_interval?| CONST-DECL "bool" |interval_def| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|ode_sol| CONST-DECL "{yy: r2v_n[d](n) |
   derivable?[d](yy) AND ivt_s_unique?[d](n, car(d_b[d]), f, y0)(yy)}"
     |ODE_solution_existence_uniqueness| NIL)
    (|d_b| CONST-DECL "{dd: list[real] |
   (length(dd) = 2 AND (d(car(dd)) AND d(car(cdr(dd))))) AND
    FORALL (x: real): (car(dd) <= x AND x <= car(cdr(dd))) IFF d(x)}"
     |r2v_continuous_extension| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|ivt_s_unique?| CONST-DECL "bool" |ODE_def| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (|r2v_n| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|Lip_d?| CONST-DECL "bool" |ODE_Lipschitz_def| NIL)
    (|closed_interval?| CONST-DECL "bool" |interval_def| NIL)
    (|derivable?| CONST-DECL "bool" |r2v_analysis| NIL)
    (|r2v| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|y0| SKOLEM-CONST-DECL "VectorN(1)" |linear_ode_1D| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (|aa| SKOLEM-CONST-DECL "real" |linear_ode_1D| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|od_f| TYPE-EQ-DECL NIL |ODE_def| NIL)
    (|cont_d?| CONST-DECL "bool" |ODE_continuous_def| NIL)
    (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|od_ln| CONST-DECL "VectorN(1)" |linear_ode_1D| NIL)
    (|af| SKOLEM-CONST-DECL
     "{f: [(hp(aa)) -> real] | continuous?[(hp(aa))](f)}" |linear_ode_1D| NIL)
    (|bf| SKOLEM-CONST-DECL
     "{f: [(hp(aa)) -> real] | continuous?[(hp(aa))](f)}" |linear_ode_1D| NIL)
    (|Lip_hp?| CONST-DECL "bool" |ODE_solution_existence_uniqueness| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|listn_0| NAME-JUDGEMENT "listn(0)" |vector_arithmetic| |mv_analysis|))
   SHOSTAK))
 (|lin_1D_unique_ci_TCC1| 0
  (|lin_1D_unique_ci_TCC2-1| |nil| 3867530411 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) NIL NIL
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|) NIL
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    NIL (|fullset| CONST-DECL "set" |sets| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|lin_1D_unique_ci| SUBTYPE "r2v_continuous_extension[linear_ode_1D.d].d_b"
    "(list_adt[real].cons?)")))
 (|lin_1D_unique_ci_TCC2| 0
  (|lin_1D_unique_ci_TCC3-1| |nil| 3867530411 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) NIL NIL
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|) NIL NIL
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|) NIL
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|lin_1D_unique_ci| SUBTYPE
    "list_adt[real].car(r2v_continuous_extension[linear_ode_1D.d].d_b)"
    "(linear_ode_1D.d)")))
 (|lin_1D_unique_ci| 0
  (|lin_1D_unique_ci-1| |nil| 3867530264
   ("" (LEMMA "lin_unique_solution")
    (("" (SKEEP)
      (("" (INST?)
        (("" (INST -1 "(: y0 :)" "af" "bf")
          (("" (SKEEP)
            (("" (TYPEPRED "y")
              (("" (INST 1 "LAMBDA(t:(d)): car(y(t))")
                (("1" (ASSERT)
                  (("1" (EXPAND "ivt_s_unique?" -2)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "ivt_s?" -2)
                        (("1" (ASSERT)
                          (("1" (FLATTEN)
                            (("1" (SPLIT 1)
                              (("1" (EXPAND "od_sol?" -2)
                                (("1" (WITH-TCCS (DECOMPOSE-EQUALITY 1))
                                  (("1" (DECOMPOSE-EQUALITY -2)
                                    (("1" (INST -1 "x!1")
                                      (("1" (EXPAND "od_fx" -1)
                                        (("1" (EXPAND "od_ln" -1)
                                          (("1" (EXPAND "deriv" -1)
                                            (("1" (LIFT-IF -1)
                                              (("1" (SPLIT -1)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT)
                                                    (("1" (TYPEPRED "y")
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT)
                                                    (("2" (EXPAND "cons" -1)
                                                      (("2"
                                                        (DECOMPOSE-EQUALITY -1)
                                                        (("2" (ASSERT)
                                                          (("2" (EXPAND "+" -2)
                                                            (("2"
                                                              (EXPAND "add" -2)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "car" 2 2)
                                                                    (("2"
                                                                      (PROPAX)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (TYPEPRED "x!1")
                                        (("2" (TYPEPRED "d_b[d]")
                                          (("2" (INST -5 "x!1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (DECOMPOSE-EQUALITY -3) NIL NIL)) NIL)
                               ("3" (SKEEP)
                                (("3" (TYPEPRED "f")
                                  (("3" (INST -7 "Lambda(t:(d)): (: f(t) :)")
                                    (("1" (ASSERT)
                                      (("1" (SPLIT -7)
                                        (("1" (DECOMPOSE-EQUALITY 1)
                                          (("1" (DECOMPOSE-EQUALITY -1)
                                            (("1" (INST -1 "x!1")
                                              (("1" (ASSERT)
                                                (("1" (DECOMPOSE-EQUALITY -1)
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKEEP)
                                            (("2" (ASSERT)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (EXPAND "ivt_s?" 1)
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "od_sol?" 1)
                                              (("2" (DECOMPOSE-EQUALITY 1)
                                                (("1" (EXPAND "od_fx" 1)
                                                  (("1" (EXPAND "od_ln" 1)
                                                    (("1" (EXPAND "deriv" 1)
                                                      (("1" (LIFT-IF 1)
                                                        (("1" (SPLIT 1)
                                                          (("1" (FLATTEN)
                                                            (("1"
                                                              (HIDE -2 -3 -4 -5
                                                               -6 -7 1 2)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN)
                                                            (("2"
                                                              (EXPAND "cons" 2)
                                                              (("2"
                                                                (DECOMPOSE-EQUALITY
                                                                 2)
                                                                (("1"
                                                                  (EXPAND "car"
                                                                          1)
                                                                  (("1"
                                                                    (EXPAND "+"
                                                                            1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "add" 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (DECOMPOSE-EQUALITY
                                                                           -2)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "x!1")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1
                                                                                 RL)
                                                                                (("1"
                                                                                  (CASE
                                                                                      "f = LAMBDA (x: (d)) -> real: f(x)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (DECOMPOSE-EQUALITY
                                                                                     1)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (GRIND)
                                                                  NIL NIL)
                                                                 ("3" (SPLIT 1)
                                                                  (("1"
                                                                    (INST 1
                                                                     "1")
                                                                    (("1"
                                                                      (SKEEP)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("4" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKEEP)
                                                  (("2" (SPLIT 1)
                                                    (("1" (INST 1 "1")
                                                      (("1" (SKEEP) NIL NIL))
                                                      NIL)
                                                     ("2"
                                                      (EXPAND "derivable?" 1)
                                                      (("2" (SKEEP)
                                                        (("2" (TYPEPRED "i")
                                                          (("2"
                                                            (EXPAND "length"
                                                                    -1)
                                                            (("2"
                                                              (EXPAND "length"
                                                                      -1)
                                                              (("2"
                                                                (EXPAND
                                                                 "length" -1)
                                                                (("2"
                                                                  (EXPAND "nth"
                                                                          1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "nth" 1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (CASE
                                                                              "f = LAMBDA (x: (d)) -> real: f(x)")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL)
                                                                           ("2"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (CASE
                                          "f = LAMBDA (x: (d)) -> real: f(x)")
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "derivable?" 1)
                                          (("1" (SKEEP)
                                            (("1" (TYPEPRED "i")
                                              (("1" (EXPAND "length" -1)
                                                (("1" (EXPAND "length" -1)
                                                  (("1" (EXPAND "length" -1)
                                                    (("1" (EXPAND "nth" 1)
                                                      (("1" (ASSERT)
                                                        (("1" (EXPAND "nth" 1)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "derivable?" -1)
                  (("2" (INST -1 "0")
                    (("1" (EXPAND "nth" -1)
                      (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL)) NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|lin_unique_solution| FORMULA-DECL NIL |linear_ode_1D| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|closed_interval?| CONST-DECL "bool" |interval_def| NIL)
    (|y| SKOLEM-CONST-DECL "{yy: r2v_n[d](1) | derivable?[d](yy)}"
     |linear_ode_1D| NIL)
    (|d| SKOLEM-CONST-DECL "(closed_interval?)" |linear_ode_1D| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|ivt_s_unique?| CONST-DECL "bool" |ODE_def| NIL)
    (|ivt_s?| CONST-DECL "bool" |ODE_def| NIL)
    (|f| SKOLEM-CONST-DECL "{f: [(d) -> real] | derivable?[(d)](f)}"
     |linear_ode_1D| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|af| SKOLEM-CONST-DECL "{f: [(d) -> real] | continuous?[(d)](f)}"
     |linear_ode_1D| NIL)
    (|x!1| SKOLEM-CONST-DECL "{xx: (d) | xx >= car(d_b[d])}" |linear_ode_1D|
     NIL)
    (|bf| SKOLEM-CONST-DECL "{f: [(d) -> real] | continuous?[(d)](f)}"
     |linear_ode_1D| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|od_sol?| CONST-DECL "bool" |ODE_def| NIL)
    (|od_ln| CONST-DECL "VectorN(1)" |linear_ode_1D| NIL)
    (|od_fx| CONST-DECL "{ff: r2v_n(n) | length(ff) = n}" |ODE_def| NIL)
    (|od_f| TYPE-EQ-DECL NIL |ODE_def| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|nth| CONST-DECL "[(d) -> real]" |r2v_def| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|null?| CONST-DECL "bool" |r2v_def| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cdr| CONST-DECL "r2v" |r2v_def| NIL)
    (|car| CONST-DECL "real" |r2v_def| NIL)
    (|cons?| CONST-DECL "bool" |r2v_def| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons| CONST-DECL "r2v" |r2v_def| NIL)
    (|x!1| SKOLEM-CONST-DECL "(d)" |linear_ode_1D| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|d_b| CONST-DECL "{dd: list[real] |
   (length(dd) = 2 AND (d(car(dd)) AND d(car(cdr(dd))))) AND
    FORALL (x: real): (car(dd) <= x AND x <= car(cdr(dd))) IFF d(x)}"
     |r2v_continuous_extension| NIL)
    (|length| CONST-DECL "nat" |r2v_def| NIL)
    (|deriv| DEF-DECL "{ff: r2v | length(ff) = length(f)}" |r2v_analysis| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|r2v| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|derivable?| CONST-DECL "bool" |r2v_analysis| NIL)
    (|r2v_n| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|listn_0| NAME-JUDGEMENT "listn(0)" |vector_arithmetic| |mv_analysis|)
    (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|))
   SHOSTAK))
 (|lin_1D_unique_hp_TCC1| 0
  (|lin_1D_unique_hp_TCC2-1| |nil| 3867531611 ("" (SUBTYPE-TCC) NIL NIL)
   ((|hp| CONST-DECL "bool" |interval_def| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|lin_1D_unique_hp| SUBTYPE "linear_ode_1D.aa"
    "(interval_def.hp(linear_ode_1D.aa))")))
 (|lin_1D_unique_hp| 0
  (|lin_1D_unique_hp-1| |nil| 3867531663
   ("" (LEMMA "lin_unique_solution_hp")
    (("" (SKEEP)
      (("" (INST?)
        (("" (INST -1 "(: y0 :)" "af" "bf")
          (("" (SKEEP)
            (("" (TYPEPRED "y")
              (("" (INST 1 "LAMBDA(t:(hp(aa))): car(y(t))")
                (("1" (ASSERT)
                  (("1" (EXPAND "ivt_s_unique?" -2)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "ivt_s?" -2)
                        (("1" (ASSERT)
                          (("1" (FLATTEN)
                            (("1" (SPLIT 1)
                              (("1" (EXPAND "od_sol?" -2)
                                (("1" (WITH-TCCS (DECOMPOSE-EQUALITY 1))
                                  (("1" (DECOMPOSE-EQUALITY -2)
                                    (("1" (INST -1 "x!1")
                                      (("1" (EXPAND "od_fx" -1)
                                        (("1" (EXPAND "od_ln" -1)
                                          (("1" (EXPAND "deriv" -1)
                                            (("1" (LIFT-IF -1)
                                              (("1" (SPLIT -1)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT)
                                                    (("1" (TYPEPRED "y")
                                                      (("1" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT)
                                                    (("2" (EXPAND "cons" -1)
                                                      (("2"
                                                        (DECOMPOSE-EQUALITY -1)
                                                        (("2" (ASSERT)
                                                          (("2" (EXPAND "+" -2)
                                                            (("2"
                                                              (EXPAND "add" -2)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "car" 2 2)
                                                                    (("2"
                                                                      (PROPAX)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (TYPEPRED "x!1")
                                        (("2" (EXPAND "hp" -1)
                                          (("2" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (DECOMPOSE-EQUALITY -3) NIL NIL)) NIL)
                               ("3" (SKEEP)
                                (("3" (TYPEPRED "f")
                                  (("3"
                                    (INST -7 "Lambda(t:(hp(aa))): (: f(t) :)")
                                    (("1" (ASSERT)
                                      (("1" (SPLIT -7)
                                        (("1" (DECOMPOSE-EQUALITY 1)
                                          (("1" (DECOMPOSE-EQUALITY -1)
                                            (("1" (INST -1 "x!1")
                                              (("1" (ASSERT)
                                                (("1" (DECOMPOSE-EQUALITY -1)
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKEEP)
                                            (("2" (ASSERT)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (EXPAND "ivt_s?" 1)
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "od_sol?" 1)
                                              (("2" (DECOMPOSE-EQUALITY 1)
                                                (("1" (EXPAND "od_fx" 1)
                                                  (("1" (EXPAND "od_ln" 1)
                                                    (("1" (EXPAND "deriv" 1)
                                                      (("1" (LIFT-IF 1)
                                                        (("1" (SPLIT 1)
                                                          (("1" (FLATTEN)
                                                            (("1"
                                                              (HIDE -2 -3 -4 -5
                                                               -6 -7 1 2)
                                                              (("1" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (FLATTEN)
                                                            (("2"
                                                              (EXPAND "cons" 2)
                                                              (("2"
                                                                (DECOMPOSE-EQUALITY
                                                                 2)
                                                                (("1"
                                                                  (EXPAND "car"
                                                                          1)
                                                                  (("1"
                                                                    (EXPAND "+"
                                                                            1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "add" 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (DECOMPOSE-EQUALITY
                                                                           -2)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "x!1")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1
                                                                                 RL)
                                                                                (("1"
                                                                                  (CASE
                                                                                      "f = LAMBDA (x: (hp(aa))) -> real: f(x)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (DECOMPOSE-EQUALITY
                                                                                     1)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (GRIND)
                                                                  NIL NIL)
                                                                 ("3" (SPLIT 1)
                                                                  (("1"
                                                                    (INST 1
                                                                     "1")
                                                                    (("1"
                                                                      (SKEEP)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2" (GRIND)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("4" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKEEP)
                                                  (("2" (SPLIT 1)
                                                    (("1" (INST 1 "1")
                                                      (("1" (SKEEP) NIL NIL))
                                                      NIL)
                                                     ("2"
                                                      (EXPAND "derivable?" 1)
                                                      (("2" (SKEEP)
                                                        (("2" (TYPEPRED "i")
                                                          (("2"
                                                            (EXPAND "length"
                                                                    -1)
                                                            (("2"
                                                              (EXPAND "length"
                                                                      -1)
                                                              (("2"
                                                                (EXPAND
                                                                 "length" -1)
                                                                (("2"
                                                                  (EXPAND "nth"
                                                                          1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "nth" 1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (CASE
                                                                              "f = LAMBDA (x: (hp(aa))) -> real: f(x)")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL)
                                                                           ("2"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (CASE
                                          "f = LAMBDA (x: (hp(aa))) -> real: f(x)")
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "derivable?" 1)
                                          (("1" (SKEEP)
                                            (("1" (TYPEPRED "i")
                                              (("1" (EXPAND "length" -1)
                                                (("1" (EXPAND "length" -1)
                                                  (("1" (EXPAND "length" -1)
                                                    (("1" (EXPAND "nth" 1)
                                                      (("1" (ASSERT)
                                                        (("1" (EXPAND "nth" 1)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "derivable?" -1)
                  (("2" (INST -1 "0")
                    (("1" (EXPAND "nth" -1)
                      (("1" (EXPAND "nth" -1) (("1" (PROPAX) NIL NIL)) NIL))
                      NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("3" (SKEEP) (("3" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|)
    (|listn_0| NAME-JUDGEMENT "listn(0)" |vector_arithmetic| |mv_analysis|)
    (|r2v_n| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (|derivable?| CONST-DECL "bool" |r2v_analysis| NIL)
    (|r2v| TYPE-EQ-DECL NIL |r2v_def| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|deriv| DEF-DECL "{ff: r2v | length(ff) = length(f)}" |r2v_analysis| NIL)
    (|length| CONST-DECL "nat" |r2v_def| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|x!1| SKOLEM-CONST-DECL "(hp(aa))" |linear_ode_1D| NIL)
    (|cons| CONST-DECL "r2v" |r2v_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|cons?| CONST-DECL "bool" |r2v_def| NIL)
    (|car| CONST-DECL "real" |r2v_def| NIL)
    (|cdr| CONST-DECL "r2v" |r2v_def| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|null?| CONST-DECL "bool" |r2v_def| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|nth| CONST-DECL "[(d) -> real]" |r2v_def| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|od_f| TYPE-EQ-DECL NIL |ODE_def| NIL)
    (|od_fx| CONST-DECL "{ff: r2v_n(n) | length(ff) = n}" |ODE_def| NIL)
    (|od_ln| CONST-DECL "VectorN(1)" |linear_ode_1D| NIL)
    (|od_sol?| CONST-DECL "bool" |ODE_def| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|bf| SKOLEM-CONST-DECL
     "{f: [(hp(aa)) -> real] | continuous?[(hp(aa))](f)}" |linear_ode_1D| NIL)
    (|x!1| SKOLEM-CONST-DECL "{xx: (hp(aa)) | xx >= aa}" |linear_ode_1D| NIL)
    (|af| SKOLEM-CONST-DECL
     "{f: [(hp(aa)) -> real] | continuous?[(hp(aa))](f)}" |linear_ode_1D| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|f| SKOLEM-CONST-DECL "{f: [(hp(aa)) -> real] | derivable?[(hp(aa))](f)}"
     |linear_ode_1D| NIL)
    (|ivt_s?| CONST-DECL "bool" |ODE_def| NIL)
    (|ivt_s_unique?| CONST-DECL "bool" |ODE_def| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|aa| SKOLEM-CONST-DECL "real" |linear_ode_1D| NIL)
    (|y| SKOLEM-CONST-DECL "{yy: r2v_n[hp(aa)](1) | derivable?[hp(aa)](yy)}"
     |linear_ode_1D| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lin_unique_solution_hp| FORMULA-DECL NIL |linear_ode_1D| NIL))
   SHOSTAK))
 (|lin_1D_unique_hp_ci_TCC1| 0
  (|lin_1D_unique_hp_ci_TCC1-1| |nil| 3867611246 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL
   (|lin_1D_unique_hp_ci| SUBTYPE "linear_ode_1D.b"
    "{b: reals.real | reals.<(linear_ode_1D.aa, b)}")))
 (|lin_1D_unique_hp_ci_TCC2| 0
  (|lin_1D_unique_hp_ci_TCC2-1| |nil| 3867611246
   ("" (SKEEP)
    (("" (REWRITE "ci_deriv_domain")
      (("" (TYPEPRED "d")
        (("" (LEMMA "hp_dd")
          (("" (INST -1 "aa")
            (("" (ASSERT)
              (("" (SPLIT -2)
                (("1" (ASSERT)
                  (("1" (REPLACE -1)
                    (("1" (HIDE 1)
                      (("1" (EXPAND "deriv_domain?")
                        (("1" (SKEEP)
                          (("1" (INST -2 "e!1" "x")
                            (("1" (SKEEP) (("1" (INST 1 "y") NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (SKEEP)
                    (("2" (EXPAND "closed_interval?" 1)
                      (("2" (INST 1 "aa" "b")
                        (("2" (EXPAND "closed_interval?")
                          (("2" (EXPAND "closed_interval")
                            (("2" (SKEEP)
                              (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ci_deriv_domain| FORMULA-DECL NIL |interval_def| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) NIL
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) NIL
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    (|hp_dd| FORMULA-DECL NIL |interval_def| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   NIL
   (|lin_1D_unique_hp_ci| ASSUMING
    "analysis@derivatives[(linear_ode_1D.d)].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
 (|lin_1D_unique_hp_ci_TCC3| 0
  (|lin_1D_unique_hp_ci_TCC3-1| |nil| 3867611246
   ("" (SKEEP)
    (("" (TYPEPRED "d")
      (("" (SPLIT -1)
        (("1" (EXPAND "not_one_element?")
          (("1" (SKEEP)
            (("1" (INST 1 "x+1")
              (("1" (ASSERT) NIL NIL)
               ("2" (TYPEPRED "x") (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (LEMMA "ci_not_one_element")
            (("2" (INST?)
              (("2" (HIDE 2)
                (("2" (EXPAND "closed_interval?")
                  (("2" (EXPAND "closed_interval")
                    (("2" (INST 1 "aa" "b")
                      (("2" (REPLACE -1) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    NIL (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ci_not_one_element| FORMULA-DECL NIL |interval_def| NIL)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) NIL NIL
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|lin_1D_unique_hp_ci| ASSUMING
    "analysis@derivatives[(linear_ode_1D.d)].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (|lin_1D_unique_hp_ci_TCC4| 0
  (|lin_1D_unique_hp_ci_TCC4-1| |nil| 3867611246 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) NIL
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    NIL (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL (|lin_1D_unique_hp_ci| SUBTYPE "linear_ode_1D.aa" "(linear_ode_1D.d)")))
 (|lin_1D_unique_hp_ci_TCC5| 0
  (|lin_1D_unique_hp_ci_TCC5-1| |nil| 3867611246 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL
   (|lin_1D_unique_hp_ci| SUBTYPE "linear_ode_1D.b"
    "{b: reals.real | reals.<(linear_ode_1D.aa, b)}")))
 (|lin_1D_unique_hp_ci_TCC6| 0
  (|lin_1D_unique_hp_ci_TCC9-1| |nil| 3867611246 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) NIL
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    NIL (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL (|lin_1D_unique_hp_ci| SUBTYPE "linear_ode_1D.t" "(linear_ode_1D.d)")))
 (|lin_1D_unique_hp_ci_TCC7| 0
  (|lin_1D_unique_hp_ci_TCC7-1| |nil| 3867611246
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (HIDE -1 -2)
        (("" (TYPEPRED "dd")
          (("" (SPLIT -1)
            (("1" (HIDE -2)
              (("1" (LEMMA "hp_dd")
                (("1" (INST -1 "aa")
                  (("1" (EXPAND "deriv_domain?")
                    (("1" (SKEEP)
                      (("1" (INST -1 "e!1" "x")
                        (("1" (SKEEP)
                          (("1" (INST 1 "y!1") (("1" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("2" (TYPEPRED "x")
                          (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKEEP)
              (("2" (LEMMA "ci_deriv_domain")
                (("2" (INST?)
                  (("2" (HIDE 2 -2)
                    (("2" (LEMMA "ci_ci")
                      (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    NIL (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) NIL
    (|ci_ci| FORMULA-DECL NIL |interval_def| NIL)
    (|ci_deriv_domain| FORMULA-DECL NIL |interval_def| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    NIL (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL) NIL NIL NIL NIL
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|hp_dd| FORMULA-DECL NIL |interval_def| NIL))
   NIL
   (|lin_1D_unique_hp_ci| ASSUMING
    "analysis@derivatives[(linear_ode_1D.dd)].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
 (|lin_1D_unique_hp_ci_TCC8| 0
  (|lin_1D_unique_hp_ci_TCC8-1| |nil| 3867611246
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (TYPEPRED "dd")
        (("" (SPLIT -1)
          (("1" (HIDE -2 -3 -4)
            (("1" (EXPAND "not_one_element?")
              (("1" (SKEEP)
                (("1" (INST 1 "x+1")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (GRIND)
                    (("2" (TYPEPRED "x") (("2" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (LEMMA "ci_not_one_element")
            (("2" (INST?)
              (("2" (LEMMA "ci_ci")
                (("2" (INST?)
                  (("2" (SKEEP)
                    (("2" (INST -1 "b") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) NIL NIL NIL
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL (|ci_ci| FORMULA-DECL NIL |interval_def| NIL)
    (|ci_not_one_element| FORMULA-DECL NIL |interval_def| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) NIL
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   NIL
   (|lin_1D_unique_hp_ci| ASSUMING
    "analysis@derivatives[(linear_ode_1D.dd)].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (|lin_1D_unique_hp_ci_TCC9| 0
  (|lin_1D_unique_hp_ci_TCC10-1| |nil| 3867611246 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) NIL
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL)
    NIL (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) NIL
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|lin_1D_unique_hp_ci| SUBTYPE "linear_ode_1D.aa" "(linear_ode_1D.dd)")))
 (|lin_1D_unique_hp_ci| 0
  (|lin_1D_unique_hp_ci-1| |nil| 3867616005
   ("" (SKEEP*)
    (("" (TYPEPRED "d")
      (("" (SPLIT -1)
        (("1" (LEMMA "lin_1D_unique_hp")
          (("1" (INST?)
            (("1" (INST -1 "y0" "af" "bf")
              (("1" (SKEEP)
                (("1" (INST 1 "y")
                  (("1" (ASSERT)
                    (("1" (SPLIT 1)
                      (("1" (ASSERT)
                        (("1" (DECOMPOSE-EQUALITY 1)
                          (("1" (DECOMPOSE-EQUALITY -1)
                            (("1" (INST -1 "x!1")
                              (("1" (ASSERT)
                                (("1" (LEMMA "deriv_subtype_dd[(hp(aa)),(d)]")
                                  (("1" (INST -1 "y")
                                    (("1" (ASSERT)
                                      (("1" (SPLIT -1)
                                        (("1" (ASSERT)
                                          (("1" (DECOMPOSE-EQUALITY -1)
                                            (("1" (INST -1 "x!1")
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "restrict" -1)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (CASE
                                                          "(LAMBDA (s: (d)): y(s)) = y")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2"
                                                        (DECOMPOSE-EQUALITY 1)
                                                        NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE -1 -2 -3)
                                          (("2" (LEMMA "hp_dd")
                                            (("2" (INST -1 "aa")
                                              (("2" (EXPAND "deriv_domain?")
                                                (("2" (HIDE 2)
                                                  (("2" (SKEEP)
                                                    (("2" (INST -1 "e!1" "x")
                                                      (("2" (SKEEP)
                                                        (("2" (INST 1 "y!1")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (LEMMA "hp_noe")
                                          (("3" (HIDE -2 -3 -4 2)
                                            (("3" (INST -1 "aa")
                                              (("3" (EXPAND "not_one_element?")
                                                (("3" (SKEEP)
                                                  (("3" (INST -1 "x")
                                                    (("3" (SKEEP)
                                                      (("3" (INST 2 "y!1")
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (LEMMA "hp_noe")
                                    (("2" (INST -1 "aa") NIL NIL)) NIL)
                                   ("3" (LEMMA "hp_dd")
                                    (("3" (INST -1 "aa") NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (LEMMA "hp_noe")
                              (("2" (INST -1 "aa") NIL NIL)) NIL)
                             ("3" (LEMMA "hp_dd")
                              (("3" (INST -1 "aa") NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2"
                          (CASE
                              "not_one_element?[(dd)] AND deriv_domain?[(dd)]")
                          (("1"
                            (CASE
                                "not_one_element?[(hp(aa))] AND deriv_domain?[(hp(aa))]")
                            (("1" (TYPEPRED "y")
                              (("1" (LEMMA "derivable_subtype[(hp(aa)),(dd)]")
                                (("1" (INST?)
                                  (("1" (ASSERT)
                                    (("1" (SPLIT -1)
                                      (("1" (EXPAND "restrict")
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT)
                                            (("1"
                                              (LEMMA
                                               "deriv_subtype_dd[(hp(aa)),(dd)]")
                                              (("1" (INST?)
                                                (("1" (ASSERT)
                                                  (("1" (EXPAND "restrict" -1)
                                                    (("1" (REPLACE -1)
                                                      (("1" (REPLACE -8 1)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (CASE
                                                                "dd = hp(aa)")
                                                            (("1"
                                                              (LEMMA
                                                               "lin_1D_unique_hp")
                                                              (("1"
                                                                (INST -1 "aa"
                                                                 "y0"
                                                                 "LAMBDA(t:(dd)): af(t)"
                                                                 "LAMBDA(t:(dd)): bf(t)")
                                                                (("1" (SKEEP 1)
                                                                  (("1"
                                                                    (SKEEP -1)
                                                                    (("1"
                                                                      (INST-CP
                                                                       -3 "f")
                                                                      (("1"
                                                                        (INST
                                                                         -3
                                                                         "(LAMBDA (t: (dd)): y(t))")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -4)
                                                                            (("1"
                                                                              (SPLIT
                                                                               -4)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -1)
                                                                                (("1"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE
                                                                                 -16)
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "deriv_subtype_dd[(hp(aa)),(dd)]")
                                                                                  (("2"
                                                                                    (INST?)
                                                                                    (("2"
                                                                                      (SPLIT
                                                                                       -1)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "restrict"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1)
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -14
                                                                                             -1)
                                                                                            (("1"
                                                                                              (DECOMPOSE-EQUALITY
                                                                                               1)
                                                                                              (("1"
                                                                                                (DECOMPOSE-EQUALITY
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "x!1")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1
                                                                                                       1
                                                                                                       RL)
                                                                                                      (("1"
                                                                                                        (CASE
                                                                                                            "(LAMBDA (t: (dd)): y(t)) = (LAMBDA (s: (dd)): y(s))")
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "deriv"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (REPLACE
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (LEMMA
                                                                                                                 "deriv_subtype_dd[(hp(aa)),(dd)]")
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -1
                                                                                                                   "y")
                                                                                                                  (("1"
                                                                                                                    (SPLIT
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "restrict"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (DECOMPOSE-EQUALITY
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -1
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (REPLACE
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "deriv"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (REPLACE
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (CASE
                                                                                                                                          "y = (LAMBDA (s: (dd)): y(s))")
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (DECOMPOSE-EQUALITY
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (SKEEP)
                                                                                                                                          (("2"
                                                                                                                                            (REPLACE
                                                                                                                                             -6)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("3"
                                                                                                                                        (SKEEP)
                                                                                                                                        (("3"
                                                                                                                                          (REPLACE
                                                                                                                                           -6)
                                                                                                                                          (("3"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (PROPAX)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("3"
                                                                                                                      (PROPAX)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("4"
                                                                                                                      (PROPAX)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (CASE
                                                                                                    "(LAMBDA (t: (dd)): y(t)) = y")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (DECOMPOSE-EQUALITY
                                                                                                   1)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("3"
                                                                                                  (SKEEP)
                                                                                                  (("3"
                                                                                                    (REPLACE
                                                                                                     -5)
                                                                                                    (("3"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("3"
                                                                                                (SKEEP)
                                                                                                (("3"
                                                                                                  (REPLACE
                                                                                                   -5)
                                                                                                  (("3"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("3"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("4"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (LEMMA
                                                                               "deriv_subtype_dd[(hp(aa)),(dd)]")
                                                                              (("2"
                                                                                (INST
                                                                                 -1
                                                                                 "f")
                                                                                (("2"
                                                                                  (SPLIT
                                                                                   -1)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "restrict"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (DECOMPOSE-EQUALITY
                                                                                       1)
                                                                                      (("1"
                                                                                        (DECOMPOSE-EQUALITY
                                                                                         -1)
                                                                                        (("1"
                                                                                          (INST
                                                                                           -1
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -1
                                                                                             1
                                                                                             RL)
                                                                                            (("1"
                                                                                              (DECOMPOSE-EQUALITY
                                                                                               -13)
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "(LAMBDA (s: (dd)): f(s)) = f")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (DECOMPOSE-EQUALITY
                                                                                                       1)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (TYPEPRED
                                                                                           "f")
                                                                                          (("2"
                                                                                            (CASE
                                                                                                "f = (LAMBDA (s: (dd)): f(s))")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (DECOMPOSE-EQUALITY
                                                                                               1)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("3"
                                                                                          (TYPEPRED
                                                                                           "f")
                                                                                          (("3"
                                                                                            (CASE
                                                                                                "f = (LAMBDA (s: (dd)): f(s))")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (DECOMPOSE-EQUALITY
                                                                                               1)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (HIDE
                                                                                     -1
                                                                                     -2
                                                                                     -3)
                                                                                    (("2"
                                                                                      (HIDE
                                                                                       -13)
                                                                                      (("2"
                                                                                        (TYPEPRED
                                                                                         "f")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "derivable?")
                                                                                          (("2"
                                                                                            (SKEEP)
                                                                                            (("2"
                                                                                              (INST
                                                                                               -1
                                                                                               "x")
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "derivable?")
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "convergent?")
                                                                                                  (("2"
                                                                                                    (SKEEP)
                                                                                                    (("2"
                                                                                                      (INST
                                                                                                       1
                                                                                                       "l")
                                                                                                      (("2"
                                                                                                        (EXPAND
                                                                                                         "convergence")
                                                                                                        (("2"
                                                                                                          (EXPAND
                                                                                                           "convergence")
                                                                                                          (("2"
                                                                                                            (FLATTEN)
                                                                                                            (("2"
                                                                                                              (HIDE
                                                                                                               -5
                                                                                                               -6)
                                                                                                              (("2"
                                                                                                                (SPLIT
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (HIDE
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "adh")
                                                                                                                    (("1"
                                                                                                                      (SKEEP)
                                                                                                                      (("1"
                                                                                                                        (INST
                                                                                                                         -1
                                                                                                                         "e!1")
                                                                                                                        (("1"
                                                                                                                          (SKEEP)
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             1
                                                                                                                             "x2")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              NIL
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (TYPEPRED
                                                                                                                               "x2")
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "A")
                                                                                                                                (("2"
                                                                                                                                  (REPLACE
                                                                                                                                   -5)
                                                                                                                                  (("2"
                                                                                                                                    (PROPAX)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (SKEEP)
                                                                                                                  (("2"
                                                                                                                    (INST
                                                                                                                     -2
                                                                                                                     "epsilon")
                                                                                                                    (("2"
                                                                                                                      (SKEEP)
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         1
                                                                                                                         "delta")
                                                                                                                        (("2"
                                                                                                                          (SKEEP)
                                                                                                                          (("2"
                                                                                                                            (INST
                                                                                                                             -4
                                                                                                                             "x2")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "NQ")
                                                                                                                                (("1"
                                                                                                                                  (PROPAX)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (TYPEPRED
                                                                                                                               "x2")
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "A")
                                                                                                                                (("2"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("3"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL)
                                                                                   ("4"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (CASE
                                                                              "y = (LAMBDA (t: (dd)): y(t))")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL)
                                                                           ("2"
                                                                            (DECOMPOSE-EQUALITY
                                                                             1)
                                                                            (("2"
                                                                              (SKEEP)
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -4)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (SKEEP)
                                                                            (("3"
                                                                              (REPLACE
                                                                               -4
                                                                               1)
                                                                              (("3"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("3"
                                                                          (SKEEP)
                                                                          (("3"
                                                                            (REPLACE
                                                                             -4)
                                                                            (("3"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("4"
                                                                          (SKEEP)
                                                                          (("4"
                                                                            (TYPEPRED
                                                                             "t")
                                                                            (("4"
                                                                              (REPLACE
                                                                               -5)
                                                                              (("4"
                                                                                (PROPAX)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (SPLIT
                                                                           1)
                                                                          (("1"
                                                                            (SKEEP)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -3)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (TYPEPRED
                                                                             "f")
                                                                            (("2"
                                                                              (HIDE
                                                                               -16)
                                                                              (("2"
                                                                                (HIDE
                                                                                 -6
                                                                                 -7)
                                                                                (("2"
                                                                                  (HIDE
                                                                                   -2)
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "derivable?")
                                                                                    (("2"
                                                                                      (SKEEP)
                                                                                      (("2"
                                                                                        (INST
                                                                                         -1
                                                                                         "x")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "derivable?")
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "convergent?")
                                                                                            (("2"
                                                                                              (SKEEP)
                                                                                              (("2"
                                                                                                (INST
                                                                                                 1
                                                                                                 "l")
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "convergence")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "convergence")
                                                                                                    (("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "adh")
                                                                                                          (("1"
                                                                                                            (SKEEP)
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "e!1")
                                                                                                              (("1"
                                                                                                                (SKEEP)
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   1
                                                                                                                   "x2")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (TYPEPRED
                                                                                                                     "x2")
                                                                                                                    (("2"
                                                                                                                      (EXPAND
                                                                                                                       "A")
                                                                                                                      (("2"
                                                                                                                        (REPLACE
                                                                                                                         -7)
                                                                                                                        (("2"
                                                                                                                          (PROPAX)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (SKEEP)
                                                                                                            (("2"
                                                                                                              (INST
                                                                                                               -2
                                                                                                               "epsilon")
                                                                                                              (("2"
                                                                                                                (SKEEP)
                                                                                                                (("2"
                                                                                                                  (INST
                                                                                                                   1
                                                                                                                   "delta")
                                                                                                                  (("2"
                                                                                                                    (SKEEP)
                                                                                                                    (("2"
                                                                                                                      (INST
                                                                                                                       -4
                                                                                                                       "x2")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "NQ")
                                                                                                                          (("1"
                                                                                                                            (PROPAX)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (TYPEPRED
                                                                                                                         "x2")
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "A")
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -7)
                                                                                                                            (("2"
                                                                                                                              (PROPAX)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  (("2"
                                                                    (HIDE -2
                                                                     -11)
                                                                    (("2"
                                                                      (TYPEPRED
                                                                       "bf")
                                                                      (("2"
                                                                        (EXPAND
                                                                         "continuous?")
                                                                        (("2"
                                                                          (SKEEP)
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "x0")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "continuous?")
                                                                              (("2"
                                                                                (SKEEP)
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "epsilon")
                                                                                  (("2"
                                                                                    (HIDE
                                                                                     2)
                                                                                    (("2"
                                                                                      (SKEEP)
                                                                                      (("2"
                                                                                        (INST
                                                                                         1
                                                                                         "delta")
                                                                                        (("2"
                                                                                          (SKEEP)
                                                                                          (("2"
                                                                                            (INST
                                                                                             -1
                                                                                             "x")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("3"
                                                                  (TYPEPRED
                                                                   "af")
                                                                  (("3"
                                                                    (HIDE 2)
                                                                    (("3"
                                                                      (EXPAND
                                                                       "continuous?")
                                                                      (("3"
                                                                        (SKEEP)
                                                                        (("3"
                                                                          (INST
                                                                           -1
                                                                           "x0")
                                                                          (("3"
                                                                            (EXPAND
                                                                             "continuous?")
                                                                            (("3"
                                                                              (SKEEP)
                                                                              (("3"
                                                                                (INST
                                                                                 -1
                                                                                 "epsilon")
                                                                                (("3"
                                                                                  (SKEEP)
                                                                                  (("3"
                                                                                    (INST
                                                                                     1
                                                                                     "delta")
                                                                                    (("3"
                                                                                      (SKEEP)
                                                                                      (("3"
                                                                                        (INST
                                                                                         -1
                                                                                         "x")
                                                                                        (("3"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("4" (HIDE 2)
                                                                  (("4" (SKEEP)
                                                                    (("4"
                                                                      (REPLACE
                                                                       -1)
                                                                      (("4"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("5" (SKEEP)
                                                                  (("5"
                                                                    (TYPEPRED
                                                                     "t")
                                                                    (("5"
                                                                      (REPLACE
                                                                       -13)
                                                                      (("5"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (TYPEPRED "dd")
                                                              (("2" (ASSERT)
                                                                (("2" (SKEEP)
                                                                  (("2" (SKEEP)
                                                                    (("2"
                                                                      (HIDE 1)
                                                                      (("2"
                                                                        (LEMMA
                                                                         " lin_1D_unique_ci")
                                                                        (("2"
                                                                          (INST
                                                                           -1
                                                                           "dd"
                                                                           "y0"
                                                                           "LAMBDA(t:(dd)): af(t)"
                                                                           "LAMBDA(t:(dd)): bf(t)")
                                                                          (("1"
                                                                            (SKEEP
                                                                             -1)
                                                                            (("1"
                                                                              (INST-CP
                                                                               -3
                                                                               "f")
                                                                              (("1"
                                                                                (INST
                                                                                 -3
                                                                                 "(LAMBDA (t: (dd)): y(t))")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     -4)
                                                                                    (("1"
                                                                                      (SPLIT
                                                                                       -4)
                                                                                      (("1"
                                                                                        (REPLACE
                                                                                         -1)
                                                                                        (("1"
                                                                                          (PROPAX)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (LEMMA
                                                                                         "deriv_subtype_dd[(hp(aa)),(dd)]")
                                                                                        (("2"
                                                                                          (INST?)
                                                                                          (("2"
                                                                                            (SPLIT
                                                                                             -1)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "restrict"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -15
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (DECOMPOSE-EQUALITY
                                                                                                       -15)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -1
                                                                                                         "x!1")
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (PROPAX)
                                                                                              NIL
                                                                                              NIL)
                                                                                             ("3"
                                                                                              (PROPAX)
                                                                                              NIL
                                                                                              NIL)
                                                                                             ("4"
                                                                                              (PROPAX)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("3"
                                                                                        (TYPEPRED
                                                                                         "d_b[dd]")
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -9)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (CASE
                                                                                                    "car(d_b[dd]) = aa")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (HIDE
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (HIDE
                                                                                                     -21)
                                                                                                    (("2"
                                                                                                      (INST-CP
                                                                                                       -4
                                                                                                       "aa")
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (SPLIT
                                                                                                             -6)
                                                                                                            (("1"
                                                                                                              (FLATTEN)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -6
                                                                                                                   "car(d_b[dd])")
                                                                                                                  (("1"
                                                                                                                    (FLATTEN)
                                                                                                                    (("1"
                                                                                                                      (SPLIT
                                                                                                                       -6)
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "closed_interval"
                                                                                                                         -5)
                                                                                                                        (("1"
                                                                                                                          (PROPAX)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("3"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (LEMMA
                                                                                                                     "ci_ci")
                                                                                                                    (("2"
                                                                                                                      (INST?)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (EXPAND
                                                                                                               "closed_interval"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (PROPAX)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (LEMMA
                                                                                           "ci_ci")
                                                                                          (("2"
                                                                                            (INST?)
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (CASE
                                                                                          "car(d_b[dd]) = aa")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (TYPEPRED
                                                                                         "d_b[dd]")
                                                                                        (("2"
                                                                                          (INST-CP
                                                                                           -5
                                                                                           "aa")
                                                                                          (("2"
                                                                                            (INST
                                                                                             -5
                                                                                             "car(d_b[dd])")
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -12)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "closed_interval")
                                                                                                    (("1"
                                                                                                      (FLATTEN)
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (LEMMA
                                                                                               "ci_ci")
                                                                                              (("2"
                                                                                                (INST?)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("3"
                                                                                        (LEMMA
                                                                                         "ci_ci")
                                                                                        (("3"
                                                                                          (INST?)
                                                                                          (("3"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (SKEEP)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "t")
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "dd")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (INST
                                                                                           -2
                                                                                           "t")
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (TYPEPRED
                                                                             "bf")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "continuous?")
                                                                              (("2"
                                                                                (SKEEP)
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "x0")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "continuous?")
                                                                                    (("1"
                                                                                      (SKEEP)
                                                                                      (("1"
                                                                                        (INST
                                                                                         -1
                                                                                         "epsilon")
                                                                                        (("1"
                                                                                          (SKEEP)
                                                                                          (("1"
                                                                                            (INST
                                                                                             1
                                                                                             "delta")
                                                                                            (("1"
                                                                                              (SKEEP)
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "x")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (TYPEPRED
                                                                                     "x0")
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "dd")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -2
                                                                                         "x0")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (TYPEPRED
                                                                             "af")
                                                                            (("3"
                                                                              (EXPAND
                                                                               "continuous?")
                                                                              (("3"
                                                                                (SKEEP)
                                                                                (("3"
                                                                                  (INST
                                                                                   -1
                                                                                   "x0")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "continuous?")
                                                                                    (("1"
                                                                                      (SKEEP)
                                                                                      (("1"
                                                                                        (INST
                                                                                         -1
                                                                                         "epsilon")
                                                                                        (("1"
                                                                                          (SKEEP)
                                                                                          (("1"
                                                                                            (INST
                                                                                             1
                                                                                             "delta")
                                                                                            (("1"
                                                                                              (SKEEP)
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "x")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (TYPEPRED
                                                                                     "x0"
                                                                                     "dd")
                                                                                    (("2"
                                                                                      (INST
                                                                                       -3
                                                                                       "x0")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("4"
                                                                            (SKEEP)
                                                                            (("4"
                                                                              (TYPEPRED
                                                                               "dd")
                                                                              (("4"
                                                                                (ASSERT)
                                                                                (("4"
                                                                                  (INST
                                                                                   -2
                                                                                   "t")
                                                                                  (("4"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("5"
                                                                            (LEMMA
                                                                             "ci_ci")
                                                                            (("5"
                                                                              (ASSERT)
                                                                              (("5"
                                                                                (INST?)
                                                                                (("5"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2" (HIDE -6)
                                          (("2" (TYPEPRED "dd")
                                            (("2" (SPLIT -1)
                                              (("1" (LEMMA "hp_dd")
                                                (("1" (INST -1 "aa")
                                                  (("1"
                                                    (EXPAND "deriv_domain?")
                                                    (("1" (SKEEP)
                                                      (("1" (INST -1 "e!1" "x")
                                                        (("1" (SKEEP)
                                                          (("1" (INST 1 "y!1")
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (TYPEPRED "x")
                                                          (("2" (INST -3 "x")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKEEP) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (FLATTEN) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)
                                 ("4" (FLATTEN)
                                  (("4" (ASSERT)
                                    (("4" (SKEEP)
                                      (("4" (TYPEPRED "x")
                                        (("4" (TYPEPRED "dd")
                                          (("4" (INST -2 "x")
                                            (("4" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (LEMMA "hp_noe")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (LEMMA "hp_dd") (("2" (INST?) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (HIDE 2)
                              (("2" (TYPEPRED "dd")
                                (("2" (SPLIT -1)
                                  (("1" (REPLACE -1)
                                    (("1" (SPLIT 1)
                                      (("1" (EXPAND "not_one_element?" 1)
                                        (("1" (SKEEP)
                                          (("1" (INST 1 "x+1")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (REPLACE -1)
                                              (("2" (TYPEPRED "x")
                                                (("2" (ASSERT)
                                                  (("2" (REPLACE -2)
                                                    (("2" (EXPAND "hp")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (LEMMA "hp_dd")
                                        (("2" (INST?)
                                          (("2" (EXPAND "deriv_domain?")
                                            (("2" (SKEEP)
                                              (("2" (INST -1 "e!1" "x")
                                                (("1" (SKEEP)
                                                  (("1" (INST 1 "y!1")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (TYPEPRED "x")
                                                  (("2" (INST -3 "x")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKEEP)
                                    (("2" (LEMMA "ci_not_one_element")
                                      (("2" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "ci_deriv_domain")
                                            (("1" (INST?)
                                              (("1" (ASSERT)
                                                (("1" (LEMMA "ci_ci")
                                                  (("1" (INST?)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (ASSERT)
                                          (("2" (LEMMA "ci_ci")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SPLIT 1)
                    (("1" (SKEEP)
                      (("1" (ASSERT)
                        (("1" (REPLACE -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL)
                     ("2" (TYPEPRED "y")
                      (("2" (EXPAND "derivable?")
                        (("2" (SKEEP)
                          (("2" (INST -1 "x")
                            (("1" (EXPAND "derivable?")
                              (("1" (EXPAND "convergent?")
                                (("1" (SKEEP)
                                  (("1" (INST 1 "l")
                                    (("1" (EXPAND "convergence")
                                      (("1" (EXPAND "convergence")
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT)
                                            (("1" (SPLIT 1)
                                              (("1" (EXPAND "adh")
                                                (("1" (SKEEP)
                                                  (("1" (INST -1 "e!1")
                                                    (("1" (SKEEP)
                                                      (("1" (INST 1 "x2")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (TYPEPRED "x2")
                                                          (("2" (EXPAND "A")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKEEP)
                                                (("2" (INST -2 "epsilon")
                                                  (("2" (SKEEP)
                                                    (("2" (INST 1 "delta")
                                                      (("2" (SKEEP)
                                                        (("2" (INST -4 "x2")
                                                          (("1" (ASSERT)
                                                            (("1" (EXPAND "NQ")
                                                              (("1" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2"
                                                              (TYPEPRED "x2")
                                                              (("2"
                                                                (EXPAND "A")
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (TYPEPRED "x")
                              (("2" (REPLACE -5) (("2" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (HIDE 2)
                  (("2" (SPLIT 1)
                    (("1" (SKEEP)
                      (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                     ("2" (TYPEPRED "bf")
                      (("2" (EXPAND "continuous?")
                        (("2" (SKEEP)
                          (("2" (INST -1 "x0")
                            (("2" (EXPAND "continuous?")
                              (("2" (SKEEP)
                                (("2" (INST -1 "epsilon")
                                  (("2" (SKEEP)
                                    (("2" (INST 1 "delta")
                                      (("2" (SKEEP)
                                        (("2" (INST -1 "x")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (HIDE 2)
                (("3" (SPLIT 1)
                  (("1" (SKEEP)
                    (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                   ("2" (TYPEPRED "af")
                    (("2" (EXPAND "continuous?")
                      (("2" (SKEEP)
                        (("2" (INST -1 "x0")
                          (("1" (ASSERT)
                            (("1" (EXPAND "continuous?")
                              (("1" (SKEEP)
                                (("1" (INST -1 "epsilon")
                                  (("1" (SKEEP)
                                    (("1" (INST 1 "delta")
                                      (("1" (SKEEP)
                                        (("1" (INST -1 "x")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (REPLACE -1)
                            (("2" (TYPEPRED "x0") (("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (LEMMA "lin_1D_unique_ci")
            (("2" (INST -1 "d" "y0" "af" "bf")
              (("1" (SKEEP)
                (("1" (INST 1 "y")
                  (("1" (ASSERT)
                    (("1" (SPLIT 1)
                      (("1" (ASSERT)
                        (("1" (CASE "car(d_b[d]) = aa")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (TYPEPRED "d_b[d]")
                            (("2" (INST-CP -5 "aa")
                              (("2" (INST -5 "car(d_b[d])")
                                (("1" (FLATTEN)
                                  (("1" (ASSERT)
                                    (("1" (REPLACE -12) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "ci_ci")
                                  (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (LEMMA "ci_ci")
                            (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (TYPEPRED "dd")
                          (("2" (SPLIT -1)
                            (("1" (INST -2 "b+1")
                              (("1" (REPLACE -1)
                                (("1" (REPLACE -6 -2)
                                  (("1" (HIDE -5)
                                    (("1" (HIDE 1) (("1" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2"
                                (CASE
                                    "not_one_element?[(dd)] AND deriv_domain?[(dd)]")
                                (("1"
                                  (CASE
                                      "not_one_element?[(d)] AND deriv_domain?[(d)]")
                                  (("1" (TYPEPRED "y")
                                    (("1" (LEMMA "derivable_subtype[(d),(dd)]")
                                      (("1" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (SPLIT -1)
                                            (("1" (EXPAND "restrict")
                                              (("1" (FLATTEN)
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (LEMMA
                                                     "deriv_subtype_dd[(d),(dd)]")
                                                    (("1" (INST?)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (EXPAND "restrict"
                                                                  -1)
                                                          (("1" (REPLACE -1)
                                                            (("1"
                                                              (REPLACE -10 1)
                                                              (("1" (ASSERT)
                                                                (("1" (SPLIT 1)
                                                                  (("1"
                                                                    (CASE
                                                                        "car(d_b[d]) = aa")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (TYPEPRED
                                                                       "d_b[d]
")
                                                                      (("2"
                                                                        (INST-CP
                                                                         -5
                                                                         "aa")
                                                                        (("2"
                                                                          (INST
                                                                           -5
                                                                           "car(d_b[d])")
                                                                          (("1"
                                                                            (REPLACE
                                                                             -19)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "closed_interval")
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (LEMMA
                                                                             "ci_ci")
                                                                            (("2"
                                                                              (INST
                                                                               -1
                                                                               "aa"
                                                                               "b")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (LEMMA
                                                                       "ci_ci")
                                                                      (("3"
                                                                        (INST
                                                                         -1
                                                                         "aa"
                                                                         "b")
                                                                        (("3"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (LEMMA
                                                                     " lin_1D_unique_ci")
                                                                    (("2"
                                                                      (INST -1
                                                                       "dd"
                                                                       "y0"
                                                                       "LAMBDA(t:(dd)): af(t)"
                                                                       "LAMBDA(t:(dd)): bf(t)")
                                                                      (("1"
                                                                        (SKEEP
                                                                         -1)
                                                                        (("1"
                                                                          (SKEEP
                                                                           1)
                                                                          (("1"
                                                                            (INST-CP
                                                                             -3
                                                                             "f")
                                                                            (("1"
                                                                              (INST
                                                                               -3
                                                                               "(LAMBDA (t: (dd)): y(t))")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SPLIT
                                                                                   -4)
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     -4)
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -1)
                                                                                      (("1"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (LEMMA
                                                                                       "deriv_subtype_dd[(d),(dd)]")
                                                                                      (("2"
                                                                                        (INST?)
                                                                                        (("2"
                                                                                          (SPLIT
                                                                                           -1)
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "restrict"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -1)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -15
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (DECOMPOSE-EQUALITY
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (DECOMPOSE-EQUALITY
                                                                                                     -15)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (PROPAX)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("3"
                                                                                            (PROPAX)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("4"
                                                                                            (PROPAX)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("3"
                                                                                      (CASE
                                                                                          "car(d_b[d]) = aa")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (TYPEPRED
                                                                                           "d_b[dd]")
                                                                                          (("1"
                                                                                            (INST-CP
                                                                                             -5
                                                                                             "car(d_b[dd])")
                                                                                            (("1"
                                                                                              (INST
                                                                                               -5
                                                                                               "car(d_b[d])")
                                                                                              (("1"
                                                                                                (FLATTEN)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (REPLACE
                                                                                                     -27)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -21)
                                                                                                      (("1"
                                                                                                        (TYPEPRED
                                                                                                         "d_b[d]")
                                                                                                        (("1"
                                                                                                          (INST-CP
                                                                                                           -5
                                                                                                           "car(d_b[dd])")
                                                                                                          (("1"
                                                                                                            (INST
                                                                                                             -5
                                                                                                             "car(d_b[d])")
                                                                                                            (("1"
                                                                                                              (REPLACE
                                                                                                               -32)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (GRIND)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (LEMMA
                                                                                                               "ci_ci")
                                                                                                              (("2"
                                                                                                                (INST
                                                                                                                 -1
                                                                                                                 "aa"
                                                                                                                 "b")
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (LEMMA
                                                                                                             "ci_ci")
                                                                                                            (("2"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "aa"
                                                                                                               "b!1")
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (LEMMA
                                                                                                 "ci_ci")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "aa"
                                                                                                   "b")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (LEMMA
                                                                                               "ci_ci")
                                                                                              (("2"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "aa"
                                                                                                 "b!1")
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (LEMMA
                                                                                             "ci_ci")
                                                                                            (("2"
                                                                                              (INST
                                                                                               -1
                                                                                               "aa"
                                                                                               "b!1")
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (TYPEPRED
                                                                                           "d_b[d]")
                                                                                          (("2"
                                                                                            (INST-CP
                                                                                             -5
                                                                                             "car(d_b[d])")
                                                                                            (("1"
                                                                                              (INST
                                                                                               -5
                                                                                               "aa")
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -24)
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (GRIND)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (LEMMA
                                                                                               "ci_ci")
                                                                                              (("2"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "aa"
                                                                                                 "b")
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("3"
                                                                                        (LEMMA
                                                                                         "ci_ci")
                                                                                        (("3"
                                                                                          (INST
                                                                                           -1
                                                                                           "aa"
                                                                                           "b")
                                                                                          (("3"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (CASE
                                                                                        "car(d_b[dd]) = aa")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (TYPEPRED
                                                                                       "d_b[dd]")
                                                                                      (("2"
                                                                                        (INST-CP
                                                                                         -5
                                                                                         "aa")
                                                                                        (("2"
                                                                                          (INST
                                                                                           -5
                                                                                           "car(d_b[dd])")
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -24)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -19)
                                                                                              (("1"
                                                                                                (HIDE
                                                                                                 -23)
                                                                                                (("1"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (LEMMA
                                                                                             "ci_ci")
                                                                                            (("2"
                                                                                              (INST?)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("3"
                                                                                      (LEMMA
                                                                                       "ci_ci")
                                                                                      (("3"
                                                                                        (INST?)
                                                                                        (("3"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SKEEP)
                                                                                (("2"
                                                                                  (INST
                                                                                   -14
                                                                                   "t")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (TYPEPRED
                                                                         "bf")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "continuous?")
                                                                          (("2"
                                                                            (SKEEP)
                                                                            (("2"
                                                                              (INST
                                                                               -1
                                                                               "x0")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "continuous?")
                                                                                (("1"
                                                                                  (SKEEP)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "epsilon")
                                                                                    (("1"
                                                                                      (SKEEP)
                                                                                      (("1"
                                                                                        (SKEEP)
                                                                                        (("1"
                                                                                          (INST
                                                                                           1
                                                                                           "delta")
                                                                                          (("1"
                                                                                            (SKEEP)
                                                                                            (("1"
                                                                                              (INST
                                                                                               -1
                                                                                               "x")
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (TYPEPRED
                                                                                 "x0")
                                                                                (("2"
                                                                                  (INST
                                                                                   -10
                                                                                   "x0")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("3"
                                                                        (TYPEPRED
                                                                         "af")
                                                                        (("3"
                                                                          (EXPAND
                                                                           "continuous?")
                                                                          (("3"
                                                                            (SKEEP)
                                                                            (("3"
                                                                              (INST
                                                                               -1
                                                                               "x0")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "continuous?")
                                                                                (("1"
                                                                                  (SKEEP)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "epsilon")
                                                                                    (("1"
                                                                                      (SKEEP)
                                                                                      (("1"
                                                                                        (SKEEP)
                                                                                        (("1"
                                                                                          (INST
                                                                                           1
                                                                                           "delta")
                                                                                          (("1"
                                                                                            (SKEEP)
                                                                                            (("1"
                                                                                              (INST
                                                                                               -1
                                                                                               "x")
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (INST
                                                                                 -9
                                                                                 "x0")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("4"
                                                                        (SKEEP)
                                                                        (("4"
                                                                          (INST
                                                                           -9
                                                                           "t")
                                                                          (("4"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("5"
                                                                        (LEMMA
                                                                         "ci_ci")
                                                                        (("5"
                                                                          (INST?)
                                                                          (("5"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (FLATTEN) NIL NIL)
                                             ("3" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (FLATTEN) NIL NIL)
                                       ("3" (ASSERT) NIL NIL)
                                       ("4" (ASSERT)
                                        (("4" (SKEEP)
                                          (("4" (INST -7 "x")
                                            (("4" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (LEMMA "ci_not_one_element")
                                      (("2" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "ci_not_one_element")
                                            (("1" (INST -1 "d")
                                              (("1" (ASSERT)
                                                (("1" (LEMMA "ci_deriv_domain")
                                                  (("1" (INST -1 "d")
                                                    (("1" (ASSERT)
                                                      (("1" (LEMMA "ci_ci")
                                                        (("1"
                                                          (INST -1 "aa" "b")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (LEMMA "ci_ci")
                                                (("2" (INST -1 "aa" "b")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "ci_ci")
                                          (("2" (INST?)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "ci_not_one_element")
                                  (("2" (INST?)
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "ci_deriv_domain")
                                        (("1" (INST?)
                                          (("1" (ASSERT)
                                            (("1" (LEMMA "ci_ci")
                                              (("1" (INST?)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (LEMMA "ci_ci")
                                      (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "ci_ci")
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) NIL NIL NIL NIL
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|ci_deriv_domain| FORMULA-DECL NIL |interval_def| NIL)
    (|ci_not_one_element| FORMULA-DECL NIL |interval_def| NIL) NIL NIL NIL
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|) NIL
    NIL NIL NIL NIL NIL
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|) NIL NIL
    (|real_is_complete| NAME-JUDGEMENT "metric_complete" |real_topology|
     |metric_space|)
    NIL
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    NIL (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|) NIL NIL
    (|lin_1D_unique_ci| FORMULA-DECL NIL |linear_ode_1D| NIL) NIL NIL
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) NIL
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|d_b| CONST-DECL "{dd: list[real] |
   (length(dd) = 2 AND (d(car(dd)) AND d(car(cdr(dd))))) AND
    FORALL (x: real): (car(dd) <= x AND x <= car(cdr(dd))) IFF d(x)}"
     |r2v_continuous_extension| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ci_ci| FORMULA-DECL NIL |interval_def| NIL) NIL NIL
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|hp_dd| FORMULA-DECL NIL |interval_def| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|hp_noe| FORMULA-DECL NIL |interval_def| NIL)
    (|deriv_subtype_dd| FORMULA-DECL NIL |derivatives_subtype| |analysis|)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|) NIL
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL NIL NIL NIL
    (|lin_1D_unique_hp| FORMULA-DECL NIL |linear_ode_1D| NIL) NIL NIL
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|) NIL
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|hp| CONST-DECL "bool" |interval_def| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) NIL
    (|closed_interval| CONST-DECL "(closed_interval?(a, b))" |interval_def|
     NIL))
   SHOSTAK)))

