(|exp_analysis|
 (|deriv_domain_exp_a| 0
  (|deriv_domain_exp_a-1| |nil| 3792169362
   ("" (EXPAND "deriv_domain?" 1)
    (("" (SKEEP)
      (("" (TYPEPRED "x")
        (("" (LEMMA "not_one_element")
          (("" (EXPAND "not_one_element?" -1)
            (("" (INST -1 "x")
              (("" (SKEEP)
                (("" (LEMMA "connected")
                  (("" (EXPAND "connected?" -1)
                    (("" (CASE "x<y")
                      (("1" (INST 2 "min(y-x, e)/2")
                        (("1" (GRIND) NIL NIL)
                         ("2" (SPLIT 1)
                          (("1" (EXPAND "min" 1 1)
                            (("1" (LIFT-IF 1)
                              (("1" (SPLIT 1)
                                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (INST -2 "x" "y" "min(y - x, e) / 2 + x")
                            (("2" (ASSERT)
                              (("2" (EXPAND "min" 2) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (CASE "NOT x>y")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (INST 3 "-min(e,x-y)/2")
                            (("1" (GRIND) NIL NIL)
                             ("2" (SPLIT 1)
                              (("1" (EXPAND "min" 1 1)
                                (("1" (ASSERT)
                                  (("1" (LIFT-IF -1) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -2 "y" "x" "-min(e, x - y) / 2 + x")
                                (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   NIL))
 (|IMP_chain_rule_TCC1| 0
  (|IMP_chain_rule_TCC1-1| |nil| 3795300695
   ("" (EXPAND "deriv_domain?" 1)
    (("" (SKEEP)
      (("" (TYPEPRED "x")
        (("" (LEMMA "not_one_element")
          (("" (EXPAND "not_one_element?" -1)
            (("" (INST -1 "x")
              (("" (SKEEP)
                (("" (LEMMA "connected")
                  (("" (EXPAND "connected?" -1)
                    (("" (CASE "x<y")
                      (("1" (INST 2 "min(y-x, e)/2")
                        (("1" (GRIND) NIL NIL)
                         ("2" (SPLIT 1)
                          (("1" (EXPAND "min" 1 1)
                            (("1" (LIFT-IF 1)
                              (("1" (SPLIT 1)
                                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (INST -2 "x" "y" "min(y - x, e) / 2 + x")
                            (("2" (ASSERT)
                              (("2" (EXPAND "min" 2) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (CASE "NOT x>y")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (INST 3 "-min(e,x-y)/2")
                            (("1" (GRIND) NIL NIL)
                             ("2" (SPLIT 1)
                              (("1" (EXPAND "min" 1 1)
                                (("1" (ASSERT)
                                  (("1" (LIFT-IF -1) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (INST -2 "y" "x" "-min(e, x - y) / 2 + x")
                                (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   NIL
   (|IMP_chain_rule| ASSUMING
    "analysis@chain_rule[(exp_analysis.d), real].chain_rule"
    "deriv_domain1: ASSUMPTION deriv_domain_def[T1].deriv_domain?")))
 (|IMP_chain_rule_TCC2| 0
  (|IMP_chain_rule_TCC2-1| |nil| 3795300695
   ("" (LEMMA "not_one_element") (("" (PROPAX) NIL NIL)) NIL) NIL NIL
   (|IMP_chain_rule| ASSUMING
    "analysis@chain_rule[(exp_analysis.d), real].chain_rule"
    "not_one_element1: ASSUMPTION deriv_domain_def[T1].not_one_element?")))
 (|IMP_chain_rule_TCC3| 0
  (|IMP_chain_rule_TCC3-1| |nil| 3795300695
   ("" (EXPAND "deriv_domain?" 1)
    (("" (SKEEP) (("" (INST 1 "e/2") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   ((|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)) NIL
   (|IMP_chain_rule| ASSUMING
    "analysis@chain_rule[(exp_analysis.d), real].chain_rule"
    "deriv_domain2: ASSUMPTION deriv_domain_def[T2].deriv_domain?")))
 (|IMP_chain_rule_TCC4| 0
  (|IMP_chain_rule_TCC4-1| |nil| 3795300695
   ("" (EXPAND "not_one_element?" 1)
    (("" (SKEEP) (("" (INST 1 "x+1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)) NIL
   (|IMP_chain_rule| ASSUMING
    "analysis@chain_rule[(exp_analysis.d), real].chain_rule"
    "not_one_element2: ASSUMPTION deriv_domain_def[T2].not_one_element?")))
 (|IMP_fundamental_theorem_TCC1| 0
  (|IMP_fundamental_theorem_TCC1-1| |nil| 3795300695
   ("" (LEMMA "non_empty")
    (("" (EXPAND "nonempty?" -1)
      (("" (EXPAND "empty?")
        (("" (SKEEP)
          (("" (INST 1 "x")
            (("" (EXPAND "member" -1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL (|IMP_fundamental_theorem| EXISTENCE "" "(exp_analysis.d)")))
 (|IMP_fundamental_theorem_TCC2| 0
  (|IMP_fundamental_theorem_TCC2-1| |nil| 3795300695
   ("" (LEMMA "connected") (("" (PROPAX) NIL NIL)) NIL) NIL NIL
   (|IMP_fundamental_theorem| ASSUMING
    "analysis@fundamental_theorem[(exp_analysis.d)].fundamental_theorem"
    "connected_domain: ASSUMPTION deriv_domain_def[T].connected?")))
 (|derivable_exp_lin| 0
  (|derivable_exp_lin-1| |nil| 3788704411
   ("" (LEMMA "id_derivable_fun[(d)]")
    (("" (LEMMA "scal_derivable_fun[(d)]")
      (("" (LEMMA "const_derivable_fun[(d)]")
        (("" (LEMMA "diff_derivable_fun[(d)]")
          (("" (SKEEP)
            (("" (INST -1 "LAMBDA(x:(d)): c1*x" "LAMBDA(x:(d)): c2")
              (("" (ASSERT)
                (("" (SPLIT -1)
                  (("1" (EXPAND " -" -1)
                    (("1" (LEMMA "scal_derivable_fun[(d)]")
                      (("1" (INST -1 "c1" "LAMBDA(x:(d)): x")
                        (("1" (ASSERT)
                          (("1" (EXPAND "*" -1)
                            (("1" (ASSERT)
                              (("1" (LEMMA "derivable_exp")
                                (("1" (EXPAND "derivable?" -1)
                                  (("1" (EXPAND "derivable?" 1)
                                    (("1" (SKEEP)
                                      (("1"
                                        (CASE "exp = LAMBDA(x:real): exp(x)")
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "derivable_exp")
                                            (("1"
                                              (CASE
                                                  "exp = LAMBDA(x:real): exp(x)")
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "derivable?" -6)
                                                  (("1" (INST -6 "x_1")
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (LEMMA
                                                         "composition_derivable")
                                                        (("1"
                                                          (INST -1
                                                           "LAMBDA(x:(d)): c1*x-c2"
                                                           "LAMBDA(x:real): exp(x)"
                                                           "x_1")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (INST -5
                                                               "c1*x_1-c2")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND "o ")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (PROPAX) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (INST -2 "c1" "LAMBDA(x:(d)): x")
                      (("2" (ASSERT)
                        (("2" (EXPAND "*" -2) (("2" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (INST -1 "c2") NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|diff_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|composition_derivable| FORMULA-DECL NIL |chain_rule| |analysis|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|derivable_exp| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|const_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|id_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|))
   SHOSTAK))
 (|deriv_exp_lin_TCC1| 0
  (|deriv_exp_lin_TCC1-1| |nil| 3788700066
   ("" (LEMMA "derivable_exp_lin") (("" (PROPAX) NIL NIL)) NIL) NIL NIL
   (|deriv_exp_lin| SUBTYPE
    "LAMBDA (x: (exp_analysis.d)): ln_exp.exp((number_fields.-)(number_fields.*(exp_analysis.c1, x), exp_analysis.c2))"
    "deriv_fun[(d)]")))
 (|deriv_exp_lin| 0
  (|deriv_exp_lin-1| |nil| 3788700138
   ("" (SKEEP)
    (("" (LEMMA "chain_rule")
      (("" (INST -1 "LAMBDA(x: (d)): c1*x-c2" "LAMBDA(x:real): exp(x)")
        (("1" (ASSERT)
          (("1" (REPLACE -1 1)
            (("1" (DECOMPOSE-EQUALITY 1)
              (("1" (EXPAND "*" 1)
                (("1" (TYPEPRED "x!1")
                  (("1" (LEMMA "derivative_exp")
                    (("1" (EXPAND "deriv" -1)
                      (("1" (EXPAND "deriv" 1 1)
                        (("1" (DECOMPOSE-EQUALITY -1)
                          (("1" (INST -1 "c1*x!1-c2")
                            (("1" (CASE "exp = LAMBDA(x:real): exp(x)")
                              (("1" (ASSERT)
                                (("1" (REPLACE -1 1 RL)
                                  (("1" (REPLACE -2 1)
                                    (("1" (DIV-BY 1 "exp(c1*x!1 - c2)")
                                      (("1" (LEMMA "deriv_diff_fun[(d)]")
                                        (("1"
                                          (INST -1 "LAMBDA(x:(d)): c1*x "
                                           "LAMBDA(x:(d)): c2")
                                          (("1" (DECOMPOSE-EQUALITY -1)
                                            (("1" (INST -1 "x!1")
                                              (("1" (EXPAND "-" -1 1)
                                                (("1" (REPLACE -1 1)
                                                  (("1"
                                                    (LEMMA
                                                     "deriv_const_fun[(d)]")
                                                    (("1" (INST -1 "c2")
                                                      (("1"
                                                        (DECOMPOSE-EQUALITY -1)
                                                        (("1" (INST -1 "x!1")
                                                          (("1"
                                                            (EXPAND "-" 1 1)
                                                            (("1"
                                                              (REPLACE -1 1)
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "deriv_scal_fun[(d)]")
                                                                  (("1"
                                                                    (INST -1
                                                                     "c1"
                                                                     "LAMBDA(x:(d)): x")
                                                                    (("1"
                                                                      (DECOMPOSE-EQUALITY
                                                                       -1)
                                                                      (("1"
                                                                        (INST
                                                                         -1
                                                                         "x!1")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "*"
                                                                           -1)
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (LEMMA
                                                                               "deriv_id_fun[(d)]")
                                                                              (("1"
                                                                                (DECOMPOSE-EQUALITY
                                                                                 -1)
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1
                                                                                     1)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (DERIVABLE)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (DERIVABLE)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (DERIVABLE) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (DERIVABLE) NIL NIL)
                                             ("3" (DERIVABLE) NIL NIL))
                                            NIL)
                                           ("2" (DERIVABLE) NIL NIL)
                                           ("3" (DERIVABLE) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("2" (DERIVABLE) NIL NIL)
                                       ("3" (DERIVABLE) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT 1)
                                (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (DERIVABLE) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (DERIVABLE) NIL NIL)
               ("3" (SKEEP) (("3" (DERIVABLE) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (DERIVABLE) NIL NIL) ("3" (DERIVABLE) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|chain_rule| FORMULA-DECL NIL |chain_rule| |analysis|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|d| FORMAL-CONST-DECL "[real -> bool]" |exp_analysis| NIL)
    (|derivable_sub_lam| FORMULA-DECL NIL |derivatives_lam| |analysis|)
    (|derivable_exp| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|comp_derivable_fun| FORMULA-DECL NIL |chain_rule| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|both_sides_div1| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|times_div_cancel2| FORMULA-DECL NIL |extra_real_props| NIL)
    (|deriv_scal_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable_id_lam| FORMULA-DECL NIL |derivatives_lam| |analysis|)
    (|deriv_domain| FORMULA-DECL NIL |derivative_props| |analysis|)
    (|deriv_domain_not_one_element| FORMULA-DECL NIL |deriv_domain_def|
     |analysis|)
    (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|)
    (|deriv_id_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|deriv_const_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|)
    (|derivable_const_lam| FORMULA-DECL NIL |derivatives_lam| |analysis|)
    (|derivable_scal1_lam| FORMULA-DECL NIL |derivatives_lam| |analysis|)
    (|deriv_diff_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|derivable_exp_point| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|not_one_element_real| FORMULA-DECL NIL |deriv_domain| |analysis|)
    (|deriv_domain_real| FORMULA-DECL NIL |deriv_domain| |analysis|)
    (|derivative_exp| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|c1| SKOLEM-CONST-DECL "real" |exp_analysis| NIL)
    (|c2| SKOLEM-CONST-DECL "real" |exp_analysis| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|derivable_exp_lin_r| 0
  (|derivable_exp_lin_r-1| |nil| 3788705446
   ("" (SKEEP)
    (("" (LEMMA "derivable_exp_lin")
      (("" (ASSERT)
        (("" (INST -1 "c1" "c2")
          (("" (LEMMA "scal_derivable_fun[(d)]")
            (("" (INST -1 "1/c1" "LAMBDA (x: (d)): exp(c1 * x - c2)")
              (("" (ASSERT) (("" (EXPAND "*" -1) (("" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|scal_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|))
   SHOSTAK))
 (|deriv_exp_lin_r_TCC1| 0
  (|deriv_exp_lin_r_TCC2-1| |nil| 3788704373
   ("" (LEMMA "derivable_exp_lin")
    (("" (ASSERT)
      (("" (SKEEP 1)
        (("" (INST -1 "c1" "c2")
          (("" (LEMMA "scal_derivable_fun[(d)]")
            (("" (INST -1 "1/c1" "LAMBDA (x: (d)): exp(c1 * x - c2)")
              (("" (ASSERT) (("" (EXPAND "*" -1) (("" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|scal_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|))
   NIL
   (|deriv_exp_lin_r| SUBTYPE
    "LAMBDA (x: (exp_analysis.d)): number_fields./(ln_exp.exp((number_fields.-)(number_fields.*(exp_analysis.c1, x), exp_analysis.c2)), exp_analysis.c1)"
    "deriv_fun[(d)]")))
 (|deriv_exp_lin_r| 0
  (|deriv_exp_lin_r-1| |nil| 3788704895
   ("" (LEMMA "deriv_exp_lin")
    (("" (SKEEP)
      (("" (INST -1 "c1" "c2")
        (("" (LEMMA "deriv_scal_fun[(d)]")
          (("" (LEMMA "scal_derivable_fun[(d)]")
            (("" (INST -1 "1/c1" "LAMBDA (x: (d)): exp(c1 * x - c2)")
              (("" (INST -2 "1/c1" "LAMBDA (x: (d)): exp(c1 * x - c2)")
                (("1" (ASSERT)
                  (("1" (EXPAND "*" -2 1)
                    (("1" (ASSERT)
                      (("1" (REPLACE -3 -2)
                        (("1" (EXPAND "*" -2) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "derivable_exp_lin")
                  (("2" (INST -1 "c1" "c2") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_scal_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|scal_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|))
   SHOSTAK))
 (|cont_exp_lin| 0
  (|cont_exp_lin-1| |nil| 3788705606
   ("" (LEMMA "composition_cont[(d),real]")
    (("" (SKEEP 1)
      (("" (EXPAND "continuous?" 1 1)
        (("" (SKEEP 1)
          (("" (INST -1 "LAMBDA(x:(d)): c1*x-c2" "_" "_")
            (("" (INST -1 "LAMBDA(x:real): exp(x)" "_")
              (("" (INST -1 "x0")
                (("" (ASSERT)
                  (("" (SPLIT -1)
                    (("1" (EXPAND "o") (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (HIDE 2)
                      (("2" (EXPAND "continuous?" 1)
                        (("2" (SKEEP)
                          (("2" (CASE "c1=0")
                            (("1" (INST 1 "epsilon")
                              (("1" (SKEEP 1)
                                (("1" (ASSERT)
                                  (("1" (REPLACE -1 1)
                                    (("1" (ASSERT)
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST 2 "epsilon/abs(c1)")
                              (("1" (ASSERT)
                                (("1" (SKEEP)
                                  (("1" (CASE "c1*x_1-c1*x0 = c1*(x_1-x0)")
                                    (("1" (REPLACE -1)
                                      (("1" (HIDE -1)
                                        (("1" (LEMMA "abs_mult")
                                          (("1" (INST -1 "c1" "(x_1-x0)")
                                            (("1" (ASSERT)
                                              (("1" (REPLACE -1 2)
                                                (("1" (DIV-BY 2 "abs(c1)") NIL
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (SPLIT 1)
                                  (("1" (MULT-BY 1 "abs(c1)")
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (MULT-BY 1 "abs(c1)")
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("3" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (HIDE 2)
                      (("3" (LEMMA "exp_continuous")
                        (("3" (EXPAND "continuous?" -1)
                          (("3" (INST -1 "c1*x0-c2")
                            (("3" (CASE "exp = LAMBDA(x:real): exp(x)")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp_continuous| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|composition_cont| FORMULA-DECL NIL |composition_continuous| |analysis|))
   SHOSTAK))
 (|deriv_Int_lin_TCC1| 0
  (|deriv_Int_lin_TCC3-1| |nil| 3788704373
   ("" (SKEEP 1)
    (("" (LEMMA "continuous_Integrable?[(d)]")
      (("1" (INST -1 "a" "b" "LAMBDA (x: (d)): exp(c1 * x - c2)")
        (("1" (ASSERT)
          (("1" (LEMMA "cont_exp_lin")
            (("1" (INST -1 "c1" "c2")
              (("1" (SKEEP 1)
                (("1" (EXPAND "continuous?" -1) (("1" (INST -1 "x_1") NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "not_one_element") (("2" (PROPAX) NIL NIL)) NIL)
       ("3" (LEMMA "connected") (("3" (PROPAX) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|continuous_Integrable?| FORMULA-DECL NIL |integral| |analysis|)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|Closed_interval| TYPE-EQ-DECL NIL |intervals_real| |reals|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|))
   NIL
   (|deriv_Int_lin| SUBTYPE
    "LAMBDA (x: (exp_analysis.d)): ln_exp.exp((number_fields.-)(number_fields.*(exp_analysis.c1, x), exp_analysis.c2))"
    "Integrable_funs[(exp_analysis.d)](exp_analysis.a, exp_analysis.b)")))
 (|deriv_Int_lin| 0
  (|deriv_Int_lin-1| |nil| 3788706530
   ("" (SKEEP)
    (("" (LEMMA "fundamental3")
      ((""
        (INST -1 "LAMBDA(x:(d)): exp(c1*x-c2)/c1" "a" "b"
         "LAMBDA(x:(d)): exp(c1*x-c2)")
        (("" (ASSERT)
          (("" (HIDE 2)
            (("" (SPLIT 1)
              (("1" (LEMMA "derivable_exp_lin_r")
                (("1" (INST -1 "c1" "c2") NIL NIL)) NIL)
               ("2" (LEMMA "deriv_exp_lin_r")
                (("2" (INST -1 "c1" "c2") NIL NIL)) NIL)
               ("3" (ASSERT)
                (("3" (LEMMA "cont_exp_lin")
                  (("3" (INST -1 "c1" "c2") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|fundamental3| FORMULA-DECL NIL |fundamental_theorem| |analysis|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|))
   SHOSTAK))
 (|derivable_exp_ln_TCC1| 0
  (|derivable_exp_ln_TCC1-1| |nil| 3792170296 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL (|derivable_exp_ln| SUBTYPE "exp_analysis.x" "posreal")))
 (|derivable_exp_ln| 0
  (|derivable_exp_ln-1| |nil| 3792170320
   ("" (SKEEP*)
    (("" (LEMMA "scal_derivable_fun[(d)]")
      (("" (LEMMA "composition_derivable")
        (("" (EXPAND "derivable?" 1)
          (("" (SKEEP)
            ((""
              (INST -1 "LAMBDA(x:(d)): c1*ln(x)" "LAMBDA(x:real): exp(x)"
               "x_1")
              (("1" (ASSERT)
                (("1" (SPLIT -1)
                  (("1" (EXPAND "o ") (("1" (PROPAX) NIL NIL)) NIL)
                   ("2" (HIDE 2)
                    (("2" (INST -1 "c1" "LAMBDA(x:(d)): ln(x)")
                      (("1" (ASSERT)
                        (("1" (SPLIT -1)
                          (("1" (EXPAND "derivable?" -1)
                            (("1" (INST -1 "x_1")
                              (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2)
                            (("2" (LEMMA "ln_derivable")
                              (("2" (FLATTEN)
                                (("2" (LEMMA "derivable_subtype[posreal,(d)]")
                                  (("1" (INST -1 "ln")
                                    (("1" (ASSERT)
                                      (("1" (SPLIT -1)
                                        (("1" (EXPAND "restrict" -1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (LEMMA "deriv_domain_exp_a")
                                          (("2" (PROPAX) NIL NIL)) NIL)
                                         ("3" (LEMMA "not_one_element")
                                          (("3" (PROPAX) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKEEP)
                                    (("2" (INST -3 "x")
                                      (("2" (ASSERT) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (INST -1 "x")
                          (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (LEMMA "derivable_exp")
                    (("3" (EXPAND "derivable?" -1)
                      (("3" (INST -1 "c1*ln(x_1)")
                        (("1" (ASSERT)
                          (("1" (CASE "exp = LAMBDA (x: real): exp(x)")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (TYPEPRED "x_1")
                          (("2" (INST -3 "x_1") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (INST -2 "x")
                  (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|scal_derivable_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|ln_derivable| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable_exp| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|composition_derivable| FORMULA-DECL NIL |chain_rule| |analysis|))
   NIL))
 (|deriv_exp_ln_TCC1| 0
  (|deriv_exp_ln_TCC1-1| |nil| 3792170741
   ("" (SKEEP)
    (("" (LEMMA "derivable_exp_ln")
      (("" (INST -1 "c1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   NIL NIL
   (|deriv_exp_ln| SUBTYPE
    "LAMBDA (x: (exp_analysis.d)): ln_exp.exp(number_fields.*(exp_analysis.c1, ln_exp.ln(x)))"
    "deriv_fun[(d)]")))
 (|deriv_exp_ln_TCC2| 0
  (|deriv_exp_ln_TCC4-1| |nil| 3792170741 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|deriv_exp_ln| SUBTYPE "exp_analysis.x" "nznum")))
 (|deriv_exp_ln| 0
  (|deriv_exp_ln-1| |nil| 3792171171
   ("" (SKEEP)
    (("" (LEMMA "chain_rule")
      (("" (INST -1 "LAMBDA(x: (d)): c1*ln(x)" "LAMBDA(x:real): exp(x)")
        (("1" (ASSERT)
          (("1" (REPLACE -1 1)
            (("1" (DECOMPOSE-EQUALITY 1)
              (("1" (EXPAND "*" 1)
                (("1" (LEMMA "derivative_exp")
                  (("1" (EXPAND "deriv" -1)
                    (("1" (EXPAND "deriv" 1 1)
                      (("1" (DECOMPOSE-EQUALITY -1)
                        (("1" (INST -1 "c1*ln(x!1)")
                          (("1" (CASE "exp = LAMBDA(x:real): exp(x)")
                            (("1" (ASSERT)
                              (("1" (REPLACE -1 1 RL)
                                (("1" (REPLACE -2 1)
                                  (("1" (LEMMA "deriv_scal_fun[(d)]")
                                    (("1" (INST -1 "c1" "LAMBDA(x:(d)): ln(x)")
                                      (("1" (DECOMPOSE-EQUALITY -1)
                                        (("1" (INST -1 "x!1")
                                          (("1" (EXPAND "*" -1)
                                            (("1" (REPLACE -1 1)
                                              (("1" (LEMMA "ln_derivable")
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (LEMMA
                                                       "deriv_subtype_dd[posreal,(d)]")
                                                      (("1" (INST -1 "ln")
                                                        (("1" (ASSERT)
                                                          (("1" (SPLIT -1)
                                                            (("1"
                                                              (EXPAND
                                                               "restrict" -1)
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (DECOMPOSE-EQUALITY
                                                                   -3)
                                                                  (("1"
                                                                    (DECOMPOSE-EQUALITY
                                                                     -2)
                                                                    (("1"
                                                                      (INST -2
                                                                       "x!1")
                                                                      (("1"
                                                                        (INST
                                                                         -1
                                                                         "x!1")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (HIDE
                                                                         2)
                                                                        (("2"
                                                                          (HIDE
                                                                           -)
                                                                          (("2"
                                                                            (TYPEPRED
                                                                             "x!1")
                                                                            (("2"
                                                                              (REVEAL
                                                                               -)
                                                                              (("2"
                                                                                (INST
                                                                                 -7
                                                                                 "x!1")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (INST -10
                                                                       "x!2")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (INST -10
                                                                       "x!2")
                                                                      (("3"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("4"
                                                                      (HIDE -1
                                                                       -2 -3 -5
                                                                       -6 -7 -8
                                                                       -9)
                                                                      (("4"
                                                                        (LEMMA
                                                                         "derivable_subtype[posreal,(d)]")
                                                                        (("4"
                                                                          (INST
                                                                           -1
                                                                           "ln")
                                                                          (("4"
                                                                            (ASSERT)
                                                                            (("4"
                                                                              (SPLIT
                                                                               -1)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "restrict"
                                                                                 -1)
                                                                                (("1"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE
                                                                                 2
                                                                                 3)
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "deriv_domain_exp_a")
                                                                                  (("2"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (HIDE
                                                                                 2
                                                                                 3)
                                                                                (("3"
                                                                                  (LEMMA
                                                                                   "not_one_element")
                                                                                  (("3"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("5"
                                                                      (INST -10
                                                                       "s!1")
                                                                      (("5"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("6"
                                                                      (INST -10
                                                                       "s!1")
                                                                      (("6"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (LEMMA
                                                               "deriv_domain_exp_a")
                                                              (("2" (PROPAX)
                                                                NIL NIL))
                                                              NIL)
                                                             ("3"
                                                              (LEMMA
                                                               "not_one_element")
                                                              (("3" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKEEP 1)
                                                        (("2" (ASSERT)
                                                          (("2" (INST -7 "x")
                                                            (("2" (ASSERT)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE 2)
                                          (("2" (HIDE -)
                                            (("2"
                                              (LEMMA
                                               "derivable_subtype[posreal,(d)]")
                                              (("1" (INST -1 "ln")
                                                (("1" (LEMMA "ln_derivable")
                                                  (("1" (FLATTEN)
                                                    (("1" (SPLIT -3)
                                                      (("1"
                                                        (EXPAND "restrict" -1)
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (PROPAX) NIL NIL)
                                                       ("3"
                                                        (LEMMA
                                                         "deriv_domain_exp_a")
                                                        (("3" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("4"
                                                        (LEMMA
                                                         "not_one_element")
                                                        (("4" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKEEP)
                                                (("2" (REVEAL -)
                                                  (("2" (INST -6 "x")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (INST -7 "x!2")
                                          (("3" (ASSERT) NIL NIL)) NIL)
                                         ("4" (INST -7 "x!2")
                                          (("4" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2"
                                        (LEMMA
                                         "derivable_subtype[posreal,(d)]")
                                        (("1" (INST -1 "ln")
                                          (("1" (ASSERT)
                                            (("1" (SPLIT -1)
                                              (("1" (EXPAND "restrict")
                                                (("1" (PROPAX) NIL NIL)) NIL)
                                               ("2" (LEMMA "ln_derivable")
                                                (("2" (ASSERT) NIL NIL)) NIL)
                                               ("3"
                                                (LEMMA "deriv_domain_exp_a")
                                                (("3" (PROPAX) NIL NIL)) NIL)
                                               ("4" (LEMMA "not_one_element")
                                                (("4" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (SKEEP)
                                          (("2" (INST -4 "x")
                                            (("2" (ASSERT)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (SKEEP)
                                        (("3" (INST -4 "x")
                                          (("3" (ASSERT)
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                            NIL)
                           ("2" (INST -2 "x!1") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("2" (LEMMA "derivable_exp")
                          (("2" (ASSERT)
                            (("2" (EXPAND "derivable?" -1)
                              (("2" (INST -1 "x1!1") NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP 1)
                (("2" (INST -3 "x") (("2" (ASSERT) NIL NIL)) NIL)) NIL)
               ("3" (LEMMA "derivable_scal[(d)]")
                (("3" (INST -1 "c1" "LAMBDA(x:(d)): ln(x)")
                  (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
                   ("2" (HIDE 2)
                    (("2" (LEMMA "ln_derivable")
                      (("2" (FLATTEN)
                        (("2" (ASSERT)
                          (("2" (LEMMA "derivable_subtype[posreal,(d)]")
                            (("1" (INST -1 "ln")
                              (("1" (ASSERT)
                                (("1" (SPLIT -1)
                                  (("1" (EXPAND "restrict")
                                    (("1" (PROPAX) NIL NIL)) NIL)
                                   ("2" (LEMMA "deriv_domain_exp_a")
                                    (("2" (PROPAX) NIL NIL)) NIL)
                                   ("3" (LEMMA "not_one_element")
                                    (("3" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (INST -4 "x")
                                (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (SKEEP)
                    (("3" (INST -2 "x")
                      (("3" (ASSERT) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("4" (SKEEP 1)
                (("4" (LEMMA "derivable_exp")
                  (("4" (CASE "exp = LAMBDA(x:real): exp(x)")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("5" (SKEEP)
                (("5" (INST -2 "x_1")
                  (("5" (ASSERT) (("5" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "derivable_exp")
            (("2" (ASSERT)
              (("2" (CASE "exp = LAMBDA(x:real): exp(x)")
                (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY 1) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (LEMMA "derivable_scal[(d)]")
            (("3" (INST -1 "c1" "LAMBDA(x:(d)): ln(x)")
              (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)
               ("2" (HIDE 2)
                (("2" (LEMMA "ln_derivable")
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (LEMMA "derivable_subtype[posreal,(d)]")
                        (("1" (INST -1 "ln")
                          (("1" (ASSERT)
                            (("1" (SPLIT -1)
                              (("1" (EXPAND "restrict")
                                (("1" (PROPAX) NIL NIL)) NIL)
                               ("2" (LEMMA "deriv_domain_exp_a")
                                (("2" (PROPAX) NIL NIL)) NIL)
                               ("3" (LEMMA "not_one_element")
                                (("3" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKEEP)
                          (("2" (ASSERT)
                            (("2" (INST -3 "x")
                              (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (SKEEP)
                (("3" (INST -1 "x")
                  (("3" (ASSERT) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (HIDE 2)
          (("4" (SKEEP)
            (("4" (INST -1 "x") (("4" (ASSERT) (("4" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|chain_rule| FORMULA-DECL NIL |chain_rule| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|derivative_exp| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|derivable_exp| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|deriv_subtype_dd| FORMULA-DECL NIL |derivatives_subtype| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|)
    (|deriv_domain_posreal| FORMULA-DECL NIL |deriv_domain| |analysis|)
    (|not_one_element_posreal| FORMULA-DECL NIL |deriv_domain| |analysis|)
    (|ln_derivable| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|deriv_scal_fun| FORMULA-DECL NIL |derivatives| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|derivable_scal| JUDGEMENT-TCC NIL |derivatives| |analysis|)
    (|exp| CONST-DECL "{py | x = ln(py)}" |ln_exp| |lnexp|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|ln| CONST-DECL "real" |ln_exp| |lnexp|))
   SHOSTAK)))

