(|cd3d_ii| (|FlightPlanRelevant2_TCC1| 0 (|FlightPlanRelevant2_TCC1-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|FlightPlanRelevant2| SUBTYPE "0" "below[M]"))) (|FlightPlanRelevant2_TCC2| 0 (|FlightPlanRelevant2_TCC2-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|FlightPlanRelevant2| SUBTYPE "(number_fields.-)(cd3d_ii.N, 1)" "below[N]"))) (|FlightPlanRelevant2_TCC3| 0 (|FlightPlanRelevant2_TCC3-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|FlightPlanRelevant2| SUBTYPE "0" "below[N]"))) (|FlightPlanRelevant2_TCC4| 0 (|FlightPlanRelevant2_TCC4-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant2| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]"))) (|FlightPlanRelevant2_TCC5| 0 (|FlightPlanRelevant2_TCC5-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant2| SUBTYPE "(number_fields.-)(cd3d_ii.i, 1)" "below[M]"))) (|FlightPlanRelevant2_TCC6| 0 (|FlightPlanRelevant2_TCC6-2| "" 3884844226 ("" (SKEEP) (("" (INST + "lambda (j: below[M]): (# time:= IF j < N THEN fp(j)`time ELSE j+fp(N-1)`time ENDIF,position:=zero #)") (("1" (GROUND) (("1" (SKEEP) (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (GROUND) (("1" (TYPEPRED "fp") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (LIFT-IF) (("3" (GROUND) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST - "fp" "N-1" "0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|FlightPlanRelevant2| EXISTENCE "" "{flp: flightplan[cd3d_ii.M].FlightPlan | booleans.AND(reals.<(flp(0)`time, cd3d_ii.fp((number_fields.-)(cd3d_ii.N, 1))`time), booleans.AND(reals.<(cd3d_ii.fp(0)`time, flp((number_fields.-)(cd3d_ii.M, 1))`time), reals.<(flp(0)`time, (number_fields.+)(cd3d_ii.fp(0)`time, cd3d_ii.T))))}")) (|FlightPlanRelevant2_TCC6-1| |nil| 3482767958 ("" (SKEEP) (("" (INST + "lambda (j: below[M]): (# time:= IF j < N THEN fp(j)`time ELSE j+fp(N-1)`time ENDIF,position:=zero #)") (("1" (GROUND) (("1" (SKEEP) (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (GROUND) (("1" (TYPEPRED FP) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (LIFT-IF) (("3" (GROUND) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST - FP "N-1" 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|fp| SKOLEM-CONST-DECL "FlightPlan[N]" |cd3d_ii| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_3D| |vectors|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|flight_plan_ascending_time| FORMULA-DECL NIL |flightplan| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant2| EXISTENCE "" "{flp: flightplan[cd3d_ii.M].FlightPlan | booleans.AND(reals.<(flp(0)`time, cd3d_ii.fp((number_fields.-)(cd3d_ii.N, 1))`time), booleans.AND(reals.<(cd3d_ii.fp(0)`time, flp((number_fields.-)(cd3d_ii.M, 1))`time), reals.<(flp(0)`time, (number_fields.+)(cd3d_ii.fp(0)`time, cd3d_ii.T))))}"))) (|FlightTimesRelevant2_TCC1| 0 (|FlightTimesRelevant2_TCC1-1| |nil| 3482836778 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|FlightTimesRelevant2| SUBTYPE "0" "below[N]"))) (|FlightTimesRelevant2_TCC2| 0 (|FlightTimesRelevant2_TCC2-1| |nil| 3483457740 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightTimesRelevant2| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]"))) (|FlightTimesLimited2_TCC1| 0 (|FlightTimesLimited2_TCC1-1| |nil| 3483200922 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightTimesLimited2| SUBTYPE "(number_fields.-)(cd3d_ii.N, 1)" "nat"))) (|FlightTimesLimited2_TCC2| 0 (|FlightTimesLimited2_TCC2-1| |nil| 3483206183 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|FlightTimesLimited2| SUBTYPE "cd3d_ii.j" "below[N]"))) (|FlightTimesLimited2_TCC3| 0 (|FlightTimesLimited2_TCC3-1| |nil| 3483267537 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightTimesLimited2| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]"))) (|FlightTimesLimited2_TCC4| 0 (|FlightTimesLimited2_TCC4-1| |nil| 3483377850 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightTimesLimited2| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]"))) (|conflict_3D_ii?_TCC1| 0 (|conflict_3D_ii?_TCC1-1| |nil| 3482836778 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL)) NIL (|conflict_3D_ii?| SUBTYPE "cd3d_ii.tt" "FlightTimes[cd3d_ii.N](cd3d_ii.fp)"))) (|conflict_3D_ii?_TCC2| 0 (|conflict_3D_ii?_TCC2-1| |nil| 3483457740 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL)) NIL (|conflict_3D_ii?| SUBTYPE "cd3d_ii.tt" "FlightTimes[cd3d_ii.M](cd3d_ii.fp2)"))) (|seg_allowable_TCC1| 0 (|seg_allowable_TCC1-1| |nil| 3483437086 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|total_order_restrict| APPLICATION-JUDGEMENT "(total_order?[S])" |restrict_order_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (|segment_max| CONST-DECL "[SS: non_empty_finite_set[nat] ->
   {a: nat | SS(a) AND (FORALL (x: nat): SS(x) IMPLIES x <= a)}]" |flightplan| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|seg_allowable| SUBTYPE "(number_fields.+)(1, cd3d_ii.j)" "below[N]"))) (|seg_allowable| 0 (|seg_allowable-2| "" 3884844360 ("" (SKEEP) (("" (TYPEPRED "t1") (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (SKOLEM - "jj") (("" (FLATTEN) (("" (LEMMA "segment_index[N]") (("" (INST - "fp" "jj" "t1") (("" (FLATTEN) (("" (ASSERT) (("" (LEMMA "segment_index[N]") (("" (INST - "fp" "j" "t1") (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (TYPEPRED "fp") (("1" (INST - "jj+1") (("1" (ASSERT) (("1" (HIDE -5) (("1" (TYPEPRED "jj") (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "segment_def[N]") (("2" (INST - "fp" "t1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|seg_allowable-1| |nil| 3483437086 ("" (SKEEP) (("" (TYPEPRED T1) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (SKOLEM - JJ) (("" (FLATTEN) (("" (LEMMA SEGMENT_INDEX[N]) (("" (INST - FP JJ T1) (("" (FLATTEN) (("" (ASSERT) (("" (LEMMA SEGMENT_INDEX[N]) (("" (INST - FP J T1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (TYPEPRED FP) (("1" (INST - "jj+1") (("1" (ASSERT) (("1" (HIDE -5) (("1" (TYPEPRED JJ) (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP T1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL)) (|time_in_range_TCC1| 0 (|time_in_range_TCC1-2| "" 3884844394 ("" (SKEEP) (("" (ASSERT) (("" (TYPEPRED "t1") (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (SKOLEM -3 "jj") (("" (FLATTEN) (("" (ASSERT) (("" (LEMMA "segment_max[N]") (("" (INST - "fp" "t1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|time_in_range| SUBTYPE "(number_fields.+)(1, cd3d_ii.j)" "below[N]")) (|time_in_range_TCC1-1| |nil| 3483276637 ("" (SKEEP) (("" (ASSERT) (("" (TYPEPRED T1) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (SKOLEM -3 JJ) (("" (FLATTEN) (("" (ASSERT) (("" (LEMMA SEGMENT_MAX[N]) (("" (INST - FP T1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|segment_max| FORMULA-DECL NIL |flightplan| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|time_in_range| SUBTYPE "(number_fields.+)(1, cd3d_ii.j)" "below[N]"))) (|time_in_range_TCC2| 0 (|time_in_range_TCC2-2| "" 3884844501 ("" (SKEEP) (("" (EXPAND "min") (("" (LIFT-IF) (("" (TYPEPRED "fp") (("" (INST - "j+1") (("1" (ASSERT) (("1" (TYPEPRED "t1") (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (SKOLEM -3 "jj") (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "segment_max[N]") (("1" (INST - "fp" "t1") (("1" (ASSERT) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST - "fp" "j" "0") (("1" (LEMMA "segment_def[N]") (("1" (INST - "fp" "t1") (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (TYPEPRED "t1") (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (SKOLEM -3 "jj") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (TYPEPRED "j") (("2" (LEMMA "segment_max[N]") (("2" (INST - "fp" "t1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|time_in_range| SUBTYPE "real_defs.min((number_fields.-)(cd3d_ii.fp((number_fields.+)(1, cd3d_ii.j))`time, cd3d_ii.fp(cd3d_ii.j)`time), (number_fields.+)((number_fields.-)(cd3d_ii.fp(0)`time, cd3d_ii.fp(cd3d_ii.j)`time), cd3d_ii.T))" "{AB: real_types.posreal | booleans.TRUE}")) (|time_in_range_TCC2-1| |nil| 3483276637 ("" (SKEEP) (("" (EXPAND "min") (("" (LIFT-IF) (("" (TYPEPRED FP) (("" (INST - "j+1") (("1" (ASSERT) (("1" (TYPEPRED T1) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (SKOLEM -3 JJ) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA SEGMENT_MAX[N]) (("1" (INST - FP T1) (("1" (ASSERT) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (INST - FP J 0) (("1" (LEMMA SEGMENT_DEF[N]) (("1" (INST - FP T1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (TYPEPRED T1) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (SKOLEM -3 JJ) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (TYPEPRED J) (("2" (LEMMA SEGMENT_MAX[N]) (("2" (INST - FP T1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|segment_max| FORMULA-DECL NIL |flightplan| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|flight_plan_ascending_time| FORMULA-DECL NIL |flightplan| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|time_in_range| SUBTYPE "real_defs.min((number_fields.-)(cd3d_ii.fp((number_fields.+)(1, cd3d_ii.j))`time, cd3d_ii.fp(cd3d_ii.j)`time), (number_fields.+)((number_fields.-)(cd3d_ii.fp(0)`time, cd3d_ii.fp(cd3d_ii.j)`time), cd3d_ii.T))" "{AB: real_types.posreal | booleans.TRUE}"))) (|time_in_range_TCC3| 0 (|time_in_range_TCC3-2| "" 3884844533 ("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED "t1") (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (LEMMA "segment_max[N]") (("" (INST - "fp" "t1") (("" (ASSERT) (("" (SKOLEM -4 "jj") (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|time_in_range| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]")) (|time_in_range_TCC3-1| |nil| 3483276637 ("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED T1) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (LEMMA SEGMENT_MAX[N]) (("" (INST - FP T1) (("" (ASSERT) (("" (SKOLEM -4 JJ) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|segment_max| FORMULA-DECL NIL |flightplan| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|time_in_range| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]"))) (|time_in_range| 0 (|time_in_range-3| "" 3884844779 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (TYPEPRED "t1") (("" (TYPEPRED "t2") (("" (TYPEPRED "fp") (("" (SKEEP -8) (("" (NAME "jj" "segment(fp)(t1)") (("" (REPLACE -1) (("" (NAME "segend" "min(fp(1 + jj)`time - fp(jj)`time, fp(0)`time - fp(jj)`time + T)") (("" (REPLACE -1) (("" (CASE "segend <= fp(1 + jj)`time - fp(jj)`time") (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (ASSERT) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (ASSERT) (("1" (INST - "fp" "jj" "0") (("1" (SPLIT +) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (LEMMA "segment_def[N]") (("2" (INST - "fp" "t1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REPLACE -6) (("2" (CASE "jj<j") (("1" (ASSERT) (("1" (CASE "j=jj+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "jj < j-1") (("1" (ASSERT) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST - "fp" "j-1" "jj") (("1" (ASSERT) (("1" (REPLACE -17) (("1" (ASSERT) (("1" (CASE "fp(j)`time < fp(jj+1)`time") (("1" (ASSERT) (("1" (TYPEPRED "j") (("1" (TYPEPRED "jj") (("1" (CASE "j-1 < jj+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST - "fp" "j" "jj") (("2" (CASE "jj <= j-2") (("1" (ASSERT) (("1" (HIDE -2) (("1" (HIDE -6 -7) (("1" (REPLACE -19 :DIR RL) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST - "fp" "j" "jj+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST - "fp" "jj" "j") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|time_in_range-2| "nooooo!" 3483365871 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (TYPEPRED T1) (("" (TYPEPRED T2) (("" (TYPEPRED FP) (("" (SKEEP -8) (("" (NAME JJ "segment(fp)(t1)") (("" (REPLACE -1) (("" (NAME SEGEND "min(fp(1 + jj)`time - fp(jj)`time, fp(0)`time - fp(jj)`time + T)") (("" (REPLACE -1) (("" (CASE "segend <= fp(1 + jj)`time - fp(jj)`time") (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (ASSERT) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (ASSERT) (("1" (INST - FP JJ 0) (("1" (SPLIT +) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP T1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REPLACE -6) (("2" (CASE "jj<j") (("1" (ASSERT) (("1" (CASE "j=jj+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "jj < j-1") (("1" (ASSERT) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (INST - FP "j-1" JJ) (("1" (ASSERT) (("1" (REPLACE -17) (("1" (ASSERT) (("1" (CASE "fp(j)`time < fp(jj+1)`time") (("1" (ASSERT) (("1" (TYPEPRED J) (("1" (TYPEPRED JJ) (("1" (CASE "j-1 < jj+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("2" (INST - FP J JJ) (("2" (CASE "jj <= j-2") (("1" (ASSERT) (("1" (HIDE -2) (("1" (HIDE -6 -7) (("1" (REPLACE -19 :DIR RL) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (INST - FP J "jj+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("2" (INST - FP JJ J) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|flight_plan_ascending_time| FORMULA-DECL NIL |flightplan| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightTimesRelevant| TYPE-EQ-DECL NIL |cd3d_si| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK) (|time_in_range-1| |nil| 3483278009 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (TYPEPRED T1) (("" (TYPEPRED T2) (("" (TYPEPRED FP) (("" (SKEEP -8) (("" (NAME JJ "segment(fp)(t1)") (("" (REPLACE -1) (("" (NAME SEGEND "min(fp(1 + jj)`time - fp(jj)`time, fp(0)`time - fp(jj)`time + T)") (("" (REPLACE -1) (("" (CASE "segend <= fp(1 + jj)`time - fp(jj)`time") (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (ASSERT) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (ASSERT) (("1" (INST - FP JJ 0) (("1" (SPLIT +) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP T1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REPLACE -6) (("2" (CASE "jj<j") (("1" (ASSERT) (("1" (CASE "j=jj+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (CASE "jj < j-1") (("1" (ASSERT) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (INST - FP "j-1" JJ) (("1" (ASSERT) (("1" (REPLACE -17) (("1" (ASSERT) (("1" (CASE "fp(j)`time < fp(jj+1)`time") (("1" (ASSERT) (("1" (TYPEPRED J) (("1" (TYPEPRED JJ) (("1" (CASE "j-1 < jj+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("2" (INST - FP J JJ) (("2" (CASE "jj <= j-2") (("1" (ASSERT) (("1" (HIDE -2) (("1" (HIDE -6 -7) (("1" (REPLACE -19 :DIR RL) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (INST - FP J "jj+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("2" (INST - FP JJ J) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|limited_bounds_TCC1| 0 (|limited_bounds_TCC1-2| "" 3884844814 ("" (SKEEP) (("" (TYPEPRED "jt") (("" (SKOLEM - "jj") (("" (ASSERT) (("" (EXPAND "end_time") (("" (EXPAND "start_time") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (LEMMA "segment_def[N]") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|limited_bounds| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]")) (|limited_bounds_TCC1-1| |nil| 3483438693 ("" (SKEEP) (("" (TYPEPRED JT) (("" (SKOLEM - JJ) (("" (ASSERT) (("" (EXPAND "end_time") (("" (EXPAND "start_time") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (LEMMA SEGMENT_DEF[N]) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|limited_bounds| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]"))) (|limited_bounds_TCC2| 0 (|limited_bounds_TCC2-1| |nil| 3483438693 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|segment_max| CONST-DECL "[SS: non_empty_finite_set[nat] ->
   {a: nat | SS(a) AND (FORALL (x: nat): SS(x) IMPLIES x <= a)}]" |flightplan| NIL) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|limited_bounds| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]"))) (|limited_bounds| 0 (|limited_bounds-2| "" 3884844881 ("" (SKEEP) (("" (TYPEPRED "jt") (("" (SKOLEM - "jj") (("" (FLATTEN) (("" (LEMMA "seg_allowable") (("" (INST - "fp" "fp2" "jt" "j") (("" (ASSERT) (("" (FLATTEN) (("" (EXPAND "min") (("" (LIFT-IF) (("" (CASE "jj=j") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "fp(j+1)`time>fp(0)`time+T") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "segment_def[N]") (("2" (INST - "fp" "jt") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "jj" "jt") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|limited_bounds-1| |nil| 3483438817 ("" (SKEEP) (("" (TYPEPRED JT) (("" (SKOLEM - JJ) (("" (FLATTEN) (("" (LEMMA SEG_ALLOWABLE) (("" (INST - FP FP2 JT J) (("" (ASSERT) (("" (FLATTEN) (("" (EXPAND "min") (("" (LIFT-IF) (("" (CASE "jj=j") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "fp(j+1)`time>fp(0)`time+T") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP JT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ JT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|seg_allowable| FORMULA-DECL NIL |cd3d_ii| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|upper_seg_bounds_TCC1| 0 (|upper_seg_bounds_TCC1-2| "" 3884844907 ("" (SKEEP) (("" (TYPEPRED "jt") (("" (SKOLEM - "jj") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (ASSERT) (("" (CASE "jj=j") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "segment_def[N]") (("2" (INST?) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|upper_seg_bounds| SUBTYPE "(number_fields.+)(1, cd3d_ii.j)" "below[N]")) (|upper_seg_bounds_TCC1-1| |nil| 3483459080 ("" (SKEEP) (("" (TYPEPRED JT) (("" (SKOLEM - JJ) (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (ASSERT) (("" (CASE "jj=j") (("1" (ASSERT) NIL NIL) ("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST?) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|upper_seg_bounds| SUBTYPE "(number_fields.+)(1, cd3d_ii.j)" "below[N]"))) (|upper_seg_bounds| 0 (|upper_seg_bounds-2| "" 3884844968 ("" (SKEEP) (("" (LEMMA "seg_allowable") (("" (INST?) (("" (INST - "j") (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (TYPEPRED "jt") (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (ASSERT) (("" (SKOLEM - "jj") (("" (FLATTEN) (("" (ASSERT) (("" (CASE "jj=j") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "segment_def[N]") (("2" (INST?) (("2" (ASSERT) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "jj" "jt") (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "jj+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|upper_seg_bounds-1| |nil| 3483459081 ("" (SKEEP) (("" (LEMMA SEG_ALLOWABLE) (("" (INST?) (("" (INST - J) (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (TYPEPRED JT) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (ASSERT) (("" (SKOLEM - JJ) (("" (FLATTEN) (("" (ASSERT) (("" (CASE "jj=j") (("1" (ASSERT) NIL NIL) ("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST?) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ JT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jj+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|seg_allowable| FORMULA-DECL NIL |cd3d_ii| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|cd3d_ii_rew_TCC1| 0 (|cd3d_ii_rew_TCC1-2| "" 3884845015 ("" (SKEEP) (("" (TYPEPRED "tt") (("" (LEMMA "segment_index[N]") (("" (INST - "fp" "j" "tt") (("1" (ASSERT) (("1" (ASSERT) (("1" (SKOLEM -4 "jj") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "segment_max[N]") (("2" (INST?) (("2" (ASSERT) (("2" (SKOLEM -4 "jj") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|cd3d_ii_rew| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]")) (|cd3d_ii_rew_TCC1-1| |nil| 3483179145 ("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED TT) (("" (LEMMA SEGMENT_INDEX[N]) (("" (INST - FP J TT) (("1" (ASSERT) (("1" (ASSERT) (("1" (SKOLEM -4 JJ) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA SEGMENT_MAX[N]) (("2" (INST?) (("2" (ASSERT) (("2" (SKOLEM -4 JJ) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|segment_max| FORMULA-DECL NIL |flightplan| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|cd3d_ii_rew| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]"))) (|cd3d_ii_rew_TCC2| 0 (|cd3d_ii_rew_TCC2-3| "" 3884845040 ("" (SKEEP) (("" (TYPEPRED "tt") (("" (LEMMA "segment_max[N]") (("" (INST?) (("" (ASSERT) (("" (SKOLEM -4 "jj") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|cd3d_ii_rew| SUBTYPE "cd3d_ii.j" "below[N - 1]")) (|cd3d_ii_rew_TCC2-2| "" 3790109064 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED TT) (("" (LEMMA SEGMENT_MAX[N]) (("" (INST?) (("" (ASSERT) (("" (SKOLEM -4 JJ) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|segment_max| FORMULA-DECL NIL |flightplan| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) SHOSTAK (|cd3d_ii_rew| SUBTYPE "cd3d_ii.j" "below[N - 1]")) (|cd3d_ii_rew_TCC2-1| |nil| 3483179145 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED TT) (("" (LEMMA SEGMENT_MAX[N]) (("" (INST?) (("" (ASSERT) (("" (SKOLEM -4 JJ) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|cd3d_ii_rew| SUBTYPE "cd3d_ii.j" "below[N - 1]"))) (|cd3d_ii_rew_TCC3| 0 (|cd3d_ii_rew_TCC3-2| "" 3884845091 ("" (SKEEP) (("" (HIDE -4 -5) (("" (REPLACE -1) (("" (REPLACE -2) (("" (REPLACE -3) (("" (HIDE -2 -3) (("" (EXPAND "min") (("" (LIFT-IF) (("" (LEMMA "segment_ident[N]") (("" (INST?) (("" (REPLACE -2 :DIR RL) (("" (HIDE -1) (("" (TYPEPRED "tt") (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (SKOLEM - "jj") (("" (FLATTEN) (("" (ASSERT) (("" (TYPEPRED "fp") (("" (INST - "j+1") (("1" (ASSERT) (("1" (LEMMA "segment_def[N]") (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "segment_max[N]") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|cd3d_ii_rew| SUBTYPE "cd3d_ii.t" "{AB: real_types.posreal | booleans.TRUE}")) (|cd3d_ii_rew_TCC3-1| |nil| 3483365688 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (HIDE -4 -5) (("" (REPLACE -1) (("" (REPLACE -2) (("" (REPLACE -3) (("" (HIDE -2 -3) (("" (EXPAND "min") (("" (LIFT-IF) (("" (LEMMA SEGMENT_IDENT[N]) (("" (INST?) (("" (REPLACE -2 :DIR RL) (("" (HIDE -1) (("" (TYPEPRED TT) (("" (EXPAND "start_time") (("" (EXPAND "end_time") (("" (SKOLEM - JJ) (("" (FLATTEN) (("" (ASSERT) (("" (TYPEPRED FP) (("" (INST - "j+1") (("1" (ASSERT) (("1" (LEMMA SEGMENT_DEF[N]) (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SEGMENT_MAX[N]) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|segment_max| FORMULA-DECL NIL |flightplan| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|segment_ident| FORMULA-DECL NIL |flightplan| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|cd3d_ii_rew| SUBTYPE "cd3d_ii.t" "{AB: real_types.posreal | booleans.TRUE}"))) (|cd3d_ii_rew| 0 (|cd3d_ii_rew-2| "" 3884845779 ("" (SKEEP) (("" (PROP) (("1" (EXPAND "conflict_3D_ii?") (("1" (SKEEP -1) (("1" (INST + "fp(segment(fp)(tt))`time") (("1" (ASSERT) (("1" (EXPAND "conflict_3D?") (("1" (INST + "tt") (("1" (NAME "loc1" "location_at[N](fp)(tt)") (("1" (LEMMA "segment_ident[N]") (("1" (INST?) (("1" (REPLACE -1) (("1" (NAME "j" "segment(fp)(tt)") (("1" (REPLACE -1) (("1" (EXPAND "location_at" -4 1) (("1" (EXPAND "location_at" -5 1) (("1" (ASSERT) (("1" (LEMMA "segment_max[N]") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (HIDE -4) (("1" (EXPAND "*") (("1" (EXPAND "+") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "tt") (("2" (ASSERT) (("2" (LEMMA "segment_index[N]") (("2" (NAME "j" "segment(fp)(tt)") (("2" (REPLACE -1) (("2" (INST - "fp" "j" "tt") (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "min") (("1" (LEMMA "segment_ident[N]") (("1" (INST - "fp" "tt") (("1" (REPLACE -2 :DIR RL) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "segment_max[N]") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "tt") (("2" (NAME "j" "segment(fp)(tt)") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (HIDE -7 -8) (("2" (TYPEPRED "fp2") (("2" (INST - 1) (("2" (ASSERT) (("2" (LEMMA "segment_index[N]") (("2" (ASSERT) (("2" (INST - "fp" "j" "tt") (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST - "fp" "j" "0") (("1" (SPLIT +) (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "tt") (("2" (INST + "j") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "segment_max[N]") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM -1 "jt") (("2" (NAME "j" "segment(fp)(jt)") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (EXPAND "conflict_3D_ii?") (("2" (LEMMA "conflict_3D_flightplan_open_interval[D, H, 0, min(fp(1 + j)`time - fp(j)`time, fp(0)`time - fp(j)`time + T), M]") (("1" (ASSERT) (("1" (INST?) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (SKOLEM - "tt") (("1" (FLATTEN) (("1" (TYPEPRED "jt") (("1" (SKOLEM - "jj") (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (CASE "jj=j") (("1" (LEMMA "time_in_range") (("1" (INST?) (("1" (REPLACE -10) (("1" (ASSERT) (("1" (INST - "tt") (("1" (FLATTEN) (("1" (ASSERT) (("1" (CASE "tt < fp(N-1)`time AND fp2(0)`time <= tt") (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST + "tt") (("1" (EXPAND "location_at" 1 1) (("1" (EXPAND "location_at" 1 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (LEMMA "segment_max[N]") (("1" (INST - "fp" "tt") (("1" (ASSERT) (("1" (CASE "(fp(j)`position + (tt - jt) * velocity[N](fp)(j))=fp(segment(fp)(tt))`position +
                 (tt - fp(segment(fp)(tt))`time) *
                  velocity(fp)(segment(fp)(tt))") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (EXPAND "+") (("1" (EXPAND "*") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -17 -18 3) (("2" (ASSERT) (("2" (LEMMA "segment_def[N]") (("2" (INST?) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (NAME "k" "segment(fp)(tt)") (("2" (REPLACE -1) (("2" (CASE "j=k") (("1" (REPLACE -1) (("1" (REPLACE -9) (("1" (REPLACE -12) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "j" "tt") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "end_time") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "tt") (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (ASSERT) (("2" (CASE "tt < fp(j+1)`time") (("1" (ASSERT) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST - "fp" "N-1" "j+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "segment_def[N]") (("2" (INST?) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "jj" "jt") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "jj+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2) (("2" (TYPEPRED "jt") (("2" (SKOLEM - "jj") (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "end_time") (("2" (EXPAND "start_time") (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (LEMMA "segment_def[N]") (("2" (INST - "fp" "jt") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REPLACE -10) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "jj" "jt") (("2" (ASSERT) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (TYPEPRED "jt") (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (SKOLEM - "jj") (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "segment_def[N]") (("2" (INST?) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (TYPEPRED "jt") (("3" (SKOLEM -3 "jj") (("3" (FLATTEN) (("3" (ASSERT) (("3" (EXPAND "end_time") (("3" (EXPAND "start_time") (("3" (TYPEPRED "jj") (("3" (ASSERT) (("3" (LEMMA "segment_max[N]") (("3" (INST - "fp" "jt") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|cd3d_ii_rew-1| |nil| 3483179145 ("" (SKEEP) (("" (PROP) (("1" (EXPAND "conflict_3D_ii?") (("1" (SKEEP -1) (("1" (INST + "fp(segment(fp)(tt))`time") (("1" (ASSERT) (("1" (EXPAND "conflict_3D?") (("1" (INST + TT) (("1" (NAME LOC1 "location_at[N](fp)(tt)") (("1" (LEMMA "segment_ident[N]") (("1" (INST?) (("1" (REPLACE -1) (("1" (NAME J "segment(fp)(tt)") (("1" (REPLACE -1) (("1" (EXPAND LOCATION_AT -4 1) (("1" (EXPAND LOCATION_AT -5 1) (("1" (ASSERT) (("1" (LEMMA SEGMENT_MAX[N]) (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (HIDE -4) (("1" (EXPAND "*") (("1" (EXPAND "+
") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED TT) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (NAME J "segment(fp)(tt)") (("2" (REPLACE -1) (("2" (INST - FP J TT) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "min") (("1" (LEMMA SEGMENT_IDENT[N]) (("1" (INST - FP TT) (("1" (REPLACE -2 :DIR RL) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA SEGMENT_MAX[N]) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED TT) (("2" (NAME J "segment(fp)(tt)") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (HIDE -7 -8) (("2" (TYPEPRED FP2) (("2" (INST - 1) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (ASSERT) (("2" (INST - FP J TT) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "flight_plan_ascending_time[N]") (("1" (INST - FP J 0) (("1" (SPLIT +) (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED TT) (("2" (INST + J) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SEGMENT_MAX[N]) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM -1 JT) (("2" (NAME J "segment(fp)(jt)") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (EXPAND "conflict_3D_ii?") (("2" (LEMMA "conflict_3D_flightplan_open_interval[D, H, 0, min(fp(1 + j)`time - fp(j)`time, fp(0)`time - fp(j)`time + T), M]") (("1" (ASSERT) (("1" (INST?) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (SKOLEM - TT) (("1" (FLATTEN) (("1" (TYPEPRED JT) (("1" (SKOLEM - JJ) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (CASE "jj=j") (("1" (LEMMA TIME_IN_RANGE) (("1" (INST?) (("1" (REPLACE -10) (("1" (ASSERT) (("1" (INST - TT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (CASE "tt < fp(N-1)`time AND fp2(0)`time <= tt") (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST + TT) (("1" (EXPAND LOCATION_AT 1 1) (("1" (EXPAND LOCATION_AT 1 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (LEMMA SEGMENT_MAX[N]) (("1" (INST - FP TT) (("1" (ASSERT) (("1" (CASE "(fp(j)`position + (tt - jt) * velocity[N](fp)(j))=fp(segment(fp)(tt))`position +
                 (tt - fp(segment(fp)(tt))`time) *
                  velocity(fp)(segment(fp)(tt))") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (EXPAND "+
") (("1" (EXPAND "*") (("1" (EXPAND "-") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -17 -18 3) (("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST?) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (NAME K "segment(fp)(tt)") (("2" (REPLACE -1) (("2" (CASE "j=k") (("1" (REPLACE -1) (("1" (REPLACE -9) (("1" (REPLACE -12) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "end_time") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED TT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (ASSERT) (("2" (CASE "tt < fp(j+1)`time") (("1" (ASSERT) (("1" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("1" (INST - FP "N-1" "j+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST?) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ JT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jj+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2) (("2" (TYPEPRED JT) (("2" (SKOLEM - JJ) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "end_time") (("2" (EXPAND "start_time") (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP JT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REPLACE -10) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ JT) (("2" (ASSERT) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 2) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (TYPEPRED JT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (SKOLEM - JJ) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST?) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (TYPEPRED JT) (("3" (SKOLEM -3 JJ) (("3" (FLATTEN) (("3" (ASSERT) (("3" (EXPAND "end_time") (("3" (EXPAND "start_time") (("3" (TYPEPRED JJ) (("3" (ASSERT) (("3" (LEMMA SEGMENT_MAX[N]) (("3" (INST - FP JT) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|flight_plan_ascending_time| FORMULA-DECL NIL |flightplan| NIL) (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sqv_cont| NAME-JUDGEMENT "continuous_vr_fun" |vect_cont_2D| |vect_analysis|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightTimesRelevant| TYPE-EQ-DECL NIL |cd3d_si| NIL) (|segment_ident| FORMULA-DECL NIL |flightplan| NIL) (|segment_max| FORMULA-DECL NIL |flightplan| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (+ CONST-DECL "Vector" |vectors_3D| |vectors|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|location_at| CONST-DECL "Vect3" |flightplan| NIL) (|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|conflict_3D?| CONST-DECL "bool" |cd3d_si| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|fp| SKOLEM-CONST-DECL "FlightPlan[N]" |cd3d_ii| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|fp2| SKOLEM-CONST-DECL "FlightPlanRelevant2(fp)" |cd3d_ii| NIL) (|FlightTimesRelevant2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|tt| SKOLEM-CONST-DECL "FlightTimesRelevant2(fp, fp2)" |cd3d_ii| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|conflict_3D_ii?| CONST-DECL "bool" |cd3d_ii| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|conflict_3D_flightplan_open_interval| FORMULA-DECL NIL |cd3d_si| NIL) (|jt| SKOLEM-CONST-DECL "FlightTimesLimited2(fp, fp2)" |cd3d_ii| NIL) (|j| SKOLEM-CONST-DECL "below[N]" |cd3d_ii| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (|time_in_range| FORMULA-DECL NIL |cd3d_ii| NIL) (|tt| SKOLEM-CONST-DECL "FlightTimesRelevant
    [D, H, 0,
     min(fp(1 + j)`time - fp(j)`time, fp(0)`time - fp(j)`time + T), M](jt,
                                                                       fp2)" |cd3d_ii| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) SHOSTAK)) (|cd3d_ii_ind?_TCC1| 0 (|cd3d_ii_ind?_TCC1-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|cd3d_ii_ind?| SUBTYPE "(number_fields.+)(cd3d_ii.j, 1)" "below[N]"))) (|cd3d_ii_ind?_TCC2| 0 (|cd3d_ii_ind?_TCC2-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (<= CONST-DECL "bool" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|cd3d_ii_ind?| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]"))) (|cd3d_ii_ind?_TCC3| 0 (|cd3d_ii_ind?_TCC3-1| |nil| 3483179897 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -1) (("" (HIDE -1) (("" (REPLACE -1) (("" (HIDE -1) (("" (ASSERT) (("" (EXPAND "min") (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|cd3d_ii_ind?| SUBTYPE "cd3d_ii.fp2" "FlightPlanRelevant[cd3d_ii.D, cd3d_ii.H, 0, cd3d_ii.t, cd3d_ii.M](cd3d_ii.to)"))) (|cd3d_ii_ind?_TCC4| 0 (|cd3d_ii_ind?_TCC4-2| "" 3884845800 ("" (SKEEP) (("" (REPLACE -1) (("" (HIDE -1) (("" (REPLACE -1) (("" (HIDE -1) (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (TYPEPRED "fp") (("" (INST - "j+1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|cd3d_ii_ind?| SUBTYPE "cd3d_ii.t" "{AB: real_types.posreal | booleans.TRUE}")) (|cd3d_ii_ind?_TCC4-1| |nil| 3483179897 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -1) (("" (HIDE -1) (("" (REPLACE -1) (("" (HIDE -1) (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (TYPEPRED FP) (("" (INST - "j+1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) NIL (|cd3d_ii_ind?| SUBTYPE "cd3d_ii.t" "{AB: real_types.posreal | booleans.TRUE}"))) (|cd3d_ii_ind?_TCC5| 0 (|cd3d_ii_ind?_TCC5-2| "" 3790109070 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) SHOSTAK (|cd3d_ii_ind?| SUBTYPE "(number_fields.-)(cd3d_ii.j, 1)" "below[N - 1]")) (|cd3d_ii_ind?_TCC5-1| |nil| 3483179897 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (ASSERT) (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|cd3d_ii_ind?| SUBTYPE "(number_fields.-)(cd3d_ii.j, 1)" "below[N - 1]"))) (|some_cd3d_ii| 0 (|some_cd3d_ii-2| "" 3884845848 ("" (INDUCT "i") (("1" (ASSERT) (("1" (FLATTEN) (("1" (SKEEP) (("1" (SPLIT) (("1" (PROP) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKEEP -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (ASSERT) (("2" (INST?) (("2" (PROP) (("1" (SKEEP -3) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) (("2" (EXPAND "cd3d_ii_ind?" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKEEP -1) (("4" (INST?) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP 2) (("3" (SPLIT) (("1" (FLATTEN) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKEEP -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP 2) (("4" (PROP) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|some_cd3d_ii-1| |nil| 3483719267 ("" (INDUCT I) (("1" (ASSERT) (("1" (FLATTEN) (("1" (SKEEP) (("1" (SPLIT) (("1" (PROP) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKEEP -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (SKEEP) (("2" (ASSERT) (("2" (INST?) (("2" (PROP) (("1" (SKEEP -3) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (ASSERT) (("2" (EXPAND CD3D_II_IND? 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKEEP -1) (("4" (INST?) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP 2) (("3" (SPLIT) (("1" (FLATTEN) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (SKEEP -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP 2) (("4" (PROP) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below_induction| FORMULA-DECL NIL |bounded_nat_inductions| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (<= CONST-DECL "bool" |reals| NIL) (|cd3d_ii_ind?| INDUCTIVE-DECL "bool" |cd3d_ii| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK)) (|cd3d_ii?_TCC1| 0 (|cd3d_ii?_TCC1-1| |nil| 3482767958 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|cd3d_ii?| SUBTYPE "(number_fields.-)(cd3d_ii.N, 2)" "below[N - 1]"))) (|cd3d_ii_ind_correct| 0 (|cd3d_ii_ind_correct-3| "" 3884845941 ("" (SKEEP) (("" (INDUCT "i") (("1" (SKEEP -1) (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "cd3d_ii_ind?") (("2" (ASSERT) (("2" (SPLIT) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST 1 0) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_correct[D, H, 0, min(fp(1)`time - fp(0)`time, T), M]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (TYPEPRED "fp") (("2" (INST - 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (PROP) (("1" (SKEEP -1) (("1" (INST + "j") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "cd3d_ii_ind?" -2) (("2" (PROP) (("2" (LEMMA "cd3d_si_correct[D, H, 0,
                 min(fp(2 + jb)`time - fp(1 + jb)`time,
                     fp(0)`time - fp(1 + jb)`time + T),
                 M]") (("1" (INST?) (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "jb+2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (HIDE 2) (("4" (REPLACE -2) (("4" (HIDE -2) (("4" (REPLACE -2) (("4" (HIDE -2) (("4" (HIDE-ALL-BUT (-6 -5 1)) (("4" (EXPAND "min") (("4" (TYPEPRED "fp") (("4" (INST - "j+1") (("4" (ASSERT) (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (ASSERT) NIL NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|cd3d_ii_ind_correct-2| "" 3804528951 ("" (SKEEP) (("" (INDUCT I) (("1" (SKEEP -1) (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "cd3d_ii_ind?") (("2" (ASSERT) (("2" (SPLIT) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST 1 0) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_correct[D, H, 0, min(fp(1)`time - fp(0)`time, T), M]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (TYPEPRED FP) (("2" (INST - 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND CD3D_II_IND? -2) (("2" (PROP) (("2" (LEMMA "cd3d_si_correct[D, H, 0,
                 min(fp(2 + jb)`time - fp(1 + jb)`time,
                     fp(0)`time - fp(1 + jb)`time + T),
                 M]") (("1" (INST?) (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jb+2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (HIDE 2) (("4" (REPLACE -2) (("4" (HIDE -2) (("4" (REPLACE -2) (("4" (HIDE -2) (("4" (HIDE-ALL-BUT (-6 -5 1)) (("4" (EXPAND "min") (("4" (TYPEPRED FP) (("4" (INST - "j+1") (("4" (ASSERT) (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (TYPEPRED M) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (TYPEPRED M) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (ASSERT) NIL NIL)) NIL)) NIL) ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (<= CONST-DECL "bool" |reals| NIL) (|fp2| SKOLEM-CONST-DECL "FlightPlanRelevant2(fp)" |cd3d_ii| NIL) (|fp| SKOLEM-CONST-DECL "FlightPlan[N]" |cd3d_ii| NIL) (|cd3d_ii_ind?| INDUCTIVE-DECL "bool" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|conflict_3D?| CONST-DECL "bool" |cd3d_si| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|below_induction| FORMULA-DECL NIL |bounded_nat_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|cd3d_si_correct| FORMULA-DECL NIL |cd3d_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) SHOSTAK) (|cd3d_ii_ind_correct-1| |nil| 3482839910 ("" (SKEEP) (("" (INDUCT I) (("1" (SKEEP -1) (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND "cd3d_ii_ind?") (("2" (ASSERT) (("2" (SPLIT) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST 1 0) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_correct[D, H, 0, min(fp(1)`time - fp(0)`time, T), M]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (TYPEPRED FP) (("2" (INST - 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND CD3D_II_IND? -2) (("2" (PROP) (("2" (LEMMA "cd3d_si_correct[D, H, 0,
           min(fp(2 + jb)`time - fp(1 + jb)`time,
               fp(0)`time - fp(1 + jb)`time + T),
           M]") (("1" (INST?) (("1" (ASSERT) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jb+2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (HIDE 2) (("4" (REPLACE -2) (("4" (HIDE -2) (("4" (REPLACE -2) (("4" (HIDE -2) (("4" (HIDE -1 -2 -3 -5 -6 -8 -9) (("4" (EXPAND "min") (("4" (TYPEPRED FP) (("4" (INST - "j+1") (("4" (ASSERT) (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (TYPEPRED M) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (TYPEPRED M) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK)) (|cd3d_ii_ind_complete| 0 (|cd3d_ii_ind_complete-3| "" 3884846041 ("" (SKEEP) (("" (INDUCT "i") (("1" (SKEEP -1) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST 1 0) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_complete[D, H, 0,
                      min(fp(1)`time - fp(0)`time,
                          fp(0)`time - fp(0)`time + T),
                      M]") (("1" (PROP) (("1" (INST?) (("1" (GROUND) (("1" (EXPAND "cd3d_ii_ind?") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP -2) (("3" (ASSERT) (("3" (ASSERT) (("3" (CASE "fp(0)`time - fp(j)`time + T > 0 AND
          fp2(0)`time < min(fp(1 + j)`time, fp(0)`time + T) AND
           fp2(M - 1)`time > fp(j)`time AND j <= jb") (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST?) (("1" (PROP) (("1" (EXPAND "cd3d_ii_ind?" 1) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST?) (("2" (PROP) (("2" (CASE "j=jb+1") (("1" (ASSERT) (("1" (REPLACE -1 :DIR RL) (("1" (TYPEPRED "j") (("1" (HIDE -2 -8 1) (("1" (HIDE -3 -4) (("1" (EXPAND "cd3d_ii_ind?") (("1" (PROP) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_complete[D, H, 0,
           min(fp(1 + j)`time - fp(j)`time, fp(0)`time - fp(j)`time + T), M]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (REPLACE -1) (("4" (HIDE -1) (("4" (HIDE 2) (("4" (ASSERT) (("4" (REPLACE -1) (("4" (HIDE -1) (("4" (EXPAND "min") (("4" (LIFT-IF) (("4" (ASSERT) (("4" (TYPEPRED "fp") (("4" (INST - "j+1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (HIDE 2) (("5" (ASSERT) NIL NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (ASSERT) NIL NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|cd3d_ii_ind_complete-2| "" 3790109074 ("" (SKEEP) (("" (INDUCT I) (("1" (SKEEP -1) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST 1 0) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_complete[D, H, 0,
                      min(fp(1)`time - fp(0)`time,
                          fp(0)`time - fp(0)`time + T),
                      M]") (("1" (PROP) (("1" (INST?) (("1" (GROUND) (("1" (EXPAND "cd3d_ii_ind?") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP -2) (("3" (ASSERT) (("3" (ASSERT) (("3" (CASE "fp(0)`time - fp(j)`time + T > 0 AND
          fp2(0)`time < min(fp(1 + j)`time, fp(0)`time + T) AND
           fp2(M - 1)`time > fp(j)`time AND j <= jb") (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST?) (("1" (PROP) (("1" (EXPAND "cd3d_ii_ind?" 1) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST?) (("2" (PROP) (("2" (CASE "j=jb+1") (("1" (ASSERT) (("1" (REPLACE -1 :DIR RL) (("1" (TYPEPRED J) (("1" (HIDE -2 -8 1) (("1" (HIDE -3 -4) (("1" (EXPAND "cd3d_ii_ind?") (("1" (PROP) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_complete[D, H, 0,
           min(fp(1 + j)`time - fp(j)`time, fp(0)`time - fp(j)`time + T), M]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (REPLACE -1) (("4" (HIDE -1) (("4" (HIDE 2) (("4" (ASSERT) (("4" (REPLACE -1) (("4" (HIDE -1) (("4" (EXPAND "min") (("4" (LIFT-IF) (("4" (ASSERT) (("4" (TYPEPRED FP) (("4" (INST - "j+1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (HIDE 2) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (ASSERT) NIL NIL)) NIL)) NIL) ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|fp| SKOLEM-CONST-DECL "FlightPlan[N]" |cd3d_ii| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|fp2| SKOLEM-CONST-DECL "FlightPlanRelevant2(fp)" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|conflict_3D?| CONST-DECL "bool" |cd3d_si| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|cd3d_ii_ind?| INDUCTIVE-DECL "bool" |cd3d_ii| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|below_induction| FORMULA-DECL NIL |bounded_nat_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (|cd3d_si_complete| FORMULA-DECL NIL |cd3d_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL)) SHOSTAK) (|cd3d_ii_ind_complete-1| |nil| 3482852346 ("" (SKEEP) (("" (INDUCT I) (("1" (SKEEP -1) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (INST 1 0) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_complete[D, H, 0,
                      min(fp(1)`time - fp(0)`time,
                          fp(0)`time - fp(0)`time + T),
                      M]") (("1" (PROP) (("1" (INST?) (("1" (GROUND) (("1" (EXPAND "cd3d_ii_ind?") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (SKEEP -2) (("3" (ASSERT) (("3" (LIFT-IF) (("3" (ASSERT) (("3" (CASE "fp(0)`time - fp(j)`time + T > 0 AND
          fp2(0)`time < min(fp(1 + j)`time, fp(0)`time + T) AND
           fp2(M - 1)`time > fp(j)`time AND j <= jb") (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST?) (("1" (PROP) (("1" (EXPAND "cd3d_ii_ind?" 1) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST?) (("2" (PROP) (("2" (CASE "j=jb+1") (("1" (ASSERT) (("1" (REPLACE -1 :DIR RL) (("1" (TYPEPRED J) (("1" (HIDE -2 -8 1) (("1" (HIDE -3 -4) (("1" (EXPAND "cd3d_ii_ind?") (("1" (PROP) (("1" (ASSERT) (("1" (LEMMA "cd3d_si_complete[D, H, 0,
           min(fp(1 + j)`time - fp(j)`time, fp(0)`time - fp(j)`time + T), M]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (SKEEP) (("4" (REPLACE -1) (("4" (HIDE -1) (("4" (HIDE 2) (("4" (ASSERT) (("4" (REPLACE -1) (("4" (HIDE -1) (("4" (EXPAND "min") (("4" (LIFT-IF) (("4" (ASSERT) (("4" (TYPEPRED FP) (("4" (INST - "j+1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (SKEEP) (("5" (HIDE 2) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (SKEEP) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (SKEEP) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK)) (|cd3d_si_complete_parameters_TCC1| 0 (|cd3d_si_complete_parameters_TCC1-3| "" 3884846056 ("" (SKEEP) (("" (TYPEPRED "fp2") (("" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK (|cd3d_si_complete_parameters| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]")) (|cd3d_si_complete_parameters_TCC1-2| "" 3790109074 ("" (SKEEP) (("" (TYPEPRED FP2) (("" (ASSERT) NIL NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK (|cd3d_si_complete_parameters| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]")) (|cd3d_si_complete_parameters_TCC1-1| |nil| 3483721809 ("" (SKEEP) (("" (TYPEPRED FP2) (("" (ASSERT) (("" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|cd3d_si_complete_parameters| SUBTYPE "(number_fields.-)(cd3d_ii.M, 1)" "below[M]"))) (|cd3d_si_complete_parameters_TCC2| 0 (|cd3d_si_complete_parameters_TCC2-1| |nil| 3483723761 ("" (SUBTYPE-TCC) NIL NIL) ((<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightTimesRelevant| TYPE-EQ-DECL NIL |cd3d_si| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|conflict_3D?| CONST-DECL "bool" |cd3d_si| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (|segment_max| CONST-DECL "[SS: non_empty_finite_set[nat] ->
   {a: nat | SS(a) AND (FORALL (x: nat): SS(x) IMPLIES x <= a)}]" |flightplan| NIL) (+ CONST-DECL "Vector" |vectors_3D| |vectors|) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|cd3d_si_complete_parameters| SUBTYPE "cd3d_ii.fp2" "FlightPlanRelevant[cd3d_ii.D, cd3d_ii.H, 0, cd3d_ii.t2, cd3d_ii.M](cd3d_ii.to)"))) (|cd3d_si_complete_parameters| 0 (|cd3d_si_complete_parameters-1| |nil| 3483721810 ("" (SKEEP) (("" (ASSERT) (("" (LEMMA "cd3d_si_complete[D, H, 0, t1, M]") (("" (INST?) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|cd3d_si_complete| FORMULA-DECL NIL |cd3d_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|cd3d_ii_correct| 0 (|cd3d_ii_correct-2| "" 3884846191 ("" (SKEEP) (("" (LEMMA "cd3d_ii_ind_correct") (("" (EXPAND "cd3d_ii?") (("" (INST?) (("1" (ASSERT) (("1" (HIDE -2) (("1" (SKEEP -1) (("1" (ASSERT) (("1" (GROUND) (("1" (LEMMA "cd3d_ii_rew") (("1" (INST - "fp" "fp2") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (NAME "jt" "fp(j)`time") (("1" (INST 1 "jt") (("1" (CASE "segment(fp)(jt) = j") (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "segment_def[N]") (("2" (INST - "fp" "jt") (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "j" "jt") (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -5) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST - "fp" "j" 0) (("2" (LEMMA "flight_plan_ascending_time[N]") (("2" (INST - "fp" "N-1" "j") (("2" (ASSERT) (("2" (GROUND) (("1" (INST + "j") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST + "j") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|cd3d_ii_correct-1| |nil| 3482855369 ("" (SKEEP) (("" (LEMMA CD3D_II_IND_CORRECT) (("" (EXPAND "cd3d_ii?") (("" (INST?) (("1" (ASSERT) (("1" (HIDE -2) (("1" (SKEEP -1) (("1" (ASSERT) (("1" (GROUND) (("1" (LEMMA CD3D_II_REW) (("1" (INST - FP FP2) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (NAME JT "fp(j)`time") (("1" (INST 1 JT) (("1" (CASE "segment(fp)(jt) = j") (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP JT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J JT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -5) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("2" (INST - FP J 0) (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME[N]) (("2" (INST - FP "N-1" J) (("2" (ASSERT) (("2" (GROUND) (("1" (INST + J) (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST + J) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|cd3d_ii_ind_correct| FORMULA-DECL NIL |cd3d_ii| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cd3d_ii_rew| FORMULA-DECL NIL |cd3d_ii| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|flight_plan_ascending_time| FORMULA-DECL NIL |flightplan| NIL) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|fp| SKOLEM-CONST-DECL "FlightPlan[N]" |cd3d_ii| NIL) (|jt| SKOLEM-CONST-DECL "real" |cd3d_ii| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|fp2| SKOLEM-CONST-DECL "FlightPlanRelevant2(fp)" |cd3d_ii| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cd3d_ii?| CONST-DECL "bool" |cd3d_ii| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|cd3d_ii_complete| 0 (|cd3d_ii_complete-4| "" 3884846396 ("" (SKEEP) (("" (LEMMA "cd3d_ii_ind_complete") (("" (COPY 1) (("" (HIDE 1) (("" (EXPAND "cd3d_ii?") (("" (INST?) (("1" (LEMMA "cd3d_ii_rew") (("1" (INST - "fp" "fp2") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (NAME "relt" "T - (fp(j)`time - fp(0)`time)") (("1" (REPLACE -1) (("1" (TYPEPRED "j") (("1" (ASSERT) (("1" (SKOLEM - "tt") (("1" (TYPEPRED "tt") (("1" (SKOLEM - "jj") (("1" (ASSERT) (("1" (FLATTEN) (("1" (HIDE 2) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (CASE "jj=j") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (GROUND) (("1" (EXPAND "conflict_3D?") (("1" (ASSERT) (("1" (SKOLEM - "jt") (("1" (INST + "jt") (("1" (REPLACE -5) (("1" (CASE "segment(fp)(fp(j)`time)=j") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REPLACE -5 :DIR RL) (("2" (LEMMA "segment_def[N]") (("2" (INST - "fp" "tt") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "j" "tt") (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "jt") (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "j" "tt") (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (HIDE -10) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (LEMMA "segment_index[N]") (("2" (INST - "fp" "jj" "tt") (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "jj+1") (("2" (ASSERT) (("2" (REPLACE -2) (("2" (LEMMA "cd3d_si_complete_parameters") (("2" (INST - "fp(jj)`position" "velocity[N](fp)(jj)" "tt" "min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                     fp(0)`time - fp(segment(fp)(tt))`time + T)" "fp" "fp2") (("1" (CASE "min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                             fp(0)`time - fp(segment(fp)(tt))`time + T) = min(fp(1 + jj)`time - fp(jj)`time,
                             fp(0)`time - fp(jj)`time + T)") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (HIDE -14 3) (("1" (EXPAND "cd3d_ii?") (("1" (LEMMA "some_cd3d_ii") (("1" (INST - "fp" "fp2" "N-2") (("1" (ASSERT) (("1" (INST 1 "jj") (("1" (HIDE 2) (("1" (EXPAND "cd3d_ii_ind?") (("1" (FLATTEN) (("1" (ASSERT) (("1" (CASE "fp2(0)`time < min(fp(1 + jj)`time, fp(0)`time + T)") (("1" (ASSERT) (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -14) (("2" (REPLACE -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -13 2 3 4) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|cd3d_ii_complete-3| "" 3790109083 ("" (SKEEP) (("" (LEMMA CD3D_II_IND_COMPLETE) (("" (COPY 1) (("" (HIDE 1) (("" (EXPAND "cd3d_ii?") (("" (INST?) (("1" (LEMMA CD3D_II_REW) (("1" (INST - FP FP2) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (NAME RELT "T - (fp(j)`time - fp(0)`time)") (("1" (REPLACE -1) (("1" (NAME T "min(fp(j + 1)`time - fp(j)`time, relT)") (("1" (TYPEPRED J) (("1" (ASSERT) (("1" (SKOLEM - TT) (("1" (TYPEPRED TT) (("1" (SKOLEM - JJ) (("1" (ASSERT) (("1" (FLATTEN) (("1" (HIDE 2) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (CASE "jj=j") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (GROUND) (("1" (EXPAND "conflict_3D?") (("1" (ASSERT) (("1" (SKOLEM - JT) (("1" (INST + JT) (("1" (REPLACE -5) (("1" (CASE "segment(fp)(fp(j)`time)=j") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REPLACE -5 :DIR RL) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP TT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED JT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (HIDE -10) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jj+1") (("2" (ASSERT) (("2" (REPLACE -2) (("2" (LEMMA CD3D_SI_COMPLETE_PARAMETERS) (("2" (INST - "fp(jj)`position" "velocity[N](fp)(jj)" TT "min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                     fp(0)`time - fp(segment(fp)(tt))`time + T)" FP FP2) (("1" (CASE "min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                             fp(0)`time - fp(segment(fp)(tt))`time + T) = min(fp(1 + jj)`time - fp(jj)`time,
                             fp(0)`time - fp(jj)`time + T)") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (HIDE -14 3) (("1" (EXPAND "cd3d_ii?") (("1" (LEMMA SOME_CD3D_II) (("1" (INST - FP FP2 N-2) (("1" (ASSERT) (("1" (INST 1 JJ) (("1" (HIDE 2) (("1" (EXPAND "cd3d_ii_ind?") (("1" (FLATTEN) (("1" (ASSERT) (("1" (CASE "fp2(0)`time < min(fp(1 + jj)`time, fp(0)`time + T)") (("1" (ASSERT) (("1" (EXPAND "min") (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -14) (("2" (REPLACE -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -13 2 3 4) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|cd3d_ii_ind_complete| FORMULA-DECL NIL |cd3d_ii| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (M FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (T FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightPlanRelevant2| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_ii| NIL) (N FORMAL-CONST-DECL "above[1]" |cd3d_ii| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|conflict_3D?| CONST-DECL "bool" |cd3d_si| NIL) (|segment_index| FORMULA-DECL NIL |flightplan| NIL) (|sqv_cont| NAME-JUDGEMENT "continuous_vr_fun" |vect_cont_2D| |vect_analysis|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|segment_def| FORMULA-DECL NIL |flightplan| NIL) (|fp| SKOLEM-CONST-DECL "FlightPlan[N]" |cd3d_ii| NIL) (|fp2| SKOLEM-CONST-DECL "FlightPlanRelevant2(fp)" |cd3d_ii| NIL) (|tt| SKOLEM-CONST-DECL "FlightTimesLimited2(fp, fp2)" |cd3d_ii| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|segment| CONST-DECL "below[N]" |flightplan| NIL) (D FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (H FORMAL-CONST-DECL "posreal" |cd3d_ii| NIL) (|FlightTimesRelevant| TYPE-EQ-DECL NIL |cd3d_si| NIL) (|jt| SKOLEM-CONST-DECL "FlightTimesRelevant
    [D, H, 0,
     min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
         fp(0)`time - fp(segment(fp)(tt))`time + T),
     M](tt, fp2)" |cd3d_ii| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |cd3d_ii| NIL) (|relt| SKOLEM-CONST-DECL "real" |cd3d_ii| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|cd3d_ii_ind?| INDUCTIVE-DECL "bool" |cd3d_ii| NIL) (|some_cd3d_ii| FORMULA-DECL NIL |cd3d_ii| NIL) (|cd3d_si_complete_parameters| FORMULA-DECL NIL |cd3d_ii| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (<= CONST-DECL "bool" |reals| NIL) (|start_time| CONST-DECL "real" |flightplan| NIL) (|end_time| CONST-DECL "real" |flightplan| NIL) (|FlightTimes| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|FlightTimesLimited2| TYPE-EQ-DECL NIL |cd3d_ii| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|cd3d_ii_rew| FORMULA-DECL NIL |cd3d_ii| NIL) (|cd3d_ii?| CONST-DECL "bool" |cd3d_ii| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|cd3d_ii_complete-2| "" 3483718981 ("" (SKEEP) (("" (LEMMA CD3D_II_IND_COMPLETE) (("" (COPY 1) (("" (HIDE 1) (("" (EXPAND "cd3d_ii?") (("" (INST?) (("1" (LEMMA CD3D_II_REW) (("1" (INST - FP FP2) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (NAME RELT "T - (fp(j)`time - fp(0)`time)") (("1" (REPLACE -1) (("1" (NAME T "min(fp(j + 1)`time - fp(j)`time, relT)") (("1" (TYPEPRED J) (("1" (ASSERT) (("1" (SKOLEM - TT) (("1" (TYPEPRED TT) (("1" (SKOLEM - JJ) (("1" (ASSERT) (("1" (FLATTEN) (("1" (HIDE 2) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (CASE "jj=j") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (GROUND) (("1" (EXPAND "conflict_3D?") (("1" (ASSERT) (("1" (SKOLEM - JT) (("1" (INST + JT) (("1" (REPLACE -5) (("1" (CASE "segment(fp)(fp(j)`time)=j") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REPLACE -5 :DIR RL) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP TT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED JT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (HIDE -10) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL 2) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jj+1") (("2" (ASSERT) (("2" (REPLACE -2) (("2" (LEMMA CD3D_SI_COMPLETE_PARAMETERS) (("2" (INST - "fp(jj)`position" "velocity[N](fp)(jj)" TT "min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                     fp(0)`time - fp(segment(fp)(tt))`time + T)" FP FP2) (("1" (CASE "min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                             fp(0)`time - fp(segment(fp)(tt))`time + T) = min(fp(1 + jj)`time - fp(jj)`time,
                             fp(0)`time - fp(jj)`time + T)") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (HIDE -14 3) (("1" (EXPAND "cd3d_ii?") (("1" (LEMMA SOME_CD3D_II) (("1" (INST - FP FP2 N-2) (("1" (ASSERT) (("1" (INST 1 JJ) (("1" (HIDE 2) (("1" (EXPAND "cd3d_ii_ind?") (("1" (FLATTEN) (("1" (ASSERT) (("1" (CASE "fp2(0)`time < min(fp(1 + jj)`time, fp(0)`time + T)") (("1" (ASSERT) (("1" (EXPAND "min") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2 3 4) (("2" (HIDE -1 -14) (("2" (REPLACE -2) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -13 2 3 4) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|cd3d_ii_complete-1| |nil| 3483697637 ("" (SKEEP) (("" (LEMMA CD3D_II_IND_COMPLETE) (("" (COPY 1) (("" (HIDE 1) (("" (EXPAND "cd3d_ii?") (("" (INST?) (("1" (LEMMA CD3D_II_REW) (("1" (INST - FP FP2) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (SKEEP -1) (("1" (NAME RELT "T - (fp(j)`time - fp(0)`time)") (("1" (REPLACE -1) (("1" (NAME T "min(fp(j + 1)`time - fp(j)`time, relT)") (("1" (TYPEPRED J) (("1" (ASSERT) (("1" (SKOLEM - TT) (("1" (TYPEPRED TT) (("1" (SKOLEM - JJ) (("1" (ASSERT) (("1" (FLATTEN) (("1" (HIDE 2) (("1" (EXPAND "start_time") (("1" (EXPAND "end_time") (("1" (CASE "jj=j") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (GROUND) (("1" (EXPAND "conflict_3D?") (("1" (ASSERT) (("1" (SKOLEM - JT) (("1" (INST + JT) (("1" (REPLACE -5) (("1" (CASE "segment(fp)(fp(j)`time)=j") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (REPLACE -5 :DIR RL) (("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP TT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED JT) (("2" (EXPAND "start_time") (("2" (EXPAND "end_time") (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP J TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "j+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (HIDE -10) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SEGMENT_DEF[N]) (("2" (INST - FP TT) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA SEGMENT_INDEX[N]) (("2" (INST - FP JJ TT) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "jj+1") (("2" (ASSERT) (("2" (REPLACE -2) (("2" (LEMMA LIMITED_BOUNDS) (("2" (INST - FP FP2 TT JJ) (("2" (ASSERT) (("2" (LEMMA "cd3d_si_complete[D, H, 0,
                 min(fp(1 + segment(fp)(tt))`time - fp(segment(fp)(tt))`time,
                     fp(0)`time - fp(segment(fp)(tt))`time + T),
                 M]") (("1" (INST?) (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)))
