(|bands_si| (|FlightPlanRelevant_nz_TCC1| 0 (|FlightPlanRelevant_nz_TCC1-1| |nil| 3482079804 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant_nz| SUBTYPE "(number_fields.-)(bands_si.N, 1)" "nat"))) (|FlightPlanRelevant_nz_TCC2| 0 (|FlightPlanRelevant_nz_TCC2-1| |nil| 3482079804 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant_nz| SUBTYPE "(number_fields.-)(bands_si.i, 1)" "below[N]"))) (|FlightPlanRelevant_nz_TCC3| 0 (|FlightPlanRelevant_nz_TCC3-2| "" 3790109084 ("" (ASSERT) NIL NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK (|FlightPlanRelevant_nz| SUBTYPE "0" "below[N]")) (|FlightPlanRelevant_nz_TCC3-1| |nil| 3482079804 ("" (SKEEP) (("" (INST + "lambda (jj: below[N]): (# time:= B+to+jj,position:= (# x:=jj, y:=jj, z:=jj #) #)") (("" (ASSERT) (("" (GRIND) (("" (EXPAND "zero") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|FlightPlanRelevant_nz| SUBTYPE "0" "below[N]"))) (|FlightPlanRelevant_nz_TCC4| 0 (|FlightPlanRelevant_nz_TCC4-1| |nil| 3483101761 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant_nz| SUBTYPE "(number_fields.-)(bands_si.N, 1)" "below[N]"))) (|FlightPlanRelevant_nz_TCC5| 0 (|FlightPlanRelevant_nz_TCC5-1| |nil| 3483101761 ("" (SKEEP) (("" (INST + "lambda (jj: below[N]): (# time:= B+to+jj,position:= (# x:=jj, y:=jj, z:=jj #) #)") (("" (ASSERT) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "velocity") (("" (EXPAND "vect2") (("" (ASSERT) (("" (EXPAND "zero") (("" (ASSERT) (("" (EXPAND "-") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|scal_1| FORMULA-DECL NIL |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|FlightPlanRelevant_nz| EXISTENCE "" "{flp: cd3d_si[bands_si.D, bands_si.H, bands_si.B, bands_si.T, bands_si.N].FlightPlanRelevant(bands_si.to) | FORALL (i: nat_types[(number_fields.-)(bands_si.N, 1)].below): vect_3D_2D.vect2(flightplan[bands_si.N].velocity(flp)(i)) /= vectors_2D.zero}"))) (|trk_bands_si_i_TCC1| 0 (|trk_bands_si_i_TCC1-1| |nil| 3478881738 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|trk_bands_si_i| SUBTYPE "bands_si.i" "below[N]"))) (|trk_bands_si_i_TCC2| 0 (|trk_bands_si_i_TCC2-1| |nil| 3478881738 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si_i| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "below[N]"))) (|trk_bands_si_i_TCC3| 0 (|trk_bands_si_i_TCC3-1| |nil| 3478881738 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|default| CONST-DECL "T" |fseqs| |structures|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL (|trk_bands_si_i| SUBTYPE "fseqs[real].empty_seq" "{fs: (fseqs_aux_2D[bands_si.gsmin, bands_si.gsmax].trk_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))) (|trk_bands_si_i_TCC4| 0 (|trk_bands_si_i_TCC4-1| |nil| 3478881738 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nzv2| APPLICATION-JUDGEMENT "Nz_vect2" |definitions_3D| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|trk_bands_si_i| SUBTYPE "bands_si.vi" "Nzv2_vect3"))) (|trk_bands_si_i_TCC5| 0 (|trk_bands_si_i_TCC5-3| "" 3884846479 ("" (SKEEP) (("" (SKEEP) (("" (REPLACE -1) (("" (REPLACE -2) (("" (REPLACE -4) (("" (REPLACE -5) (("" (TYPEPRED "fp") (("" (INST - "i+1") (("" (ASSERT) (("" (HIDE -3 -4 -6 -7) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (EXPAND "min") (("" (EXPAND "max") (("" (LIFT-IF) (("" (GROUND) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|trk_bands_si_i| SUBTYPE "bands_si.rel_et" "{x: real_types.posreal | reals.>(x, bands_si.rel_st)}")) (|trk_bands_si_i_TCC5-2| |nil| 3768557531 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (SKEEP 3) (("" (SKEEP 3) (("" (SKEEP 3) (("" (SKEEP 3) (("" (SKEEP 3) (("" (SKEEP 3) (("" (SKEEP 3) (("" (REPLACE -1) (("" (REPLACE -2) (("" (REPLACE -4) (("" (REPLACE -5) (("" (TYPEPRED FP) (("" (INST - "i+1") (("" (ASSERT) (("" (HIDE -3 -4 -6 -7) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (REPLACE -3) (("" (HIDE -3) (("" (EXPAND "min") (("" (EXPAND "max") (("" (LIFT-IF) (("" (GROUND) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si_i| SUBTYPE "bands_si.rel_et" "{x: real_types.posreal | reals.>(x, bands_si.rel_st)}")) (|trk_bands_si_i_TCC5-1| |nil| 3478881738 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|trk_bands_si_i| SUBTYPE "bands_si.rel_et" "{x: real_types.posreal | reals.>(x, bands_si.rel_st)}"))) (|expand_trk_bands_si_i_TCC1| 0 (|expand_trk_bands_si_i_TCC1-1| |nil| 3482583015 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|expand_trk_bands_si_i| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "below[N]"))) (|expand_trk_bands_si_i_TCC2| 0 (|expand_trk_bands_si_i_TCC2-1| |nil| 3482583015 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|expand_trk_bands_si_i| SUBTYPE "bands_si.i" "below[N]"))) (|expand_trk_bands_si_i_TCC3| 0 (|expand_trk_bands_si_i_TCC3-1| |nil| 3482583015 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL)) NIL (|expand_trk_bands_si_i| SUBTYPE "(number_fields.+)(1, bands_si.i)" "below[N]"))) (|expand_trk_bands_si_i_TCC4| 0 (|expand_trk_bands_si_i_TCC4-1| |nil| 3482583015 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|expand_trk_bands_si_i| SUBTYPE "flightplan[bands_si.N].velocity(bands_si.fp)(bands_si.i)" "Nzv2_vect3"))) (|expand_trk_bands_si_i_TCC5| 0 (|expand_trk_bands_si_i_TCC5-3| "" 3884846495 ("" (SKEEP) (("" (SKEEP) (("" (REPLACE -3) (("" (REPLACE -4) (("" (EXPAND "max") (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (TYPEPRED "fp") (("" (GROUND) (("" (INST - "i+1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|expand_trk_bands_si_i| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}")) (|expand_trk_bands_si_i_TCC5-2| |nil| 3768557654 ("" (SKEEP) (("" (SKEEP) (("" (SKEEP) (("" (REPLACE -3) (("" (REPLACE -4) (("" (EXPAND "max") (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (TYPEPRED FP) (("" (GROUND) (("" (INST - "i+1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|expand_trk_bands_si_i| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}")) (|expand_trk_bands_si_i_TCC5-1| |nil| 3482583015 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|expand_trk_bands_si_i| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}"))) (|expand_trk_bands_si_i| 0 (|expand_trk_bands_si_i-1| |nil| 3482583017 ("" (SKEEP) (("" (ASSERT) (("" (EXPAND "trk_bands_si_i") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|trk_bands_si_TCC1| 0 (|trk_bands_si_TCC1-2| "" 3790109093 ("" (TYPEPRED "N") (("" (ASSERT) NIL NIL)) NIL) ((|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL)) SHOSTAK (|trk_bands_si| SUBTYPE "(number_fields.-)(bands_si.N, 1)" "nat")) (|trk_bands_si_TCC1-1| |nil| 3478861570 ("" (TYPEPRED "N") (("" (ASSERT) (("" (SKEEP) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|trk_bands_si| SUBTYPE "(number_fields.-)(bands_si.N, 1)" "nat"))) (|trk_bands_si_TCC2| 0 (|trk_bands_si_TCC2-1| |nil| 3478861570 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nzv2| APPLICATION-JUDGEMENT "Nz_vect2" |definitions_3D| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si| SUBTYPE "(number_fields.-)(bands_si.i, 1)" "below[N - 1]"))) (|trk_bands_si_TCC3| 0 (|trk_bands_si_TCC3-1| |nil| 3478861570 ("" (SKEEP) (("" (ASSERT) NIL NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si| TERMINATION "bands_si.trk_bands_si(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)((number_fields.-)(bands_si.i, 1))" "NIL"))) (|trk_bands_si_TCC4| 0 (|trk_bands_si_TCC4-1| |nil| 3483101761 ("" (SKEEP) (("" (ASSERT) (("" (TYPEPRED " v(so, vo, to, fp)(i - 1)") (("" (TYPEPRED "trk_bands_si_i(so, vo, to, fp)(i)") (("" (AUTO-REWRITE "sort_trk_fseq") (("" (AUTO-REWRITE "comp_trk_fseq") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|comp_trk_fseq| JUDGEMENT-TCC NIL |fseqs_aux_2D| NIL) (|sort_trk_fseq| JUDGEMENT-TCC NIL |fseqs_aux_2D| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si| SUBTYPE "sort_fseq[real, reals.<=].sort(fseqs[real].o(bands_si.trk_bands_si_i(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)(bands_si.i), bands_si.trk_bands_si(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)((number_fields.-)(bands_si.i, 1))))" "{fs: (fseqs_aux_2D[bands_si.gsmin, bands_si.gsmax].trk_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))) (|gs_bands_si_i_TCC1| 0 (|gs_bands_si_i_TCC1-1| |nil| 3482673238 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|gs_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|default| CONST-DECL "T" |fseqs| |structures|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|gs_bands_si_i| SUBTYPE "fseqs[real].empty_seq" "{fs: (fseqs_aux_2D[bands_si.gsmin, bands_si.gsmax].gs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))) (|gs_bands_si_TCC1| 0 (|gs_bands_si_TCC1-1| |nil| 3482673238 ("" (SKEEP) (("" (TYPEPRED " v(so, vo, to, fp)(i-1)") (("1" (AUTO-REWRITE "sort_gs_fseq") (("1" (AUTO-REWRITE "comp_gs_fseq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gs_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (< CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|comp_gs_fseq| JUDGEMENT-TCC NIL |fseqs_aux_2D| NIL) (|sort_gs_fseq| JUDGEMENT-TCC NIL |fseqs_aux_2D| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|gs_bands_si| SUBTYPE "sort_fseq[real, reals.<=].sort(fseqs[real].o(bands_si.gs_bands_si_i(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)(bands_si.i), bands_si.gs_bands_si(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)((number_fields.-)(bands_si.i, 1))))" "{fs: (fseqs_aux_2D[bands_si.gsmin, bands_si.gsmax].gs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))) (|vs_bands_si_i_TCC1| 0 (|vs_bands_si_i_TCC1-1| |nil| 3482684663 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|vs_fseq?| CONST-DECL "bool" |fseqs_aux_vertical| NIL) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|default| CONST-DECL "T" |fseqs| |structures|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|vs_bands_si_i| SUBTYPE "fseqs[real].empty_seq" "{fs: (fseqs_aux_vertical[bands_si.vsmin, bands_si.vsmax].vs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))) (|vs_bands_si_TCC1| 0 (|vs_bands_si_TCC1-1| |nil| 3482684663 ("" (SKEEP) (("" (TYPEPRED " v(so, vo, to, fp)(i - 1)") (("1" (ASSERT) (("1" (AUTO-REWRITE SORT_VS_FSEQ) (("1" (AUTO-REWRITE COMP_VS_FSEQ) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (> CONST-DECL "bool" |reals| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vs_fseq?| CONST-DECL "bool" |fseqs_aux_vertical| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|sort_vs_fseq| JUDGEMENT-TCC NIL |fseqs_aux_vertical| NIL) (|comp_vs_fseq| JUDGEMENT-TCC NIL |fseqs_aux_vertical| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|vs_bands_si| SUBTYPE "sort_fseq[real, reals.<=].sort(fseqs[real].o(bands_si.vs_bands_si_i(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)(bands_si.i), bands_si.vs_bands_si(bands_si.so, bands_si.vo, bands_si.to, bands_si.fp)((number_fields.-)(bands_si.i, 1))))" "{fs: (fseqs_aux_vertical[bands_si.vsmin, bands_si.vsmax].vs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))) (|red_trk_band_fp?_TCC1| 0 (|red_trk_band_fp?_TCC1-1| |nil| 3478960506 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|red_trk_band_fp?| SUBTYPE "bands_si.i" "nat"))) (|red_trk_band_fp?_TCC2| 0 (|red_trk_band_fp?_TCC2-1| |nil| 3478960506 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|red_trk_band_fp?| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "nat"))) (|red_trk_band_fp?_TCC3| 0 (|red_trk_band_fp?_TCC3-1| NIL 3884839782 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|trk2v3| CONST-DECL "(LAMBDA (vo2): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)" |bands_util| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|)) NIL (|red_trk_band_fp?| SUBTYPE "bands_util.trk2v3(bands_si.vo)(bands_si.mp)" "{x: (LAMBDA (vo2: Vect3): booleans.AND(definitions.trk_only?(vect_3D_2D.vect2(bands_si.vo))(vect_3D_2D.vect2(definitions_3D.vo2)), bands_si.vo`z = definitions_3D.vo2`z)) | booleans.AND(reals.real_pred(x`x), number_fields.number_field_pred(x`x))}"))) (|red_gs_band_fp?_TCC1| 0 (|red_gs_band_fp?_TCC1-1| |nil| 3482673238 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|red_gs_band_fp?| SUBTYPE "bands_si.i" "nat"))) (|red_gs_band_fp?_TCC2| 0 (|red_gs_band_fp?_TCC2-1| |nil| 3482673238 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|red_gs_band_fp?| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "nat"))) (|red_vs_band_fp?_TCC1| 0 (|red_vs_band_fp?_TCC1-1| |nil| 3482684663 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|red_vs_band_fp?| SUBTYPE "bands_si.i" "nat"))) (|red_vs_band_fp?_TCC2| 0 (|red_vs_band_fp?_TCC2-1| |nil| 3482684663 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|red_vs_band_fp?| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "nat"))) (|segdefs_TCC1| 0 (|segdefs_TCC1-1| |nil| 3482252086 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|segdefs| SUBTYPE "bands_si.j" "below[N - 1]"))) (|segdefs_TCC2| 0 (|segdefs_TCC2-1| |nil| 3482252086 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|segdefs| SUBTYPE "bands_si.j" "below[N]"))) (|segdefs_TCC3| 0 (|segdefs_TCC3-1| |nil| 3482252086 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|seg_lh_bottom| CONST-DECL "nnreal" |cd3d_si| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL)) NIL (|segdefs| SUBTYPE "(number_fields.+)(1, bands_si.j)" "below[N]"))) (|segdefs| 0 (|segdefs-1| |nil| 3482252087 ("" (SKEEP) (("" (EXPAND "seg_lh_bottom") (("" (EXPAND "seg_lh_top") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ((|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|seg_lh_bottom| CONST-DECL "nnreal" |cd3d_si| NIL) (|seg_lh_top| CONST-DECL "real" |cd3d_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|trk_bands_si_combines_TCC1| 0 (|trk_bands_si_combines_TCC1-1| |nil| 3479234100 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|trk_bands_si_combines| SUBTYPE "bands_si.j" "below[N - 1]"))) (|trk_bands_si_combines| 0 (|trk_bands_si_combines-3| "" 3884846641 ("" (SKOLEM 1 ("fp" "so" "to" "vo" _ "x")) (("" (INDUCT "i") (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "trk_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "trk_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND "trk_bands_si" 1) (("2" (LEMMA "member_sort") (("2" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" "x") (("2" (ASSERT) (("2" (LEMMA "member_composition") (("2" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" "x") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND "trk_bands_si" -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA "member_sort") (("3" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" "x") (("3" (ASSERT) (("3" (LEMMA "member_composition") (("3" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" "x") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "trk_bands_si") (("4" (ASSERT) (("4" (LEMMA "member_sort") (("4" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" "x") (("4" (ASSERT) (("4" (LEMMA "member_composition") (("4" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" "x") (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "trk_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "trk_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_combines-2| "" 3790109096 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "trk_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "trk_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND TRK_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND TRK_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "trk_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "trk_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "trk_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|member| CONST-DECL "bool" |fseqs| |structures|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subrange_induction| FORMULA-DECL NIL |subrange_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|member_sort| FORMULA-DECL NIL |sort_fseq| |structures|) (|member_composition| FORMULA-DECL NIL |fseqs| |structures|) (O CONST-DECL "fseq" |fseqs| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)) SHOSTAK) (|trk_bands_si_combines-1| |nil| 3479234134 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "trk_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "trk_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND TRK_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND TRK_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "trk_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k) o
                   trk_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "trk_bands_si_i(so, vo, to, fp)(1 + k)" "trk_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "trk_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "trk_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|empty_no_members_TCC1| 0 (|empty_no_members_TCC1-1| |nil| 3481476958 ("" (SUBTYPE-TCC) NIL NIL) ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|default| CONST-DECL "T" |fseqs| |structures|) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|)) NIL (|empty_no_members| SUBTYPE "fseqs[real].empty_seq" "fseq[real]"))) (|empty_no_members| 0 (|empty_no_members-1| |nil| 3481476959 ("" (SKEEP) (("" (EXPAND "member") (("" (SKOSIMP) (("" (TYPEPRED "i!1") (("" (ASSERT) (("" (EXPAND "empty_seq") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|member| CONST-DECL "bool" |fseqs| |structures|) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|fsq| TYPE-EQ-DECL NIL |fsq| |structures|) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK)) (|trk_bands_si_component_TCC1| 0 (|trk_bands_si_component_TCC1-1| |nil| 3481474538 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|trk_bands_si_component| SUBTYPE "bands_si.j" "below[N]"))) (|trk_bands_si_component_TCC2| 0 (|trk_bands_si_component_TCC2-1| |nil| 3481474538 ("" (SUBTYPE-TCC) NIL NIL) ((|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si_component| SUBTYPE "(number_fields.+)(1, bands_si.j)" "below[N]"))) (|trk_bands_si_component_TCC3| 0 (|trk_bands_si_component_TCC3-1| |nil| 3481474538 ("" (SUBTYPE-TCC) NIL NIL) ((|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL)) NIL (|trk_bands_si_component| SUBTYPE "(number_fields.+)(bands_si.j, 1)" "below[N]"))) (|trk_bands_si_component_TCC4| 0 (|trk_bands_si_component_TCC4-1| |nil| 3481536201 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) NIL (|trk_bands_si_component| SUBTYPE "flightplan[bands_si.N].velocity(bands_si.fp)(bands_si.j)" "Nzv2_vect3"))) (|trk_bands_si_component_TCC5| 0 (|trk_bands_si_component_TCC5-4| "" 3884846663 ("" (SKEEP) (("" (REPLACE -1) (("" (HIDE -1) (("" (REPLACE -1) (("" (HIDE -1) (("" (EXPAND "max") (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (GROUND) (("" (TYPEPRED "fp") (("" (INST - "j+1") (("" (ASSERT) (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|trk_bands_si_component| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}")) (|trk_bands_si_component_TCC5-3| "" 3804529327 ("" (SKEEP) (("" (REPLACE -1) (("" (HIDE -1) (("" (REPLACE -1) (("" (HIDE -1) (("" (EXPAND "max") (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (GROUND) (("" (TYPEPRED FP) (("" (INST - "j+1") (("" (ASSERT) (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK (|trk_bands_si_component| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}")) (|trk_bands_si_component_TCC5-2| |nil| 3768562271 ("" (SKEEP) (("" (SKEEP) (("" (REPLACE -1) (("" (HIDE -1) (("" (REPLACE -3) (("" (HIDE -3) (("" (EXPAND "max") (("" (EXPAND "min") (("" (LIFT-IF) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (GROUND) (("" (TYPEPRED FP) (("" (INST - "j+1") (("" (ASSERT) (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|trk_bands_si_component| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}")) (|trk_bands_si_component_TCC5-1| |nil| 3481557068 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|trk_bands_si_component| SUBTYPE "bands_si.UB" "{x: real_types.posreal | reals.>(x, bands_si.LB)}"))) (|trk_bands_si_component| 0 (|trk_bands_si_component-2| "" 3884846767 ("" (LEMMA "trk_bands_si_combines") (("" (SKEEP) (("" (INST?) (("" (ASSERT) (("" (EXPAND "trk_bands_si_i") (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST 1 "j") (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 "ii") (("1" (TYPEPRED "ii") (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOLEM -2 "ii") (("2" (TYPEPRED "ii") (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "member") (("3" (SKOLEM -2 "ii") (("3" (TYPEPRED "ii") (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "member") (("4" (SKOLEM -2 "ii") (("4" (TYPEPRED "ii") (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "member") (("5" (SKOLEM -2 "ii") (("5" (TYPEPRED "ii") (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "member") (("6" (SKOLEM -2 "ii") (("6" (TYPEPRED "ii") (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST 1 "j") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_component-1| |nil| 3481474538 ("" (LEMMA TRK_BANDS_SI_COMBINES) (("" (SKEEP) (("" (INST?) (("" (ASSERT) (("" (EXPAND "trk_bands_si_i") (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST 1 J) (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 II) (("1" (TYPEPRED II) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER) (("2" (SKOLEM -2 II) (("2" (TYPEPRED II) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND MEMBER) (("3" (SKOLEM -2 II) (("3" (TYPEPRED II) (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND MEMBER) (("4" (SKOLEM -2 II) (("4" (TYPEPRED II) (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND MEMBER) (("5" (SKOLEM -2 II) (("5" (TYPEPRED II) (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND MEMBER) (("6" (SKOLEM -2 II) (("6" (TYPEPRED II) (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST 1 J) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|fsq| TYPE-EQ-DECL NIL |fsq| |structures|) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|member| CONST-DECL "bool" |fseqs| |structures|) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|trk_bands_si_combines| FORMULA-DECL NIL |bands_si| NIL)) SHOSTAK)) (|trk_bands_si_length| 0 (|trk_bands_si_length-2| "" 3884846836 ("" (SKOLEM 1 ("fp" "so" "to" "vo" _ _)) (("" (INDUCT "i") (("1" (SKEEP) (("1" (CASE "not j=0") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -1) (("2" (EXPAND "trk_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (INDUCT "j") (("1" (INST -2 0) (("1" (EXPAND "trk_bands_si" 1) (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 "m") (("2" (FLATTEN) (("2" (EXPAND "trk_bands_si" 1) (("2" (ASSERT) (("2" (EXPAND "o") (("2" (CASE "m <k") (("1" (ASSERT) (("1" (INST -5 "m+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "trk_bands_si" 2) (("3" (ASSERT) NIL NIL)) NIL) ("4" (TYPEPRED "j!1") (("4" (ASSERT) NIL NIL)) NIL) ("5" (ASSERT) NIL NIL) ("6" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (TYPEPRED "N") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_length-1| |nil| 3482578246 ("" (SKOLEM 1 (FP SO TO VO _ _)) (("" (INDUCT I) (("1" (SKEEP) (("1" (CASE "not j=0") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -1) (("2" (EXPAND "trk_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (INDUCT J) (("1" (INST -2 0) (("1" (EXPAND TRK_BANDS_SI 1) (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 M) (("2" (FLATTEN) (("2" (EXPAND TRK_BANDS_SI 1) (("2" (ASSERT) (("2" (EXPAND "o") (("2" (CASE "m <k") (("1" (ASSERT) (("1" (INST -5 "m+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND TRK_BANDS_SI 2) (("3" (ASSERT) NIL NIL)) NIL) ("4" (TYPEPRED "j!1") (("4" (ASSERT) NIL NIL)) NIL) ("5" (ASSERT) NIL NIL) ("6" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (TYPEPRED N) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subrange_induction| FORMULA-DECL NIL |subrange_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|k| SKOLEM-CONST-DECL "subrange(0, N - 2)" |bands_si| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|j!1| SKOLEM-CONST-DECL "subrange(0, 1 + k)" |bands_si| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|j!1| SKOLEM-CONST-DECL "subrange(0, 1 + k)" |bands_si| NIL) (O CONST-DECL "fseq" |fseqs| |structures|) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|sort_length| FORMULA-DECL NIL |sort_fseq| |structures|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK)) (|trk_bands_si_i_relevant_TCC1| 0 (|trk_bands_si_i_relevant_TCC1-1| |nil| 3481980322 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si_i_relevant| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "below[N]"))) (|trk_bands_si_i_relevant| 0 (|trk_bands_si_i_relevant-3| "" 3884846869 ("" (SKEEP) (("" (PROP) (("1" (EXPAND "trk_bands_si_i") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "trk_bands_si_i") (("2" (ASSERT) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "trk_bands_si_i") (("3" (ASSERT) (("3" (LEMMA "trk_bands_3D_not_empty[D, H, max(fp(i)`time, B + to) - to,
               min(fp(1 + i)`time, T + to) - to, gsmin, gsmax, vsmin, vsmax]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "i+1") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (GROUND) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_i_relevant-2| "" 3790109101 ("" (SKEEP) (("" (PROP) (("1" (EXPAND "trk_bands_si_i") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "trk_bands_si_i") (("2" (ASSERT) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "trk_bands_si_i") (("3" (ASSERT) (("3" (LEMMA "trk_bands_3D_not_empty[D, H, max(fp(i)`time, B + to) - to,
               min(fp(1 + i)`time, T + to) - to, gsmin, gsmax, vsmin, vsmax]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "i+1") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (GROUND) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|trk_bands_3D_not_empty| FORMULA-DECL NIL |bands_3D| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|trk_bands_si_i_relevant-1| |nil| 3481980322 ("" (SKEEP) (("" (PROP) (("1" (EXPAND "trk_bands_si_i") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "trk_bands_si_i") (("2" (ASSERT) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "trk_bands_si_i") (("3" (ASSERT) (("3" (LEMMA "trk_bands_3D_not_empty[D, H, max(fp(i)`time, B + to) - to,
               min(fp(1 + i)`time, T + to) - to, gsmin, gsmax, vsmin, vsmax]") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "i+1") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (GROUND) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|trk_bands_si_i_relevant_has_2| 0 (|trk_bands_si_i_relevant_has_2-3| "" 3884846915 ("" (SKEEP) (("" (PROP) (("1" (ASSERT) (("1" (EXPAND "trk_bands_si_i") (("1" (LIFT-IF) (("1" (LEMMA "trk_bands_si_i_relevant") (("1" (INST - "fp" "so" "to" "vo" "i") (("1" (GROUND) (("1" (LEMMA "trk_bands_3D_not_empty[D, H, max(fp(i)`time, B + to) - to,
               min(fp(1 + i)`time, T + to) - to, gsmin, gsmax, vsmin, vsmax]") (("1" (INST?) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "max") (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED "fp") (("2" (INST - "i+1") (("2" (ASSERT) (("2" (GROUND) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_i_relevant_has_2-2| "" 3790109101 ("" (SKEEP) (("" (PROP) (("1" (ASSERT) (("1" (EXPAND "trk_bands_si_i") (("1" (LIFT-IF) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("1" (INST - FP SO TO VO I) (("1" (GROUND) (("1" (LEMMA "trk_bands_3D_not_empty[D, H, max(fp(i)`time, B + to) - to,
               min(fp(1 + i)`time, T + to) - to, gsmin, gsmax, vsmin, vsmax]") (("1" (INST?) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "max") (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "i+1") (("2" (ASSERT) (("2" (GROUND) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ((|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|trk_bands_si_i_relevant| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (|trk_bands_3D_not_empty| FORMULA-DECL NIL |bands_3D| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|trk_bands_si_i_relevant_has_2-1| |nil| 3482068244 ("" (SKEEP) (("" (PROP) (("1" (ASSERT) (("1" (EXPAND "trk_bands_si_i") (("1" (LIFT-IF) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("1" (INST - FP SO TO VO I) (("1" (GROUND) (("1" (LEMMA "trk_bands_3D_not_empty[D, H, max(fp(i)`time, B + to) - to,
               min(fp(1 + i)`time, T + to) - to, gsmin, gsmax, vsmin, vsmax]") (("1" (INST?) NIL NIL) ("2" (ASSERT) (("2" (EXPAND "max") (("2" (EXPAND "min") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FP) (("2" (INST - "i+1") (("2" (ASSERT) (("2" (GROUND) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) NIL SHOSTAK)) (|trk_bands_si_relevant_TCC1| 0 (|trk_bands_si_relevant_TCC1-1| |nil| 3481649095 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|trk_bands_si_relevant| SUBTYPE "(number_fields.+)(bands_si.i, 1)" "below[N]"))) (|trk_bands_si_relevant| 0 (|trk_bands_si_relevant-2| "" 3884847114 ("" (SKOLEM 1 ("fp" "so" "to" "vo" _)) (("" (INDUCT "i") (("1" (FLATTEN) (("1" (EXPAND "trk_bands_si") (("1" (EXPAND "trk_bands_si_i") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (SPLIT 1) (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "N=2") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time") (("2" (INST - "fp" "N-1" 1) (("2" (ASSERT) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "trk_bands_si") (("2" (LEMMA "trk_bands_si_i_relevant") (("2" (INST?) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (SKEEP) (("3" (ASSERT) (("3" (TYPEPRED "fp") (("3" (INST - "k+2") (("3" (ASSERT) (("3" (TYPEPRED "fp") (("3" (INST - "k+1") (("3" (ASSERT) (("3" (ASSERT) (("3" (GROUND) (("1" (EXPAND "trk_bands_si" 1) (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "trk_bands_si" -1) (("2" (ASSERT) (("2" (EXPAND "o") (("2" (LEMMA "trk_bands_si_i_relevant") (("2" (INST - "fp" "so" "to" "vo" "1+k") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time") (("2" (INST - "fp" "1+k" 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "trk_bands_si" -1) (("3" (ASSERT) (("3" (LEMMA "trk_bands_si_i_relevant") (("3" (INST - "fp" "so" "to" "vo" "1+k") (("3" (ASSERT) (("3" (EXPAND "o") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "trk_bands_si_i_relevant") (("4" (INST - "fp" "so" "to" "vo" "1+k") (("4" (ASSERT) (("4" (EXPAND "trk_bands_si" -2) (("4" (ASSERT) (("4" (EXPAND "o") (("4" (ASSERT) (("4" (LEMMA "flight_plan_ascending_time") (("4" (INST - "fp" "1+k" 0) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "trk_bands_si" -1) (("5" (ASSERT) (("5" (LEMMA "trk_bands_si_i_relevant") (("5" (INST - "fp" "so" "to" "vo" "k+1") (("5" (ASSERT) (("5" (EXPAND "o") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "trk_bands_si" 1) (("6" (ASSERT) (("6" (LEMMA "trk_bands_si_i_relevant") (("6" (INST - "fp" "so" "to" "vo" "k+1") (("6" (ASSERT) (("6" (EXPAND "o") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (EXPAND "trk_bands_si") (("5" (ASSERT) NIL NIL)) NIL) ("6" (EXPAND "trk_bands_si") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_relevant-1| |nil| 3481649096 ("" (SKOLEM 1 (FP SO TO VO _)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (EXPAND "trk_bands_si") (("1" (EXPAND "trk_bands_si_i") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (SPLIT 1) (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "N=2") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LEMMA "flight_plan_ascending_time") (("2" (INST - FP "N-1" 1) (("2" (ASSERT) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (EXPAND "trk_bands_si") (("2" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("2" (INST?) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (SKEEP) (("3" (ASSERT) (("3" (TYPEPRED FP) (("3" (INST - "k+2") (("3" (ASSERT) (("3" (TYPEPRED FP) (("3" (INST - "k+1") (("3" (ASSERT) (("3" (ASSERT) (("3" (GROUND) (("1" (EXPAND TRK_BANDS_SI 1) (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND TRK_BANDS_SI -1) (("2" (ASSERT) (("2" (EXPAND "o") (("2" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("2" (INST - FP SO TO VO "1+k") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA FLIGHT_PLAN_ASCENDING_TIME) (("2" (INST - FP "1+k" 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND TRK_BANDS_SI -1) (("3" (ASSERT) (("3" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("3" (INST - FP SO TO VO "1+k") (("3" (ASSERT) (("3" (EXPAND "o") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("4" (INST - FP SO TO VO "1+k") (("4" (ASSERT) (("4" (EXPAND TRK_BANDS_SI -2) (("4" (ASSERT) (("4" (EXPAND "o") (("4" (ASSERT) (("4" (LEMMA FLIGHT_PLAN_ASCENDING_TIME) (("4" (INST - FP "1+k" 0) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND TRK_BANDS_SI -1) (("5" (ASSERT) (("5" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("5" (INST - FP SO TO VO "k+1") (("5" (ASSERT) (("5" (EXPAND "o") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND TRK_BANDS_SI 1) (("6" (ASSERT) (("6" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("6" (INST - FP SO TO VO "k+1") (("6" (ASSERT) (("6" (EXPAND "o") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (EXPAND "trk_bands_si") (("5" (ASSERT) NIL NIL)) NIL) ("6" (EXPAND "trk_bands_si") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subrange_induction| FORMULA-DECL NIL |subrange_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|flight_plan_ascending_time| FORMULA-DECL NIL |flightplan| NIL) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|trk_bands_si_i_relevant| FORMULA-DECL NIL |bands_si| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (O CONST-DECL "fseq" |fseqs| |structures|) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|sort_length| FORMULA-DECL NIL |sort_fseq| |structures|)) SHOSTAK)) (|trk_bands_si_relevant_has_2| 0 (|trk_bands_si_relevant_has_2-3| "" 3884847251 ("" (SKOLEM 1 ("fp" "so" "to" "vo" _)) (("" (LEMMA "trk_bands_si_relevant") (("" (INST -1 "fp" "so" "to" "vo" _) (("" (INDUCT "i") (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST -2 0) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "trk_bands_si") (("1" (ASSERT) (("1" (LEMMA "trk_bands_si_i_relevant_has_2") (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL) ("3" (SKEEP) (("3" (INST - "k") (("3" (ASSERT) (("3" (FLATTEN) (("3" (SPLIT 1) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "trk_bands_si_relevant") (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "trk_bands_si_i_relevant_has_2") (("1" (INST - "fp" "so" "to" "vo" "k+1") (("1" (ASSERT) (("1" (EXPAND "trk_bands_si" 1) (("1" (ASSERT) (("1" (LEMMA "trk_bands_si_i_relevant") (("1" (INST?) (("1" (ASSERT) (("1" (CASE "fp(1 + k)`time < T + to") (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -1) (("2" (EXPAND "trk_bands_si_i") (("2" (ASSERT) (("2" (LEMMA "concat_left_emptyseq") (("2" (INST?) (("2" (REPLACE -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL) ("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_relevant_has_2-2| "" 3790109104 ("" (SKOLEM 1 (FP SO TO VO _)) (("" (LEMMA TRK_BANDS_SI_RELEVANT) (("" (INST -1 FP SO TO VO _) (("" (INDUCT I) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST -2 0) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "trk_bands_si") (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT_HAS_2) (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL) ("3" (SKEEP) (("3" (INST - K) (("3" (ASSERT) (("3" (FLATTEN) (("3" (SPLIT 1) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_RELEVANT) (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT_HAS_2) (("1" (INST - FP SO TO VO "k+1") (("1" (ASSERT) (("1" (EXPAND TRK_BANDS_SI 1) (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("1" (INST?) (("1" (ASSERT) (("1" (CASE "fp(1 + k)`time < T + to") (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -1) (("2" (EXPAND "trk_bands_si_i") (("2" (ASSERT) (("2" (LEMMA CONCAT_LEFT_EMPTYSEQ) (("2" (INST?) (("2" (REPLACE -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL) ("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|trk_bands_si_relevant| FORMULA-DECL NIL |bands_si| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|subrange_induction| FORMULA-DECL NIL |subrange_inductions| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|trk_bands_si_i_relevant_has_2| FORMULA-DECL NIL |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|trk_bands_si_i_relevant| FORMULA-DECL NIL |bands_si| NIL) (|trk_bands_si_i| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|concat_left_emptyseq| FORMULA-DECL NIL |fseqs| |structures|) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "fseq" |fseqs| |structures|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|sort_length| FORMULA-DECL NIL |sort_fseq| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK) (|trk_bands_si_relevant_has_2-1| |nil| 3482068881 ("" (SKOLEM 1 (FP SO TO VO _)) (("" (LEMMA TRK_BANDS_SI_RELEVANT) (("" (INST -1 FP SO TO VO _) (("" (INDUCT I) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (INST -2 0) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (EXPAND "trk_bands_si") (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT_HAS_2) (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL) ("3" (SKEEP) (("3" (INST - K) (("3" (ASSERT) (("3" (FLATTEN) (("3" (ASSERT) (("3" (SPLIT 1) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_RELEVANT) (("1" (INST?) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT_HAS_2) (("1" (INST - FP SO TO VO "k+1") (("1" (ASSERT) (("1" (ASSERT) (("1" (EXPAND TRK_BANDS_SI 1) (("1" (ASSERT) (("1" (LEMMA TRK_BANDS_SI_I_RELEVANT) (("1" (INST?) (("1" (ASSERT) (("1" (CASE "fp(1 + k)`time < T + to") (("1" (ASSERT) (("1" (EXPAND "o") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -1) (("2" (EXPAND "trk_bands_si_i") (("2" (ASSERT) (("2" (LEMMA CONCAT_LEFT_EMPTYSEQ) (("2" (INST?) (("2" (REPLACE -1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL) ("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|trk_bands_si_equivalence_TCC1| 0 (|trk_bands_si_equivalence_TCC1-1| |nil| 3482248332 ("" (SUBTYPE-TCC) NIL NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|trk_bands_si_equivalence| SUBTYPE "(number_fields.-)(bands_si.N, 2)" "below[N - 1]"))) (|trk_bands_si_equivalence_TCC2| 0 (|trk_bands_si_equivalence_TCC2-1| |nil| 3482674590 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL (|trk_bands_si_equivalence| SUBTYPE "bands_si.i" "nat"))) (|trk_bands_si_equivalence| 0 (|trk_bands_si_equivalence-3| "" 3884847550 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA "conflict_3d_rew_absolute_time") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA "conflict_3d_rew_absolute_time") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + "j") (("1" (NAME "LB" "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME "UB" "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "trk_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" "vo") (("1" (ASSERT) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vtrk_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA "trk_bands_si_component") (("2" (INST?) (("2" (NAME "fred" "trk_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                   (fpr(j)`position -
                                     (fpr(j)`time - to) * velocity(fpr)(j)),
                                  vo, velocity(fpr)(j))`seq
                         (i)") (("2" (INST - "fred") (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 "sheep") (("1" (INST - "sheep") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + "j") (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fpr") (("2" (INST -4 "j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + "j") (("2" (NAME "LB" "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME "UB" "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "trk_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("2" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" "vo") (("1" (ASSERT) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vtrk_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA "trk_bands_si_component") (("2" (INST?) (("2" (NAME "fred" "trk_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                   (fpr(j)`position -
                                     (fpr(j)`time - to) * velocity(fpr)(j)),
                                  vo, velocity(fpr)(j))`seq
                         (i)") (("2" (INST - "fred") (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 "sheep") (("1" (INST - "sheep") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + "j") (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fpr") (("2" (INST -4 "j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_bands_si_equivalence-2| "" 3790109107 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "trk_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vtrk_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA TRK_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "trk_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                   (fpr(j)`position -
                                     (fpr(j)`time - to) * velocity(fpr)(j)),
                                  vo, velocity(fpr)(j))`seq
                         (i)") (("2" (INST - FRED) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + J) (("2" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "trk_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("2" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vtrk_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA TRK_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "trk_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                   (fpr(j)`position -
                                     (fpr(j)`time - to) * velocity(fpr)(j)),
                                  vo, velocity(fpr)(j))`seq
                         (i)") (("2" (INST - FRED) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|conflict_3D_rew_absolute_time| FORMULA-DECL NIL |cd3d_si| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|trk_bands_equivalence| FORMULA-DECL NIL |bands_3D| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|member| CONST-DECL "bool" |fseqs| |structures|) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|trk_bands_3D| CONST-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_3D| NIL) (|trk_bands_si_component| FORMULA-DECL NIL |bands_si| NIL) (|Vtrk_3D| CONST-DECL "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)" |bands_util| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|trk2v3_Nzv| APPLICATION-JUDGEMENT "Nzv2_vect3" |bands_util| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|seg_lh_top| CONST-DECL "real" |cd3d_si| NIL) (|seg_lh_bottom| CONST-DECL "nnreal" |cd3d_si| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |bands_si| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|trk2v3| CONST-DECL "(LAMBDA (vo2): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)" |bands_util| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|trk_only?| CONST-DECL "bool" |definitions| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|)) SHOSTAK) (|trk_bands_si_equivalence-1| |nil| 3482248332 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "trk_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vtrk_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA TRK_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "trk_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                   (fpr(j)`position -
                                     (fpr(j)`time - to) * velocity(fpr)(j)),
                                  vo, velocity(fpr)(j))`seq
                         (i)") (("1" (INST - FRED) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (HIDE -5) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "min") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "seg_lh_bottom") (("3" (EXPAND "seg_lh_top") (("3" (EXPAND "min") (("3" (EXPAND "max") (("3" (LIFT-IF) (("3" (TYPEPRED FPR) (("3" (INST - "j+1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + J) (("2" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "trk_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vtrk_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA TRK_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "trk_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                   (fpr(j)`position -
                                     (fpr(j)`time - to) * velocity(fpr)(j)),
                                  vo, velocity(fpr)(j))`seq
                         (i)") (("1" (INST - FRED) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (HIDE -5) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "min") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "seg_lh_bottom") (("3" (EXPAND "seg_lh_top") (("3" (EXPAND "min") (("3" (EXPAND "max") (("3" (LIFT-IF) (("3" (TYPEPRED FPR) (("3" (INST - "j+1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|trk_red_bands_si_TCC1| 0 (|trk_red_bands_si_TCC1-1| NIL 3884839782 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|trk2v3| CONST-DECL "(LAMBDA (vo2): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)" |bands_util| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|)) NIL (|trk_red_bands_si| SUBTYPE "bands_util.trk2v3(bands_si.vo)(bands_si.x)" "{x1: (LAMBDA (vo2: Vect3): booleans.AND(definitions.trk_only?(vect_3D_2D.vect2(bands_si.vo))(vect_3D_2D.vect2(definitions_3D.vo2)), bands_si.vo`z = definitions_3D.vo2`z)) | booleans.AND(reals.real_pred(x1`x), number_fields.number_field_pred(x1`x))}"))) (|trk_red_bands_si| 0 (|trk_red_bands_si-2| "" 3884847746 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_trk_band_fp?") (("" (NAME "mid" "(trk_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                            + trk_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                           / 2") (("" (REPLACE -1) (("" (LEMMA "trk_bands_si_equivalence") (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 "xxx") (("1" (CASE "xxx<=mid") (("1" (INST - "xxx" "mid") (("1" (GROUND) (("1" (TYPEPRED "xxx") (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "trk_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "xxx") (("3" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (ASSERT) (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid" "xxx") (("2" (GROUND) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - "i+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 "ii") (("2" (FLATTEN) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (CASE "ii < i") (("1" (INST-CP - "ii" "i") (("1" (INST - "i+1" "ii") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "i=ii") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i" "i+1") (("2" (INST - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - "mid") (("2" (ASSERT) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - "i" "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_red_bands_si-1| |nil| 3481472460 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_trk_band_fp?") (("" (NAME MID "(trk_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                            + trk_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                           / 2") (("" (REPLACE -1) (("" (LEMMA TRK_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 XXX) (("1" (CASE "xxx<=mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "trk_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (ASSERT) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - "i+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 II) (("2" (FLATTEN) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (CASE "ii < i") (("1" (INST-CP - "ii" "i") (("1" (INST - "i+1" "ii") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "i=ii") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i" "i+1") (("2" (INST - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - MID) (("2" (ASSERT) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|trk2v3_Nzv| APPLICATION-JUDGEMENT "Nzv2_vect3" |bands_util| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|red_trk_band_fp?| CONST-DECL "bool" |bands_si| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|mid| SKOLEM-CONST-DECL "posreal" |bands_si| NIL) (|i| SKOLEM-CONST-DECL "{i: subrange(0, trk_bands_si(so, vo, to, fpr)(N - 2)`length - 2) |
   NOT trk_bands_si(so, vo, to, fpr)(N - 2)`seq(i) =
        trk_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)}" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|vo| SKOLEM-CONST-DECL "Nzv2_vect3" |bands_si| NIL) (|so| SKOLEM-CONST-DECL "Vect3" |bands_si| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|trk_bands_si_equivalence| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)) SHOSTAK)) (|trk_green_bands_si| 0 (|trk_green_bands_si-2| "" 3884847842 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_trk_band_fp?") (("" (NAME "mid" "(trk_bands_si(so, vo, to, fpr)(N - 2)`seq
                                   (1 + i)
                                +
                                trk_bands_si(so, vo, to, fpr)(N - 2)`seq
                                    (i))
                               / 2") (("" (REPLACE -1) (("" (LEMMA "trk_bands_si_equivalence") (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 "xxx") (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - "xxx" "mid") (("1" (GROUND) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "trk_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid" "xxx") (("2" (GROUND) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - "i+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 "ii") (("2" (FLATTEN) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (CASE "ii < i") (("1" (INST-CP - "ii" "i") (("1" (INST - "i+1" "ii") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "i=ii") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i" "i+1") (("2" (INST - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid") (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - "i" "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|trk_green_bands_si-1| |nil| 3482603069 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_trk_band_fp?") (("" (NAME MID "(trk_bands_si(so, vo, to, fpr)(N - 2)`seq
                                   (1 + i)
                                +
                                trk_bands_si(so, vo, to, fpr)(N - 2)`seq
                                    (i))
                               / 2") (("" (REPLACE -1) (("" (LEMMA TRK_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 XXX) (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "trk_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "trk_fseq?") (("1" (INST - "i+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOLEM 1 II) (("2" (FLATTEN) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (CASE "ii < i") (("1" (INST-CP - "ii" "i") (("1" (INST - "i+1" "ii") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "i=ii") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i" "i+1") (("2" (INST - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID) (("2" (TYPEPRED "trk_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|trk2v3_Nzv| APPLICATION-JUDGEMENT "Nzv2_vect3" |bands_util| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|red_trk_band_fp?| CONST-DECL "bool" |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|so| SKOLEM-CONST-DECL "Vect3" |bands_si| NIL) (|vo| SKOLEM-CONST-DECL "Nzv2_vect3" |bands_si| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|i| SKOLEM-CONST-DECL "{i: subrange(0, trk_bands_si(so, vo, to, fpr)(N - 2)`length - 2) |
   NOT trk_bands_si(so, vo, to, fpr)(N - 2)`seq(i) =
        trk_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)}" |bands_si| NIL) (|mid| SKOLEM-CONST-DECL "posreal" |bands_si| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|trk_bands_si_equivalence| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|trk_bands_si| DEF-DECL "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|trk_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|gs_bands_si_combines| 0 (|gs_bands_si_combines-5| "" 3884847953 ("" (SKOLEM 1 ("fp" "so" "to" "vo" _ "x")) (("" (INDUCT "i") (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "gs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "gs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND "gs_bands_si" 1) (("2" (LEMMA "member_sort") (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" "x") (("2" (ASSERT) (("2" (LEMMA "member_composition") (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" "x") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND "gs_bands_si" -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA "member_sort") (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" "x") (("3" (ASSERT) (("3" (LEMMA "member_composition") (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" "x") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "gs_bands_si") (("4" (ASSERT) (("4" (LEMMA "member_sort") (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" "x") (("4" (ASSERT) (("4" (LEMMA "member_composition") (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" "x") (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "gs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "gs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|gs_bands_si_combines-4| "" 3790109109 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "gs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "gs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND GS_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND GS_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "gs_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "gs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "gs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|member| CONST-DECL "bool" |fseqs| |structures|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gs_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|gs_bands_si| DEF-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|gs_bands_si_i| CONST-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subrange_induction| FORMULA-DECL NIL |subrange_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|member_sort| FORMULA-DECL NIL |sort_fseq| |structures|) (|member_composition| FORMULA-DECL NIL |fseqs| |structures|) (O CONST-DECL "fseq" |fseqs| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)) SHOSTAK) (|gs_bands_si_combines-3| |nil| 3482685050 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "gs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "gs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND GS_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND GS_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "gs_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     gs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "gs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "gs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL) (|gs_bands_si_combines-2| |nil| 3482684953 (";;; Proof gs_bands_si_combines-1 for formula fp_bands.gs_bands_si_combines" (SKOLEM 1 (FP SO TO VO _ X)) ((";;; Proof gs_bands_si_combines-1 for formula fp_bands.gs_bands_si_combines" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "vs_bands_si") (("1" (PROPAX) NIL))))))) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "vs_bands_si") (("2" (ASSERT) NIL))))))))) ("3" (SKEEP) (("3" (ASSERT) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL))))) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND VS_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL))))))))))))))))))))))) ("3" (ASSERT) (("3" (EXPAND VS_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL))))))))))))))))))))) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "vs_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL))))))))))))))))))))))))))))))))))))) ("4" (EXPAND "vs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL))))) ("5" (EXPAND "vs_bands_si") (("5" (ASSERT) NIL)))))) ";;; developed with shostak decision procedures") NIL NIL) (|gs_bands_si_combines-1| |nil| 3482674675 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "gs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "gs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND GS_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                               gs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND GS_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                               gs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "gs_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k) o
                               gs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "gs_bands_si_i(so, vo, to, fp)(1 + k)" "gs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "gs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "gs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL)) (|gs_bands_si_component| 0 (|gs_bands_si_component-3| "" 3884848057 ("" (LEMMA "gs_bands_si_combines") (("" (SKEEP) (("" (INST?) (("" (ASSERT) (("" (EXPAND "gs_bands_si_i") (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST 1 "j") (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 "ii") (("1" (TYPEPRED "ii") (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOLEM -2 "ii") (("2" (TYPEPRED "ii") (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "member") (("3" (SKOLEM -2 "ii") (("3" (TYPEPRED "ii") (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "member") (("4" (SKOLEM -2 "ii") (("4" (TYPEPRED "ii") (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "member") (("5" (SKOLEM -2 "ii") (("5" (TYPEPRED "ii") (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "member") (("6" (SKOLEM -2 "ii") (("6" (TYPEPRED "ii") (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST 1 "j") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|gs_bands_si_component-2| |nil| 3482674836 ("" (LEMMA GS_BANDS_SI_COMBINES) (("" (SKEEP) (("" (INST?) (("" (ASSERT) (("" (EXPAND "gs_bands_si_i") (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST 1 J) (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 II) (("1" (TYPEPRED II) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER) (("2" (SKOLEM -2 II) (("2" (TYPEPRED II) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND MEMBER) (("3" (SKOLEM -2 II) (("3" (TYPEPRED II) (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND MEMBER) (("4" (SKOLEM -2 II) (("4" (TYPEPRED II) (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND MEMBER) (("5" (SKOLEM -2 II) (("5" (TYPEPRED II) (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND MEMBER) (("6" (SKOLEM -2 II) (("6" (TYPEPRED II) (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST 1 J) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|fsq| TYPE-EQ-DECL NIL |fsq| |structures|) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|member| CONST-DECL "bool" |fseqs| |structures|) (|gs_bands_si_i| CONST-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|gs_bands_si_combines| FORMULA-DECL NIL |bands_si| NIL)) NIL) (|gs_bands_si_component-1| |nil| 3482674590 (";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (LEMMA TRK_BANDS_SI_COMBINES) ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (SKEEP) ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (INST?) ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (ASSERT) ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (EXPAND "trk_bands_si_i") ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (REPLACE -1) ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (HIDE -1) ((";;; Proof trk_bands_si_component-1 for formula fp_bands.trk_bands_si_component" (PROP) (("1" (SKEEP -1) (("1" (INST 1 J) (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 II) (("1" (TYPEPRED II) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL))))))))) ("2" (EXPAND MEMBER) (("2" (SKOLEM -2 II) (("2" (TYPEPRED II) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL))))))))) ("3" (EXPAND MEMBER) (("3" (SKOLEM -2 II) (("3" (TYPEPRED II) (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL))))))))) ("4" (EXPAND MEMBER) (("4" (SKOLEM -2 II) (("4" (TYPEPRED II) (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL))))))))) ("5" (EXPAND MEMBER) (("5" (SKOLEM -2 II) (("5" (TYPEPRED II) (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL))))))))) ("6" (EXPAND MEMBER) (("6" (SKOLEM -2 II) (("6" (TYPEPRED II) (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL))))))))))))))))) ("2" (SKEEP -1) (("2" (INST 1 J) (("2" (LIFT-IF) (("2" (ASSERT) NIL)))))))))))))))))))))) ";;; developed with shostak decision procedures") NIL NIL)) (|gs_bands_si_equivalence_TCC1| 0 (|gs_bands_si_equivalence_TCC1-1| |nil| 3482673238 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|gs_bands_si_equivalence| SUBTYPE "bands_si.i" "nat"))) (|gs_bands_si_equivalence| 0 (|gs_bands_si_equivalence-3| "" 3884848238 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA "conflict_3d_rew_absolute_time") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA "conflict_3d_rew_absolute_time") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + "j") (("1" (NAME "LB" "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME "UB" "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "gs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" "vo") (("1" (ASSERT) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vgs_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA "gs_bands_si_component") (("2" (INST?) (("2" (NAME "fred" "gs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                 (fpr(j)`position -
                                                                   (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                vo, velocity(fpr)(j))`seq
                                                       (i)") (("2" (INST - "fred") (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 "sheep") (("1" (INST - "sheep") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + "j") (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fpr") (("2" (INST -4 "j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + "j") (("2" (NAME "LB" "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME "UB" "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "gs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("2" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" "vo") (("1" (ASSERT) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vgs_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA "gs_bands_si_component") (("2" (INST?) (("2" (NAME "fred" "gs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                 (fpr(j)`position -
                                                                   (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                vo, velocity(fpr)(j))`seq
                                                       (i)") (("2" (INST - "fred") (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 "sheep") (("1" (INST - "sheep") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + "j") (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fpr") (("2" (INST -4 "j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|gs_bands_si_equivalence-2| "" 3790109113 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "gs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vgs_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA GS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "gs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                 (fpr(j)`position -
                                                                   (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                vo, velocity(fpr)(j))`seq
                                                       (i)") (("2" (INST - FRED) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + J) (("2" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "gs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("2" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vgs_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA GS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "gs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                 (fpr(j)`position -
                                                                   (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                vo, velocity(fpr)(j))`seq
                                                       (i)") (("2" (INST - FRED) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|conflict_3D_rew_absolute_time| FORMULA-DECL NIL |cd3d_si| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|gs_bands_equivalence| FORMULA-DECL NIL |bands_3D| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|member| CONST-DECL "bool" |fseqs| |structures|) (|gs_bands_si| DEF-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|gs_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|gs_bands_3D| CONST-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_3D| NIL) (|gs_bands_si_component| FORMULA-DECL NIL |bands_si| NIL) (|Vgs_3D| CONST-DECL "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)" |bands_util| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|gs2v3_gs_only| APPLICATION-JUDGEMENT "(LAMBDA (vo2): gs_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)" |bands_util| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|seg_lh_top| CONST-DECL "real" |cd3d_si| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|seg_lh_bottom| CONST-DECL "nnreal" |cd3d_si| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |bands_si| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|gs2v3| CONST-DECL "Vect3" |bands_util| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|gs_bands_si_equivalence-1| |nil| 3482674962 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "gs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vgs_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA GS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "gs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                 (fpr(j)`position -
                                                                   (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                vo, velocity(fpr)(j))`seq
                                                       (i)") (("1" (INST - FRED) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (HIDE -5) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "min") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "seg_lh_bottom") (("3" (EXPAND "seg_lh_top") (("3" (EXPAND "min") (("3" (EXPAND "max") (("3" (LIFT-IF) (("3" (TYPEPRED FPR) (("3" (INST - "j+1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + J) (("2" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "gs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vgs_3D") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA GS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "gs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                 (fpr(j)`position -
                                                                   (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                vo, velocity(fpr)(j))`seq
                                                       (i)") (("1" (INST - FRED) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (HIDE -5) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "min") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "seg_lh_bottom") (("3" (EXPAND "seg_lh_top") (("3" (EXPAND "min") (("3" (EXPAND "max") (("3" (LIFT-IF) (("3" (TYPEPRED FPR) (("3" (INST - "j+1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|gs_red_bands_si| 0 (|gs_red_bands_si-3| "" 3884848337 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_gs_band_fp?") (("" (NAME "mid" "(gs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                                   + gs_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                                  / 2") (("" (REPLACE -1) (("" (LEMMA "gs_bands_si_equivalence") (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 "xxx") (("1" (CASE "xxx<=mid") (("1" (INST - "xxx" "mid") (("1" (GROUND) (("1" (TYPEPRED "xxx") (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "xxx") (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (ASSERT) (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid" "xxx") (("2" (GROUND) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT :FLUSH? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - "mid") (("2" (ASSERT) (("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - "i" "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|gs_red_bands_si-2| "" 3756499736 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_gs_band_fp?") (("" (NAME MID "(gs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                                   + gs_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                                  / 2") (("" (REPLACE -1) (("" (LEMMA GS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 XXX) (("1" (CASE "xxx<=mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (ASSERT) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT :FLUSH? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - MID) (("2" (ASSERT) (("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|gs2v3_gs_only| APPLICATION-JUDGEMENT "(LAMBDA (vo2): gs_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)" |bands_util| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|red_gs_band_fp?| CONST-DECL "bool" |bands_si| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|mid| SKOLEM-CONST-DECL "posreal" |bands_si| NIL) (|i| SKOLEM-CONST-DECL "{i: subrange(0, gs_bands_si(so, vo, to, fpr)(N - 2)`length - 2) |
   NOT gs_bands_si(so, vo, to, fpr)(N - 2)`seq(i) =
        gs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)}" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|vo| SKOLEM-CONST-DECL "Nzv2_vect3" |bands_si| NIL) (|so| SKOLEM-CONST-DECL "Vect3" |bands_si| NIL) (|gs_bands_si_equivalence| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|gs_bands_si| DEF-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|gs_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|gs_red_bands_si-1| |nil| 3482675784 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_gs_band_fp?") (("" (NAME MID "(gs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                                   + gs_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                                  / 2") (("" (REPLACE -1) (("" (LEMMA GS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 XXX) (("1" (CASE "xxx<=mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (ASSERT) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - MID) (("2" (ASSERT) (("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|gs_green_bands_si| 0 (|gs_green_bands_si-3| "" 3884848448 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_gs_band_fp?") (("" (NAME "mid" "(gs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                          (1 + i)
                                       +
                                       gs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                           (i))
                                      / 2") (("" (REPLACE -1) (("" (LEMMA "gs_bands_si_equivalence") (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 "xxx") (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - "xxx" "mid") (("1" (GROUND) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid" "xxx") (("2" (GROUND) (("1" (TYPEPRED "xxx") (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "xxx") (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (CASE "ii<i") (("1" (INST-CP - "ii" "i") (("1" (INST - "i+1" "ii") (("1" (SPLIT -) (("1" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "ii=i") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i" "i+1") (("2" (INST - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid") (("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - "i" "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|gs_green_bands_si-2| "" 3756499827 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_gs_band_fp?") (("" (NAME MID "(gs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                          (1 + i)
                                       +
                                       gs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                           (i))
                                      / 2") (("" (REPLACE -1) (("" (LEMMA GS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 XXX) (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (CASE "ii<i") (("1" (INST-CP - II I) (("1" (INST - "i+1" II) (("1" (SPLIT -) (("1" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "ii=i") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i" "i+1") (("2" (INST - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID) (("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|gs2v3_gs_only| APPLICATION-JUDGEMENT "(LAMBDA (vo2): gs_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)" |bands_util| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|red_gs_band_fp?| CONST-DECL "bool" |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|so| SKOLEM-CONST-DECL "Vect3" |bands_si| NIL) (|vo| SKOLEM-CONST-DECL "Nzv2_vect3" |bands_si| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|i| SKOLEM-CONST-DECL "{i: subrange(0, gs_bands_si(so, vo, to, fpr)(N - 2)`length - 2) |
   NOT gs_bands_si(so, vo, to, fpr)(N - 2)`seq(i) =
        gs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)}" |bands_si| NIL) (|mid| SKOLEM-CONST-DECL "posreal" |bands_si| NIL) (|gs_bands_si_equivalence| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|gs_bands_si| DEF-DECL "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" |bands_si| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|gs_fseq?| CONST-DECL "bool" |fseqs_aux_2D| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|gs_green_bands_si-1| |nil| 3482675829 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_gs_band_fp?") (("" (NAME MID "(gs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                          (1 + i)
                                       +
                                       gs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                           (i))
                                      / 2") (("" (REPLACE -1) (("" (LEMMA GS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 XXX) (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "gs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "gs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID) (("2" (TYPEPRED "gs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|vs_bands_si_combines| 0 (|vs_bands_si_combines-3| "" 3884848556 ("" (SKOLEM 1 ("fp" "so" "to" "vo" _ "x")) (("" (INDUCT "i") (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "vs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "vs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND "vs_bands_si" 1) (("2" (LEMMA "member_sort") (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" "x") (("2" (ASSERT) (("2" (LEMMA "member_composition") (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" "x") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND "vs_bands_si" -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA "member_sort") (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" "x") (("3" (ASSERT) (("3" (LEMMA "member_composition") (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" "x") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "vs_bands_si") (("4" (ASSERT) (("4" (LEMMA "member_sort") (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" "x") (("4" (ASSERT) (("4" (LEMMA "member_composition") (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" "x") (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "vs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "vs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|vs_bands_si_combines-2| "" 3790109115 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "vs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "vs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND VS_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND VS_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "vs_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "vs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "vs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|member| CONST-DECL "bool" |fseqs| |structures|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (< CONST-DECL "bool" |reals| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vs_fseq?| CONST-DECL "bool" |fseqs_aux_vertical| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|vs_bands_si| DEF-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_si| NIL) (|vs_bands_si_i| CONST-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_si| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subrange_induction| FORMULA-DECL NIL |subrange_inductions| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|member_sort| FORMULA-DECL NIL |sort_fseq| |structures|) (|member_composition| FORMULA-DECL NIL |fseqs| |structures|) (O CONST-DECL "fseq" |fseqs| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)) SHOSTAK) (|vs_bands_si_combines-1| |nil| 3482684998 ("" (SKOLEM 1 (FP SO TO VO _ X)) (("" (INDUCT I) (("1" (FLATTEN) (("1" (INST 1 0) (("1" (EXPAND "vs_bands_si") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) (("2" (SKEEP -1 (0)) (("2" (EXPAND "vs_bands_si") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) (("3" (ASSERT) (("3" (PROP) (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (INST 1 "j!1") NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (SKOSIMP*) (("2" (TYPEPRED "j!1") (("2" (TYPEPRED "j!2") (("2" (ASSERT) (("2" (EXPAND VS_BANDS_SI 1) (("2" (LEMMA MEMBER_SORT) (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) (("2" (LEMMA MEMBER_COMPOSITION) (("2" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND VS_BANDS_SI -1) (("3" (ASSERT) (("3" (INST 1 "1+k") (("3" (ASSERT) (("3" (LEMMA MEMBER_SORT) (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) (("3" (LEMMA MEMBER_COMPOSITION) (("3" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (SKOSIMP*) (("4" (TYPEPRED "j!1") (("4" (ASSERT) (("4" (EXPAND "vs_bands_si") (("4" (ASSERT) (("4" (LEMMA MEMBER_SORT) (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k) o
                                     vs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (LEMMA MEMBER_COMPOSITION) (("4" (INST - "vs_bands_si_i(so, vo, to, fp)(1 + k)" "vs_bands_si(so, vo, to, fp)(k)" X) (("4" (ASSERT) (("4" (CASE "j!1 = k+1") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) (("2" (INST 5 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "vs_bands_si") (("4" (LIFT-IF) (("4" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (EXPAND "vs_bands_si") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL)) (|vs_bands_si_component| 0 (|vs_bands_si_component-2| "" 3884848641 ("" (LEMMA "vs_bands_si_combines") (("" (SKEEP) (("" (INST?) (("" (ASSERT) (("" (EXPAND "vs_bands_si_i") (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST 1 "j") (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 "ii") (("1" (TYPEPRED "ii") (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOLEM -2 "ii") (("2" (TYPEPRED "ii") (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "member") (("3" (SKOLEM -2 "ii") (("3" (TYPEPRED "ii") (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "member") (("4" (SKOLEM -2 "ii") (("4" (TYPEPRED "ii") (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "member") (("5" (SKOLEM -2 "ii") (("5" (TYPEPRED "ii") (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "member") (("6" (SKOLEM -2 "ii") (("6" (TYPEPRED "ii") (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST 1 "j") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|vs_bands_si_component-1| |nil| 3482685112 ("" (LEMMA VS_BANDS_SI_COMBINES) (("" (SKEEP) (("" (INST?) (("" (ASSERT) (("" (EXPAND "vs_bands_si_i") (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST 1 J) (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "member") (("1" (SKOLEM -2 II) (("1" (TYPEPRED II) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER) (("2" (SKOLEM -2 II) (("2" (TYPEPRED II) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND MEMBER) (("3" (SKOLEM -2 II) (("3" (TYPEPRED II) (("3" (EXPAND "empty_seq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND MEMBER) (("4" (SKOLEM -2 II) (("4" (TYPEPRED II) (("4" (EXPAND "empty_seq") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND MEMBER) (("5" (SKOLEM -2 II) (("5" (TYPEPRED II) (("5" (EXPAND "empty_seq") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND MEMBER) (("6" (SKOLEM -2 II) (("6" (TYPEPRED II) (("6" (EXPAND "empty_seq") (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST 1 J) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|fsq| TYPE-EQ-DECL NIL |fsq| |structures|) (|empty_seq| CONST-DECL "fsq" |fseqs| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|member| CONST-DECL "bool" |fseqs| |structures|) (|vs_bands_si_i| CONST-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_si| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|vs_bands_si_combines| FORMULA-DECL NIL |bands_si| NIL)) NIL)) (|vs_bands_si_equivalence_TCC1| 0 (|vs_bands_si_equivalence_TCC1-1| |nil| 3482684663 ("" (SUBTYPE-TCC) NIL NIL) ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|vs_bands_si_equivalence| SUBTYPE "bands_si.i" "nat"))) (|vs_bands_si_equivalence| 0 (|vs_bands_si_equivalence-3| "" 3884848817 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA "conflict_3d_rew_absolute_time") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA "conflict_3d_rew_absolute_time") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + "j") (("1" (NAME "LB" "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME "UB" "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "vs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" "vo") (("1" (ASSERT) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vs") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA "vs_bands_si_component") (("2" (INST?) (("2" (NAME "fred" "vs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                                               (fpr(j)`position -
                                                                                                 (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                                              vo, velocity(fpr)(j))`seq
                                                                                     (i)") (("2" (INST - "fred") (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 "sheep") (("1" (INST - "sheep") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + "j") (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fpr") (("2" (INST -4 "j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + "j") (("2" (NAME "LB" "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME "UB" "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "vs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("2" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" "vo") (("1" (ASSERT) (("1" (INST - "x" "y") (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vs") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA "vs_bands_si_component") (("2" (INST?) (("2" (NAME "fred" "vs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                                               (fpr(j)`position -
                                                                                                 (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                                              vo, velocity(fpr)(j))`seq
                                                                                     (i)") (("2" (INST - "fred") (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 "sheep") (("1" (INST - "sheep") (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + "j") (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fpr") (("2" (INST -4 "j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|vs_bands_si_equivalence-2| "" 3790109121 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "vs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vs") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA VS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "vs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                                               (fpr(j)`position -
                                                                                                 (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                                              vo, velocity(fpr)(j))`seq
                                                                                     (i)") (("2" (INST - FRED) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + J) (("2" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "vs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("2" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vs") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA VS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "vs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                                               (fpr(j)`position -
                                                                                                 (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                                              vo, velocity(fpr)(j))`seq
                                                                                     (i)") (("2" (INST - FRED) (("2" (FLATTEN) (("2" (HIDE -2) (("2" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|conflict_3D_rew_absolute_time| FORMULA-DECL NIL |cd3d_si| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|gsmax| FORMAL-CONST-DECL "{x: posreal | x > gsmin}" |bands_si| NIL) (|gsmin| FORMAL-CONST-DECL "posreal" |bands_si| NIL) (|vs_bands_equivalence| FORMULA-DECL NIL |bands_3D| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (<= CONST-DECL "bool" |reals| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL) (|posreal_max| APPLICATION-JUDGEMENT "{z: posreal | z >= x AND z >= y}" |real_defs| NIL) (|posreal_min| APPLICATION-JUDGEMENT "{z: posreal | z <= x AND z <= y}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|member| CONST-DECL "bool" |fseqs| |structures|) (|vs_bands_si| DEF-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_si| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|vs_fseq?| CONST-DECL "bool" |fseqs_aux_vertical| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (|vs_bands_3D| CONST-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_3D| NIL) (|vs_bands_si_component| FORMULA-DECL NIL |bands_si| NIL) (|Vs| CONST-DECL "(vs_only?(vo3 - vi3))" |bands_util| NIL) (* CONST-DECL "Vector" |vectors_3D| |vectors|) (- CONST-DECL "Vector" |vectors_3D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_3D| |vectors|) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|seg_lh_top| CONST-DECL "real" |cd3d_si| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|seg_lh_bottom| CONST-DECL "nnreal" |cd3d_si| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|j| SKOLEM-CONST-DECL "below[N - 1]" |bands_si| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|vs2v3| CONST-DECL "(vs_only?(vo3))" |bands_util| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|vs_only?| CONST-DECL "bool" |definitions_3D| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|vs_bands_si_equivalence-1| |nil| 3482685206 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA CONFLICT_3D_REW_ABSOLUTE_TIME) (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (PROP) (("1" (SKEEP -1) (("1" (INST + J) (("1" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) (("1" (LEMMA "vs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vs") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA VS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "vs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                                               (fpr(j)`position -
                                                                                                 (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                                              vo, velocity(fpr)(j))`seq
                                                                                     (i)") (("1" (INST - FRED) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (HIDE -5) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "min") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "seg_lh_bottom") (("3" (EXPAND "seg_lh_top") (("3" (EXPAND "min") (("3" (EXPAND "max") (("3" (LIFT-IF) (("3" (TYPEPRED FPR) (("3" (INST - "j+1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP -1) (("2" (INST + J) (("2" (NAME LB "seg_lh_bottom(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (NAME UB "seg_lh_top(fpr, to)(j) + fpr(j)`time - to") (("2" (REPLACE -1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (LEMMA "vs_bands_equivalence[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax]") (("1" (INST - "so - (fpr(j)`position - (fpr(j)`time - to) * velocity(fpr)(j))" " velocity(fpr)(j)" VO) (("1" (ASSERT) (("1" (INST - X Y) (("1" (ASSERT) (("1" (SPLIT -) (("1" (EXPAND "Vs") (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE -4) (("2" (SKEEP) (("2" (LEMMA VS_BANDS_SI_COMPONENT) (("2" (INST?) (("2" (NAME FRED "vs_bands_3D[D,H,LB,UB,gsmin,gsmax,vsmin,vsmax](so -
                                                                                               (fpr(j)`position -
                                                                                                 (fpr(j)`time - to) * velocity(fpr)(j)),
                                                                                              vo, velocity(fpr)(j))`seq
                                                                                     (i)") (("1" (INST - FRED) (("1" (FLATTEN) (("1" (HIDE -2) (("1" (SPLIT -2) (("1" (EXPAND "member") (("1" (SKOLEM -1 SHEEP) (("1" (INST - SHEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST + J) (("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (REPLACE -2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (INST + I) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "min") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (HIDE -5) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FPR) (("2" (INST -4 J) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seg_lh_top") (("2" (EXPAND "min") (("2" (EXPAND "seg_lh_bottom") (("2" (EXPAND "max") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (TYPEPRED FPR) (("2" (INST - "j+1") (("2" (ASSERT) (("2" (SPLIT -6) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "seg_lh_bottom") (("3" (EXPAND "seg_lh_top") (("3" (EXPAND "min") (("3" (EXPAND "max") (("3" (LIFT-IF) (("3" (TYPEPRED FPR) (("3" (INST - "j+1") (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|vs_red_bands_si| 0 (|vs_red_bands_si-3| "" 3884848926 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_vs_band_fp?") (("" (NAME "mid" "(vs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                                          + vs_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                                         / 2") (("" (REPLACE -1) (("" (LEMMA "vs_bands_si_equivalence") (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 "xxx") (("1" (CASE "xxx<=mid") (("1" (INST - "xxx" "mid") (("1" (GROUND) (("1" (TYPEPRED "xxx") (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "xxx") (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (ASSERT) (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid" "xxx") (("2" (GROUND) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "xxx") (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (CASE "ii<i") (("1" (INST-CP - "ii" "i") (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "i=ii") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - "mid") (("2" (ASSERT) (("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - "i" "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|vs_red_bands_si-2| "" 3756498733 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_vs_band_fp?") (("" (NAME MID "(vs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                                          + vs_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                                         / 2") (("" (REPLACE -1) (("" (LEMMA VS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 XXX) (("1" (CASE "xxx<=mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (ASSERT) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (CASE "ii<i") (("1" (INST-CP - II I) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "i=ii") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i+1" II) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - MID) (("2" (ASSERT) (("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|red_vs_band_fp?| CONST-DECL "bool" |bands_si| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|mid| SKOLEM-CONST-DECL "posreal" |bands_si| NIL) (|i| SKOLEM-CONST-DECL "{i: subrange(0, vs_bands_si(so, vo, to, fpr)(N - 2)`length - 2) |
   NOT vs_bands_si(so, vo, to, fpr)(N - 2)`seq(i) =
        vs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)}" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|vo| SKOLEM-CONST-DECL "Nzv2_vect3" |bands_si| NIL) (|so| SKOLEM-CONST-DECL "Vect3" |bands_si| NIL) (|vs_bands_si_equivalence| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|vs_bands_si| DEF-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_si| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|vs_fseq?| CONST-DECL "bool" |fseqs_aux_vertical| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|vs_red_bands_si-1| |nil| 3482685657 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_vs_band_fp?") (("" (NAME MID "(vs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)
                                          + vs_bands_si(so, vo, to, fpr)(N - 2)`seq(i))
                                         / 2") (("" (REPLACE -1) (("" (LEMMA VS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 1 XXX) (("1" (CASE "xxx<=mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (ASSERT) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST - MID) (("2" (ASSERT) (("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|vs_green_bands_si| 0 (|vs_green_bands_si-3| "" 3884849030 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_vs_band_fp?") (("" (NAME "mid" "(vs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                                 (1 + i)
                                              +
                                              vs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                                  (i))
                                             / 2") (("" (REPLACE -1) (("" (LEMMA "vs_bands_si_equivalence") (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 "xxx") (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - "xxx" "mid") (("1" (GROUND) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (INST-CP - "i+1" "ii") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid" "xxx") (("2" (GROUND) (("1" (TYPEPRED "xxx") (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 "ii") (("3" (FLATTEN) (("3" (TYPEPRED "xxx") (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - "ii" "i") (("3" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - "mid") (("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - "i" "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|vs_green_bands_si-2| "" 3756505003 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_vs_band_fp?") (("" (NAME MID "(vs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                                 (1 + i)
                                              +
                                              vs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                                  (i))
                                             / 2") (("" (REPLACE -1) (("" (LEMMA VS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 XXX) (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i") (("1" (ASSERT) NIL NIL) ("2" (CASE "ii=i+1") (("1" (ASSERT) NIL NIL) ("2" (INST-CP - "i+1" "ii") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID) (("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|red_vs_band_fp?| CONST-DECL "bool" |bands_si| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|so| SKOLEM-CONST-DECL "Vect3" |bands_si| NIL) (|vo| SKOLEM-CONST-DECL "Nzv2_vect3" |bands_si| NIL) (|to| SKOLEM-CONST-DECL "real" |bands_si| NIL) (|fpr| SKOLEM-CONST-DECL "FlightPlanRelevant_nz(to)" |bands_si| NIL) (|i| SKOLEM-CONST-DECL "{i: subrange(0, vs_bands_si(so, vo, to, fpr)(N - 2)`length - 2) |
   NOT vs_bands_si(so, vo, to, fpr)(N - 2)`seq(i) =
        vs_bands_si(so, vo, to, fpr)(N - 2)`seq(1 + i)}" |bands_si| NIL) (|mid| SKOLEM-CONST-DECL "posreal" |bands_si| NIL) (|vs_bands_si_equivalence| FORMULA-DECL NIL |bands_si| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subrange| TYPE-EQ-DECL NIL |integers| NIL) (|FlightPlanRelevant_nz| NONEMPTY-TYPE-EQ-DECL NIL |bands_si| NIL) (|FlightPlanRelevant| NONEMPTY-TYPE-EQ-DECL NIL |cd3d_si| NIL) (H FORMAL-CONST-DECL "posreal" |bands_si| NIL) (D FORMAL-CONST-DECL "posreal" |bands_si| NIL) (T FORMAL-CONST-DECL "{AB: posreal | AB > B}" |bands_si| NIL) (B FORMAL-CONST-DECL "nnreal" |bands_si| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|vs_bands_si| DEF-DECL "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" |bands_si| NIL) (|increasing?| CONST-DECL "bool" |sort_fseq| |structures|) (<= CONST-DECL "bool" |reals| NIL) (|vs_fseq?| CONST-DECL "bool" |fseqs_aux_vertical| NIL) (|vsmax| FORMAL-CONST-DECL "{x: real | x > vsmin}" |bands_si| NIL) (|vsmin| FORMAL-CONST-DECL "real" |bands_si| NIL) (|fseq| TYPE-EQ-DECL NIL |fseqs| |structures|) (|barray| TYPE-EQ-DECL NIL |fseqs| |structures|) (|FlightPlan_nz| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (|velocity| CONST-DECL "Vect3" |flightplan| NIL) (|FlightPlan| NONEMPTY-TYPE-EQ-DECL NIL |flightplan| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (N FORMAL-CONST-DECL "above[1]" |bands_si| NIL) (|above| NONEMPTY-TYPE-EQ-DECL NIL |int_types| NIL) (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|Nzv2_vect3| TYPE-EQ-DECL NIL |definitions_3D| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|vect2| CONST-DECL "Vect2" |vect_3D_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect3| TYPE-EQ-DECL NIL |vectors_3D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|vs_green_bands_si-1| |nil| 3482685719 ("" (SKEEP) (("" (ASSERT) (("" (SKEEP) (("" (EXPAND "red_vs_band_fp?") (("" (NAME MID "(vs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                                 (1 + i)
                                              +
                                              vs_bands_si(so, vo, to, fpr)(N - 2)`seq
                                                  (i))
                                             / 2") (("" (REPLACE -1) (("" (LEMMA VS_BANDS_SI_EQUIVALENCE) (("" (INST?) (("" (ASSERT) (("" (PROP) (("1" (SKOLEM 2 XXX) (("1" (ASSERT) (("1" (CASE "xxx <= mid") (("1" (INST - XXX MID) (("1" (GROUND) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID XXX) (("2" (GROUND) (("1" (TYPEPRED XXX) (("1" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("1" (EXPAND "vs_fseq?") (("1" (INST - I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "vs_fseq?") (("2" (INST - "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOLEM 1 II) (("3" (FLATTEN) (("3" (TYPEPRED XXX) (("3" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("3" (EXPAND "increasing?") (("3" (INST-CP - II I) (("3" (INST-CP - "i+1" II) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST - MID) (("2" (TYPEPRED "vs_bands_si(so, vo, to, fpr)(N - 2)") (("2" (EXPAND "increasing?") (("2" (INST - I "i+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)))
