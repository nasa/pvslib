(|kb| (|angle_from_to_TCC1| 0 (|angle_from_to_TCC1-1| |nil| 3483459133 ("" (SKEEP) (("" (TYPEPRED "to2pi((y-x)+pi)") (("" (ASSERT) NIL NIL)) NIL)) NIL) ((|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)) NIL (|angle_from_to| SUBTYPE "(number_fields.-)(to2pi.to2pi((number_fields.+)(((number_fields.-)(kb.y, kb.x)), pi_def.pi)), pi_def.pi)" "{aa: reals.real | booleans.AND(reals.>=(aa, (number_fields.-)(pi_def.pi)), reals.<(aa, pi_def.pi))}"))) (|angle_from_to_id| 0 (|angle_from_to_id-1| |nil| 3483703665 ("" (GRIND) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|angle_from_to| CONST-DECL "{aa: real | aa >= -pi AND aa < pi}" |kb| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|angle_from_to_lt_pi| 0 (|angle_from_to_lt_pi-2| "" 3790108878 ("" (SKEEP) (("" (CASE "x-y < pi AND y-x < pi") (("1" (FLATTEN) (("1" (EXPAND "angle_from_to") (("1" (EXPAND "to2pi") (("1" (CASE "floor((pi-x+y)/(2*pi)) = 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -3) (("2" (GRIND :EXCLUDE "pi") (("2" (NAME "zzz" "(pi-x+y)/(2*pi)") (("2" (CASE "zzz < 1 AND zzz > 0") (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT +) (("1" (REPLACE -1 :DIR RL) (("1" (CROSS-MULT 1) NIL NIL)) NIL) ("2" (REPLACE -1 :DIR RL) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND :EXCLUDE "pi") NIL NIL)) NIL)) NIL)) NIL) ((|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|angle_from_to| CONST-DECL "{aa: real | aa >= -pi AND aa < pi}" |kb| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|floor| CONST-DECL "{i | i <= x & x < i + 1}" |floor_ceil| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (<= CONST-DECL "bool" |reals| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK) (|angle_from_to_lt_pi-1| |nil| 3483694501 ("" (SKEEP) (("" (CASE "x-y < pi AND y-x < pi") (("1" (FLATTEN) (("1" (EXPAND "angle_from_to") (("1" (EXPAND "to2pi") (("1" (CASE "floor((pi-x+y)/(2*pi)) = 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -3) (("2" (GRIND :EXCLUDE "pi") (("2" (NAME "zzz" "(pi-x+y)/(2*pi)") (("2" (CASE "zzz < 1 AND zzz > 0") (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT +) (("1" (REPLACE -1 :DIR RL) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -1 :DIR RL) (("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND :EXCLUDE "pi") NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|angle_from_to_test| 0 (|angle_from_to_test-1| |nil| 3483459994 ("" (GRIND :EXCLUDE "pi") NIL NIL) ((|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nonneg_floor_is_nat| APPLICATION-JUDGEMENT "nat" |floor_ceil| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|angle_from_to| CONST-DECL "{aa: real | aa >= -pi AND aa < pi}" |kb| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|)) SHOSTAK)) (|chirel_star_TCC1| 0 (|chirel_star_TCC1-2| "" 3790108880 ("" (SKEEP) (("" (CASE "s = zero") (("1" (TYPEPRED "s") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "s") (("2" (SPLIT 2) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_lt") (("2" (INST - "D" "sqrt(sqv(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|sqv_zero| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sq_lt| FORMULA-DECL NIL |sq| |reals|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) SHOSTAK (|chirel_star| SUBTYPE "number_fields./(kb.D, vectors_2D.norm(kb.s))" "real_abs_le1")) (|chirel_star_TCC1-1| |nil| 3482010022 ("" (SKEEP) (("" (CASE "s = zero") (("1" (TYPEPRED "s") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "s") (("2" (SPLIT 2) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_lt") (("2" (INST - "D" "sqrt(sqv(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chirel_star| SUBTYPE "number_fields./(kb.D, vectors_2D.norm(kb.s))" "real_abs_le1"))) (|chirel_star_equiv_TCC1| 0 (|chirel_star_equiv_TCC1-3| "" 3790108880 ("" (SKEEP) (("" (CASE "s = zero") (("1" (TYPEPRED "s") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "s") (("2" (SPLIT 2) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_lt") (("2" (INST - "D" "sqrt(sqv(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|sqv_zero| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sq_lt| FORMULA-DECL NIL |sq| |reals|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL)) SHOSTAK (|chirel_star_equiv| SUBTYPE "number_fields./(kb.D, vectors_2D.norm(kb.s))" "real_abs_le1")) (|chirel_star_equiv_TCC1-2| |nil| 3486461825 ("" (SKEEP) (("" (CASE "s = zero") (("1" (TYPEPRED "s") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "s") (("2" (SPLIT 2) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_lt") (("2" (INST - "D" "sqrt(sqv(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chirel_star_equiv| SUBTYPE "number_fields./(kb.D, vectors_2D.norm(kb.s))" "real_abs_le1")) (|chirel_star_equiv_TCC1-1| |nil| 3483695428 ("" (SKEEP) (("" (CASE "s = zero") (("1" (TYPEPRED "s") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "zero") (("2" (DECOMPOSE-EQUALITY) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chirel_star_equiv| SUBTYPE "number_fields./(kb.D, vectors_2D.norm(kb.s))" "real_abs_le1"))) (|chirel_star_equiv| 0 (|chirel_star_equiv-1| |nil| 3483695444 ("" (SKEEP) (("" (LEMMA "angle_from_to_lt_pi") (("" (INST - "track(v)" "(track(-s) - eps * asin(D / norm(s)))") (("" (ASSERT) (("" (EXPAND "chirel_star") (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|angle_from_to_lt_pi| FORMULA-DECL NIL |kb| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|chirel_star_test_TCC1| 0 (|chirel_star_test_TCC1-1| |nil| 3483433209 ("" (SUBTYPE-TCC) NIL NIL) ((|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_times_npreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)) NIL (|chirel_star_test| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|chirel_star_test| 0 (|chirel_star_test-2| "" 3790108883 ("" (SKEEP) (("" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 2) (("1" (EXPAND "horizontal_conflict?") (("1" (INST + "10") (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (REPLACE -2) (("1" (EXPAND "-") (("1" (EXPAND "+") (("1" (GRIND) (("1" (CASE "-10/sqrt(3)*(-10/sqrt(3)) = 100/3") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT 1) (("1" (CASE "20*10/sqrt(3)>100+100/3-25") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CROSS-MULT 1) (("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT track(vo) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -4) (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -6) (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -6) (("1" (REPLACE -7) (("1" (EXPAND "-") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -6) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (GROUND) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "10" "sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE -7) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT chirel_star(s, vo - vi, 1 / 2, -1) = 2 * pi / 3") (("1" (HIDE 2) (("1" (LEMMA "chirel_star_equiv") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (REPLACE -8) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (SPLIT -) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "to2pi_id") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT chirel_star(s, vo - vi, 1, -1) = 5 * pi / 6") (("1" (HIDE 2) (("1" (LEMMA "chirel_star_equiv") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (REPLACE -9) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REPLACE -6) (("2" (ASSERT) (("2" (SPLIT -) (("1" (REPLACE -1) (("1" (REWRITE "to2pi_id") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT chirel_star(s, vo - vi, 0, -1) = pi / 2") (("1" (HIDE 2) (("1" (LEMMA "chirel_star_equiv") (("1" (INST?) (("1" (REPLACE -4) (("1" (REPLACE -6) (("1" (REPLACE -5) (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -11) (("2" (REPLACE -1) (("2" (SPLIT -) (("1" (REPLACE -1) (("1" (REWRITE "to2pi_id") NIL NIL)) NIL) ("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE -6) (("3" (REPLACE -7) (("3" (EXPAND "-") (("3" (HIDE-ALL-BUT -1) (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|sq_gt| FORMULA-DECL NIL |sq| |reals|) (|div_mult_pos_gt1| FORMULA-DECL NIL |extra_real_props| NIL) (|nnrat_plus_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|div_cancel4| FORMULA-DECL NIL |real_props| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|negint_times_negint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|npreal_times_npreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|sin_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|asin_sin| FORMULA-DECL NIL |trig_inverses| |trig|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|sq_le| FORMULA-DECL NIL |sq| |reals|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|chirel_star_equiv| FORMULA-DECL NIL |kb| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK) (|chirel_star_test-1| |nil| 3483433209 ("" (SKEEP) (("" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 2) (("1" (EXPAND "horizontal_conflict?") (("1" (INST + "10") (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (REPLACE -2) (("1" (EXPAND "-") (("1" (EXPAND "+") (("1" (GRIND) (("1" (CASE "-10/sqrt(3)*(-10/sqrt(3)) = 100/3") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT 1) (("1" (CASE "20*10/sqrt(3)>100+100/3-25") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CROSS-MULT 1) (("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT track(vo) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -4) (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (ASSERT) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -6) (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -6) (("1" (REPLACE -7) (("1" (EXPAND "-") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE -6) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (GROUND) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "10" "sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE -7) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT chirel_star(s, vo - vi, 1 / 2, -1) = 2 * pi / 3") (("1" (HIDE 2) (("1" (LEMMA "chirel_star_equiv") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (REPLACE -8) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (SPLIT -) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "to2pi_id") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT chirel_star(s, vo - vi, 1, -1) = 5 * pi / 6") (("1" (HIDE 2) (("1" (LEMMA "chirel_star_equiv") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (REPLACE -9) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REPLACE -6) (("2" (ASSERT) (("2" (SPLIT -) (("1" (REPLACE -1) (("1" (REWRITE "to2pi_id") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT chirel_star(s, vo - vi, 0, -1) = pi / 2") (("1" (HIDE 2) (("1" (LEMMA "chirel_star_equiv") (("1" (INST?) (("1" (REPLACE -4) (("1" (REPLACE -6) (("1" (REPLACE -5) (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -11) (("2" (REPLACE -1) (("2" (SPLIT -) (("1" (REPLACE -1) (("1" (REWRITE "to2pi_id") NIL NIL)) NIL) ("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE -6) (("3" (FLATTEN) (("3" (EXPAND "zero") (("3" (EXPAND "-") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE -6) (("3" (REPLACE -7) (("3" (EXPAND "-") (("3" (HIDE-ALL-BUT -1) (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|chirel_star_0_id| 0 (|chirel_star_0_id-1| |nil| 3482222332 ("" (SKEEP) (("" (EXPAND "chirel_star") (("" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL) ((|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|)) SHOSTAK)) (|chirel_star_1_id| 0 (|chirel_star_1_id-1| |nil| 3482571071 ("" (SKEEP) (("" (EXPAND "chirel_star") (("" (EXPAND "angle_from_to") (("" (ASSERT) (("" (GRIND :EXCLUDE ("asin" "norm" "pi" "track")) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|angle_from_to| CONST-DECL "{aa: real | aa >= -pi AND aa < pi}" |kb| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|chirel_star_f_entry_scaf| 0 (|chirel_star_f_entry_scaf-3| "" 3790108888 ("" (CASE "FORALL (xy:real): cos(xy) < 0 IFF to2pi(xy) > pi/2 AND to2pi(xy) < 3*pi/2") (("1" (LABEL "coslem" -1) (("1" (HIDE "coslem") (("1" (CASE "FORALL (f: nnreal, phi, r: real):
                                                                                                                                  phi <= pi AND phi > 0 AND cos(r) < 0 AND cos(r + phi) < 0 AND f >= 0
                                                                                                                              AND f <= 1
                                                                                                                              IMPLIES cos(r + f * phi) < 0") (("1" (SKEEP) (("1" (CASE "phi <= 0") (("1" (INST - "f" "-phi" "r") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST - "1-f" "phi" "r-phi") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (REVEAL "coslem") (("2" (INST-CP - "r+f*phi") (("2" (INST-CP - "r") (("2" (INST - "r+phi") (("2" (ASSERT) (("2" (HIDE 2) (("2" (HIDE -5) (("2" (HIDE -5) (("2" (FLATTEN) (("2" (NAME "zzz" "r+phi") (("2" (CASE "NOT r+f*phi = (1-f)*r + f*zzz") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -1) (("2" (REPLACE -2) (("2" (HIDE -1) (("2" (CASE "to2pi((1-f)*r + f*zzz) = (1-f)*to2pi(r)+f*to2pi(zzz)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (NAME "rt" "to2pi(r)") (("1" (REPLACE -1) (("1" (NAME "zt" "to2pi(zzz)") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT (-4 -5 -6 -7 -10 -11 1)) (("1" (MULT-BY -1 "f") (("1" (MULT-BY -3 "(1-f)") (("1" (ADD-FORMULAS -1 -3) (("1" (ASSERT) (("1" (MULT-BY -2 "f") (("1" (MULT-BY -3 "(1-f)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (NAME "n" "floor(r/(2*pi))") (("2" (NAME "n1" "floor(zzz/(2*pi))") (("2" (CASE "NOT n = n1") (("1" (NAME "kk" "n1-n") (("1" (CASE "kk > 0") (("1" (CASE "n1 = n+kk") (("1" (REPLACE -1) (("1" (HIDE -3) (("1" (HIDE 1) (("1" (EXPAND "to2pi" -) (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (ASSERT) (("1" (CASE "kk >= 1") (("1" (ASSERT) (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "n1 > n") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (TYPEPRED "n1") (("2" (TYPEPRED "n") (("2" (CASE "zzz > r") (("1" (MULT-BY -1 "1/(2*pi)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "zf" "(1-f)*r + f*zzz") (("2" (REPLACE -1) (("2" (NAME "n3" "floor(zf/(2*pi))") (("2" (CASE "NOT n = n3") (("1" (HIDE 2) (("1" (CASE "n3 >=n") (("1" (CASE "n3<=n1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (TYPEPRED "n1") (("2" (TYPEPRED "n3") (("2" (CASE "zf <= zzz") (("1" (MULT-BY -1 "1/(2*pi)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "zf" 1) (("2" (CASE "r < zzz AND zzz<=zzz") (("1" (FLATTEN) (("1" (MULT-BY -2 "f") (("1" (MULT-BY -2 "(1-f)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "zf >= r") (("1" (MULT-BY -1 "1/(2*pi)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "zf" +) (("2" (CASE "zzz > r AND r >= r") (("1" (FLATTEN) (("1" (MULT-BY -1 "f") (("1" (MULT-BY -2 "(1-f)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "to2pi" +) (("2" (REPLACE -6) (("2" (REPLACE -5) (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (NAME "xyz" "to2pi(xy+pi)-pi") (("2" (CASE "cos(xy) = cos(xyz)") (("1" (CASE "to2pi(xy) = to2pi(xyz)") (("1" (REPLACE -1) (("1" (LABEL "to2pieq" -1) (("1" (HIDE -1) (("1" (REPLACE -1) (("1" (LABEL "coseq" -1) (("1" (HIDE -1) (("1" (LABEL "xyzname" -1) (("1" (HIDE "xyzname") (("1" (SPLIT) (("1" (FLATTEN) (("1" (LEMMA "cos_ge_0") (("1" (INST - "xyz") (("1" (ASSERT) (("1" (CASE "(-pi / 2 <= xyz AND xyz <= pi / 2) IFF (to2pi(xy) <= pi/2 OR to2pi(xy) >= 3*pi/2)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REVEAL "to2pieq") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (HIDE -1) (("2" (REVEAL "to2pieq") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (CASE "xyz >=-pi AND xyz < pi") (("1" (GROUND) (("1" (CASE "xyz >= 0") (("1" (CASE "to2pi(xyz) = xyz") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (EXPAND "to2pi") (("2" (CASE "floor(xyz/(2*pi)) = 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (TYPEPRED "floor(xyz/(2*pi))") (("2" (CASE "xyz/(2*pi) < 1 AND xyz/(2*pi)>=0") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "xyz < 0") (("1" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi") (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (HIDE 2) (("2" (TYPEPRED "floor(xyz/(2*pi))") (("2" (CASE "xyz/(2*pi) < 0 AND xyz/(2*pi)>=-1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "to2pi(xyz) = xyz") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "xyz >= 0") (("1" (CASE "floor(xyz/(2*pi)) = 0") (("1" (EXPAND "to2pi") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "xyz/(2*pi) >= 0 AND xyz/(2*pi)<1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (CASE "xyz/(2*pi) < 0 AND xyz/(2*pi)>=-1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CASE "to2pi(xyz) = xyz") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "xyz >= 0") (("1" (CASE "floor(xyz/(2*pi)) = 0") (("1" (EXPAND "to2pi" +) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "xyz/(2*pi) >=0 AND xyz/(2*pi)<1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "xyz < 0") (("1" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "xyz/(2*pi) <0 AND xyz/(2*pi)>=-1") (("1" (ASSERT) NIL NIL) ("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "xyz >=0") (("1" (ASSERT) NIL NIL) ("2" (CASE "xyz < 0") (("1" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "xyz/(2*pi) <0 AND xyz/(2*pi)>=-1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "xyz >= 0") (("1" (CASE "floor(xyz/(2*pi)) = 0") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "xyz/(2*pi) >=0 AND xyz/(2*pi)<1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (SPLIT) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "xyz < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "xyz") (("2" (ASSERT) (("2" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "cos_lt_0") (("2" (INST - "to2pi(xyz)") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REWRITE "cos_id_to2pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 :DIR RL) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND :EXCLUDE "pi") NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "to2pi(xyz) = to2pi(xy)") (("1" (LEMMA "cos_id_to2pi") (("1" (INST-CP - "xyz") (("1" (INST - "xy") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 + :DIR RL) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND :EXCLUDE "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|cos_lt_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|cos_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|xyz| SKOLEM-CONST-DECL "real" |kb| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (<= CONST-DECL "bool" |reals| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|f| SKOLEM-CONST-DECL "nnreal" |kb| NIL) (|zf| SKOLEM-CONST-DECL "real" |kb| NIL) (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL) (|floor| CONST-DECL "{i | i <= x & x < i + 1}" |floor_ceil| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (< CONST-DECL "bool" |reals| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|chirel_star_f_entry_scaf-2| |nil| 3483720866 ("" (CASE "FORALL (xy:real): cos(xy) < 0 IFF to2pi(xy) > pi/2 AND to2pi(xy) < 3*pi/2") (("1" (LABEL "coslem" -1) (("1" (HIDE "coslem") (("1" (CASE "FORALL (f: nnreal, phi, r: real):
                                                                                                                                  phi <= pi AND phi > 0 AND cos(r) < 0 AND cos(r + phi) < 0 AND f >= 0
                                                                                                                              AND f <= 1
                                                                                                                              IMPLIES cos(r + f * phi) < 0") (("1" (SKEEP) (("1" (CASE "phi <= 0") (("1" (INST - "f" "-phi" "r") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST - "1-f" "phi" "r-phi") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (REVEAL "coslem") (("2" (INST-CP - "r+f*phi") (("2" (INST-CP - "r") (("2" (INST - "r+phi") (("2" (ASSERT) (("2" (HIDE 2) (("2" (HIDE -5) (("2" (HIDE -5) (("2" (FLATTEN) (("2" (NAME "zzz" "r+phi") (("2" (CASE "NOT r+f*phi = (1-f)*r + f*zzz") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -1) (("2" (REPLACE -2) (("2" (HIDE -1) (("2" (CASE "to2pi((1-f)*r + f*zzz) = (1-f)*to2pi(r)+f*to2pi(zzz)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (NAME "rt" "to2pi(r)") (("1" (REPLACE -1) (("1" (NAME "zt" "to2pi(zzz)") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT (-4 -5 -6 -7 -10 -11 1)) (("1" (MULT-BY -1 "f") (("1" (MULT-BY -3 "(1-f)") (("1" (ADD-FORMULAS -1 -3) (("1" (ASSERT) (("1" (MULT-BY -2 "f") (("1" (MULT-BY -3 "(1-f)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (NAME "n" "floor(r/(2*pi))") (("2" (NAME "n1" "floor(zzz/(2*pi))") (("2" (CASE "NOT n = n1") (("1" (NAME "kk" "n1-n") (("1" (CASE "kk > 0") (("1" (CASE "n1 = n+kk") (("1" (REPLACE -1) (("1" (HIDE -3) (("1" (HIDE 1) (("1" (EXPAND "to2pi" -) (("1" (REPLACE -3) (("1" (REPLACE -4) (("1" (ASSERT) (("1" (CASE "kk >= 1") (("1" (ASSERT) (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "n1 > n") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (TYPEPRED "n1") (("2" (TYPEPRED "n") (("2" (CASE "zzz > r") (("1" (MULT-BY -1 "1/(2*pi)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "zf" "(1-f)*r + f*zzz") (("2" (REPLACE -1) (("2" (NAME "n3" "floor(zf/(2*pi))") (("2" (CASE "NOT n = n3") (("1" (HIDE 2) (("1" (CASE "n3 >=n") (("1" (CASE "n3<=n1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (HIDE -1) (("2" (TYPEPRED "n1") (("2" (TYPEPRED "n3") (("2" (CASE "zf <= zzz") (("1" (MULT-BY -1 "1/(2*pi)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "zf" 1) (("2" (CASE "r < zzz AND zzz<=zzz") (("1" (FLATTEN) (("1" (MULT-BY -2 "f") (("1" (MULT-BY -2 "(1-f)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "zf >= r") (("1" (MULT-BY -1 "1/(2*pi)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "zf" +) (("2" (CASE "zzz > r AND r >= r") (("1" (FLATTEN) (("1" (MULT-BY -1 "f") (("1" (MULT-BY -2 "(1-f)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "to2pi" +) (("2" (REPLACE -6) (("2" (REPLACE -5) (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (NAME "xyz" "to2pi(xy+pi)-pi") (("2" (CASE "cos(xy) = cos(xyz)") (("1" (CASE "to2pi(xy) = to2pi(xyz)") (("1" (REPLACE -1) (("1" (LABEL "to2pieq" -1) (("1" (HIDE -1) (("1" (REPLACE -1) (("1" (LABEL "coseq" -1) (("1" (HIDE -1) (("1" (LABEL "xyzname" -1) (("1" (HIDE "xyzname") (("1" (SPLIT) (("1" (FLATTEN) (("1" (LEMMA "cos_ge_0") (("1" (INST - "xyz") (("1" (ASSERT) (("1" (CASE "(-pi / 2 <= xyz AND xyz <= pi / 2) IFF (to2pi(xy) <= pi/2 OR to2pi(xy) >= 3*pi/2)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REVEAL "to2pieq") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (HIDE -1) (("2" (REVEAL "to2pieq") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (CASE "xyz >=-pi AND xyz < pi") (("1" (GROUND) (("1" (CASE "xyz >= 0") (("1" (CASE "to2pi(xyz) = xyz") (("1" (REPLACE -1) (("1" (PROPAX) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (EXPAND "to2pi") (("2" (CASE "floor(xyz/(2*pi)) = 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (TYPEPRED "floor(xyz/(2*pi))") (("2" (CASE "xyz/(2*pi) < 1 AND xyz/(2*pi)>=0") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "xyz < 0") (("1" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi") (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (HIDE 2) (("2" (TYPEPRED "floor(xyz/(2*pi))") (("2" (CASE "xyz/(2*pi) < 0 AND xyz/(2*pi)>=-1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "to2pi(xyz) = xyz") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "xyz >= 0") (("1" (CASE "floor(xyz/(2*pi)) = 0") (("1" (EXPAND "to2pi") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "xyz/(2*pi) >= 0 AND xyz/(2*pi)<1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 3) (("2" (CASE "xyz/(2*pi) < 0 AND xyz/(2*pi)>=-1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CASE "to2pi(xyz) = xyz") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "xyz >= 0") (("1" (CASE "floor(xyz/(2*pi)) = 0") (("1" (EXPAND "to2pi" +) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "xyz/(2*pi) >=0 AND xyz/(2*pi)<1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "xyz < 0") (("1" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "xyz/(2*pi) <0 AND xyz/(2*pi)>=-1") (("1" (ASSERT) NIL NIL) ("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "xyz >=0") (("1" (ASSERT) NIL NIL) ("2" (CASE "xyz < 0") (("1" (CASE "floor(xyz/(2*pi)) = -1") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "xyz/(2*pi) <0 AND xyz/(2*pi)>=-1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("5" (CASE "xyz >= 0") (("1" (CASE "floor(xyz/(2*pi)) = 0") (("1" (EXPAND "to2pi" -) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "xyz/(2*pi) >=0 AND xyz/(2*pi)<1") (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (SPLIT) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "xyz < 0") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "xyz") (("2" (ASSERT) (("2" (SPLIT) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "cos_lt_0") (("2" (INST - "to2pi(xyz)") (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) (("2" (REWRITE "cos_id_to2pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 :DIR RL) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND :EXCLUDE "pi") NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "to2pi(xyz) = to2pi(xy)") (("1" (LEMMA "cos_id_to2pi") (("1" (INST-CP - "xyz") (("1" (INST - "xy") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 + :DIR RL) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND :EXCLUDE "pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL) (|chirel_star_f_entry_scaf-1| |nil| 3483701902 ("" (CASE "FORALL (xy:real): cos(xy) < 0 IFF to2pi(xy) > pi/2 AND to2pi(xy) < 3*pi/2") (("1" (LABEL "coslem" -1) (("1" (HIDE "coslem") (("1" (CASE "FORALL (f: nnreal, phi, r: real):
                                                          phi <= pi AND phi > 0 AND cos(r) < 0 AND cos(r + phi) < 0 AND f >= 0
                                                      AND f <= 1
                                                      IMPLIES cos(r + f * phi) < 0") (("1" (SKEEP) (("1" (CASE "phi <= 0") (("1" (INST - "f" "-phi" "r") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST - "1-f" "phi" "r-phi") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKEEP) (("2" (CASE "phi < pi") (("1" (HIDE -2) (("1" (CASE "cos(r+f*phi) > 0") (("1" (LABEL "cospos" -1) (("1" (HIDE "cospos") (("1" (CASE "EXISTS (z:nnreal): z<f AND cos(r+z*phi) = 0") (("1" (CASE "EXISTS (b:real): b>f AND b<1 AND cos(r+b*phi) = 0") (("1" (SKOSIMP*) (("1" (LEMMA "cos_eq_0") (("1" (INST-CP - "r+b!1*phi") (("1" (INST - "r+z!1*phi") (("1" (ASSERT) (("1" (SKOSIMP*) (("1" (CASE "i!2 > i!1") (("1" (CASE "i!2 - i!1 >=1") (("1" (HIDE -2) (("1" (SUB-FORMULAS -3 -2) (("1" (MULT-BY -2 "pi") (("1" (ASSERT) (("1" (CASE "b!1-z!1 < 1") (("1" (CASE "(b!1-z!1)*phi < pi") (("1" (ASSERT) NIL NIL) ("2" (MULT-BY -1 "phi") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE "z!1<b!1") (("1" (MULT-BY -1 "phi") (("1" (MULT-BY 1 "pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL)) NIL) NIL SHOSTAK)) (|chirel_star_tangent| 0 (|chirel_star_tangent-2| "" 3790108899 ("" (SKEEP) (("" (LEMMA "line_solution_det") (("" (INST?) (("" (ASSERT) (("" (HIDE 2) (("" (LEMMA "chirel_star_1_id") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (CASE "trkgs2vect(to2pi(track(-s) - eps * asin(D / norm(s))), p) = trkgs2vect(track(-s) - eps * asin(D / norm(s)), p)") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (SPLIT +) (("1" (REWRITE "norm_id") (("1" (CASE "-eps * det(s, trkgs2vect(track(-s) - eps * asin(D / norm(s)), 1)) =
                                                                                                       D") (("1" (MULT-BY -1 "p") (("1" (EXPAND "trkgs2vect") (("1" (GRIND :EXCLUDE ("sin" "cos" "track" "asin" "norm")) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "trkgs2vect") (("2" (LEMMA "cos_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "sin_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_track") (("2" (REWRITE "sin_track") (("2" (CASE "cos(eps * asin(D / norm(s))) = cos(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "sin(eps * asin(D / norm(s))) = eps*sin(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) (("1" (LEMMA "sin_asin") (("1" (INST?) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "det") (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (REWRITE "vx_neg") (("1" (REWRITE "vy_neg") (("1" (ASSERT) (("1" (ASSERT) (("1" (NAME "Xs" "norm(s)") (("1" (REPLACE -1) (("1" (CASE "Xs > 0") (("1" (HIDE -4) (("1" (NAME "pz" "cos(asin(D/Xs))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -2) (("1" (TYPEPRED "eps") (("1" (MULT-BY -4 "D*-eps*eps/(sq(Xs))") (("1" (GRIND-REALS) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "sin_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "cos_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "-1 * (s * trkgs2vect(track(-s) - eps * asin(D / norm(s)), 1)) >= 0") (("1" (MULT-BY -1 "p") (("1" (EXPAND "trkgs2vect") (("1" (GRIND :EXCLUDE ("sin" "cos" "track" "asin" "norm")) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "trkgs2vect") (("2" (LEMMA "sin_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "cos_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_track") (("2" (REWRITE "cos_track") (("2" (CASE "sin(eps * asin(D / norm(s))) = eps*sin(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (CASE "cos(eps * asin(D / norm(s))) = cos(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_asin") (("1" (NAME "rq" "cos(asin(D/norm(s)))") (("1" (CASE "rq >= 0") (("1" (REPLACE -2) (("1" (HIDE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE -2) (("1" (TYPEPRED "eps") (("1" (EXPAND "*") (("1" (REWRITE "vx_neg") (("1" (REWRITE "vy_neg") (("1" (REAL-PROPS) (("1" (NAME "Xs" "norm(s)") (("1" (CASE "Xs > 0") (("1" (REPLACE -2) (("1" (CANCEL-BY 1 "Xs*Xs*Xs*Xs*rq") NIL NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(D/norm(s))") (("2" (NAME "ang" "asin(D/norm(s))") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "cos_ge_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "cos_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "sin_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (NAME "vvvv" "track(-s) - eps * asin(D / norm(s))") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (EXPAND "trkgs2vect") (("2" (REWRITE "cos_id_to2pi") (("2" (REWRITE "sin_id_to2pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (CASE "norm(s) > 0") (("1" (SPLIT +) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST - "s") (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_le") (("2" (INST - "D" "sqrt(sqv(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|line_solution_det| FORMULA-DECL NIL |line_solutions| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sign_neg_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|chirel_star_1_id| FORMULA-DECL NIL |kb| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL) (|pos_times_le| FORMULA-DECL NIL |real_props| NIL) (|neg_times_le| FORMULA-DECL NIL |real_props| NIL) (|pos_times_lt| FORMULA-DECL NIL |real_props| NIL) (|neg_times_lt| FORMULA-DECL NIL |real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pos_times_gt| FORMULA-DECL NIL |real_props| NIL) (|pos_div_gt| FORMULA-DECL NIL |real_props| NIL) (DIV_148 SKOLEM-CONST-DECL "real" |kb| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|cos_track| FORMULA-DECL NIL |track| |aviation|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|norm_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|scal_1| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|vy_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|add_div| FORMULA-DECL NIL |real_props| NIL) (|minus_div1| FORMULA-DECL NIL |real_props| NIL) (|div_distributes| FORMULA-DECL NIL |real_props| NIL) (|both_sides_times2| FORMULA-DECL NIL |real_props| NIL) (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|div_times| FORMULA-DECL NIL |real_props| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|div_cancel1| FORMULA-DECL NIL |real_props| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|vx_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|sin_track| FORMULA-DECL NIL |track| |aviation|) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|det| CONST-DECL "real" |det_2D| |vectors|) (|cos_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|sin_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|sq_le| FORMULA-DECL NIL |sq| |reals|) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|Sp_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)) SHOSTAK) (|chirel_star_tangent-1| |nil| 3482575589 ("" (SKEEP) (("" (LEMMA "line_solution_det") (("" (INST?) (("" (ASSERT) (("" (HIDE 2) (("" (LEMMA "chirel_star_1_id") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (CASE "trkgs2vect(to2pi(track(-s) - eps * asin(D / norm(s))), p) = trkgs2vect(track(-s) - eps * asin(D / norm(s)), p)") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (SPLIT +) (("1" (REWRITE "norm_id") (("1" (CASE "-eps * det(s, trkgs2vect(track(-s) - eps * asin(D / norm(s)), 1)) =
                                                                                                       D") (("1" (MULT-BY -1 "p") (("1" (EXPAND "trkgs2vect") (("1" (GRIND :EXCLUDE ("sin" "cos" "track" "asin" "norm")) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "trkgs2vect") (("2" (LEMMA "cos_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "sin_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_track") (("2" (REWRITE "sin_track") (("2" (CASE "cos(eps * asin(D / norm(s))) = cos(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "sin(eps * asin(D / norm(s))) = eps*sin(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) (("1" (LEMMA "sin_asin") (("1" (INST?) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "det") (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (REWRITE "vx_neg") (("1" (REWRITE "vy_neg") (("1" (ASSERT) (("1" (ASSERT) (("1" (NAME "Xs" "norm(s)") (("1" (REPLACE -1) (("1" (CASE "Xs > 0") (("1" (HIDE -4) (("1" (NAME "pz" "cos(asin(D/Xs))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -2) (("1" (TYPEPRED "eps") (("1" (MULT-BY -4 "D*-eps*eps/(sq(Xs))") (("1" (GRIND-REALS) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (ASSERT) (("2" (LEMMA "sin_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "cos_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "-1 * (s * trkgs2vect(track(-s) - eps * asin(D / norm(s)), 1)) >= 0") (("1" (MULT-BY -1 "p") (("1" (EXPAND "trkgs2vect") (("1" (GRIND :EXCLUDE ("sin" "cos" "track" "asin" "norm")) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "trkgs2vect") (("2" (LEMMA "sin_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "cos_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_track") (("2" (REWRITE "cos_track") (("2" (CASE "sin(eps * asin(D / norm(s))) = eps*sin(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (CASE "cos(eps * asin(D / norm(s))) = cos(asin(D / norm(s)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_asin") (("1" (NAME "rq" "cos(asin(D/norm(s)))") (("1" (CASE "rq >= 0") (("1" (REPLACE -2) (("1" (HIDE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE -2) (("1" (TYPEPRED "eps") (("1" (EXPAND "*") (("1" (REWRITE "vx_neg") (("1" (REWRITE "vy_neg") (("1" (REAL-PROPS) (("1" (NAME "Xs" "norm(s)") (("1" (CASE "Xs > 0") (("1" (REPLACE -2) (("1" (CANCEL-BY 1 "Xs*Xs*Xs*Xs*rq") NIL NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(D/norm(s))") (("2" (NAME "ang" "asin(D/norm(s))") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "cos_ge_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "cos_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "eps") (("2" (GROUND) (("2" (REPLACE -1) (("2" (LEMMA "sin_neg") (("2" (INST - "asin(D/norm(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (NAME "vvvv" "track(-s) - eps * asin(D / norm(s))") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (EXPAND "trkgs2vect") (("2" (REWRITE "cos_id_to2pi") (("2" (REWRITE "sin_id_to2pi") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (CASE "norm(s) > 0") (("1" (SPLIT +) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST - "s") (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_le") (("2" (INST - "D" "sqrt(sqv(s))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|chirel_star_f_entry| 0 (|chirel_star_f_entry-2| "" 3504851098 ("" (SKEEP) (("" (NAME "vf" "LAMBDA (ff:nnreal): (sin(track(s)),cos(track(s))) * trkgs2vect(chirel_star(s, v, ff, eps), 1)") (("" (CASE "vf(0) < 0 AND vf(1) < 0 IMPLIES vf(f) < 0") (("1" (SPLIT -1) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "vf") (("1" (NAME "nnv" "trkgs2vect(chirel_star(s, v, f, eps), p)") (("1" (REPLACE -1) (("1" (LEMMA "trkgs2vect_id") (("1" (INST - "s") (("1" (REPLACE -1 1 :DIR RL) (("1" (HIDE -1) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (EXPAND "trkgs2vect") (("1" (MULT-BY -1 "norm(s)*p") (("1" (ASSERT) (("1" (NAME-REPLACE "dd" "(# x := sin(track(s)), y := cos(track(s)) #) *
       (# x := sin(chirel_star(s, v, f, eps)),
          y := cos(chirel_star(s, v, f, eps)) #)" :HIDE? T) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "vf" +) (("2" (LEMMA "trkgs2vect_id") (("2" (INST - "s") (("2" (REPLACE -1 -4 :DIR RL) (("2" (REWRITE "chirel_star_0_id") (("2" (LEMMA "trkgs2vect_id") (("2" (INST - "v") (("2" (REPLACE -1 -5 :DIR RL) (("2" (EXPAND "trkgs2vect") (("2" (MULT-BY 1 "norm(s)*norm(v)") (("1" (ASSERT) (("1" (NAME-REPLACE "dd" "((# x := sin(track(s)), y := cos(track(s)) #) *
         (# x := sin(track(v)), y := cos(track(v)) #))" :HIDE? T) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (NAME-REPLACE "dd" "((# x := sin(track(s)), y := cos(track(s)) #) *
         (# x := sin(track(v)), y := cos(track(v)) #))" :HIDE? T) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA "line_solution_sep_dot_negative") (("3" (INST - "eps" "s" "trkgs2vect(chirel_star(s, v, 1, eps), 1)") (("3" (ASSERT) (("3" (SPLIT -) (("1" (EXPAND "vf" +) (("1" (NAME "nnnv" "trkgs2vect(chirel_star(s, v, 1, eps), 1)") (("1" (REPLACE -1) (("1" (LEMMA "trkgs2vect_id") (("1" (INST - "s") (("1" (REPLACE -1 -3 :DIR RL) (("1" (HIDE-ALL-BUT (-3 1)) (("1" (EXPAND "trkgs2vect") (("1" (MULT-BY 1 "norm(s)") (("1" (ASSERT) (("1" (NAME-REPLACE "dd" "(# x := sin(track(s)), y := cos(track(s)) #)" :HIDE? T) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (NAME-REPLACE "dd" "(# x := sin(track(s)), y := cos(track(s)) #)" :HIDE? T) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_id") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (LEMMA "chirel_star_tangent") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "theta" "track(v)") (("2" (NAME "phi1" "angle_from_to(theta,
                                                                                track(-s)
                                                                                -
                                                                                eps * asin(D / norm(s)))") (("1" (CASE "NOT (vf = (LAMBDA (ff:nnreal): cos((track(s)-theta)-ff*phi1)))") (("1" (HIDE 2) (("1" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "vf" 1) (("1" (EXPAND "trkgs2vect" 1) (("1" (EXPAND "*" 1) (("1" (EXPAND "chirel_star" 1) (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (LEMMA "cos_minus") (("1" (INST - "track(s)" "theta+x!1*phi1") (("1" (REWRITE "cos_id_to2pi") (("1" (REWRITE "sin_id_to2pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 +) (("2" (HIDE-ALL-BUT (-5 1)) (("2" (TYPEPRED "f") (("2" (TYPEPRED "phi1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (LEMMA "chirel_star_f_entry_scaf") (("2" (INST - "f" "phi1" "track(s)-theta") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (CASE "norm(s) > D") (("1" (SPLIT +) (("1" (CROSS-MULT 1) NIL NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|sq_gt| FORMULA-DECL NIL |sq| |reals|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sin_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|cos_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|chirel_star_f_entry_scaf| FORMULA-DECL NIL |kb| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|angle_from_to| CONST-DECL "{aa: real | aa >= -pi AND aa < pi}" |kb| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|vf| SKOLEM-CONST-DECL "[nnreal -> real]" |kb| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|scal_1| FORMULA-DECL NIL |vectors_2D| |vectors|) (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|trkgs2vect_id| FORMULA-DECL NIL |track| |aviation|) (|chirel_star_0_id| FORMULA-DECL NIL |kb| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|line_solution_sep_dot_negative| FORMULA-DECL NIL |line_solutions| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|chirel_star_tangent| FORMULA-DECL NIL |kb| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|) (<= CONST-DECL "bool" |reals| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|Sp_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)) SHOSTAK) (|chirel_star_f_entry-1| |nil| 3483107178 ("" (SKEEP) (("" (NAME "vf" "LAMBDA (ff:nnreal): (sin(track(s)),cos(track(s))) * trkgs2vect(chirel_star(s, v, ff, eps), 1)") (("1" (CASE "vf(0) < 0 AND vf(1) < 0 IMPLIES vf(f) < 0") (("1" (SPLIT -1) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "vf") (("1" (NAME "nnv" "trkgs2vect(chirel_star(s, v, f, eps), p)") (("1" (REPLACE -1) (("1" (LEMMA "trkgs2vect_id") (("1" (INST - "s") (("1" (REPLACE -1 1 :DIR RL) (("1" (HIDE -1) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (EXPAND "trkgs2vect") (("1" (MULT-BY -1 "norm(s)*p") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (DIV-BY 1 "p") (("2" (ASSERT) (("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (TYPEPRED "s") (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "vf" +) (("2" (LEMMA "trkgs2vect_id") (("2" (INST - "s") (("2" (REPLACE -1 -4 :DIR RL) (("2" (REWRITE "chirel_star_0_id") (("2" (LEMMA "trkgs2vect_id") (("2" (INST - "v") (("2" (REPLACE -1 -5 :DIR RL) (("2" (EXPAND "trkgs2vect") (("2" (MULT-BY 1 "norm(s)*norm(v)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA "line_solution_sep_dot_negative") (("3" (INST - "eps" "s" "trkgs2vect(chirel_star(s, v, 1, eps), 1)") (("3" (ASSERT) (("3" (SPLIT -) (("1" (EXPAND "vf" +) (("1" (NAME "nnnv" "trkgs2vect(chirel_star(s, v, 1, eps), 1)") (("1" (REPLACE -1) (("1" (LEMMA "trkgs2vect_id") (("1" (INST - "s") (("1" (REPLACE -1 -3 :DIR RL) (("1" (HIDE-ALL-BUT (-3 1)) (("1" (EXPAND "trkgs2vect") (("1" (MULT-BY 1 "norm(s)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_id") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (LEMMA "chirel_star_tangent") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "theta" "track(v)") (("2" (NAME "phi1" "angle_from_to(theta,
                                                                     track(-s)
                                                                     -
                                                                     eps * asin(D / norm(s)))") (("1" (CASE "NOT (vf = (LAMBDA (ff:nnreal): cos((track(s)-theta)-ff*phi1)))") (("1" (HIDE 2) (("1" (DECOMPOSE-EQUALITY 1) (("1" (EXPAND "vf" 1) (("1" (EXPAND "trkgs2vect" 1) (("1" (EXPAND "*" 1) (("1" (EXPAND "chirel_star" 1) (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (LEMMA "cos_minus") (("1" (INST - "track(s)" "theta+x!1*phi1") (("1" (REWRITE "cos_id_to2pi") (("1" (REWRITE "sin_id_to2pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (TYPEPRED "s") (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 +) (("2" (HIDE-ALL-BUT (-5 1)) (("2" (TYPEPRED "f") (("2" (TYPEPRED "phi1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (LEMMA "chirel_star_f_entry_scaf") (("2" (INST - "f" "phi1" "track(s)-theta") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (CASE "norm(s) > D") (("1" (SPLIT +) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (REPLACE -1 :DIR RL) (("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "norm_eq_0") (("3" (INST?) (("3" (ASSERT) (("3" (TYPEPRED "s") (("3" (REPLACE -2) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (FLATTEN) (("4" (CASE "s = zero") (("1" (TYPEPRED "s") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "zero") (("2" (DECOMPOSE-EQUALITY 1) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (TYPEPRED "s") (("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|chi_hc_TCC1| 0 (|chi_hc_TCC1-1| |nil| 3482010022 ("" (SKEEP) (("" (ASSERT) NIL NIL)) NIL) ((|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|chi_hc| SUBTYPE "0" "nnreal_lt_2pi"))) (|chi_hc_TCC2| 0 (|chi_hc_TCC2-2| "" 3790108900 ("" (SKOSIMP*) NIL NIL) NIL SHOSTAK (|chi_hc| SUBTYPE "kb.v" "Nz_vect2")) (|chi_hc_TCC2-1| |nil| 3482010022 ("" (SKOSIMP*) (("" (EXPAND "abs") (("" (GROUND) NIL NIL)) NIL)) NIL) NIL NIL (|chi_hc| SUBTYPE "kb.v" "Nz_vect2"))) (|chi_hc_TCC3| 0 (|chi_hc_TCC3-1| |nil| 3482855921 ("" (SKEEP) (("" (SKOSIMP*) (("" (HIDE-ALL-BUT (2 3)) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) NIL (|chi_hc| SUBTYPE "kb.expr" "real_abs_le1"))) (|chi_hc_TCC4| 0 (|chi_hc_TCC4-1| |nil| 3482855921 ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) NIL (|chi_hc| SUBTYPE "0" "nnreal_lt_2pi"))) (|sin_track_minus| 0 (|sin_track_minus-1| |nil| 3482597630 ("" (SKEEP) (("" (LEMMA "sin_minus") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA "sin_minus") (("" (INST?) (("" (REPLACE -1) (("" (HIDE -1) (("" (REWRITE "cos_track") (("" (REWRITE "cos_track") (("" (REWRITE "cos_track") (("" (REWRITE "sin_track") (("" (REWRITE "sin_track") (("" (REWRITE "sin_track") (("" (REWRITE "vx_distr_sub") (("" (REWRITE "vy_distr_sub") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|cos_track| FORMULA-DECL NIL |track| |aviation|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|vx_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|vy_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| |aviation|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) SHOSTAK)) (|chi_hc_sin_equivalence_2_TCC1| 0 (|chi_hc_sin_equivalence_2_TCC1-3| "" 3804525965 ("" (SKEEP) (("" (REPLACE -1) (("" (HIDE-ALL-BUT (-3 -4)) (("" (EXPAND "chi_hc") (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL)) SHOSTAK (|chi_hc_sin_equivalence_2| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2")) (|chi_hc_sin_equivalence_2_TCC1-2| "" 3790108902 ("" (SKEEP) (("" (SKEEP) (("" (REPLACE -1) (("" (HIDE-ALL-BUT (-2 -4)) (("" (EXPAND "chi_hc") (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|chi_hc_sin_equivalence_2| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2")) (|chi_hc_sin_equivalence_2_TCC1-1| |nil| 3482855921 ("" (SKEEP) (("" (SKEEP) (("" (REPLACE -1) (("" (HIDE-ALL-BUT (-2 -4)) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chi_hc_sin_equivalence_2| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|chi_hc_sin_equivalence_2| 0 (|chi_hc_sin_equivalence_2-1| |nil| 3482656472 ("" (SKEEP) (("" (SKOLETIN 1 :POSTFIX "a") (("" (SKOLETIN 1 :POSTFIX "a") (("" (FLATTEN) (("" (LABEL "NVOA" -2) (("" (HIDE "NVOA") (("" (REVEAL "NVOA") (("" (DELABEL "NVOA") (("" (COPY -2) (("" (LABEL "twotrue" -1) (("" (HIDE "twotrue") (("" (EXPAND "cha" -2) (("" (EXPAND "chi_hc" -) (("" (LIFT-IF) (("" (GROUND) (("" (NAME "chirelstar" "chirel_star(s,vo-vi,f,eps)") (("" (REPLACE -1) (("" (NAME "expr" "(norm(vi)/norm(vo))*sin(chirelstar-track(vi))") (("" (REPLACE -1) (("" (NAME "asinex" "asin(expr)") (("" (REPLACE -1) (("" (NAME "exsign" "sign(asinex)") (("" (REPLACE -1) (("" (NAME "expidiff" "exsign*(pi/2)-asinex") (("" (MULT-BY -1 "irt") (("" (NAME "arcsindir" "exsign*(pi/2)+irt*expidiff") (("" (REPLACE -2 :DIR RL) (("" (NEG-FORMULA -1) (("" (ASSERT) (("" (CASE "NOT (-1 * ((exsign * pi) / 2) - (exsign * pi) / 2 * irt + asinex * irt) = (-1 * ((pi / 2) * exsign * irt) - exsign * (pi / 2) +
                                                                                                       asinex * irt)") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -2) (("2" (REPLACE -8 +) (("2" (REWRITE "track_id") (("2" (CASE "to2pi(cha`1) = cha`1") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "expr = sin(chirelstar-cha`1)") (("1" (ASSERT) NIL NIL) ("2" (HIDE 6) (("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE -7 +) (("2" (ASSERT) (("2" (CASE "sin(chirelstar - to2pi(-arcsindir + chirelstar)) = sin(arcsindir)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "arcsindir" +) (("1" (REPLACE -2 + :DIR RL) (("1" (REPLACE -4 1 :DIR RL) (("1" (ASSERT) (("1" (NAME "theta" "exsign * (pi / 2) + (pi / 2) * exsign * irt") (("1" (CASE "(pi / 2) * exsign * irt - asin(expr) * irt + exsign * (pi / 2) = theta-asinex*irt") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sin_minus") (("1" (INST?) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "sin(theta) = 0") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (CASE "sin(asinex*irt) = irt*sin(asinex)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "asinex" 1) (("1" (REWRITE "sin_asin") (("1" (CASE "cos(theta) = -irt") (("1" (CASE "sq(irt) = 1") (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "irt") (("2" (EXPAND "sq") (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 1 :DIR RL) (("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "exsign") (("2" (TYPEPRED "irt") (("2" (SPLIT -) (("1" (CASE "(pi / 2) * exsign * irt + exsign * (pi / 2) = exsign*pi") (("1" (REPLACE -1) (("1" (SPLIT -) (("1" (REPLACE -1) (("1" (LEMMA "cos_pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (LEMMA "cos_neg") (("2" (INST - "pi") (("2" (LEMMA "cos_pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "cos_0") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "irt") (("2" (GROUND) (("2" (LEMMA "sin_neg") (("2" (INST - "asinex") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 + :DIR RL) (("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "exsign") (("2" (TYPEPRED "irt") (("2" (SPLIT -) (("1" (CASE "exsign * (pi / 2) + (pi / 2) * exsign * irt = exsign*pi") (("1" (REPLACE -1) (("1" (SPLIT -) (("1" (LEMMA "sin_pi") (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "sin_neg") (("2" (INST - "pi") (("2" (LEMMA "sin_pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "exsign * (pi / 2) + (pi / 2) * exsign * irt = 0") (("1" (LEMMA "sin_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "sin_minus") (("2" (INST?) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (HIDE 2) (("2" (REWRITE "cos_id_to2pi") (("2" (REWRITE "sin_id_to2pi") (("2" (LEMMA "cos_minus") (("2" (INST - "chirelstar" "arcsindir") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "sin_minus") (("2" (INST - "chirelstar" "arcsindir") (("2" (ASSERT) (("2" (REPLACE -1) (("2" (ASSERT) (("2" (NAME "rvo" "trkgs2vect(chirelstar,1)") (("2" (CASE "not track(rvo) = to2pi(chirelstar)") (("1" (REPLACE -1 1 :DIR RL) (("1" (REWRITE "track_id") NIL NIL)) NIL) ("2" (LEMMA "cos_id_to2pi") (("2" (INST - "chirelstar") (("2" (REPLACE -1 :DIR RL) (("2" (HIDE -1) (("2" (LEMMA "sin_id_to2pi") (("2" (INST - "chirelstar") (("2" (REPLACE -1 :DIR RL) (("2" (HIDE -1) (("2" (REPLACE -1 :DIR RL) (("2" (HIDE -1) (("2" (CASE "sq(cos(track(rvo))) + sq(sin(track(rvo))) = 1") (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "cos_track") (("2" (REWRITE "sin_track") (("2" (CASE "sq(norm(rvo)) = sqv(rvo)") (("1" (EXPAND "sq") (("1" (CROSS-MULT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (LEMMA "sqrt_sqv_norm") (("2" (INST?) (("2" (LEMMA "sq_eq") (("2" (INST - "sqrt(sqv(rvo))" "norm(rvo)") (("2" (REWRITE "sq_sqrt") (("1" (GROUND) NIL NIL) ("2" (HIDE -1) (("2" (TYPEPRED "sqv(rvo)") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cha" 1) (("2" (TYPEPRED "chi_hc(1, eps, irt)(s, vo, vi)`1") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cha| SKOLEM-CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|neg_one_times| FORMULA-DECL NIL |extra_tegies| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|sin_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|cos_track| FORMULA-DECL NIL |track| |aviation|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| |aviation|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|cos_id_to2pi| FORMULA-DECL NIL |to2pi| |trig|) (|arcsindir| SKOLEM-CONST-DECL "real" |kb| NIL) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|asinex| SKOLEM-CONST-DECL "real_abs_le_pi2" |kb| NIL) (|sign_neg_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|) (|sign_mult_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|) (|sign_sq_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|cos_0| FORMULA-DECL NIL |sincos_def| |trig|) (|cos_pi| FORMULA-DECL NIL |sincos| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|cos_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|sin_0| FORMULA-DECL NIL |sincos_def| |trig|) (|sin_pi| FORMULA-DECL NIL |sincos| |trig|) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|track_id| FORMULA-DECL NIL |track| |aviation|) (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|sign_nat| FORMULA-DECL NIL |sign| |reals|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|chi_hc_track_eq| 0 (|chi_hc_track_eq-2| "" 3790108913 ("" (SKEEP) (("" (CASE "v`y > 0") (("1" (CASE "w`y > 0") (("1" (CASE "v`x = 0") (("1" (CASE "w`x = 0") (("1" (EXPAND "track") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "v`x > 0") (("1" (CASE "w`x > 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "v`x" "v`y") (("1" (LEMMA "nnreal_div_posreal_is_nnreal") (("1" (INST - "-w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x < 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x = 0") (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "nnreal_div_posreal_is_nnreal") (("2" (INST - "-v`x" "v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "cv" "v`x/v`y") (("2" (REPLACE -1) (("2" (NAME "cw" "w`x/w`y") (("2" (REPLACE -1) (("2" (CASE "w`x = 0") (("1" (CASE "v`x = 0") (("1" (EXPAND "*") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (CASE "s`y > 0") (("1" (DIV-BY -8 "s`y") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-8 1 2)) (("2" (LEMMA "nnreal_times_nnreal_is_nnreal") (("2" (INST - "-s`y" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "v`x = 0") (("1" (ASSERT) NIL NIL) ("2" (CASE "v`x > 0") (("1" (CASE "w`x < 0") (("1" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REAL-PROPS) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (EXPAND "cv") (("2" (EXPAND "cw") (("2" (CROSS-MULT -6) NIL NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "v`x" "v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x > 0") (("1" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "w`x" "-v`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cv") (("2" (EXPAND "cw") (("2" (CROSS-MULT -5) (("2" (CROSS-MULT 1) NIL NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "-v`x" "v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "v`y < 0") (("1" (HIDE 1) (("1" (CASE "w`y > 0") (("1" (CASE "w`x = 0 OR v`x = 0") (("1" (CASE "w`x = 0 AND v`x = 0") (("1" (HIDE -2) (("1" (FLATTEN) (("1" (EXPAND "*") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (CASE "s`y < 0") (("1" (DIV-BY -7 "-s`y") (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "posreal_times_posreal_is_posreal") (("2" (INST - "s`y" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "w`x/v`x < 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "v`x > 0") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "v`x" "-v`y") (("1" (CASE "w`x < 0") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "v`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "w`x > 0") (("1" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "w`x" "-v`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "-v`x" "-v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (CROSS-MULT -3) NIL NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "v`x = 0 OR w`x = 0") (("1" (CASE "v`x = 0 AND w`x = 0") (("1" (HIDE -2) (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "*") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (EXPAND "track") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "atan2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "v`x > 0") (("1" (CASE "w`x > 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "v`x" "-v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x < 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "-v`x" "-v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|s| SKOLEM-CONST-DECL "Ss_vect2[D]" |kb| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|both_sides_div_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|negreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonpos_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|) (|dot_scal_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|div_cancel4| FORMULA-DECL NIL |real_props| NIL) (|cw| SKOLEM-CONST-DECL "real" |kb| NIL) (|cv| SKOLEM-CONST-DECL "real" |kb| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|vy_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|vx_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|cross_mult| FORMULA-DECL NIL |real_props| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|atan_0| FORMULA-DECL NIL |atan| |trig|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (< CONST-DECL "bool" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|v| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|w| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nnreal_div_posreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL) (|posreal_div_posreal_is_posreal| JUDGEMENT-TCC NIL |real_types| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|posreal_times_posreal_is_posreal| JUDGEMENT-TCC NIL |real_types| NIL)) SHOSTAK) (|chi_hc_track_eq-1| |nil| 3482839015 ("" (SKEEP) (("" (CASE "v`y > 0") (("1" (CASE "w`y > 0") (("1" (CASE "v`x = 0") (("1" (CASE "w`x = 0") (("1" (EXPAND "track") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "v`x > 0") (("1" (CASE "w`x > 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "v`x" "v`y") (("1" (LEMMA "nnreal_div_posreal_is_nnreal") (("1" (INST - "-w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x < 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x = 0") (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "nnreal_div_posreal_is_nnreal") (("2" (INST - "-v`x" "v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "cv" "v`x/v`y") (("2" (REPLACE -1) (("2" (NAME "cw" "w`x/w`y") (("2" (REPLACE -1) (("2" (CASE "w`x = 0") (("1" (CASE "v`x = 0") (("1" (EXPAND "*") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (CASE "s`y > 0") (("1" (DIV-BY -8 "s`y") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-8 1 2)) (("2" (LEMMA "nnreal_times_nnreal_is_nnreal") (("2" (INST - "-s`y" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "v`x = 0") (("1" (ASSERT) NIL NIL) ("2" (CASE "v`x > 0") (("1" (CASE "w`x < 0") (("1" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REAL-PROPS) NIL NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (EXPAND "cv") (("2" (EXPAND "cw") (("2" (CROSS-MULT -6) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "v`x" "v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x > 0") (("1" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "w`x" "-v`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cv") (("2" (EXPAND "cw") (("2" (CROSS-MULT -5) (("2" (CROSS-MULT 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "-v`x" "v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "v`y < 0") (("1" (HIDE 1) (("1" (CASE "w`y > 0") (("1" (CASE "w`x = 0 OR v`x = 0") (("1" (CASE "w`x = 0 AND v`x = 0") (("1" (HIDE -2) (("1" (FLATTEN) (("1" (EXPAND "*") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (CASE "s`y < 0") (("1" (DIV-BY -7 "-s`y") (("1" (ASSERT) NIL NIL)) NIL) ("2" (LEMMA "posreal_times_posreal_is_posreal") (("2" (INST - "s`y" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "w`x/v`x < 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "v`x > 0") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "v`x" "-v`y") (("1" (CASE "w`x < 0") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "v`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "w`x > 0") (("1" (CASE "EXISTS (cc:negreal): w = cc*v") (("1" (SKOSIMP*) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (LEMMA "nnreal_times_nnreal_is_nnreal") (("1" (INST - "-cc!1" "-(s*v)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x/v`x = w`y/v`y") (("1" (INST + "w`x/v`x") (("1" (DECOMPOSE-EQUALITY) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "w`x" "-v`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "-v`x" "-v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (CROSS-MULT -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "v`x = 0 OR w`x = 0") (("1" (CASE "v`x = 0 AND w`x = 0") (("1" (HIDE -2) (("1" (FLATTEN) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "*") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (EXPAND "track") (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (EXPAND "atan2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "v`x > 0") (("1" (CASE "w`x > 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "v`x" "-v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "w`x < 0") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "-v`x" "-v`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "w`x" "-w`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|chi_hc_1_chirel_TCC1| 0 (|chi_hc_1_chirel_TCC1-2| "" 3790108913 ("" (SKEEP) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (ASSERT) (("" (GROUND) (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|sign_nat| FORMULA-DECL NIL |sign| |reals|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) SHOSTAK (|chi_hc_1_chirel| SUBTYPE "(vectors_2D.-)(track.trkgs2vect(kb.chi_hc(1, kb.eps, kb.irt)(kb.s, kb.vo, kb.vi)`1, vectors_2D.norm(kb.vo)), kb.vi)" "Nz_vect2")) (|chi_hc_1_chirel_TCC1-1| |nil| 3482593995 ("" (SKEEP) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (ASSERT) (("" (GROUND) (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chi_hc_1_chirel| SUBTYPE "(vectors_2D.-)(track.trkgs2vect(kb.chi_hc(1, kb.eps, kb.irt)(kb.s, kb.vo, kb.vi)`1, vectors_2D.norm(kb.vo)), kb.vi)" "Nz_vect2"))) (|chi_hc_1_chirel_TCC2| 0 (|chi_hc_1_chirel_TCC2-1| |nil| 3482855921 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|chi_hc_1_chirel| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|chi_hc_1_chirel| 0 (|chi_hc_1_chirel-1| |nil| 3482593995 ("" (SKEEP) (("" (NAME "ch" "chi_hc(1,eps,irt)(s,vo,vi)") (("" (REPLACE -1) (("" (LEMMA "chi_hc_sin_equivalence_2") (("" (INST?) (("" (REPLACE -2) (("" (ASSERT) (("" (ASSERT) (("" (NAME "chirela" "chirel_star(s,vo-vi,1,eps)") (("" (REPLACE -1) (("" (NAME "nvoa" "trkgs2vect(ch`1, norm(vo))") (("" (REPLACE -1) (("" (REWRITE "sin_minus") (("" (REWRITE "sin_minus") (("" (NAME "XA" "track(nvoa)") (("" (REPLACE -1) (("" (NAME "XB" "track(vi)") (("" (REPLACE -1) (("" (CASE "cos(chirela) /= 0") (("1" (LABEL "chirelanz" -1) (("1" (CASE "norm(vo)*cos(XA)-norm(vi)*cos(XB) /= 0") (("1" (LABEL "Xnz" -1) (("1" (CASE "nvoa-vi /= zero") (("1" (LABEL "relnz" -1) (("1" (CASE "norm(nvoa-vi) > 0") (("1" (LABEL "relnorm" -1) (("1" (HIDE "relnorm") (("1" (HIDE "relnz") (("1" (CASE "NOT tan(chirela) = (norm(vo)*sin(XA) - norm(vi)*sin(XB))/(norm(vo)*cos(XA)-norm(vi)*cos(XB))") (("1" (HIDE 2) (("1" (EXPAND "tan" 1) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT (norm(vo) * sin(XA) - norm(vi) * sin(XB)) = (nvoa-vi)`x") (("1" (EXPAND "XA" +) (("1" (EXPAND "XB" +) (("1" (REWRITE "sin_track" +) (("1" (REWRITE "sin_track" +) (("1" (REWRITE "vx_distr_sub") (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "nvoa" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT (norm(vo) * cos(XA) - norm(vi) * cos(XB)) = (nvoa-vi)`y") (("1" (EXPAND "XA" +) (("1" (EXPAND "XB" +) (("1" (REWRITE "cos_track" 1) (("1" (REWRITE "cos_track" 1) (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REWRITE "vy_distr_sub") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "nvoa" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (REPLACE -2) (("2" (HIDE -1) (("2" (HIDE -1) (("2" (EXPAND "tan" -1) (("2" (NAME "chiv" "trkgs2vect(chirela,norm(nvoa-vi))") (("1" (LEMMA "chi_hc_track_eq") (("1" (INST - "s" "nvoa-vi" "chiv") (("1" (ASSERT) (("1" (SPLIT -) (("1" (REPLACE -1 +) (("1" (EXPAND "chiv" +) (("1" (REWRITE "track_id") (("1" (TYPEPRED "chirela") (("1" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" +) (("2" (EXPAND "trkgs2vect" +) (("2" (EXPAND "*" +) (("2" (REVEAL "relnorm") (("2" (LEMMA "nzreal_times_nzreal_is_nzreal") (("2" (INST - "norm(nvoa-vi)" "cos(chirela)") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -2 + :DIR RL) (("3" (EXPAND "chiv" +) (("3" (EXPAND "trkgs2vect" +) (("3" (EXPAND "*") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "ch" -11) (("4" (HIDE-ALL-BUT (-11 -7 1)) (("4" (EXPAND "ch") (("4" (EXPAND "chi_hc") (("4" (LIFT-IF) (("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (LEMMA "line_solution_sep_dot_negative") (("5" (INST - "eps" "s" "chiv") (("5" (ASSERT) (("5" (LEMMA "chirel_star_tangent") (("5" (EXPAND "chiv" +) (("5" (INST - "eps" "norm(nvoa-vi)" "s" "vo-vi") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL "relnorm") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL) ("4" (EXPAND "Tan?") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-9 -5 1)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc" -2) (("2" (GROUND) (("2" (EXPAND "chi_hc" -) (("2" (REPLACE -2) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT norm(vi)*sin(XB) = norm(vo)*sin(XA)") (("1" (FLATTEN) (("1" (CASE "NOT cos(chirela)*norm(vi)*sin(XB) = cos(chirela)*norm(vo)*sin(XA)") (("1" (ASSERT) NIL NIL) ("2" (DIV-BY -1 "cos(chirela)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "nvoa=vi") (("1" (HIDE-ALL-BUT (-1 -10 -6)) (("1" (EXPAND "ch") (("1" (EXPAND "chi_hc") (("1" (LIFT-IF) (("1" (GROUND) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "trkgs2vect_id") (("2" (INST - "vi") (("2" (LEMMA "trkgs2vect_id") (("2" (INST - "nvoa") (("2" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REPLACE -1 1 :DIR RL) (("1" (REPLACE -2 1 :DIR RL) (("1" (EXPAND "trkgs2vect" 1) (("1" (EXPAND "*" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nvoa" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REPLACE -1) (("2" (ASSERT) (("2" (CASE "sin(chirela) /= 0") (("1" (FLATTEN) (("1" (CASE "NOT norm(vi)*cos(XB) = norm(vo)*cos(XA)") (("1" (MULT-BY 1 "sin(chirela)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT (nvoa - vi)`y = 0") (("1" (LEMMA "trkgs2vect_id") (("1" (INST-CP - "nvoa") (("1" (INST - "vi") (("1" (REPLACE -1 1 :DIR RL) (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (REPLACE -3 1 :DIR RL) (("1" (REWRITE "vy_distr_sub") (("1" (EXPAND "trkgs2vect" 1) (("1" (EXPAND "*" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nvoa" +) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "chiv" "trkgs2vect(chirela,norm(nvoa-vi))") (("1" (CASE "s*chiv < 0") (("1" (CASE "s*(nvoa-vi) < 0") (("1" (CASE "chiv`y = 0") (("1" (CASE "(nvoa-vi)`x /= 0") (("1" (CASE "chiv`x /= 0") (("1" (CASE "sign((nvoa-vi)`x) = sign(chiv`x)") (("1" (CASE "chirela = track(chiv)") (("1" (REPLACE -1 2) (("1" (HIDE -1) (("1" (HIDE-ALL-BUT (-1 -2 -3 -4 -5 -6 -17 2 -8)) (("1" (NAME "w" "nvoa-vi") (("1" (REPLACE -1) (("1" (CASE "w /= zero") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "sign") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "w" +) (("2" (EXPAND "ch") (("2" (HIDE-ALL-BUT (-9 1)) (("2" (EXPAND "chi_hc") (("2" (GROUND) (("2" (EXPAND "nvoa" -1) (("2" (EXPAND "ch" -1) (("2" (EXPAND "chi_hc") (("2" (ASSERT) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" +) (("2" (REWRITE "track_id") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -2 -3 -4 -5 -7 1)) (("2" (NAME "w" "nvoa-vi") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (EXPAND "*") (("2" (REPLACE -6) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "sign" 1 1) (("2" (LIFT-IF) (("2" (GROUND) (("1" (CASE "s`x < 0") (("1" (DIV-BY -5 "-s`x") (("1" (ASSERT) (("1" (EXPAND "sign") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "nnreal_times_nnreal_is_nnreal") (("2" (INST - "s`x" "w`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "s`x > 0") (("1" (DIV-BY -4 "s`x") (("1" (EXPAND "sign") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "nnreal_times_nnreal_is_nnreal") (("2" (INST - "-s`x" "-w`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "chiv = zero") (("1" (CASE "norm(chiv) = norm(nvoa-vi)") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "chiv" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "nvoa-vi = zero") (("1" (HIDE-ALL-BUT (-1 -16)) (("1" (EXPAND "ch") (("1" (EXPAND "chi_hc") (("1" (GROUND) (("1" (EXPAND "nvoa" -1) (("1" (EXPAND "ch" -1) (("1" (EXPAND "chi_hc" -1) (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "w" "nvoa-vi") (("2" (REPLACE -1) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" 1) (("2" (EXPAND "trkgs2vect" 1) (("2" (EXPAND "*" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-12 1)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc" -1) (("2" (GROUND) (("2" (EXPAND "nvoa") (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "chirel_star_tangent") (("2" (LEMMA "line_solution_sep_dot_negative") (("2" (INST - "eps" "s" "chiv") (("2" (ASSERT) (("2" (INST - "eps" "norm(nvoa-vi)" "s" "vo-vi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST - "nvoa-vi") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-11 -1)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (GROUND) (("2" (EXPAND "nvoa") (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "chiv" "trkgs2vect(chirela,norm(nvoa-vi))") (("1" (FLATTEN) (("1" (CASE "track(chiv) = chirela") (("1" (LEMMA "norm_id") (("1" (INST - "norm(nvoa-vi)" "chirela") (("1" (CASE "norm(nvoa-vi) > 0") (("1" (CASE "chiv /= zero") (("1" (EXPAND "trkgs2vect" -5) (("1" (EXPAND "*") (("1" (REPLACE -6) (("1" (REPLACE -7) (("1" (ASSERT) (("1" (EXPAND "zero") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST - "chiv") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST - "nvoa-vi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" +) (("2" (REWRITE "track_id") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -9)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (GROUND) (("2" (EXPAND "nvoa") (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|chi_hc_sin_equivalence_2| FORMULA-DECL NIL |kb| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|chiv| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nnreal_times_nnreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|both_sides_div_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|s| SKOLEM-CONST-DECL "Ss_vect2[D]" |kb| NIL) (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|w| SKOLEM-CONST-DECL "Vector" |kb| NIL) (|chiv| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|norm_zero| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (|chirela| SKOLEM-CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|both_sides_div1| FORMULA-DECL NIL |real_props| NIL) (|sub_eq_args| FORMULA-DECL NIL |vectors_2D| |vectors|) (|trkgs2vect_id| FORMULA-DECL NIL |track| |aviation|) (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|) (XB SKOLEM-CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|nvoa| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|vx_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| |aviation|) (XA SKOLEM-CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|chi_hc_track_eq| FORMULA-DECL NIL |kb| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|line_solution_sep_dot_negative| FORMULA-DECL NIL |line_solutions| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|chirel_star_tangent| FORMULA-DECL NIL |kb| NIL) (|Sp_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|ch| SKOLEM-CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzreal_times_nzreal_is_nzreal| JUDGEMENT-TCC NIL |real_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|vi| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|track_id| FORMULA-DECL NIL |track| |aviation|) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|chiv| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cos_track| FORMULA-DECL NIL |track| |aviation|) (|vy_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|div_cancel4| FORMULA-DECL NIL |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|tan| CONST-DECL "real" |trig_basic| |trig|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)) SHOSTAK)) (|chi_hc_f_chirel_TCC1| 0 (|chi_hc_f_chirel_TCC1-2| "" 3790108919 ("" (SKEEP) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (GROUND) (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)) SHOSTAK (|chi_hc_f_chirel| SUBTYPE "(vectors_2D.-)(track.trkgs2vect(kb.chi_hc(kb.f, kb.eps, kb.irt)(kb.s, kb.vo, kb.vi)`1, vectors_2D.norm(kb.vo)), kb.vi)" "Nz_vect2")) (|chi_hc_f_chirel_TCC1-1| |nil| 3483106756 ("" (SKEEP) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (GROUND) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chi_hc_f_chirel| SUBTYPE "(vectors_2D.-)(track.trkgs2vect(kb.chi_hc(kb.f, kb.eps, kb.irt)(kb.s, kb.vo, kb.vi)`1, vectors_2D.norm(kb.vo)), kb.vi)" "Nz_vect2"))) (|chi_hc_f_chirel_TCC2| 0 (|chi_hc_f_chirel_TCC2-1| |nil| 3483106756 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|chi_hc_f_chirel| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|chi_hc_f_chirel| 0 (|chi_hc_f_chirel-1| |nil| 3483106782 ("" (SKEEP) (("" (LABEL "dotneg" -1) (("" (HIDE "dotneg") (("" (NAME "ch" "chi_hc(f,eps,irt)(s,vo,vi)") (("" (REPLACE -1) (("" (LEMMA "chi_hc_sin_equivalence_2") (("" (INST?) (("" (REPLACE -2) (("" (ASSERT) (("" (ASSERT) (("" (NAME "chirela" "chirel_star(s,vo-vi,f,eps)") (("" (REPLACE -1) (("" (NAME "nvoa" "trkgs2vect(ch`1, norm(vo))") (("" (REPLACE -1) (("" (REWRITE "sin_minus") (("" (REWRITE "sin_minus") (("" (NAME "XA" "track(nvoa)") (("" (REPLACE -1) (("" (NAME "XB" "track(vi)") (("" (REPLACE -1) (("" (CASE "cos(chirela) /= 0") (("1" (LABEL "chirelanz" -1) (("1" (CASE "norm(vo)*cos(XA)-norm(vi)*cos(XB) /= 0") (("1" (LABEL "Xnz" -1) (("1" (CASE "nvoa-vi /= zero") (("1" (LABEL "relnz" -1) (("1" (CASE "norm(nvoa-vi) > 0") (("1" (LABEL "relnorm" -1) (("1" (HIDE "relnorm") (("1" (HIDE "relnz") (("1" (CASE "NOT tan(chirela) = (norm(vo)*sin(XA) - norm(vi)*sin(XB))/(norm(vo)*cos(XA)-norm(vi)*cos(XB))") (("1" (HIDE 2) (("1" (EXPAND "tan" 1) (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT (norm(vo) * sin(XA) - norm(vi) * sin(XB)) = (nvoa-vi)`x") (("1" (EXPAND "XA" +) (("1" (EXPAND "XB" +) (("1" (REWRITE "sin_track" +) (("1" (REWRITE "sin_track" +) (("1" (REWRITE "vx_distr_sub") (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "nvoa" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT (norm(vo) * cos(XA) - norm(vi) * cos(XB)) = (nvoa-vi)`y") (("1" (EXPAND "XA" +) (("1" (EXPAND "XB" +) (("1" (REWRITE "cos_track" 1) (("1" (REWRITE "cos_track" 1) (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REWRITE "vy_distr_sub") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "nvoa" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (REPLACE -2) (("2" (HIDE -1) (("2" (HIDE -1) (("2" (EXPAND "tan" -1) (("2" (NAME "chiv" "trkgs2vect(chirela,norm(nvoa-vi))") (("1" (LEMMA "chi_hc_track_eq") (("1" (INST - "s" "nvoa-vi" "chiv") (("1" (ASSERT) (("1" (SPLIT -) (("1" (REPLACE -1 +) (("1" (EXPAND "chiv" +) (("1" (REWRITE "track_id") (("1" (TYPEPRED "chirela") (("1" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" +) (("2" (EXPAND "trkgs2vect" +) (("2" (EXPAND "*" +) (("2" (REVEAL "relnorm") (("2" (LEMMA "nzreal_times_nzreal_is_nzreal") (("2" (INST - "norm(nvoa-vi)" "cos(chirela)") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -2 + :DIR RL) (("3" (EXPAND "chiv" +) (("3" (EXPAND "trkgs2vect" +) (("3" (EXPAND "*") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "ch" -11) (("4" (HIDE-ALL-BUT (-11 -7 1)) (("4" (EXPAND "ch") (("4" (EXPAND "chi_hc") (("4" (LIFT-IF) (("4" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (LEMMA "chirel_star_f_entry") (("5" (INST?) (("5" (INST - "norm(nvoa-vi)") (("5" (ASSERT) (("5" (REVEAL "dotneg") (("5" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL "relnorm") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (PROPAX) NIL NIL) ("4" (EXPAND "Tan?") (("4" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-9 -5 1)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc" -2) (("2" (GROUND) (("2" (EXPAND "chi_hc" -) (("2" (REPLACE -2) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT norm(vi)*sin(XB) = norm(vo)*sin(XA)") (("1" (FLATTEN) (("1" (CASE "NOT cos(chirela)*norm(vi)*sin(XB) = cos(chirela)*norm(vo)*sin(XA)") (("1" (ASSERT) NIL NIL) ("2" (DIV-BY -1 "cos(chirela)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "nvoa=vi") (("1" (HIDE-ALL-BUT (-1 -10 -6)) (("1" (EXPAND "ch") (("1" (EXPAND "chi_hc") (("1" (LIFT-IF) (("1" (GROUND) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "trkgs2vect_id") (("2" (INST - "vi") (("2" (LEMMA "trkgs2vect_id") (("2" (INST - "nvoa") (("2" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REPLACE -1 1 :DIR RL) (("1" (REPLACE -2 1 :DIR RL) (("1" (EXPAND "trkgs2vect" 1) (("1" (EXPAND "*" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nvoa" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REPLACE -1) (("2" (ASSERT) (("2" (CASE "sin(chirela) /= 0") (("1" (FLATTEN) (("1" (CASE "NOT norm(vi)*cos(XB) = norm(vo)*cos(XA)") (("1" (MULT-BY 1 "sin(chirela)") (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "NOT (nvoa - vi)`y = 0") (("1" (LEMMA "trkgs2vect_id") (("1" (INST-CP - "nvoa") (("1" (INST - "vi") (("1" (REPLACE -1 1 :DIR RL) (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (REPLACE -3 1 :DIR RL) (("1" (REWRITE "vy_distr_sub") (("1" (EXPAND "trkgs2vect" 1) (("1" (EXPAND "*" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "nvoa" +) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "chiv" "trkgs2vect(chirela,norm(nvoa-vi))") (("1" (CASE "s*chiv < 0") (("1" (CASE "s*(nvoa-vi) < 0") (("1" (CASE "chiv`y = 0") (("1" (CASE "(nvoa-vi)`x /= 0") (("1" (CASE "chiv`x /= 0") (("1" (CASE "sign((nvoa-vi)`x) = sign(chiv`x)") (("1" (CASE "chirela = track(chiv)") (("1" (REPLACE -1 2) (("1" (HIDE -1) (("1" (HIDE-ALL-BUT (-1 -2 -3 -4 -5 -6 -17 2 -8)) (("1" (NAME "w" "nvoa-vi") (("1" (REPLACE -1) (("1" (CASE "w /= zero") (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "sign") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "w" +) (("2" (EXPAND "ch") (("2" (HIDE-ALL-BUT (-9 1)) (("2" (EXPAND "chi_hc") (("2" (GROUND) (("2" (EXPAND "nvoa" -1) (("2" (EXPAND "ch" -1) (("2" (EXPAND "chi_hc") (("2" (ASSERT) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" +) (("2" (REWRITE "track_id") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -2 -3 -4 -5 -7 1)) (("2" (NAME "w" "nvoa-vi") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (EXPAND "*") (("2" (REPLACE -6) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (EXPAND "sign" 1 1) (("2" (LIFT-IF) (("2" (GROUND) (("1" (CASE "s`x < 0") (("1" (DIV-BY -5 "-s`x") (("1" (ASSERT) (("1" (EXPAND "sign") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "nnreal_times_nnreal_is_nnreal") (("2" (INST - "s`x" "w`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "s`x > 0") (("1" (DIV-BY -4 "s`x") (("1" (EXPAND "sign") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "nnreal_times_nnreal_is_nnreal") (("2" (INST - "-s`x" "-w`x") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "chiv = zero") (("1" (CASE "norm(chiv) = norm(nvoa-vi)") (("1" (REPLACE -2) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "chiv" 1) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (CASE "nvoa-vi = zero") (("1" (HIDE-ALL-BUT (-1 -16)) (("1" (EXPAND "ch") (("1" (EXPAND "chi_hc") (("1" (GROUND) (("1" (EXPAND "nvoa" -1) (("1" (EXPAND "ch" -1) (("1" (EXPAND "chi_hc" -1) (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "w" "nvoa-vi") (("2" (REPLACE -1) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" 1) (("2" (EXPAND "trkgs2vect" 1) (("2" (EXPAND "*" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-12 1)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc" -1) (("2" (GROUND) (("2" (EXPAND "nvoa") (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "chirel_star_f_entry") (("2" (INST?) (("2" (INST - "norm(nvoa-vi)") (("2" (ASSERT) (("2" (REVEAL "dotneg") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST - "nvoa-vi") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-11 -1)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (GROUND) (("2" (EXPAND "nvoa") (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "chiv" "trkgs2vect(chirela,norm(nvoa-vi))") (("1" (FLATTEN) (("1" (CASE "track(chiv) = chirela") (("1" (LEMMA "norm_id") (("1" (INST - "norm(nvoa-vi)" "chirela") (("1" (CASE "norm(nvoa-vi) > 0") (("1" (CASE "chiv /= zero") (("1" (EXPAND "trkgs2vect" -5) (("1" (EXPAND "*") (("1" (REPLACE -6) (("1" (REPLACE -7) (("1" (ASSERT) (("1" (EXPAND "zero") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST - "chiv") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST - "nvoa-vi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chiv" +) (("2" (REWRITE "track_id") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -9)) (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (GROUND) (("2" (EXPAND "nvoa") (("2" (EXPAND "ch") (("2" (EXPAND "chi_hc") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|chi_hc_sin_equivalence_2| FORMULA-DECL NIL |kb| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|chiv| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nnreal_times_nnreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|both_sides_div_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|s| SKOLEM-CONST-DECL "Ss_vect2[D]" |kb| NIL) (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|w| SKOLEM-CONST-DECL "Vector" |kb| NIL) (|chiv| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|norm_zero| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|) (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (|chirela| SKOLEM-CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|both_sides_div1| FORMULA-DECL NIL |real_props| NIL) (|sub_eq_args| FORMULA-DECL NIL |vectors_2D| |vectors|) (|trkgs2vect_id| FORMULA-DECL NIL |track| |aviation|) (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|) (XB SKOLEM-CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|nvoa| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|vx_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| |aviation|) (XA SKOLEM-CONST-DECL "nnreal_lt_2pi" |kb| NIL) (|chi_hc_track_eq| FORMULA-DECL NIL |kb| NIL) (|chirel_star_f_entry| FORMULA-DECL NIL |kb| NIL) (|ch| SKOLEM-CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|nzreal_times_nzreal_is_nzreal| JUDGEMENT-TCC NIL |real_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|vi| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|track_id| FORMULA-DECL NIL |track| |aviation|) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|chiv| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cos_track| FORMULA-DECL NIL |track| |aviation|) (|vy_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|div_cancel4| FORMULA-DECL NIL |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Tan?| CONST-DECL "bool" |trig_basic| |trig|) (|tan| CONST-DECL "real" |trig_basic| |trig|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL)) (|chi_hc_0_id_TCC1| 0 (|chi_hc_0_id_TCC1-1| |nil| 3482855921 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|chi_hc_0_id| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|chi_hc_0_id| 0 (|chi_hc_0_id-2| "" 3790108925 ("" (SKEEP) (("" (NAME "chh" "chi_hc(0, eps,-1)(s, vo, vi)") (("" (REPLACE -1) (("" (ASSERT) (("" (EXPAND "chh" -2) (("" (EXPAND "chi_hc" -2) (("" (GROUND) (("" (EXPAND "chh" +) (("" (EXPAND "chi_hc" +) (("" (REWRITE "chirel_star_0_id") (("" (LEMMA "sin_track_minus") (("" (INST - "vi" "vo") (("" (ASSERT) (("" (CASE "sin(track(vo-vi)-track(vo)) = (norm(vi) / norm(vo)) * sin(track(vo - vi) - track(vi))") (("1" (LEMMA "asin_sin") (("1" (INST - "track(vo - vi) - track(vo)") (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REWRITE "to2pi_id") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (> CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|chirel_star_0_id| FORMULA-DECL NIL |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (<= CONST-DECL "bool" |reals| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|asin_sin| FORMULA-DECL NIL |trig_inverses| |trig|) (|sin_track_minus| FORMULA-DECL NIL |kb| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|chh| SKOLEM-CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL)) SHOSTAK) (|chi_hc_0_id-1| |nil| 3482247786 ("" (SKEEP) (("" (NAME "chh" "chi_hc(0, eps,-1)(s, vo, vi)") (("" (REPLACE -1) (("" (ASSERT) (("" (EXPAND "chh" -2) (("" (EXPAND "chi_hc" -2) (("" (LIFT-IF) (("" (GROUND) (("" (EXPAND "chh" +) (("" (EXPAND "chi_hc" +) (("" (REWRITE "chirel_star_0_id") (("" (LEMMA "sin_track_minus") (("" (INST - "vi" "vo") (("" (ASSERT) (("" (CASE "sin(track(vo-vi)-track(vo)) = (norm(vi) / norm(vo)) * sin(track(vo - vi) - track(vi))") (("1" (LEMMA "asin_sin") (("1" (INST - "track(vo - vi) - track(vo)") (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REWRITE "to2pi_id") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|chi_hc_0_id_rel_TCC1| 0 (|chi_hc_0_id_rel_TCC1-1| |nil| 3483089404 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|chi_hc_0_id_rel| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|chi_hc_0_id_rel_TCC2| 0 (|chi_hc_0_id_rel_TCC2-2| "" 3790108926 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (GROUND) (("" (REPLACE -1 :DIR RL) (("" (REPLACE -5) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)) SHOSTAK (|chi_hc_0_id_rel| SUBTYPE "(vectors_2D.-)(kb.nvo, kb.vi)" "Nz_vect2")) (|chi_hc_0_id_rel_TCC2-1| |nil| 3483089404 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND "chi_hc") (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (GROUND) (("1" (REPLACE -1 :DIR RL) (("1" (REPLACE -5) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -1 :DIR RL) (("2" (REPLACE -6) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|chi_hc_0_id_rel| SUBTYPE "(vectors_2D.-)(kb.nvo, kb.vi)" "Nz_vect2"))) (|chi_hc_0_id_rel| 0 (|chi_hc_0_id_rel-2| "" 3504852693 ("" (SKEEP) (("" (NAME "chh" "chi_hc(0, eps,irt)(s, vo, vi)") (("" (REPLACE -1) (("" (ASSERT) (("" (LEMMA "chi_hc_sin_equivalence_2") (("" (INST?) (("" (ASSERT) (("" (REPLACE -2) (("" (NAME "nvoa" "trkgs2vect(chh`1, norm(vo))") (("" (REPLACE -1) (("" (REWRITE "chirel_star_0_id") (("" (CASE "s*(nvoa-vi) < 0") (("1" (CASE "vo-vi /= zero") (("1" (FLATTEN) (("1" (CASE "nvoa-vi /= zero") (("1" (FLATTEN) (("1" (HIDE -4) (("1" (HIDE -4) (("1" (HIDE -4) (("1" (HIDE -4) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_minus") (("1" (CASE "EXISTS (cc:posreal): nvoa-vi = cc*(vo-vi)") (("1" (SKOSIMP*) (("1" (REPLACE -1 3) (("1" (NAME "vv" "vo-vi") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT (2 3)) (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (REWRITE "vx_scal") (("1" (REWRITE "vy_scal") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (GROUND) (("1" (MULT-BY 1 "cc!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY 1 "cc!1") (("2" (ASSERT) NIL NIL)) NIL) ("3" (LIFT-IF) (("3" (GROUND) (("1" (MULT-BY -1 "cc!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY 1 "cc!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (LIFT-IF) (("4" (GROUND) (("1" (MULT-BY -2 "cc!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY 1 "cc!1") (("2" (ASSERT) NIL NIL)) NIL) ("3" (MULT-BY 1 "cc!1") (("3" (ASSERT) NIL NIL)) NIL) ("4" (MULT-BY 1 "cc!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("5" (LIFT-IF) (("5" (GROUND) (("1" (MULT-BY -2 "cc!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY -1 "cc!1") (("2" (ASSERT) NIL NIL)) NIL) ("3" (MULT-BY -1 "cc!1") (("3" (ASSERT) NIL NIL)) NIL) ("4" (MULT-BY 1 "cc!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("6" (LIFT-IF) (("6" (GROUND) (("1" (MULT-BY -2 "cc!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY -1 "cc!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "(vo-vi)`x /= 0 AND (vo-vi)`y /= 0") (("1" (FLATTEN) (("1" (CASE "(nvoa-vi)`x/(vo-vi)`x = (nvoa-vi)`y/(vo-vi)`y") (("1" (NAME "cc1" "(nvoa-vi)`x/(vo-vi)`x") (("1" (CASE "cc1 > 0") (("1" (INST + "cc1") (("1" (DECOMPOSE-EQUALITY 3) (("1" (EXPAND "cc1" 1) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -2) (("2" (REPLACE -3 1) (("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "nvoa-vi = cc1*(vo-vi)") (("1" (REPLACE -1 -4) (("1" (ASSERT) (("1" (LEMMA "posreal_times_posreal_is_posreal") (("1" (INST - "-cc1" "-(s*(vo-vi))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (DECOMPOSE-EQUALITY 1) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (REWRITE "vx_distr_sub") (("2" (REWRITE "vy_distr_sub") (("2" (REWRITE "vx_distr_sub") (("2" (REWRITE "vy_distr_sub") (("2" (REWRITE "sin_track") (("2" (REWRITE "sin_track") (("2" (REWRITE "sin_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "vx_distr_sub") (("2" (REWRITE "vy_distr_sub") (("2" (ASSERT) (("2" (CASE "norm(nvoa) = norm(vo)") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -2 1 :DIR RL) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SPLIT +) (("1" (FLATTEN) (("1" (REWRITE "sin_track") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (CASE "(nvoa-vi)`x = 0") (("1" (EXPAND "*" -) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (NAME "cc1" "(nvoa-vi)`y/(vo-vi)`y") (("1" (INST + "cc1") (("1" (DECOMPOSE-EQUALITY 1) (("1" (REWRITE "vx_scal") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (EXPAND "cc1" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "cc1 > 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "s`y > 0") (("1" (DIV-BY -5 "s`y") (("1" (DIV-BY -8 "s`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-(nvoa-vi)`y" "-(vo-vi)`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DIV-BY -4 "-s`y") (("2" (DIV-BY -7 "-s`y") (("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "(nvoa-vi)`y" "(vo-vi)`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "const1" "cos(track(vo-vi))") (("2" (REPLACE -1) (("2" (CASE "const1 /= 0") (("1" (FLATTEN) (("1" (REWRITE "sin_track") (("1" (REWRITE "sin_track") (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (MULT-BY 2 "const1") (("1" (REWRITE "vx_distr_sub") (("1" (REWRITE "vx_distr_sub") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -4 1 :DIR RL) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "cos_track") (("2" (LEMMA "nzreal_div_nzreal_is_nzreal") (("2" (INST - "(vo-vi)`y" "norm(vo-vi)") (("1" (ASSERT) NIL NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -4 4)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LEMMA "cos_track") (("2" (INST - "vo-vi") (("2" (REPLACE -2 -1) (("2" (ASSERT) (("2" (REPLACE -1) (("2" (ASSERT) (("2" (REAL-PROPS) (("2" (CASE "(nvoa-vi)`y = 0") (("1" (CASE "(vo-vi)`x /= 0") (("1" (FLATTEN) (("1" (NAME "cc1" "(nvoa-vi)`x/(vo-vi)`x") (("1" (CASE "nvoa-vi = cc1*(vo-vi)") (("1" (CASE "cc1 > 0") (("1" (INST + "cc1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REPLACE -1 -6) (("2" (LEMMA "posreal_times_posreal_is_posreal") (("2" (INST - "-cc1" "-(s*(vo-vi))") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cc1" 1) (("2" (DECOMPOSE-EQUALITY 1) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REPLACE -2) (("2" (REWRITE "vy_scal") (("2" (REPLACE -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -4 3)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "const1" "sin(track(vo-vi))") (("2" (CASE "const1 /= 0") (("1" (REWRITE "vy_distr_sub") (("1" (REPLACE -2) (("1" (REWRITE "cos_track") (("1" (REWRITE "cos_track") (("1" (REWRITE "cos_track") (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (MULT-BY 1 "const1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -6 1 :DIR RL) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REPLACE -2 -1 :DIR RL) (("2" (REWRITE "sin_track" -1) (("2" (CASE "(vo-vi)`x = 0") (("1" (HIDE-ALL-BUT (-1 -5 4)) (("1" (EXPAND "zero") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (CROSS-MULT -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chh" -5) (("2" (EXPAND "chi_hc" -5) (("2" (GROUND) (("2" (EXPAND "chh" -3) (("2" (EXPAND "chi_hc" -3) (("2" (REPLACE -3) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chh" -5) (("2" (EXPAND "chi_hc" -5) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chh" -4) (("2" (EXPAND "chi_hc" -4) (("2" (GROUND) (("2" (EXPAND "chh" -1) (("2" (EXPAND "chi_hc" -1) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (* CONST-DECL "real" |vectors_2D| |vectors|) (|chh| SKOLEM-CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|cc1| SKOLEM-CONST-DECL "real" |kb| NIL) (|posreal_times_posreal_is_posreal| JUDGEMENT-TCC NIL |real_types| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|dot_scal_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|vx_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_track| FORMULA-DECL NIL |track| |aviation|) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|cos_track| FORMULA-DECL NIL |track| |aviation|) (|vy_distr_sub| FORMULA-DECL NIL |vectors_2D| |vectors|) (|div_cancel4| FORMULA-DECL NIL |real_props| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|cc1| SKOLEM-CONST-DECL "real" |kb| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|const1| SKOLEM-CONST-DECL "real_abs_le1" |kb| NIL) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|zero_times2| FORMULA-DECL NIL |real_props| NIL) (|both_sides_times2| FORMULA-DECL NIL |real_props| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|const1| SKOLEM-CONST-DECL "real_abs_le1" |kb| NIL) (|nzreal_div_nzreal_is_nzreal| JUDGEMENT-TCC NIL |real_types| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|vi| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|nvoa| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|vo| SKOLEM-CONST-DECL "Nz_vect2" |kb| NIL) (|posreal_div_posreal_is_posreal| JUDGEMENT-TCC NIL |real_types| NIL) (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL) (|s| SKOLEM-CONST-DECL "Ss_vect2[D]" |kb| NIL) (|both_sides_div_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|cc1| SKOLEM-CONST-DECL "real" |kb| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|vy_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|both_sides_times_pos_gt1| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|vx_scal| FORMULA-DECL NIL |vectors_2D| |vectors|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|chirel_star_0_id| FORMULA-DECL NIL |kb| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|chi_hc_sin_equivalence_2| FORMULA-DECL NIL |kb| NIL)) SHOSTAK) (|chi_hc_0_id_rel-1| |nil| 3483089413 ("" (SKEEP) (("" (NAME "chh" "chi_hc(0, eps,irt)(s, vo, vi)") (("" (REPLACE -1) (("" (ASSERT) (("" (LEMMA "chi_hc_sin_equivalence_2") (("" (INST?) (("" (ASSERT) (("" (REPLACE -2) (("" (NAME "nvoa" "trkgs2vect(chh`1, norm(vo))") (("" (REPLACE -1) (("" (REWRITE "chirel_star_0_id") (("" (CASE "s*(nvoa-vi) < 0") (("1" (CASE "vo-vi /= zero") (("1" (FLATTEN) (("1" (CASE "nvoa-vi /= zero") (("1" (FLATTEN) (("1" (HIDE -4) (("1" (HIDE -4) (("1" (HIDE -4) (("1" (HIDE -4) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_minus") (("1" (CASE "EXISTS (cc:posreal): nvoa-vi = cc*(vo-vi)") (("1" (SKOSIMP*) (("1" (REPLACE -1 3) (("1" (NAME "vv" "vo-vi") (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT (2 3)) (("1" (EXPAND "track") (("1" (EXPAND "atan2") (("1" (REWRITE "vx_scal") (("1" (REWRITE "vy_scal") (("1" (LIFT-IF) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (GROUND) (("1" (MULT-BY -2 "cc!1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (MULT-BY -4 "cc!1") (("2" (ASSERT) NIL NIL)) NIL) ("3" (MULT-BY -3 "cc!1") (("3" (ASSERT) NIL NIL)) NIL) ("4" (MULT-BY -2 "cc!1") (("4" (ASSERT) NIL NIL)) NIL) ("5" (MULT-BY 1 "cc!1") (("5" (ASSERT) NIL NIL)) NIL) ("6" (MULT-BY 3 "cc!1") (("6" (ASSERT) NIL NIL)) NIL) ("7" (MULT-BY -2 "cc!1") (("7" (ASSERT) NIL NIL)) NIL) ("8" (MULT-BY -1 "cc!1") (("8" (ASSERT) NIL NIL)) NIL) ("9" (MULT-BY -1 "cc!1") (("9" (ASSERT) NIL NIL)) NIL) ("10" (MULT-BY 1 "cc!1") (("10" (ASSERT) NIL NIL)) NIL) ("11" (MULT-BY 2 "cc!1") (("11" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "(vo-vi)`x /= 0 AND (vo-vi)`y /= 0") (("1" (FLATTEN) (("1" (CASE "(nvoa-vi)`x/(vo-vi)`x = (nvoa-vi)`y/(vo-vi)`y") (("1" (NAME "cc1" "(nvoa-vi)`x/(vo-vi)`x") (("1" (CASE "cc1 > 0") (("1" (INST + "cc1") (("1" (DECOMPOSE-EQUALITY 3) (("1" (EXPAND "cc1" 1) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -2) (("2" (REPLACE -3 1) (("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (CASE "nvoa-vi = cc1*(vo-vi)") (("1" (REPLACE -1 -4) (("1" (ASSERT) (("1" (LEMMA "posreal_times_posreal_is_posreal") (("1" (INST - "-cc1" "-(s*(vo-vi))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1 1 :DIR RL) (("2" (DECOMPOSE-EQUALITY 1) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CROSS-MULT 1) (("2" (REWRITE "vx_distr_sub") (("2" (REWRITE "vy_distr_sub") (("2" (REWRITE "vx_distr_sub") (("2" (REWRITE "vy_distr_sub") (("2" (REWRITE "sin_track") (("2" (REWRITE "sin_track") (("2" (REWRITE "sin_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "cos_track") (("2" (REWRITE "vx_distr_sub") (("2" (REWRITE "vy_distr_sub") (("2" (ASSERT) (("2" (CASE "norm(nvoa) = norm(vo)") (("1" (ASSERT) NIL NIL) ("2" (REPLACE -2 1 :DIR RL) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SPLIT +) (("1" (FLATTEN) (("1" (REWRITE "sin_track") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (CASE "(nvoa-vi)`x = 0") (("1" (EXPAND "*" -) (("1" (REPLACE -1) (("1" (REPLACE -2) (("1" (ASSERT) (("1" (NAME "cc1" "(nvoa-vi)`y/(vo-vi)`y") (("1" (INST + "cc1") (("1" (DECOMPOSE-EQUALITY 1) (("1" (REWRITE "vx_scal") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "vy_scal") (("2" (EXPAND "cc1" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (CASE "cc1 > 0") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (CASE "s`y > 0") (("1" (DIV-BY -5 "s`y") (("1" (DIV-BY -8 "s`y") (("1" (LEMMA "posreal_div_posreal_is_posreal") (("1" (INST - "-(nvoa-vi)`y" "-(vo-vi)`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DIV-BY -4 "-s`y") (("2" (DIV-BY -7 "-s`y") (("2" (LEMMA "posreal_div_posreal_is_posreal") (("2" (INST - "(nvoa-vi)`y" "(vo-vi)`y") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "const1" "cos(track(vo-vi))") (("2" (REPLACE -1) (("2" (CASE "const1 /= 0") (("1" (FLATTEN) (("1" (REWRITE "sin_track") (("1" (REWRITE "sin_track") (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (MULT-BY 2 "const1") (("1" (REWRITE "vx_distr_sub") (("1" (REWRITE "vx_distr_sub") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -4 1 :DIR RL) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "cos_track") (("2" (LEMMA "nzreal_div_nzreal_is_nzreal") (("2" (INST - "(vo-vi)`y" "norm(vo-vi)") (("1" (ASSERT) NIL NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -4 4)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LEMMA "cos_track") (("2" (INST - "vo-vi") (("2" (REPLACE -2 -1) (("2" (ASSERT) (("2" (REPLACE -1) (("2" (ASSERT) (("2" (REAL-PROPS) (("2" (CASE "(nvoa-vi)`y = 0") (("1" (CASE "(vo-vi)`x /= 0") (("1" (FLATTEN) (("1" (NAME "cc1" "(nvoa-vi)`x/(vo-vi)`x") (("1" (CASE "nvoa-vi = cc1*(vo-vi)") (("1" (CASE "cc1 > 0") (("1" (INST + "cc1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REPLACE -1 -6) (("2" (LEMMA "posreal_times_posreal_is_posreal") (("2" (INST - "-cc1" "-(s*(vo-vi))") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "cc1" 1) (("2" (DECOMPOSE-EQUALITY 1) (("1" (REWRITE "vx_scal") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REPLACE -2) (("2" (REWRITE "vy_scal") (("2" (REPLACE -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (HIDE-ALL-BUT (-1 -4 3)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "const1" "sin(track(vo-vi))") (("2" (CASE "const1 /= 0") (("1" (REWRITE "vy_distr_sub") (("1" (REPLACE -2) (("1" (REWRITE "cos_track") (("1" (REWRITE "cos_track") (("1" (REWRITE "cos_track") (("1" (CASE "norm(nvoa) = norm(vo)") (("1" (REPLACE -1) (("1" (MULT-BY 1 "const1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (REPLACE -6 1 :DIR RL) (("2" (REWRITE "norm_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (REPLACE -2 -1 :DIR RL) (("2" (REWRITE "sin_track" -1) (("2" (CASE "(vo-vi)`x = 0") (("1" (HIDE-ALL-BUT (-1 -5 4)) (("1" (EXPAND "zero") (("1" (GRIND) NIL NIL)) NIL)) NIL) ("2" (CROSS-MULT -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chh" -5) (("2" (EXPAND "chi_hc" -5) (("2" (LIFT-IF) (("2" (GROUND) (("2" (EXPAND "chh" -3) (("2" (EXPAND "chi_hc" -3) (("2" (REPLACE -3) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chh" -5) (("2" (EXPAND "chi_hc" -5) (("2" (LIFT-IF) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chh" -4) (("2" (EXPAND "chi_hc" -4) (("2" (LIFT-IF) (("2" (GROUND) (("2" (EXPAND "chh" -1) (("2" (EXPAND "chi_hc" -1) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|kb_0_id| 0 (|kb_0_id-1| |nil| 3482048661 ("" (SKEEP) (("" (EXPAND "kb") (("" (ASSERT) (("" (LEMMA "chi_hc_0_id") (("" (INST?) (("" (ASSERT) (("" (REPLACE -1) (("" (REWRITE "trkgs2vect_id") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|kb| CONST-DECL "Vect2" |kb| NIL) (|chi_hc_0_id| FORMULA-DECL NIL |kb| NIL) (|trkgs2vect_id| FORMULA-DECL NIL |track| |aviation|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK)) (|kb_tangent_line| 0 (|kb_tangent_line-2| "" 3790108932 ("" (SKEEP) (("" (ASSERT) (("" (EXPAND "kb") (("" (ASSERT) (("" (LEMMA "chi_hc_1_chirel") (("" (INST?) (("" (ASSERT) (("" (NAME "vp" "trkgs2vect(chi_hc(1, eps, irt)(s, vo, vi)`1, norm(vo))
                      - vi") (("" (REPLACE -1) (("" (LEMMA "chirel_star_tangent") (("" (INST - "eps" "norm(vp)" "s" "vo-vi") (("1" (REPLACE -3 :DIR RL) (("1" (REWRITE "trkgs2vect_id") NIL NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE -1) (("2" (EXPAND "chi_hc") (("2" (LIFT-IF) (("2" (GROUND) (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (>= CONST-DECL "bool" |reals| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| |trig|) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (< CONST-DECL "bool" |reals| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|chirel_star_tangent| FORMULA-DECL NIL |kb| NIL) (|norm_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|norm_zero| FORMULA-DECL NIL |vectors_2D| |vectors|) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|trkgs2vect_id| FORMULA-DECL NIL |track| |aviation|) (|vp| SKOLEM-CONST-DECL "Vector" |kb| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|chi_hc_1_chirel| FORMULA-DECL NIL |kb| NIL) (|kb| CONST-DECL "Vect2" |kb| NIL)) SHOSTAK) (|kb_tangent_line-1| |nil| 3482509918 ("" (SKEEP) (("" (ASSERT) (("" (EXPAND "kb") (("" (ASSERT) (("" (LEMMA "chi_hc_1_chirel") (("" (INST?) (("" (ASSERT) (("" (NAME "vp" "trkgs2vect(chi_hc(1, eps, irt)(s, vo, vi)`1, norm(vo))
                      - vi") (("" (REPLACE -1) (("" (LEMMA "chirel_star_tangent") (("" (INST - "eps" "norm(vp)" "s" "vo-vi") (("1" (REPLACE -3 :DIR RL) (("1" (REWRITE "trkgs2vect_id") NIL NIL)) NIL) ("2" (LEMMA "norm_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE -1) (("2" (EXPAND "chi_hc") (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (LIFT-IF) (("2" (GROUND) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|kb_is_independent_TCC1| 0 (|kb_is_independent_TCC1-1| |nil| 3482509917 ("" (SKEEP) (("" (EXPAND "horizontal_conflict?") (("" (REPLACE -2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|) (|scal_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)) NIL (|kb_is_independent| SUBTYPE "(vectors_2D.-)(kb.vo, kb.vi)" "Nz_vect2"))) (|kb_is_independent_TCC2| 0 (|kb_is_independent_TCC2-1| |nil| 3482770424 ("" (SUBTYPE-TCC) NIL NIL) ((|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|kb_is_independent| SUBTYPE "(vectors_2D.-)(kb.vi, kb.vo)" "Nz_vect2"))) (|kb_is_independent_TCC3| 0 (|kb_is_independent_TCC3-1| |nil| 3482770424 ("" (SUBTYPE-TCC) NIL NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|kb_is_independent| SUBTYPE "0" "Sign"))) (|kb_is_independent_TCC4| 0 (|kb_is_independent_TCC4-1| |nil| 3482855921 ("" (SUBTYPE-TCC) NIL NIL) ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (> CONST-DECL "bool" |reals| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) NIL (|kb_is_independent| SUBTYPE "kb.irt" "nnreal"))) (|kb_is_independent| 0 (|kb_is_independent-2| "" 3790108935 ("" (SKEEP) (("" (EXPAND "kb") (("" (LIFT-IF) (("" (GROUND) NIL NIL)) NIL)) NIL)) NIL) ((|kb| CONST-DECL "Vect2" |kb| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK) (|kb_is_independent-1| |nil| 3482509247 ("" (SKEEP) (("" (EXPAND "kb") (("" (LIFT-IF) (("" (GROUND) (("" (EXPAND "chi_hc" -2) (("" (LIFT-IF) (("" (GROUND) (("1" (EXPAND "chi_hc" -5) (("1" (LIFT-IF) (("1" (GROUND) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL) ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|kb_is_not_coordinated_1| 0 (|kb_is_not_coordinated_1-2| "" 3790108965 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 2") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 1") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                              (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)
                                                                                                                                                                                                                                                                                +
                                                                                                                                                                                                                                                                                (pi / 2) * -1
                                                                                                                                                                                                                                                                                -
                                                                                                                                                                                                                                                                                -pi / 2),
                                                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                                                - vo)
                                                                                                                                                                                                                                                              < 0") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                      -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 2) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (1/2,sqrt(3)/2) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = ((1 / 4) + 3 * (sqrt(5) * (1 / 4)),
                                                                                                                                                                                                                                                                                   sqrt(3) * (1 / 4) - sqrt(3) * sqrt(5) * (1 / 4)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                                                -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "5" "15*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotvonvinneg" -1) (("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (ASSERT) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (REPLACE "nvonname" +) (("2" (REPLACE "nvinname" +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (REPLACE "sname" +) (("2" (EXPAND "horizontal_conflict?" +) (("2" (REPLACE "Dname") (("2" (HIDE-ALL-BUT 3) (("2" (INST + "3") (("2" (GRIND) (("2" (FIELD) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (CASE "3*sqrt(3)*sqrt(3) = 9") (("1" (REPLACE -1) (("1" (CASE "3*sqrt(5)*sqrt(5) = 15") (("1" (REPLACE -1) (("1" (CASE "9*sqrt(5)*sqrt(5) = 45") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (CASE "240*sqrt(3) < 480") (("1" (CASE "720*sqrt(5)*sqrt(3) > 2700") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "sq_gt") (("2" (INST - "720*sqrt(5)*sqrt(3)" "2700") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "sqrt(3) < 2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sqrt_ltsq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" +) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE "voname" +) (("3" (REPLACE "viname" +) (("3" (EXPAND "zero") (("3" (EXPAND "-") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE "voname" +) (("3" (REPLACE "viname" +) (("3" (EXPAND "zero") (("3" (EXPAND "-") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "cos_pi4") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|div_distributes| FORMULA-DECL NIL |real_props| NIL) (|cross_mult| FORMULA-DECL NIL |real_props| NIL) (|sin_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|cos_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|asin_pos_bnds| FORMULA-DECL NIL |asin| |trig|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_16| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|) (|sin_2pi3| FORMULA-DECL NIL |trig_values| |trig|) (|cos_2pi3| FORMULA-DECL NIL |trig_values| |trig|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|cos_pi6| FORMULA-DECL NIL |trig_values| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|arcs| SKOLEM-CONST-DECL "real_abs_le_pi2" |kb| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|sq_gt| FORMULA-DECL NIL |sq| |reals|) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL) (|div_times| FORMULA-DECL NIL |real_props| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|nzint_abs_is_pos| APPLICATION-JUDGEMENT "{j: posint | j >= i}" |real_defs| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|sq_lt| FORMULA-DECL NIL |sq| |reals|) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nzint_times_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|kb| CONST-DECL "Vect2" |kb| NIL) (|sqrt_4| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_lt| FORMULA-DECL NIL |sqrt| |reals|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|sqrt_eq| FORMULA-DECL NIL |sqrt| |reals|) (|cos_pi| FORMULA-DECL NIL |sincos| |trig|) (|nzrat_times_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|sin_pi6| FORMULA-DECL NIL |trig_values| |trig|) (|sin_pi| FORMULA-DECL NIL |sincos| |trig|) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|nprat_div_posrat_is_nprat| APPLICATION-JUDGEMENT "nprat" |rationals| NIL) (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|neg_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|chirel_star_equiv| FORMULA-DECL NIL |kb| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|sin_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|asin_sin| FORMULA-DECL NIL |trig_inverses| |trig|) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|sq_le| FORMULA-DECL NIL |sq| |reals|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_times_npreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sq_1| FORMULA-DECL NIL |sq| |reals|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL)) SHOSTAK) (|kb_is_not_coordinated_1-1| |nil| 3582477649 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 2") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 1") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (ASSERT) (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                              (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)
                                                                                                                                                                                                                                                                                +
                                                                                                                                                                                                                                                                                (pi / 2) * -1
                                                                                                                                                                                                                                                                                -
                                                                                                                                                                                                                                                                                -pi / 2),
                                                                                                                                                                                                                                                                          1)
                                                                                                                                                                                                                                                                - vo)
                                                                                                                                                                                                                                                              < 0") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                      -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 2) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (1/2,sqrt(3)/2) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = ((1 / 4) + 3 * (sqrt(5) * (1 / 4)),
                                                                                                                                                                                                                                                                                   sqrt(3) * (1 / 4) - sqrt(3) * sqrt(5) * (1 / 4)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                                                -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "5" "15*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotvonvinneg" -1) (("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (ASSERT) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (REPLACE "nvonname" +) (("2" (REPLACE "nvinname" +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (REPLACE "sname" +) (("2" (EXPAND "horizontal_conflict?" +) (("2" (REPLACE "Dname") (("2" (HIDE-ALL-BUT 3) (("2" (INST + "3") (("2" (GRIND) (("2" (FIELD) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (CASE "3*sqrt(3)*sqrt(3) = 9") (("1" (REPLACE -1) (("1" (CASE "3*sqrt(5)*sqrt(5) = 15") (("1" (REPLACE -1) (("1" (CASE "9*sqrt(5)*sqrt(5) = 45") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (CASE "240*sqrt(3) < 480") (("1" (CASE "720*sqrt(5)*sqrt(3) > 2700") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "sq_gt") (("2" (INST - "720*sqrt(5)*sqrt(3)" "2700") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "sqrt(3) < 2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sqrt_ltsq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" +) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE "voname" +) (("3" (REPLACE "viname" +) (("3" (EXPAND "zero") (("3" (EXPAND "-") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REPLACE "voname" +) (("3" (REPLACE "viname" +) (("3" (EXPAND "zero") (("3" (EXPAND "-") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "cos_pi4") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|kb_is_not_coordinated_2| 0 (|kb_is_not_coordinated_2-3| "" 3884843699 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 500") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 250") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                                                                                                                          (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)
                                                                                                                                                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                                                                                                                                            (pi / 2) * -1
                                                                                                                                                                                                                                                                                                                                                                            -
                                                                                                                                                                                                                                                                                                                                                                            -pi / 2),
                                                                                                                                                                                                                                                                                                                                                                      250)
                                                                                                                                                                                                                                                                                                                                                            - vo)
                                                                                                                                                                                                                                                                                                                                                          < 0") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 500) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (125,sqrt(3)*125) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = (125/2 + 3 * (sqrt(5) * (125/2)),
                                                                                                                                                                                                                                                                                                                                                                                       sqrt(3) * (125/2) - sqrt(3) * sqrt(5) * (125/2)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "625" "1875*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotvonvinneg" -1) (("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (REPLACE "nvonname" +) (("2" (REPLACE "nvinname" +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10/250") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (REPLACE "sname" +) (("2" (EXPAND "horizontal_conflict?" +) (("2" (REPLACE "Dname") (("2" (HIDE-ALL-BUT 3) (("2" (INST + "3/250") (("2" (GRIND) (("2" (FIELD) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (CASE "3*sqrt(3)*sqrt(3) = 9") (("1" (REPLACE -1) (("1" (CASE "3*sqrt(5)*sqrt(5) = 15") (("1" (REPLACE -1) (("1" (CASE "9*sqrt(5)*sqrt(5) = 45") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (CASE "240*sqrt(3) < 480") (("1" (CASE "720*sqrt(5)*sqrt(3) > 2700") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "sq_gt") (("2" (INST - "720*sqrt(5)*sqrt(3)" "2700") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "sqrt(3) < 2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sqrt_ltsq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" +) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (ASSERT) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "-") (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE "voname") (("3" (REPLACE "viname") (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "-") (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "cos_pi4") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|kb_is_not_coordinated_2-2| "" 3790108987 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 500") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 250") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                                                                                                                          (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)
                                                                                                                                                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                                                                                                                                            (pi / 2) * -1
                                                                                                                                                                                                                                                                                                                                                                            -
                                                                                                                                                                                                                                                                                                                                                                            -pi / 2),
                                                                                                                                                                                                                                                                                                                                                                      250)
                                                                                                                                                                                                                                                                                                                                                            - vo)
                                                                                                                                                                                                                                                                                                                                                          < 0") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 500) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (125,sqrt(3)*125) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = (125/2 + 3 * (sqrt(5) * (125/2)),
                                                                                                                                                                                                                                                                                                                                                                                       sqrt(3) * (125/2) - sqrt(3) * sqrt(5) * (125/2)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "625" "1875*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotvonvinneg" -1) (("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (REPLACE "nvonname" +) (("2" (REPLACE "nvinname" +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10/250") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (REPLACE "sname" +) (("2" (EXPAND "horizontal_conflict?" +) (("2" (REPLACE "Dname") (("2" (HIDE-ALL-BUT 3) (("2" (INST + "3/250") (("2" (GRIND) (("2" (FIELD) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (CASE "3*sqrt(3)*sqrt(3) = 9") (("1" (REPLACE -1) (("1" (CASE "3*sqrt(5)*sqrt(5) = 15") (("1" (REPLACE -1) (("1" (CASE "9*sqrt(5)*sqrt(5) = 45") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (CASE "240*sqrt(3) < 480") (("1" (CASE "720*sqrt(5)*sqrt(3) > 2700") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "sq_gt") (("2" (INST - "720*sqrt(5)*sqrt(3)" "2700") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "sqrt(3) < 2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sqrt_ltsq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" +) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (ASSERT) (("3" (REPLACE VONAME) (("3" (REPLACE VINAME) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "-") (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE VONAME) (("3" (REPLACE VINAME) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "-") (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "cos_pi4") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|div_distributes| FORMULA-DECL NIL |real_props| NIL) (|cross_mult| FORMULA-DECL NIL |real_props| NIL) (|sin_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|cos_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|asin_pos_bnds| FORMULA-DECL NIL |asin| |trig|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_16| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|) (|sin_2pi3| FORMULA-DECL NIL |trig_values| |trig|) (|cos_2pi3| FORMULA-DECL NIL |trig_values| |trig|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|cos_pi6| FORMULA-DECL NIL |trig_values| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|arcs| SKOLEM-CONST-DECL "real_abs_le_pi2" |kb| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|sq_gt| FORMULA-DECL NIL |sq| |reals|) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL) (|div_times| FORMULA-DECL NIL |real_props| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|nzint_abs_is_pos| APPLICATION-JUDGEMENT "{j: posint | j >= i}" |real_defs| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|sq_lt| FORMULA-DECL NIL |sq| |reals|) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nzint_times_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|kb| CONST-DECL "Vect2" |kb| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|sqrt_4| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_lt| FORMULA-DECL NIL |sqrt| |reals|) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|sqrt_eq| FORMULA-DECL NIL |sqrt| |reals|) (|cos_pi| FORMULA-DECL NIL |sincos| |trig|) (|nzrat_times_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|sin_pi6| FORMULA-DECL NIL |trig_values| |trig|) (|sin_pi| FORMULA-DECL NIL |sincos| |trig|) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|nprat_div_posrat_is_nprat| APPLICATION-JUDGEMENT "nprat" |rationals| NIL) (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|neg_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|chirel_star_equiv| FORMULA-DECL NIL |kb| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|sin_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|asin_sin| FORMULA-DECL NIL |trig_inverses| |trig|) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|sq_le| FORMULA-DECL NIL |sq| |reals|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_times_npreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sq_1| FORMULA-DECL NIL |sq| |reals|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL)) SHOSTAK) (|kb_is_not_coordinated_2-1| |nil| 3582477793 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 500") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 250") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (ASSERT) (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                                                                                                                          (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)
                                                                                                                                                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                                                                                                                                            (pi / 2) * -1
                                                                                                                                                                                                                                                                                                                                                                            -
                                                                                                                                                                                                                                                                                                                                                                            -pi / 2),
                                                                                                                                                                                                                                                                                                                                                                      250)
                                                                                                                                                                                                                                                                                                                                                            - vo)
                                                                                                                                                                                                                                                                                                                                                          < 0") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      -pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 500) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (125,sqrt(3)*125) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = (125/2 + 3 * (sqrt(5) * (125/2)),
                                                                                                                                                                                                                                                                                                                                                                                       sqrt(3) * (125/2) - sqrt(3) * sqrt(5) * (125/2)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "625" "1875*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotvonvinneg" -1) (("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (REPLACE "nvonname" +) (("2" (REPLACE "nvinname" +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10/250") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (REPLACE "sname" +) (("2" (EXPAND "horizontal_conflict?" +) (("2" (REPLACE "Dname") (("2" (HIDE-ALL-BUT 3) (("2" (INST + "3/250") (("2" (GRIND) (("2" (FIELD) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (CASE "3*sqrt(3)*sqrt(3) = 9") (("1" (REPLACE -1) (("1" (CASE "3*sqrt(5)*sqrt(5) = 15") (("1" (REPLACE -1) (("1" (CASE "9*sqrt(5)*sqrt(5) = 45") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (CASE "240*sqrt(3) < 480") (("1" (CASE "720*sqrt(5)*sqrt(3) > 2700") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "sq_gt") (("2" (INST - "720*sqrt(5)*sqrt(3)" "2700") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (CASE "sqrt(3) < 2") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sqrt_ltsq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" +) (("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (EXPAND "-") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (ASSERT) (("3" (REPLACE VONAME) (("3" (REPLACE VINAME) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "-") (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE VONAME) (("3" (REPLACE VINAME) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "-") (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (REWRITE "sin_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "cos_pi4") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)) (|kb_is_not_coordinated_3| 0 (|kb_is_not_coordinated_3-3| "" 3884844173 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 500") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 250") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)

pi / 2) * -1

pi / 2),

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      - vo)
sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 500) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (125,sqrt(3)*125) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = (125/2 + 3 * (sqrt(5) * (125/2)),
sqrt(3) * (125/2) - sqrt(3) * sqrt(5) * (125/2)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "625" "1875*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (ASSERT) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10/250") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (NAME "newt" "horizontal_tca(s,nvon-nvin)") (("1" (EXPAND "horizontal_conflict?" +) (("1" (INST + "newt") (("1" (NAME "aa" "sqv(nvon-nvin)") (("1" (NAME "bb" "2*(s*(nvon-nvin))") (("1" (NAME "cc" "sqv(s)") (("1" (NAME "ff" "quadratic(aa,bb,cc)") (("1" (CASE "NOT sqv(s + newt * (nvon - nvin)) = ff(newt)") (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "ff") (("1" (EXPAND "aa") (("1" (EXPAND "bb") (("1" (EXPAND "cc") (("1" (GRIND :EXCLUDE "newt") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (CASE "newt = -bb/(2*aa)") (("1" (REPLACE -1) (("1" (CASE "ff(0.0082391) < sq(4.1)") (("1" (CASE "ff(-bb/(2*aa)) <= ff(0.0082391)") (("1" (ASSERT) (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "quad_min") (("2" (INST - "aa" "bb" "cc") (("1" (ASSERT) (("1" (SPLIT -) (("1" (REPLACE -5) (("1" (EXPAND "is_minimum?") (("1" (INST - "0.0082391") NIL NIL)) NIL)) NIL) ("2" (EXPAND "aa" +) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (CASE "nvon=nvin") (("1" (ASSERT) (("1" (REPLACE "nvonname" -1) (("1" (REPLACE "nvinname" -1) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "aa" +) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE "nvonname" -1) (("2" (REPLACE "nvinname" -1) (("2" (HIDE-ALL-BUT -1) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "ff" 1) (("2" (EXPAND "quadratic" 1) (("2" (EXPAND "aa" 1) (("2" (EXPAND "bb" 1) (("2" (EXPAND "cc" 1) (("2" (REPLACE "nvonname" 1) (("2" (REPLACE "nvinname" 1) (("2" (REPLACE "sname") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (TYPEPRED "sqrt(5)") (("2" (REPLACE -2) (("2" (HIDE -) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (HIDE -) (("2" (CASE "-10 / sqrt(3) * (-10 / sqrt(3)) = 100/3") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (CASE "3 * sqrt(5) * sqrt(5) = 15") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (GRIND-REALS) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (HIDE -) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (GRIND-REALS) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (HIDE -) (("1" (GRIND-REALS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 2.236") (("1" (CASE "sqrt(3) < 1.733") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_lt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "newt" +) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "bb") (("2" (EXPAND "aa") (("2" (EXPAND "horizontal_tca") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (CASE "aa /= 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "aa" 1) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE "nvonname" -1) (("2" (REPLACE "nvinname" -1) (("2" (HIDE-ALL-BUT -1) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "newt" +) (("2" (REPLACE "sname" +) (("2" (REPLACE "nvonname" 1) (("2" (REPLACE "nvinname" 1) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (REPLACE -2) (("2" (ASSERT) (("2" (REPLACE -2) (("2" (ASSERT) (("2" (HIDE -) (("2" (GRIND-REALS) (("2" (REAL-PROPS) (("2" (FIELD) (("2" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "nvonname") (("2" (REPLACE "nvinname") (("2" (HIDE-ALL-BUT 1) (("2" (FLATTEN) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE "sname" +) (("3" (REPLACE "voname") (("3" (REPLACE "viname") (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "zero") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE "viname") (("3" (REPLACE "voname") (("3" (HIDE-ALL-BUT 1) (("3" (GRIND) (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|kb_is_not_coordinated_3-2| "" 3790109009 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 500") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 250") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)

pi / 2) * -1

pi / 2),

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      - vo)
sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 500) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (125,sqrt(3)*125) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = (125/2 + 3 * (sqrt(5) * (125/2)),
sqrt(3) * (125/2) - sqrt(3) * sqrt(5) * (125/2)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "625" "1875*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (ASSERT) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10/250") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (NAME "newt" "horizontal_tca(s,nvon-nvin)") (("1" (EXPAND "horizontal_conflict?" +) (("1" (INST + "newt") (("1" (NAME "aa" "sqv(nvon-nvin)") (("1" (NAME "bb" "2*(s*(nvon-nvin))") (("1" (NAME "cc" "sqv(s)") (("1" (NAME "ff" "quadratic(aa,bb,cc)") (("1" (CASE "NOT sqv(s + newt * (nvon - nvin)) = ff(newt)") (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "ff") (("1" (EXPAND "aa") (("1" (EXPAND "bb") (("1" (EXPAND "cc") (("1" (GRIND :EXCLUDE "newt") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (CASE "newt = -bb/(2*aa)") (("1" (REPLACE -1) (("1" (CASE "ff(0.0082391) < sq(4.1)") (("1" (CASE "ff(-bb/(2*aa)) <= ff(0.0082391)") (("1" (ASSERT) (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "quad_min") (("2" (INST - "aa" "bb" "cc") (("1" (ASSERT) (("1" (SPLIT -) (("1" (REPLACE -5) (("1" (EXPAND "is_minimum?") (("1" (INST - "0.0082391") NIL NIL)) NIL)) NIL) ("2" (EXPAND "aa" +) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (CASE "nvon=nvin") (("1" (ASSERT) (("1" (REPLACE "nvonname" -1) (("1" (REPLACE "nvinname" -1) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "aa" +) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE "nvonname" -1) (("2" (REPLACE "nvinname" -1) (("2" (HIDE-ALL-BUT -1) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "ff" 1) (("2" (EXPAND "quadratic" 1) (("2" (EXPAND "aa" 1) (("2" (EXPAND "bb" 1) (("2" (EXPAND "cc" 1) (("2" (REPLACE "nvonname" 1) (("2" (REPLACE "nvinname" 1) (("2" (REPLACE "sname") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (TYPEPRED "sqrt(5)") (("2" (REPLACE -2) (("2" (HIDE -) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (HIDE -) (("2" (CASE "-10 / sqrt(3) * (-10 / sqrt(3)) = 100/3") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (CASE "3 * sqrt(5) * sqrt(5) = 15") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (GRIND-REALS) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (HIDE -) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (GRIND-REALS) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (HIDE -) (("1" (GRIND-REALS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 2.236") (("1" (CASE "sqrt(3) < 1.733") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_lt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "newt" +) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "bb") (("2" (EXPAND "aa") (("2" (EXPAND "horizontal_tca") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (CASE "aa /= 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "aa" 1) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE "nvonname" -1) (("2" (REPLACE "nvinname" -1) (("2" (HIDE-ALL-BUT -1) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "newt" +) (("2" (REPLACE "sname" +) (("2" (REPLACE "nvonname" 1) (("2" (REPLACE "nvinname" 1) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (REPLACE -2) (("2" (ASSERT) (("2" (REPLACE -2) (("2" (ASSERT) (("2" (HIDE -) (("2" (GRIND-REALS) (("2" (REAL-PROPS) (("2" (FIELD) (("2" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "nvonname") (("2" (REPLACE "nvinname") (("2" (HIDE-ALL-BUT 1) (("2" (FLATTEN) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE "sname" +) (("3" (REPLACE VONAME) (("3" (REPLACE VINAME) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "zero") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE VINAME) (("3" (REPLACE VONAME) (("3" (HIDE-ALL-BUT 1) (("3" (GRIND) (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| |trig|) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|div_distributes| FORMULA-DECL NIL |real_props| NIL) (|times_div2| FORMULA-DECL NIL |real_props| NIL) (|cross_mult| FORMULA-DECL NIL |real_props| NIL) (|sin_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|cos_pi4| FORMULA-DECL NIL |trig_values| |trig|) (|asin_pos_bnds| FORMULA-DECL NIL |asin| |trig|) (|cos_minus| FORMULA-DECL NIL |sincos| |trig|) (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_16| FORMULA-DECL NIL |sqrt| |reals|) (|sqrt_div| FORMULA-DECL NIL |sqrt| |reals|) (|sin_2pi3| FORMULA-DECL NIL |trig_values| |trig|) (|cos_2pi3| FORMULA-DECL NIL |trig_values| |trig|) (|sin_minus| FORMULA-DECL NIL |sincos| |trig|) (|to2pi| CONST-DECL "nnreal_lt_2pi" |to2pi| |trig|) (|cos_pi6| FORMULA-DECL NIL |trig_values| |trig|) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|arcs| SKOLEM-CONST-DECL "real_abs_le_pi2" |kb| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|zero_times1| FORMULA-DECL NIL |real_props| NIL) (|sq_gt| FORMULA-DECL NIL |sq| |reals|) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|div_mult_pos_lt1| FORMULA-DECL NIL |real_props| NIL) (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL) (|div_times| FORMULA-DECL NIL |real_props| NIL) (|times_div1| FORMULA-DECL NIL |real_props| NIL) (|chi_hc| CONST-DECL "[nnreal_lt_2pi, bool]" |kb| NIL) (|sin_pi2| FORMULA-DECL NIL |sincos| |trig|) (|sin_neg| FORMULA-DECL NIL |sincos_def| |trig|) (|nzint_abs_is_pos| APPLICATION-JUDGEMENT "{j: posint | j >= i}" |real_defs| NIL) (|sign| CONST-DECL "Sign" |sign| |reals|) (|sq_lt| FORMULA-DECL NIL |sq| |reals|) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nzint_times_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (+ CONST-DECL "Vector" |vectors_2D| |vectors|) (|nnrat_plus_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|div_mult_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|div_cancel2| FORMULA-DECL NIL |real_props| NIL) (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL) (|ff| SKOLEM-CONST-DECL "[real -> real]" |kb| NIL) (|bb| SKOLEM-CONST-DECL "real" |kb| NIL) (|cc| SKOLEM-CONST-DECL "posreal" |kb| NIL) (|aa| SKOLEM-CONST-DECL "nnreal" |kb| NIL) (|quad_min| FORMULA-DECL NIL |quad_minmax| |reals|) (|sqv_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|) (|is_minimum?| CONST-DECL "bool" |quad_minmax| |reals|) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|minus_div1| FORMULA-DECL NIL |real_props| NIL) (|add_div| FORMULA-DECL NIL |real_props| NIL) (|div_mult_pos_lt2| FORMULA-DECL NIL |real_props| NIL) (|posrat_times_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|quadratic| CONST-DECL "real" |quadratic| |reals|) (|newt| SKOLEM-CONST-DECL "real" |kb| NIL) (|horizontal_tca| CONST-DECL "real" |definitions| NIL) (|kb| CONST-DECL "Vect2" |kb| NIL) (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|) (|sin_asin| FORMULA-DECL NIL |trig_inverses| |trig|) (|cos_ge_0| FORMULA-DECL NIL |trig_ineq| |trig|) (|sqrt_eq| FORMULA-DECL NIL |sqrt| |reals|) (|cos_pi| FORMULA-DECL NIL |sincos| |trig|) (|nzrat_times_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|sin_pi6| FORMULA-DECL NIL |trig_values| |trig|) (|sin_pi| FORMULA-DECL NIL |sincos| |trig|) (|sin_plus| FORMULA-DECL NIL |sincos| |trig|) (|nprat_div_posrat_is_nprat| APPLICATION-JUDGEMENT "nprat" |rationals| NIL) (|nzrat_div_nzrat_is_nzrat| APPLICATION-JUDGEMENT "nzrat" |rationals| NIL) (|neg_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|norm_neg| FORMULA-DECL NIL |vectors_2D| |vectors|) (|chirel_star_equiv| FORMULA-DECL NIL |kb| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|asin| CONST-DECL "real_abs_le_pi2" |asin| |trig|) (|real_abs_le_pi2| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (<= CONST-DECL "bool" |reals| NIL) (|sin_pi3| FORMULA-DECL NIL |trig_values| |trig|) (|asin_sin| FORMULA-DECL NIL |trig_inverses| |trig|) (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|to2pi_id| FORMULA-DECL NIL |to2pi| |trig|) (|div_mult_pos_le1| FORMULA-DECL NIL |real_props| NIL) (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|sq_le| FORMULA-DECL NIL |sq| |reals|) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sign| TYPE-EQ-DECL NIL |sign| |reals|) (|chirel_star| CONST-DECL "nnreal_lt_2pi" |kb| NIL) (NIL APPLICATION-JUDGEMENT "nnreal_lt_2pi" |atan2| |trig|) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|neg_ss| APPLICATION-JUDGEMENT "Ss_vect2[D]" |kb| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_div_posreal_is_npreal| APPLICATION-JUDGEMENT "npreal" |real_types| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|npreal_times_npreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|) (D FORMAL-CONST-DECL "posreal" |kb| NIL) (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL) (- CONST-DECL "Vector" |vectors_2D| |vectors|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|atan2| CONST-DECL "real" |atan2| |trig|) (|nnreal_lt_2pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| |trig|) (|track| CONST-DECL "nnreal_lt_2pi" |track| |aviation|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|div_cancel3| FORMULA-DECL NIL |real_props| NIL) (|trkgs2vect| CONST-DECL "Nz_vect2" |track| |aviation|) (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|) (/= CONST-DECL "boolean" |notequal| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|) (|sq_eq| FORMULA-DECL NIL |sq| |reals|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|) (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sq_1| FORMULA-DECL NIL |sq| |reals|) (* CONST-DECL "Vector" |vectors_2D| |vectors|) (* CONST-DECL "real" |vectors_2D| |vectors|) (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|) (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|norm_id| FORMULA-DECL NIL |track| |aviation|) (|sin| CONST-DECL "real" |sincos_def| |trig|) (|cos| CONST-DECL "real" |sincos_def| |trig|) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL)) SHOSTAK) (|kb_is_not_coordinated_3-1| |nil| 3582477910 ("" (CASE "NOT FORALL (x:real): sq(cos(x)) + sq(sin(x)) = 1") (("1" (HIDE 2) (("1" (SKEEP) (("1" (NAME "vv" "trkgs2vect(x,1)") (("1" (LEMMA "norm_id") (("1" (INST - "1" "x") (("1" (REPLACE -2) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST - "vv") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST - "sqrt(sqv(vv))" "1") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (SPLIT -1) (("1" (HIDE -2) (("1" (ASSERT) (("1" (REWRITE "sq_sqrt") (("1" (REPLACE -2 -1 :DIR RL) (("1" (EXPAND "trkgs2vect" -1) (("1" (EXPAND "*") (("1" (EXPAND "sqv") (("1" (EXPAND "*") (("1" (EXPAND "sq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "pyth" -1) (("2" (HIDE "pyth") (("2" (CASE "sin(pi/12) = (1/4)*(sqrt(6)-sqrt(2))") (("1" (LABEL "sin_pi12" -1) (("1" (HIDE "sin_pi12") (("1" (CASE "cos(pi/12) = (1/4)*(sqrt(6)+sqrt(2))") (("1" (LABEL "cos_pi12" -1) (("1" (HIDE "cos_pi12") (("1" (SKEEP) (("1" (LABEL "Dname" -1) (("1" (LABEL "sname" -2) (("1" (LABEL "voname" -3) (("1" (LABEL "viname" -4) (("1" (LABEL "nvoname" -5) (("1" (LABEL "nviname" -6) (("1" (CASE "NOT norm(vo) = 500") (("1" (REPLACE "voname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvo" -1) (("2" (CASE "NOT norm(vi) = 250") (("1" (REPLACE "viname" 1) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "normvi" -1) (("2" (CASE "NOT track(vo) = pi/2") (("1" (REPLACE "voname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvo" -1) (("2" (CASE "NOT track(vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "viname" +) (("1" (EXPAND "track") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvi" -1) (("2" (CASE "NOT track(vo-vi) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvovi" -1) (("2" (CASE "NOT track(vi-vo) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "-" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "trackvivo" -1) (("2" (CASE "NOT norm(s) = 10/sqrt(3)") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sqrt_sqv_norm") (("1" (INST?) (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -1) (("1" (LEMMA "sq_eq") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "norms" -1) (("2" (CASE "NOT track(s) = 3*pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (EXPAND "atan2" +) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracks" -1) (("2" (CASE "NOT track(-s) = pi/2") (("1" (HIDE 2) (("1" (REPLACE "sname" +) (("1" (EXPAND "track" +) (("1" (ASSERT) (("1" (EXPAND "-") (("1" (EXPAND "atan2" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "tracknegs" -1) (("2" (CASE "NOT chirel_star(s,vo-vi,1/2,-1) = 2*pi/3") (("1" (REWRITE "chirel_star_equiv" 1) (("1" (HIDE 2) (("1" (REPLACE "trackvovi") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (REPLACE "tracknegs") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (ASSERT) (("2" (REWRITE "to2pi_id") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (HIDE 2) (("2" (REPLACE "trackvovi") (("2" (ASSERT) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (REPLACE "tracknegs") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarid" -1) (("2" (CASE "NOT chirel_star(-s,vi-vo,1/2,-1) = 5*pi/3") (("1" (HIDE 2) (("1" (REWRITE "chirel_star_equiv" 1) (("1" (REPLACE "trackvivo") (("1" (ASSERT) (("1" (REPLACE "norms" 1) (("1" (REPLACE "Dname") (("1" (ASSERT) (("1" (REPLACE "tracks") (("1" (ASSERT) (("1" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "to2pi_id") (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "trackvivo") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REPLACE "norms" 1) (("2" (REPLACE "Dname") (("2" (ASSERT) (("2" (REPLACE "tracks") (("2" (ASSERT) (("2" (CASE "NOT asin(sqrt(3)/2) = pi/3") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_pi3") (("1" (REPLACE -1 :DIR RL) (("1" (HIDE -) (("1" (REWRITE "asin_sin") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "abs") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (CROSS-MULT 1) (("3" (LEMMA "sq_le") (("3" (INST - "sqrt(3)" "2") (("3" (ASSERT) (("3" (EXPAND "sq" 1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "chirelstarnegid" -1) (("2" (CASE "NOT sin(7*pi/6) = -1/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_plus") (("1" (INST - "pi" "pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "sin_pi") (("1" (REWRITE "cos_pi") (("1" (REWRITE "sin_pi6") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vo-vi /= zero") (("1" (CASE "vi-vo/=zero") (("1" (LABEL "vivonz" -1) (("1" (LABEL "vovinz" -2) (("1" (LABEL "sin_7pi6" -3) (("1" (NAME "arcs" "asin(1/4)") (("1" (LABEL "arcsname" -1) (("1" (CASE "asin(-1) = -pi/2") (("1" (HIDE -1) (("1" (CASE "arcs > 0") (("1" (ASSERT) (("1" (CASE "NOT cos(asin(1/4)) = sqrt(1-sq(1/4))") (("1" (HIDE-ALL-BUT 1) (("1" (REVEAL "pyth") (("1" (INST?) (("1" (LEMMA "sqrt_eq") (("1" (INST - "sq(cos(asin(1/4)))" "1-sq(1/4)") (("1" (ASSERT) (("1" (REWRITE "sqrt_sq") (("1" (ASSERT) (("1" (HIDE 2) (("1" (REWRITE "sin_asin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "cos_ge_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sq" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "arcspos" -2) (("2" (LABEL "cosasin" -1) (("2" (CASE "NOT cos(2*pi/3 - asin(1/4)) = (1/8)*sqrt(3)*(1-sqrt(5))") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (REWRITE "cos_minus") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_asin") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "cosdiffasin" -1) (("2" (CASE "NOT sin(2*pi/3-asin(1/4)) = (1/8)*(3*sqrt(5) + 1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (REWRITE "sin_minus") (("1" (REWRITE "sin_asin") (("1" (REWRITE "cos_2pi3") (("1" (REWRITE "sin_2pi3") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "sq") (("1" (LEMMA "sqrt_div") (("1" (INST - "15" "16") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "sqrt_times") (("1" (INST - "3" "5") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sindiffasin" -1) (("2" (CASE "NOT -s *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (trkgs2vect(to2pi(5 * pi / 3 + (pi / 2)

pi / 2) * -1

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      -pi / 2),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                250)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      - vo)
sname" +) (("1" (REPLACE "voname") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (HIDE -) (("1" (EXPAND "-") (("1" (EXPAND "*") (("1" (EXPAND "trkgs2vect") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (CASE "NOT s * (trkgs2vect(to2pi(2 * pi / 3 - arcs), 500) - vi) < 0") (("1" (HIDE 2) (("1" (REPLACE "sname") (("1" (REPLACE "viname") (("1" (EXPAND "arcs" +) (("1" (EXPAND "-" +) (("1" (EXPAND "*" +) (("1" (REWRITE "to2pi_id") (("1" (EXPAND "trkgs2vect") (("1" (REPLACE -2) (("1" (REPLACE -3) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (LABEL "sdottgsneg" -1) (("2" (LABEL "minsdottgsneg" -2) (("2" (CASE "NOT (trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi)) = (125,sqrt(3)*125) AND trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo)) = (125/2 + 3 * (sqrt(5) * (125/2)),
sqrt(3) * (125/2) - sqrt(3) * sqrt(5) * (125/2)))") (("1" (HIDE 2) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "chirelstarnegid") (("1" (REPLACE "normvo") (("1" (REPLACE "normvi") (("1" (REPLACE "trackvi") (("1" (REWRITE "sin_pi6") (("1" (REPLACE "trackvo") (("1" (REWRITE "sin_7pi6") (("1" (CASE "asin(-1) = -pi/2") (("1" (REPLACE -1) (("1" (EXPAND "sign") (("1" (ASSERT) (("1" (EXPAND "abs") (("1" (CASE "to2pi(5 * pi / 3 + (pi / 2) + (pi / 2) * -1 -
pi / 2) = pi/6") (("1" (REPLACE -1) (("1" (CASE "to2pi(2*pi/3-asin(1/4)) = 2*pi/3-asin(1/4)") (("1" (REPLACE -1) (("1" (EXPAND "trkgs2vect" +) (("1" (REPLACE "cosdiffasin") (("1" (REPLACE "sindiffasin") (("1" (REWRITE "sin_pi6") (("1" (REWRITE "cos_pi6") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "asin(1/4)") (("2" (REWRITE "to2pi_id") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "to2pi") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (REWRITE "sin_pi2") (("2" (REPLACE -1 1 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "nvin" "trkgs2vect(chi_hc(1 / 2, -1, -1)(-s, vi, vo)`1, norm(vi))") (("2" (REPLACE -1) (("2" (NAME "nvon" "trkgs2vect(chi_hc(1 / 2, -1, -1)(s, vo, vi)`1, norm(vo))") (("2" (REPLACE -1) (("2" (FLATTEN) (("2" (CASE "NOT s*(nvon-nvin) < 0") (("1" (HIDE 2) (("1" (REPLACE -3 +) (("1" (REPLACE -4 +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (FIELD) (("1" (LEMMA "sq_lt") (("1" (INST - "625" "1875*sqrt(5)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "nvinname" -4) (("2" (LABEL "nvonname" -5) (("2" (LABEL "nvontg" -2) (("2" (LABEL "nvintg" -3) (("2" (LABEL "sdotnvonnvinneg" -1) (("2" (CASE "NOT s*(nvon-vi) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvonname" +) (("1" (REPLACE "viname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) (("1" (REAL-PROPS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST - "sqrt(5)" "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "sdotnvonvineg" -1) (("2" (CASE "NOT s*(vo-nvin) < 0") (("1" (HIDE 4) (("1" (REPLACE "nvinname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "sname" +) (("1" (HIDE-ALL-BUT 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT -s*(nvin-vo) < 0") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (LABEL "negsdotnvinvoneg" -1) (("2" (CASE "NOT (nvi = nvin AND nvo = nvon)") (("1" (HIDE 4) (("1" (REPLACE "nvoname" +) (("1" (REPLACE "nviname" +) (("1" (EXPAND "kb" +) (("1" (ASSERT) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (SPLIT +) (("1" (EXPAND "chi_hc" +) (("1" (REPLACE "chirelstarid") (("1" (REPLACE "trackvi") (("1" (REPLACE "normvi") (("1" (REPLACE "normvo") (("1" (REWRITE "sin_pi6") (("1" (EXPAND "abs" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GROUND) (("2" (EXPAND "chi_hc" +) (("2" (REPLACE "chirelstarnegid") (("2" (REPLACE "normvo") (("2" (REPLACE "normvi") (("2" (REPLACE "trackvo") (("2" (REWRITE "sin_7pi6") (("2" (EXPAND "abs" +) (("2" (CASE "NOT asin(-1) = -pi/2") (("1" (HIDE-ALL-BUT 1) (("1" (LEMMA "sin_neg") (("1" (INST - "pi/2") (("1" (LEMMA "sin_pi2") (("1" (REPLACE -1) (("1" (REPLACE -2 + :DIR RL) (("1" (REWRITE "asin_sin") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (EXPAND "sign" +) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LABEL "nvinvin" -1) (("2" (LABEL "nvonvon" -2) (("2" (REPLACE -1 +) (("2" (REPLACE -2 +) (("2" (ASSERT) (("2" (CASE "NOT horizontal_conflict?(s,vo-vi)") (("1" (HIDE 4) (("1" (REPLACE "sname" +) (("1" (REPLACE "voname" +) (("1" (REPLACE "viname" +) (("1" (EXPAND "horizontal_conflict?") (("1" (REPLACE "Dname") (("1" (HIDE-ALL-BUT 1) (("1" (INST + "10/250") (("1" (GRIND) (("1" (FIELD) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (ASSERT) (("1" (LEMMA "sq_lt") (("1" (INST - "400-75" "200*sqrt(3)") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LABEL "hcorig" -1) (("2" (ASSERT) (("2" (NAME "newt" "horizontal_tca(s,nvon-nvin)") (("1" (EXPAND "horizontal_conflict?" +) (("1" (INST + "newt") (("1" (NAME "aa" "sqv(nvon-nvin)") (("1" (NAME "bb" "2*(s*(nvon-nvin))") (("1" (NAME "cc" "sqv(s)") (("1" (NAME "ff" "quadratic(aa,bb,cc)") (("1" (CASE "NOT sqv(s + newt * (nvon - nvin)) = ff(newt)") (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "ff") (("1" (EXPAND "aa") (("1" (EXPAND "bb") (("1" (EXPAND "cc") (("1" (GRIND :EXCLUDE "newt") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -1) (("2" (CASE "newt = -bb/(2*aa)") (("1" (REPLACE -1) (("1" (CASE "ff(0.0082391) < sq(4.1)") (("1" (CASE "ff(-bb/(2*aa)) <= ff(0.0082391)") (("1" (ASSERT) (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "quad_min") (("2" (INST - "aa" "bb" "cc") (("1" (ASSERT) (("1" (SPLIT -) (("1" (REPLACE -5) (("1" (EXPAND "is_minimum?") (("1" (INST - "0.0082391") NIL NIL)) NIL)) NIL) ("2" (EXPAND "aa" +) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (CASE "nvon=nvin") (("1" (ASSERT) (("1" (REPLACE "nvonname" -1) (("1" (REPLACE "nvinname" -1) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "aa" +) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE "nvonname" -1) (("2" (REPLACE "nvinname" -1) (("2" (HIDE-ALL-BUT -1) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "ff" 1) (("2" (EXPAND "quadratic" 1) (("2" (EXPAND "aa" 1) (("2" (EXPAND "bb" 1) (("2" (EXPAND "cc" 1) (("2" (REPLACE "nvonname" 1) (("2" (REPLACE "nvinname" 1) (("2" (REPLACE "sname") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (TYPEPRED "sqrt(5)") (("2" (REPLACE -2) (("2" (HIDE -) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (HIDE -) (("2" (CASE "-10 / sqrt(3) * (-10 / sqrt(3)) = 100/3") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (CASE "3 * sqrt(5) * sqrt(5) = 15") (("1" (REPLACE -1) (("1" (HIDE -) (("1" (ASSERT) (("1" (GRIND-REALS) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (HIDE -) (("1" (ASSERT) (("1" (REAL-PROPS) (("1" (MULT-BY 1 "sqrt(3)") (("1" (GRIND-REALS) (("1" (TYPEPRED "sqrt(3)") (("1" (REPLACE -2) (("1" (HIDE -) (("1" (GRIND-REALS) (("1" (FIELD) (("1" (CASE "sqrt(5) > 2.236") (("1" (CASE "sqrt(3) < 1.733") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_lt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "newt" +) (("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "bb") (("2" (EXPAND "aa") (("2" (EXPAND "horizontal_tca") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (CASE "aa /= 0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "aa" 1) (("2" (LEMMA "sqv_eq_0") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE "nvonname" -1) (("2" (REPLACE "nvinname" -1) (("2" (HIDE-ALL-BUT -1) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "newt" +) (("2" (REPLACE "sname" +) (("2" (REPLACE "nvonname" 1) (("2" (REPLACE "nvinname" 1) (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) (("2" (TYPEPRED "sqrt(3)") (("2" (REPLACE -2) (("2" (TYPEPRED "sqrt(5)") (("2" (REPLACE -2) (("2" (ASSERT) (("2" (REPLACE -2) (("2" (ASSERT) (("2" (HIDE -) (("2" (GRIND-REALS) (("2" (REAL-PROPS) (("2" (FIELD) (("2" (CASE "sqrt(5) > 1") (("1" (ASSERT) NIL NIL) ("2" (LEMMA "sq_gt") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE "nvonname") (("2" (REPLACE "nvinname") (("2" (HIDE-ALL-BUT 1) (("2" (FLATTEN) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "sq") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "arcs" 1) (("2" (LEMMA "asin_pos_bnds") (("2" (INST - "1/4") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (LEMMA "sin_pi2") (("2" (REPLACE -1) (("2" (REPLACE -2 :DIR RL) (("2" (REWRITE "asin_sin") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (EXPAND "zero") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REPLACE "voname" +) (("2" (REPLACE "viname" +) (("2" (EXPAND "zero") (("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE "sname" +) (("3" (REPLACE VONAME) (("3" (REPLACE VINAME) (("3" (HIDE-ALL-BUT 1) (("3" (EXPAND "zero") (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE VINAME) (("3" (REPLACE VONAME) (("3" (HIDE-ALL-BUT 1) (("3" (GRIND) (("3" (EXPAND "zero") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (GRIND) (("2" (REAL-PROPS) (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_minus") (("2" (INST - "pi/3" "pi/4") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REWRITE "cos_pi4") (("2" (REWRITE "cos_pi3") (("2" (REWRITE "sin_pi4") (("2" (REWRITE "sin_pi3") (("2" (LEMMA "sqrt_times") (("2" (INST - "2" "3") (("2" (REPLACE -1) (("2" (HIDE -) (("2" (REAL-PROPS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL)))
