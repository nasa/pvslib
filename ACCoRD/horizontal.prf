(|horizontal|
 (|ss_nzv| 0
  (|ss_nzv-1| |nil| 3432031102 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL))
   NIL (|ss_nzv| SUBTYPE "horizontal.x" "Nz_vect2")))
 (|ss_sp| 0
  (|ss_sp-1| |nil| 3432031102 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL (|ss_sp| SUBTYPE "horizontal.x" "Sp_vect2")))
 (|neg_ss| 0
  (|neg_ss-1| |nil| 3431439330
   ("" (SKEEP) (("" (REWRITE "sqv_neg") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|sqv_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL (|neg_ss| SUBTYPE "(vectors_2D.-)(horizontal.ss)" "Ss_vect2")))
 (|neg_sp| 0
  (|neg_sp-1| |nil| 3432031102 ("" (JUDGEMENT-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Sp_vect2| TYPE-EQ-DECL NIL |horizontal| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL (|neg_sp| SUBTYPE "(vectors_2D.-)(horizontal.sp)" "Sp_vect2")))
 (|horizontal_conflict_sum_closed| 0
  (|horizontal_conflict_sum_closed-5| "" 3790107667
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKOSIMP*)
        (("" (CASE "nnt!1 = 0 and nnt!2 = 0")
          (("1" (FLATTEN)
            (("1" (INST + "0")
              (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (NAME "tt" "nnt!2/(nnt!1 + nnt!2)")
            (("1" (LABEL "ttname" -1)
              (("1" (CASE "0<=tt AND tt<=1")
                (("1" (FLATTEN)
                  (("1" (NAME "newt" "(nnt!1*nnt!2)/(nnt!1 + nnt!2)")
                    (("1" (LABEL "newtname" -1)
                      (("1" (CASE "tt*nnt!1 = newt AND (1-tt)*nnt!2 = newt")
                        (("1" (FLATTEN)
                          (("1" (LABEL "newttt" -1)
                            (("1" (LABEL "newtomtt" -2)
                              (("1" (INST + "newt")
                                (("1" (NAME "VV" "s + nnt!1 * v")
                                  (("1" (LABEL "vvname" -1)
                                    (("1" (NAME "WW" "s + nnt!2 * w")
                                      (("1" (LABEL "wwname" -1)
                                        (("1" (NAME "VVt" "s+nnt!1*v")
                                          (("1" (LABEL "vvtname" -1)
                                            (("1" (NAME "WWt" "s+nnt!2*w")
                                              (("1" (LABEL "wwtname" -1)
                                                (("1" (REPLACE "wwname")
                                                  (("1" (REPLACE "vvname")
                                                    (("1"
                                                      (LEMMA
                                                       "horiz_dist_convex_scaf")
                                                      (("1"
                                                        (INST - "VVt"
                                                         "WWt-VVt")
                                                        (("1"
                                                          (CASE
                                                              "s + newt * (v + w) = tt*VV+(1-tt)*WW")
                                                          (("1"
                                                            (LABEL "vectfin"
                                                                   -1)
                                                            (("1"
                                                              (REPLACE
                                                               "vectfin")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "convex_wtd_av_lt")
                                                                  (("1"
                                                                    (INST - "0"
                                                                     "LAMBDA (ttt: real): horiz_dist_scaf(VVt)(ttt, WWt - VVt)"
                                                                     "0" "1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "horiz_dist_scaf"
                                                                         -1 1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "horiz_dist_scaf"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "VVt = VV AND VVt+(WWt-VVt) = WW")
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -
                                                                                     "tt")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "horiz_dist_scaf")
                                                                                        (("1"
                                                                                          (CASE-REPLACE
                                                                                           "VVt + (1 - tt) * (WWt - VVt) = tt * VV + (1 - tt) * WW")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE-ALL-BUT
                                                                                             (-1
                                                                                              -2
                                                                                              1))
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 ("vvtname"
                                                                                  "vvname"
                                                                                  "wwtname"
                                                                                  "wwname"
                                                                                  1))
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   "wwtname"
                                                                                   +
                                                                                   RL)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     "vvtname"
                                                                                     +
                                                                                     RL)
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       "vvname"
                                                                                       +
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REPLACE
                                                                                         "wwname"
                                                                                         +
                                                                                         RL)
                                                                                        (("2"
                                                                                          (HIDE-ALL-BUT
                                                                                           1)
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (REPLACE "vvname" +
                                                                     RL)
                                                            (("2"
                                                              (REPLACE "wwname"
                                                                       + RL)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE
                                                                   (2 3 4 5))
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     ("newttt"
                                                                      "newtomtt"
                                                                      1))
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                                  (("2"
                                    (INST - "(nnt!1*nnt!2)" "nnt!1 + nnt!2")
                                    (("1" (REPLACE "newtname")
                                      (("1" (PROPAX) NIL NIL)) NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (REPLACE "newtname" + RL)
                          (("2" (REPLACE "ttname" + RL)
                            (("2" (HIDE-ALL-BUT (1 2))
                              (("2" (SPLIT 1)
                                (("1" (FIELD) NIL NIL) ("2" (FIELD) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                  (("2" (INST - "nnt!2" "nnt!1 + nnt!2")
                    (("1" (REPLACE "ttname")
                      (("1" (ASSERT)
                        (("1" (REPLACE "ttname" + RL)
                          (("1" (CROSS-MULT 1) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|horizontal_conflict_sum_closed-4| |nil| 3467395174
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKOSIMP*)
        (("" (CASE "nnt!1 = 0 and nnt!2 = 0")
          (("1" (FLATTEN)
            (("1" (INST + "0")
              (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (NAME "tt" "nnt!2/(nnt!1 + nnt!2)")
            (("1" (LABEL "ttname" -1)
              (("1" (CASE "0<=tt AND tt<=1")
                (("1" (FLATTEN)
                  (("1" (NAME "newt" "(nnt!1*nnt!2)/(nnt!1 + nnt!2)")
                    (("1" (LABEL "newtname" -1)
                      (("1" (CASE "tt*nnt!1 = newt AND (1-tt)*nnt!2 = newt")
                        (("1" (FLATTEN)
                          (("1" (LABEL "newttt" -1)
                            (("1" (LABEL "newtomtt" -2)
                              (("1" (INST + "newt")
                                (("1" (NAME "VV" "s + nnt!1 * v")
                                  (("1" (LABEL "vvname" -1)
                                    (("1" (NAME "WW" "s + nnt!2 * w")
                                      (("1" (LABEL "wwname" -1)
                                        (("1" (NAME "VVt" "s+nnt!1*v")
                                          (("1" (LABEL "vvtname" -1)
                                            (("1" (NAME "WWt" "s+nnt!2*w")
                                              (("1" (LABEL "wwtname" -1)
                                                (("1" (REPLACE "wwname")
                                                  (("1" (REPLACE "vvname")
                                                    (("1"
                                                      (LEMMA
                                                       "horiz_dist_convex_scaf")
                                                      (("1"
                                                        (INST - "VVt"
                                                         "WWt-VVt")
                                                        (("1"
                                                          (CASE
                                                              "s + newt * (v + w) = tt*VV+(1-tt)*WW")
                                                          (("1"
                                                            (LABEL "vectfin"
                                                                   -1)
                                                            (("1"
                                                              (REPLACE
                                                               "vectfin")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "convex_wtd_av_lt")
                                                                  (("1"
                                                                    (INST - "0"
                                                                     "LAMBDA (ttt: real): horiz_dist_scaf(VVt)(ttt, WWt - VVt)"
                                                                     "0" "1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "horiz_dist_scaf"
                                                                         -1 1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "horiz_dist_scaf"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "VVt = VV AND VVt+(WWt-VVt) = WW")
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -
                                                                                     "tt")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "horiz_dist_scaf")
                                                                                        (("1"
                                                                                          (CASE-REPLACE
                                                                                           "VVt + (1 - tt) * (WWt - VVt) = tt * VV + (1 - tt) * WW")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE-ALL-BUT
                                                                                             (-1
                                                                                              -2
                                                                                              1))
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 ("vvtname"
                                                                                  "vvname"
                                                                                  "wwtname"
                                                                                  "wwname"
                                                                                  1))
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   "wwtname"
                                                                                   +
                                                                                   RL)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     "vvtname"
                                                                                     +
                                                                                     RL)
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       "vvname"
                                                                                       +
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REPLACE
                                                                                         "wwname"
                                                                                         +
                                                                                         RL)
                                                                                        (("2"
                                                                                          (HIDE-ALL-BUT
                                                                                           1)
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (REPLACE "vvname" +
                                                                     RL)
                                                            (("2"
                                                              (REPLACE "wwname"
                                                                       + RL)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE
                                                                   (2 3 4 5))
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     ("newttt"
                                                                      "newtomtt"
                                                                      1))
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                                  (("2"
                                    (INST - "(nnt!1*nnt!2)" "nnt!1 + nnt!2")
                                    (("1" (REPLACE "newtname")
                                      (("1" (PROPAX) NIL NIL)) NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (REPLACE "newtname" + RL)
                          (("2" (REPLACE "ttname" + RL)
                            (("2" (HIDE-ALL-BUT (1 2))
                              (("2" (SPLIT 1)
                                (("1" (FIELD) NIL NIL) ("2" (FIELD) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                  (("2" (INST - "nnt!2" "nnt!1 + nnt!2")
                    (("1" (REPLACE "ttname")
                      (("1" (ASSERT)
                        (("1" (REPLACE "ttname" + RL)
                          (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|horiz_dist_convex_scaf| FORMULA-DECL NIL |horizontal_dist_convexity| NIL)
    (|convex_wtd_av_lt| FORMULA-DECL NIL |convex_functions| |reals|)
    (|scal_1| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|horiz_dist_scaf| CONST-DECL "real" |horizontal_dist_convexity| NIL))
   NIL)
  (|horizontal_conflict_sum_closed-3| |nil| 3467395009
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKOSIMP*)
        (("" (CASE "nnt!1 = 0 and nnt!2 = 0")
          (("1" (FLATTEN)
            (("1" (INST + "0")
              (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL)))))))))
           ("2" (NAME "tt" "nnt!2/(nnt!1 + nnt!2)")
            (("1" (LABEL "ttname" -1)
              (("1" (CASE "0<=tt AND tt<=1")
                (("1" (FLATTEN)
                  (("1" (NAME "newt" "(nnt!1*nnt!2)/(nnt!1 + nnt!2)")
                    (("1" (LABEL "newtname" -1)
                      (("1" (CASE "tt*nnt!1 = newt AND (1-tt)*nnt!2 = newt")
                        (("1" (FLATTEN)
                          (("1" (LABEL "newttt" -1)
                            (("1" (LABEL "newtomtt" -2)
                              (("1" (INST + "newt")
                                (("1" (NAME "VV" "vect2(s) + nnt!1 * vect2(v)")
                                  (("1" (LABEL "vvname" -1)
                                    (("1"
                                      (NAME "WW" "vect2(s) + nnt!2 * vect2(w)")
                                      (("1" (LABEL "wwname" -1)
                                        (("1" (NAME "VVt" "s+nnt!1*v")
                                          (("1" (LABEL "vvtname" -1)
                                            (("1" (NAME "WWt" "s+nnt!2*w")
                                              (("1" (LABEL "wwtname" -1)
                                                (("1" (REPLACE "wwname")
                                                  (("1" (REPLACE "vvname")
                                                    (("1"
                                                      (LEMMA
                                                       "horiz_dist_convex_scaf")
                                                      (("1"
                                                        (INST - "VVt"
                                                         "WWt-VVt")
                                                        (("1"
                                                          (CASE
                                                              "vect2(s) + newt * vect2(v + w) = tt*VV+(1-tt)*WW")
                                                          (("1"
                                                            (LABEL "vectfin"
                                                                   -1)
                                                            (("1"
                                                              (REPLACE
                                                               "vectfin")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "convex_wtd_av_lt")
                                                                  (("1"
                                                                    (INST - "0"
                                                                     "LAMBDA (ttt): horiz_dist_scaf(VVt)(ttt, WWt - VVt)"
                                                                     "0" "1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "horiz_dist_scaf"
                                                                         -1 1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "horiz_dist_scaf"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "vect2(VVt) = VV AND vect2(VVt)+vect2(WWt-VVt) = WW")
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -
                                                                                     "tt")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "horiz_dist_scaf")
                                                                                        (("1"
                                                                                          (CASE-REPLACE
                                                                                           "vect2(VVt) + (1 - tt) * vect2(WWt - VVt) = tt * VV + (1 - tt) * WW")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE-ALL-BUT
                                                                                             (-1
                                                                                              -2
                                                                                              1))
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL)))))))))))))))
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 ("vvtname"
                                                                                  "vvname"
                                                                                  "wwtname"
                                                                                  "wwname"
                                                                                  1))
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   "wwtname"
                                                                                   +
                                                                                   RL)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     "vvtname"
                                                                                     +
                                                                                     RL)
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       "vvname"
                                                                                       +
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REPLACE
                                                                                         "wwname"
                                                                                         +
                                                                                         RL)
                                                                                        (("2"
                                                                                          (REWRITE
                                                                                           "vect2_add")
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "vect2_sub")
                                                                                            (("2"
                                                                                              (REWRITE
                                                                                               "vect2_add")
                                                                                              (("2"
                                                                                                (REWRITE
                                                                                                 "vect2_add")
                                                                                                (("2"
                                                                                                  (REWRITE
                                                                                                   "vect2_scal")
                                                                                                  (("2"
                                                                                                    (REWRITE
                                                                                                     "vect2_scal")
                                                                                                    (("2"
                                                                                                      (HIDE-ALL-BUT
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (GRIND)
                                                                                                        NIL)))))))))))))))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (REPLACE "vvname" +
                                                                     RL)
                                                            (("2"
                                                              (REPLACE "wwname"
                                                                       + RL)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE
                                                                   (2 3 4 5))
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     ("newttt"
                                                                      "newtomtt"
                                                                      1))
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL)))))))))))))))))))))))))))))))))))))
                                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                                  (("2"
                                    (INST - "(nnt!1*nnt!2)" "nnt!1 + nnt!2")
                                    (("1" (REPLACE "newtname")
                                      (("1" (PROPAX) NIL)))
                                     ("2" (ASSERT) NIL)))))))))))))
                         ("2" (REPLACE "newtname" + RL)
                          (("2" (REPLACE "ttname" + RL)
                            (("2" (HIDE-ALL-BUT (1 2))
                              (("2" (SPLIT 1)
                                (("1" (FIELD) NIL)
                                 ("2" (FIELD) NIL)))))))))))))))))
                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                  (("2" (INST - "nnt!2" "nnt!1 + nnt!2")
                    (("1" (REPLACE "ttname")
                      (("1" (ASSERT)
                        (("1" (REPLACE "ttname" + RL)
                          (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL)))))))))
                     ("2" (ASSERT) NIL)))))))))
             ("2" (ASSERT) NIL))))))))))
    NIL)
   NIL NIL)
  (|horizontal_conflict_sum_closed-2| |nil| 3467392944
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKOSIMP*)
        (("" (CASE "nnt!1 = 0 and nnt!2 = 0")
          (("1" (FLATTEN)
            (("1" (INST + "0")
              (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL)))))))))
           ("2" (NAME "tt" "nnt!2/(nnt!1 + nnt!2)")
            (("1" (LABEL "ttname" -1)
              (("1" (CASE "0<=tt AND tt<=1")
                (("1" (FLATTEN)
                  (("1" (NAME "newt" "(nnt!1*nnt!2)/(nnt!1 + nnt!2)")
                    (("1" (LABEL "newtname" -1)
                      (("1" (CASE "tt*nnt!1 = newt AND (1-tt)*nnt!2 = newt")
                        (("1" (FLATTEN)
                          (("1" (LABEL "newttt" -1)
                            (("1" (LABEL "newtomtt" -2)
                              (("1" (INST + "newt")
                                (("1" (NAME "VV" "s + nnt!1 * v")
                                  (("1" (LABEL "vvname" -1)
                                    (("1" (NAME "WW" "s + nnt!2 * w")
                                      (("1" (LABEL "wwname" -1)
                                        (("1" (NAME "VVt" "s+nnt!1*v")
                                          (("1" (LABEL "vvtname" -1)
                                            (("1" (NAME "WWt" "s+nnt!2*w")
                                              (("1" (LABEL "wwtname" -1)
                                                (("1" (REPLACE "wwname")
                                                  (("1" (REPLACE "vvname")
                                                    (("1"
                                                      (LEMMA
                                                       "horiz_dist_convex_scaf")
                                                      (("1"
                                                        (INST - "VVt"
                                                         "WWt-VVt")
                                                        (("1"
                                                          (CASE
                                                              "s + newt * (v + w) = tt*VV+(1-tt)*WW")
                                                          (("1"
                                                            (LABEL "vectfin"
                                                                   -1)
                                                            (("1"
                                                              (REPLACE
                                                               "vectfin")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "convex_wtd_av_lt")
                                                                  (("1"
                                                                    (INST - "0"
                                                                     "LAMBDA (ttt): horiz_dist_scaf(VVt)(ttt, WWt - VVt)"
                                                                     "0" "1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "horiz_dist_scaf"
                                                                         -1 1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "horiz_dist_scaf"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "VVt = VV AND VVt+(WWt-VVt) = WW")
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -
                                                                                     "tt")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "horiz_dist_scaf")
                                                                                        (("1"
                                                                                          (CASE-REPLACE
                                                                                           "VVt + (1 - tt) * (WWt - VVt) = tt * VV + (1 - tt) * WW")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE-ALL-BUT
                                                                                             (-1
                                                                                              -2
                                                                                              1))
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL)))))))))))))))
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 ("vvtname"
                                                                                  "vvname"
                                                                                  "wwtname"
                                                                                  "wwname"
                                                                                  1))
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   "wwtname"
                                                                                   +
                                                                                   RL)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     "vvtname"
                                                                                     +
                                                                                     RL)
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       "vvname"
                                                                                       +
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REPLACE
                                                                                         "wwname"
                                                                                         +
                                                                                         RL)
                                                                                        (("2"
                                                                                          (HIDE-ALL-BUT
                                                                                           1)
                                                                                          (("2"
                                                                                            (GRIND)
                                                                                            NIL)))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (REPLACE "vvname" +
                                                                     RL)
                                                            (("2"
                                                              (REPLACE "wwname"
                                                                       + RL)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE
                                                                   (2 3 4 5))
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     ("newttt"
                                                                      "newtomtt"
                                                                      1))
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL)))))))))))))))))))))))))))))))))))))
                                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                                  (("2"
                                    (INST - "(nnt!1*nnt!2)" "nnt!1 + nnt!2")
                                    (("1" (REPLACE "newtname")
                                      (("1" (PROPAX) NIL)))
                                     ("2" (ASSERT) NIL)))))))))))))
                         ("2" (REPLACE "newtname" + RL)
                          (("2" (REPLACE "ttname" + RL)
                            (("2" (HIDE-ALL-BUT (1 2))
                              (("2" (SPLIT 1)
                                (("1" (FIELD) NIL)
                                 ("2" (FIELD) NIL)))))))))))))))))
                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                  (("2" (INST - "nnt!2" "nnt!1 + nnt!2")
                    (("1" (REPLACE "ttname")
                      (("1" (ASSERT)
                        (("1" (REPLACE "ttname" + RL)
                          (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL)))))))))
                     ("2" (ASSERT) NIL)))))))))
             ("2" (ASSERT) NIL))))))))))
    NIL)
   NIL NIL)
  (|horizontal_conflict_sum_closed-1| |nil| 3467392723
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKOSIMP*)
        (("" (CASE "nnt!1 = 0 and nnt!2 = 0")
          (("1" (FLATTEN)
            (("1" (INST + "0")
              (("1" (ASSERT) (("1" (REPLACE -1) (("1" (ASSERT) NIL)))))))))
           ("2" (NAME "tt" "nnt!2/(nnt!1 + nnt!2)")
            (("1" (LABEL "ttname" -1)
              (("1" (CASE "0<=tt AND tt<=1")
                (("1" (FLATTEN)
                  (("1" (NAME "newt" "(nnt!1*nnt!2)/(nnt!1 + nnt!2)")
                    (("1" (LABEL "newtname" -1)
                      (("1" (CASE "tt*nnt!1 = newt AND (1-tt)*nnt!2 = newt")
                        (("1" (FLATTEN)
                          (("1" (LABEL "newttt" -1)
                            (("1" (LABEL "newtomtt" -2)
                              (("1" (INST + "newt")
                                (("1" (NAME "VV" "vect2(s) + nnt!1 * vect2(v)")
                                  (("1" (LABEL "vvname" -1)
                                    (("1"
                                      (NAME "WW" "vect2(s) + nnt!2 * vect2(w)")
                                      (("1" (LABEL "wwname" -1)
                                        (("1" (NAME "VVt" "s+nnt!1*v")
                                          (("1" (LABEL "vvtname" -1)
                                            (("1" (NAME "WWt" "s+nnt!2*w")
                                              (("1" (LABEL "wwtname" -1)
                                                (("1" (REPLACE "wwname")
                                                  (("1" (REPLACE "vvname")
                                                    (("1"
                                                      (LEMMA
                                                       "horiz_dist_convex_scaf")
                                                      (("1"
                                                        (INST - "VVt"
                                                         "WWt-VVt")
                                                        (("1"
                                                          (CASE
                                                              "vect2(s) + newt * vect2(v + w) = tt*VV+(1-tt)*WW")
                                                          (("1"
                                                            (LABEL "vectfin"
                                                                   -1)
                                                            (("1"
                                                              (REPLACE
                                                               "vectfin")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (LEMMA
                                                                   "convex_wtd_av_lt")
                                                                  (("1"
                                                                    (INST - "0"
                                                                     "LAMBDA (ttt): horiz_dist_scaf(VVt)(ttt, WWt - VVt)"
                                                                     "0" "1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "horiz_dist_scaf"
                                                                         -1 1)
                                                                        (("1"
                                                                          (EXPAND
                                                                           "horiz_dist_scaf"
                                                                           -1
                                                                           1)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (CASE
                                                                                  "vect2(VVt) = VV AND vect2(VVt)+vect2(WWt-VVt) = WW")
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (INST
                                                                                     -
                                                                                     "tt")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "horiz_dist_scaf")
                                                                                        (("1"
                                                                                          (CASE-REPLACE
                                                                                           "vect2(VVt) + (1 - tt) * vect2(WWt - VVt) = tt * VV + (1 - tt) * WW")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (HIDE-ALL-BUT
                                                                                             (-1
                                                                                              -2
                                                                                              1))
                                                                                            (("2"
                                                                                              (GRIND)
                                                                                              NIL)))))))))))))))
                                                                               ("2"
                                                                                (HIDE-ALL-BUT
                                                                                 ("vvtname"
                                                                                  "vvname"
                                                                                  "wwtname"
                                                                                  "wwname"
                                                                                  1))
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   "wwtname"
                                                                                   +
                                                                                   RL)
                                                                                  (("2"
                                                                                    (REPLACE
                                                                                     "vvtname"
                                                                                     +
                                                                                     RL)
                                                                                    (("2"
                                                                                      (REPLACE
                                                                                       "vvname"
                                                                                       +
                                                                                       RL)
                                                                                      (("2"
                                                                                        (REPLACE
                                                                                         "wwname"
                                                                                         +
                                                                                         RL)
                                                                                        (("2"
                                                                                          (REWRITE
                                                                                           "vect2_add")
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "vect2_sub")
                                                                                            (("2"
                                                                                              (REWRITE
                                                                                               "vect2_add")
                                                                                              (("2"
                                                                                                (REWRITE
                                                                                                 "vect2_add")
                                                                                                (("2"
                                                                                                  (REWRITE
                                                                                                   "vect2_scal")
                                                                                                  (("2"
                                                                                                    (REWRITE
                                                                                                     "vect2_scal")
                                                                                                    (("2"
                                                                                                      (HIDE-ALL-BUT
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (GRIND)
                                                                                                        NIL)))))))))))))))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (REPLACE "vvname" +
                                                                     RL)
                                                            (("2"
                                                              (REPLACE "wwname"
                                                                       + RL)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE
                                                                   (2 3 4 5))
                                                                  (("2"
                                                                    (HIDE-ALL-BUT
                                                                     ("newttt"
                                                                      "newtomtt"
                                                                      1))
                                                                    (("2"
                                                                      (GRIND)
                                                                      NIL)))))))))))))))))))))))))))))))))))))
                                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                                  (("2"
                                    (INST - "(nnt!1*nnt!2)" "nnt!1 + nnt!2")
                                    (("1" (REPLACE "newtname")
                                      (("1" (PROPAX) NIL)))
                                     ("2" (ASSERT) NIL)))))))))))))
                         ("2" (REPLACE "newtname" + RL)
                          (("2" (REPLACE "ttname" + RL)
                            (("2" (HIDE-ALL-BUT (1 2))
                              (("2" (SPLIT 1)
                                (("1" (FIELD) NIL)
                                 ("2" (FIELD) NIL)))))))))))))))))
                 ("2" (LEMMA "nnreal_div_posreal_is_nnreal")
                  (("2" (INST - "nnt!2" "nnt!1 + nnt!2")
                    (("1" (REPLACE "ttname")
                      (("1" (ASSERT)
                        (("1" (REPLACE "ttname" + RL)
                          (("1" (CROSS-MULT 1) (("1" (ASSERT) NIL)))))))))
                     ("2" (ASSERT) NIL)))))))))
             ("2" (ASSERT) NIL))))))))))
    NIL)
   NIL NIL))
 (|horizontal_conflict_neg| 0
  (|horizontal_conflict_neg-1| |nil| 3451899914
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKEEP -1)
        (("" (INST? 1)
          (("" (REWRITE "sqv_add")
            (("" (REWRITE "sqv_add")
              (("" (REWRITE "sqv_scal")
                (("" (REWRITE "sqv_scal")
                  (("" (REWRITE "neg_dot_neg") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|neg_dot_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|horizontal_conflict_symm| 0
  (|horizontal_conflict_symm-1| |nil| 3451899566
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (LEMMA "horizontal_conflict_neg")
          (("1" (INST -1 "s" "v") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (LEMMA "horizontal_conflict_neg")
          (("2" (INST -1 "-s" "-v") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|neg_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|horizontal_conflict_scal| 0
  (|horizontal_conflict_scal-2| |nil| 3443393415
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SPLIT 1)
        (("1" (FLATTEN)
          (("1" (SKEEP -1)
            (("1" (INST 1 "nnt/pt") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (SKEEP -1)
            (("2" (REWRITE "scal_assoc") (("2" (INST? 1) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|scal_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL)
  (|horizontal_conflict_scal-1| |nil| 3443392437
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?")
      (("" (SKEEP -1) (("" (INST 1 "nnt/pk") (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|scal_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|horizontal_conflict_ever| 0
  (|horizontal_conflict_ever-1| |nil| 3431265661
   ("" (SKEEP)
    (("" (EXPAND* "horizontal_conflict_ever?" "horizontal_conflict?")
      (("" (SKEEP -1) (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|horizontal_conflict_ever_scal| 0
  (|horizontal_conflict_ever_scal-1| |nil| 3443389923
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict_ever?")
      (("" (SPLIT 1)
        (("1" (FLATTEN)
          (("1" (SKEEP -1)
            (("1" (INST 1 "t/nzk") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (SKEEP -1)
            (("2" (REWRITE "scal_assoc") (("2" (INST? 1) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|scal_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|Delta_zero_eq_0| 0
  (|Delta_zero_eq_0-1| |nil| 3468062263
   ("" (SKEEP)
    (("" (EXPAND "Delta")
      (("" (REWRITE "det_zero_right") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|det_zero_right| FORMULA-DECL NIL |det_2D| |vectors|))
   SHOSTAK))
 (|Delta_equiv| 0
  (|Delta_equiv-1| |nil| 3637324010 ("" (GRIND) NIL NIL)
   ((|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|det| CONST-DECL "real" |det_2D| |vectors|))
   SHOSTAK))
 (|Delta_scal| 0
  (|Delta_scal-1| |nil| 3467395830
   ("" (SKEEP)
    (("" (EXPAND "Delta")
      (("" (REWRITE "sqv_scal")
        (("" (REWRITE "det_scal_right")
          (("" (REWRITE "sq_times") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|det_scal_right| FORMULA-DECL NIL |det_2D| |vectors|)
    (|sq_times| FORMULA-DECL NIL |sq| |reals|)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|Delta_eq| 0
  (|Delta_eq-1| |nil| 3451317378
   ("" (SKEEP)
    (("" (EXPAND "Delta")
      (("" (REWRITE "det_add_left")
        (("" (REWRITE "det_scal_left") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|det_scal_left| FORMULA-DECL NIL |det_2D| |vectors|)
    (|det_eq_0| FORMULA-DECL NIL |det_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|det_add_left| FORMULA-DECL NIL |det_2D| |vectors|))
   SHOSTAK))
 (|Delta_symm| 0
  (|Delta_symm-1| |nil| 3417876952
   ("" (SKEEP)
    (("" (EXPAND "Delta")
      (("" (REWRITE "det_symm") (("" (REWRITE "sqv_neg") NIL NIL)) NIL)) NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|neg_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|det_symm| FORMULA-DECL NIL |det_2D| |vectors|))
   SHOSTAK))
 (|Delta_discr2b| 0
  (|Delta_discr2b-1| |nil| 3430227627
   ("" (SKEEP)
    (("" (BETA)
      (("" (EXPAND* "Delta" "discr2b")
        (("" (REWRITE "sq_det") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq_det| FORMULA-DECL NIL |det_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|))
   SHOSTAK))
 (|Delta_gt_0_nzv| 0
  (|Delta_gt_0_nzv-1| |nil| 3431077225
   ("" (SKEEP)
    (("" (REPLACES -2) (("" (EXPAND "Delta") (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|sqv_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   SHOSTAK))
 (|ground_speed| 0
  (|ground_speed-1| |nil| 3418048147
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "horizontal_conflict_ever?")
      (("" (REPLACES -3) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|scal_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   SHOSTAK))
 (|Delta_gt_0| 0
  (|Delta_gt_0-2| |nil| 3420987182
   ("" (SKEEP)
    (("" (CASE "v/=zero")
      (("1" (ASSERT)
        (("1" (HIDE -2)
          (("1" (LEMMA "Delta_discr2b")
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACES -1)
                  (("1" (REWRITE "discr2b_discr_gt_0")
                    (("1" (EXPAND "horizontal_conflict_ever?")
                      (("1" (SKEEP -2)
                        (("1" (LEMMA "a_gt_0_discr_gt_0")
                          (("1" (INST?)
                            (("1" (INST -1 "t")
                              (("1" (ASSERT)
                                (("1" (REWRITE "sqv_add")
                                  (("1" (REWRITE "sqv_scal")
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "v_neq_zero")
                                        (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (LEMMA "ground_speed")
          (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|a_gt_0_discr_gt_0| FORMULA-DECL NIL |quadratic| |reals|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|v_neq_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|discr2b_discr_gt_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   NIL)
  (|Delta_gt_0-1| |nil| 3417877237
   ("" (SKEEP)
    (("" (EXPAND "Delta_gt_0?")
      (("" (FLATTEN)
        (("" (EXPAND "Delta")
          (("" (SKOLEM -1 "T")
            (("" (LEMMA "a_gt_0_discr_gt_0")
              (("" (INST - "sqv(v)" "2*(s*v)" "s*s-sq(D)" "T")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|Delta_gt_0_on_D| 0
  (|Delta_gt_0_on_D-1| |nil| 3466503266
   ("" (SKEEP)
    (("" (EXPAND "Delta")
      (("" (EXPAND "det")
        (("" (REPLACE -1 + RL)
          (("" (LEMMA "cauchy_schwarz")
            (("" (INST - "s" "perpR(v)")
              (("" (LEMMA "sqv_perpR")
                (("" (INST - "v")
                  (("" (REPLACE -1)
                    (("" (HIDE -1)
                      (("" (CASE-REPLACE "s`x * v`y - s`y * v`x = s*perpR(v)")
                        (("1" (HIDE -1)
                          (("1" (LEMMA "parallel_dot_1")
                            (("1" (EXPAND "^")
                              (("1" (ASSERT)
                                (("1" (CASE "not (s = zero or v = zero)")
                                  (("1" (FLATTEN)
                                    (("1" (INST - "s" "perpR(v)")
                                      (("1" (REWRITE "abs_mult")
                                        (("1" (REWRITE "abs_mult")
                                          (("1"
                                            (LEMMA
                                             "posreal_div_posreal_is_posreal")
                                            (("1" (INST-CP - "1" "norm(s)")
                                              (("1"
                                                (INST - "1" "norm(perpR(v))")
                                                (("1" (EXPAND "abs" -3 2)
                                                  (("1" (ASSERT)
                                                    (("1" (EXPAND "abs" -3 2)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (CASE
                                                              "abs((s * perpR(v))) = norm(s)*norm(perpR(v))")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND
                                                               "parallel?")
                                                              (("1" (SKOSIMP*)
                                                                (("1"
                                                                  (HIDE-ALL-BUT
                                                                   (-4 3))
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (CASE
                                                                "sq(abs((s * perpR(v)))) = sq(norm(s) * norm(perpR(v)))")
                                                            (("1"
                                                              (LEMMA "sq_eq")
                                                              (("1" (INST?)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (REWRITE
                                                               "sq_times")
                                                              (("2"
                                                                (REWRITE
                                                                 "sq_abs")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (CASE
                                                                        "forall (w: Vect2): sq(norm(w)) = sqv(w)")
                                                                    (("1"
                                                                      (INST-CP
                                                                       - "s")
                                                                      (("1"
                                                                        (INST -
                                                                         "perpR(v)")
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1)
                                                                          (("1"
                                                                            (REPLACE
                                                                             -2)
                                                                            (("1"
                                                                              (LEMMA
                                                                               "sqv_perpR")
                                                                              (("1"
                                                                                (INST
                                                                                 -
                                                                                 "v")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKEEP)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "sqrt_sqv_norm")
                                                                        (("2"
                                                                          (INST
                                                                           -
                                                                           "w")
                                                                          (("2"
                                                                            (CASE
                                                                                "sq(sqrt(sqv(w))) = sq(norm(w))")
                                                                            (("1"
                                                                              (LEMMA
                                                                               "sq_sqrt")
                                                                              (("1"
                                                                                (INST
                                                                                 -
                                                                                 "sqv(w)")
                                                                                (("1"
                                                                                  (GROUND)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (TYPEPRED "norm(perpR(v))")
                                                  (("2" (LEMMA "norm_eq_0")
                                                    (("2" (INST?)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (HIDE-ALL-BUT (-1 3))
                                                          (("2"
                                                            (EXPAND "perpR")
                                                            (("2"
                                                              (EXPAND "zero")
                                                              (("2" (FLATTEN)
                                                                (("2"
                                                                  (NEG-FORMULA
                                                                   -2)
                                                                  (("2" (GRIND)
                                                                    (("2"
                                                                      (APPLY-EXTENSIONALITY)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (LEMMA "norm_eq_0")
                                                (("2" (INST?)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT (1 3))
                                        (("2" (EXPAND "perpR")
                                          (("2" (EXPAND "zero")
                                            (("2" (FLATTEN)
                                              (("2" (APPLY-EXTENSIONALITY) NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT (-1 1))
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|perpR| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|norm_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|parallel?| CONST-DECL "bool" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sq_times| FORMULA-DECL NIL |sq| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|parallel_dot_1| FORMULA-DECL NIL |parallel_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv_perpR| FORMULA-DECL NIL |perpendicular_2D| |vectors|)
    (|cauchy_schwarz| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|det| CONST-DECL "real" |det_2D| |vectors|))
   SHOSTAK))
 (|Delta_eq_0_dot_on_D| 0
  (|Delta_eq_0_dot_on_D-1| |nil| 3471094666
   ("" (SKEEP) (("" (EXPAND "Delta") (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|))
   SHOSTAK))
 (|Delta_ge_0| 0
  (|Delta_ge_0-4| "" 3790107672
   ("" (SKEEP)
    (("" (LEMMA "Delta_discr2b")
      (("" (INST - "nzv" "s")
        (("" (ASSERT)
          (("" (REPLACE -1)
            (("" (HIDE -1)
              (("" (LEMMA "discr2b_discr")
                (("" (INST - "sqv(nzv)" "s * nzv" "sqv(s) - sq(D)")
                  (("" (REPLACE -1)
                    (("" (HIDE -1)
                      (("" (PROP)
                        (("1" (MULT-BY -1 "4")
                          (("1" (ASSERT)
                            (("1" (LEMMA "solvable_quadratic")
                              (("1"
                                (INST - "sqv(nzv)" "2 * (s * nzv)"
                                 "sqv(s) - sq(D)")
                                (("1" (ASSERT)
                                  (("1" (SKOSIMP*)
                                    (("1" (INST + "x!1")
                                      (("1" (HIDE -2) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "discr_ge_0")
                          (("2" (SKOSIMP*)
                            (("2"
                              (INST - "sqv(nzv)" "2 * (s * nzv)"
                               "sqv(s) - sq(D)" "t!1")
                              (("2" (ASSERT)
                                (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|Delta_ge_0-3| |nil| 3463322733
   (";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0" (SKEEP)
    ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
      (LEMMA "Delta_discr2b")
      ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
        (INST - "nzv" "s")
        ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0" (ASSERT)
          ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
            (REPLACE -1)
            ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
              (HIDE -1)
              ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                (LEMMA "discr2b_discr")
                ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                  (INST - "sqv(nzv)" "s * nzv" "sqv(s) - sq(D)")
                  ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                    (REPLACE -1)
                    ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                      (HIDE -1)
                      ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                        (PROP)
                        (("1" (MULT-BY -1 "4")
                          (("1" (ASSERT)
                            (("1" (LEMMA "solvable_quadratic")
                              (("1"
                                (INST - "sqv(nzv)" "2 * (s * nzv)"
                                 "sqv(s) - sq(D)")
                                (("1" (ASSERT)
                                  (("1" (SKOSIMP*)
                                    (("1" (INST + "x!1")
                                      (("1" (HIDE -2)
                                        (("1" (GRIND) NIL)))))))))))))))))
                         ("2" (LEMMA "discr_ge_0")
                          (("2" (SKOSIMP*)
                            (("2"
                              (INST - "sqv(nzv)" "2 * (s * nzv)"
                               "sqv(s) - sq(D)" "t!1")
                              (("2" (ASSERT)
                                (("2" (HIDE 2)
                                  (("2" (GRIND)
                                    NIL))))))))))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   ((|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr_ge_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|solvable_quadratic| FORMULA-DECL NIL |quadratic| |reals|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|discr2b_discr| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL)
  (|Delta_ge_0-2| |nil| 3463322706
   (";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0" (SKEEP)
    ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
      (LEMMA "Delta_discr2b")
      ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
        (INST - "v" "s")
        ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0" (ASSERT)
          ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
            (REPLACE -1)
            ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
              (HIDE -1)
              ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                (LEMMA "discr2b_discr")
                ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                  (INST - "sqv(v)" "s * v" "sqv(s) - sq(D)")
                  ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                    (REPLACE -1)
                    ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                      (HIDE -1)
                      ((";;; Proof Delta_ge_0-1 for formula horizontal.Delta_ge_0"
                        (PROP)
                        (("1" (MULT-BY -1 "4")
                          (("1" (ASSERT)
                            (("1" (LEMMA "solvable_quadratic")
                              (("1"
                                (INST - "sqv(v)" "2 * (s * v)"
                                 "sqv(s) - sq(D)")
                                (("1" (ASSERT)
                                  (("1" (SKOSIMP*)
                                    (("1" (INST + "x!1")
                                      (("1" (HIDE -2)
                                        (("1" (GRIND) NIL)))))))))))))))))
                         ("2" (LEMMA "discr_ge_0")
                          (("2" (SKOSIMP*)
                            (("2"
                              (INST - "sqv(v)" "2 * (s * v)" "sqv(s) - sq(D)"
                               "t!1")
                              (("2" (ASSERT)
                                (("2" (HIDE 2)
                                  (("2" (GRIND)
                                    NIL))))))))))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   NIL NIL)
  (|Delta_ge_0-1| |nil| 3463319539
   ("" (SKEEP)
    (("" (LEMMA "Delta_discr2b")
      (("" (INST - "nzv" "s")
        (("" (ASSERT)
          (("" (REPLACE -1)
            (("" (HIDE -1)
              (("" (LEMMA "discr2b_discr")
                (("" (INST - "sqv(nzv)" "s * nzv" "sqv(s) - sq(D)")
                  (("" (REPLACE -1)
                    (("" (HIDE -1)
                      (("" (PROP)
                        (("1" (MULT-BY -1 "4")
                          (("1" (ASSERT)
                            (("1" (LEMMA "solvable_quadratic")
                              (("1"
                                (INST - "sqv(nzv)" "2 * (s * nzv)"
                                 "sqv(s) - sq(D)")
                                (("1" (ASSERT)
                                  (("1" (SKOSIMP*)
                                    (("1" (INST + "x!1")
                                      (("1" (HIDE -2) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "discr_ge_0")
                          (("2" (SKOSIMP*)
                            (("2"
                              (INST - "sqv(nzv)" "2 * (s * nzv)"
                               "sqv(s) - sq(D)" "t!1")
                              (("2" (ASSERT)
                                (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr_ge_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|solvable_quadratic| FORMULA-DECL NIL |quadratic| |reals|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|discr2b_discr| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|Delta_ge_0_2| 0
  (|Delta_ge_0_2-1| |nil| 3463322277
   ("" (SKEEP)
    (("" (PROP)
      (("1" (LEMMA "Delta_ge_0")
        (("1" (INST?)
          (("1" (ASSERT)
            (("1" (SKOSIMP*)
              (("1" (INST + "t!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKOSIMP*)
        (("2" (CASE "sqv(s + t!1*nzv) < sq(D)")
          (("1" (LEMMA "Delta_gt_0")
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (EXPAND "horizontal_conflict_ever?")
                  (("1" (INST + "t!1") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (LEMMA "Delta_ge_0")
              (("2" (INST?)
                (("2" (ASSERT)
                  (("2" (INST + "t!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|))
   SHOSTAK))
 (|Delta_eq_0_eq_tca| 0
  (|Delta_eq_0_eq_tca-1| |nil| 3571393692
   ("" (SKEEP)
    (("" (LABEL "onDs" -2)
      (("" (LEMMA "Delta_gt_0")
        (("" (INST - "s" "nzv")
          (("" (ASSERT)
            (("" (EXPAND "horizontal_conflict_ever?")
              (("" (CASE "t = horizontal_tca(s,nzv)")
                (("1" (ASSERT)
                  (("1" (REPLACES -1)
                    (("1" (HIDE-ALL-BUT 2)
                      (("1" (GRIND) (("1" (FIELD) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (HIDE 3)
                    (("2" (NAME "tca2" "horizontal_tca(s,nzv)")
                      (("2" (INST + "tca2")
                        (("2" (ASSERT)
                          (("2" (NAME "aa" "sqv(nzv)")
                            (("2" (NAME "bb" "2*(s*nzv)")
                              (("2" (NAME "cc" "sqv(s)")
                                (("2" (NAME "ff" "quadratic(aa,bb,cc)")
                                  (("2" (LEMMA "quad_min_mono_inc")
                                    (("2" (LEMMA "sqv_eq_0")
                                      (("2" (INST - "nzv")
                                        (("2" (FLATTEN)
                                          (("2" (HIDE -2)
                                            (("2" (SPLIT -)
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (CASE "NOT aa > 0")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (ASSERT)
                                                  (("2"
                                                    (INST - "aa" "bb" "cc" "t"
                                                     "tca2")
                                                    (("2"
                                                      (CASE
                                                          "tca2 = -bb/(2*aa)")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (REPLACE -1 :DIR RL)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (LEMMA
                                                               "quad_min_mono_dec")
                                                              (("1"
                                                                (INST - "aa"
                                                                 "bb" "cc" "t"
                                                                 "tca2")
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             :DIR
                                                                             RL)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (CASE
                                                                            "ff(t) = sq(D)")
                                                                        (("1"
                                                                          (GROUND)
                                                                          (("1"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              +))
                                                                            (("1"
                                                                              (HIDE
                                                                               2)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "ff")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "aa")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "bb")
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "cc")
                                                                                      (("1"
                                                                                        (GRIND)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (HIDE-ALL-BUT
                                                                             (-1
                                                                              -2
                                                                              -3
                                                                              +))
                                                                            (("2"
                                                                              (HIDE
                                                                               -3)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "ff")
                                                                                (("2"
                                                                                  (HIDE
                                                                                   3)
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "aa")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "bb")
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "cc")
                                                                                        (("2"
                                                                                          (GRIND)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (EXPAND
                                                                             "aa")
                                                                            (("3"
                                                                              (EXPAND
                                                                               "bb")
                                                                              (("3"
                                                                                (HIDE-ALL-BUT
                                                                                 (-1
                                                                                  -2
                                                                                  +))
                                                                                (("3"
                                                                                  (HIDE
                                                                                   3)
                                                                                  (("3"
                                                                                    (EXPAND
                                                                                     "ff")
                                                                                    (("3"
                                                                                      (EXPAND
                                                                                       "aa")
                                                                                      (("3"
                                                                                        (EXPAND
                                                                                         "bb")
                                                                                        (("3"
                                                                                          (EXPAND
                                                                                           "cc")
                                                                                          (("3"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE-ALL-BUT
                                                                           ("onDs"
                                                                            1))
                                                                          (("2"
                                                                            (EXPAND
                                                                             "ff")
                                                                            (("2"
                                                                              (EXPAND
                                                                               "aa")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "bb")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "cc")
                                                                                  (("2"
                                                                                    (GRIND)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (CROSS-MULT 1)
                                                        (("2" (EXPAND "tca2" 1)
                                                          (("2"
                                                            (EXPAND
                                                             "horizontal_tca"
                                                             1)
                                                            (("2"
                                                              (CROSS-MULT 1)
                                                              NIL NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|quadratic| CONST-DECL "real" |quadratic| |reals|)
    (|sqv_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|quad_min_mono_dec| FORMULA-DECL NIL |quad_minmax| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|quad_min_mono_inc| FORMULA-DECL NIL |quad_minmax| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   SHOSTAK))
 (|sdotv_lt_0| 0
  (|sdotv_lt_0-1| |nil| 3429963031
   ("" (SKEEP :PREDS? T)
    (("" (LEMMA "horizontal_conflict_ever")
      (("" (INST? -1)
        (("" (ASSERT)
          (("" (LEMMA "Delta_gt_0")
            (("" (INST?)
              (("" (ASSERT)
                (("" (LEMMA "Delta_gt_0_nzv")
                  (("" (INST?)
                    (("" (ASSERT)
                      (("" (LEMMA "Delta_discr2b")
                        (("" (INST?)
                          (("" (BETA)
                            (("" (REPLACES -1)
                              (("" (REWRITE "discr2b_discr_gt_0")
                                (("" (EXPAND "horizontal_conflict?")
                                  (("" (SKEEP -5)
                                    (("" (REWRITE "sqv_add")
                                      (("" (REWRITE "sqv_scal")
                                        (("" (NAME-REPLACE "a" "sqv(v)")
                                          (("" (NAME-REPLACE "b" "sp*v")
                                            (("" (LEMMA "quadratic_lt_0")
                                              (("" (INST?)
                                                (("" (INST -1 "nnt")
                                                  (("" (ASSERT)
                                                    (("" (FLATTEN)
                                                      (("" (HIDE -7)
                                                        ((""
                                                          (MOVE-TERMS -6 R 1)
                                                          ((""
                                                            (NAME-REPLACE "c"
                                                             "sqv(sp) - sq(D)")
                                                            (("" (CASE "b=0")
                                                              (("1"
                                                                (LEMMA
                                                                 "roots_eq_0")
                                                                (("1" (INST?)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (LEMMA
                                                                 "root_gt_0")
                                                                (("2"
                                                                  (INST -1 "a"
                                                                   "2*b" "c"
                                                                   "1")
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (REWRITE
                                                                       "sign_eq_1")
                                                                      (("2"
                                                                        (CASE
                                                                            "c=0")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (MULT-BY
                                                                             3
                                                                             "2*a")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (CASE
                                                                                "a * c > 0")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (MULT-BY
                                                                                 -3
                                                                                 "2*b")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (MULT-CASES
                                                                               1)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|quadratic_lt_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|roots_eq_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|sign_eq_1| FORMULA-DECL NIL |sign| |reals|)
    (|root_gt_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|discr2b_discr_gt_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|))
   NIL))
 (|Theta_D_TCC1| 0
  (|Theta_D_TCC1-1| |nil| 3431346983
   ("" (SKOSIMP* :PREDS? T)
    (("" (LEMMA "Delta_discr2b") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|Delta_discr2b| FORMULA-DECL NIL |horizontal| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL))
   NIL
   (|Theta_D| SUBTYPE "horizontal.c"
    "{c: reals.real | reals.>=(quadratic_2b.discr2b(horizontal.a, horizontal.b, c), 0)}")))
 (|Theta_D_on_D| 0
  (|Theta_D_on_D-2| |nil| 3565275422
   ("" (SKEEP)
    (("" (SKOLETIN 1 :POSTFIX "t")
      (("" (EXPAND "Theta_D")
        (("" (REWRITE "sqv_add")
          (("" (REWRITE "sqv_scal")
            (("" (MOVE-TERMS 1 L 2)
              (("" (LEMMA "Delta_discr2b")
                (("" (INST?)
                  (("" (SKOLETIN* -1 :OLD? T)
                    (("" (REPLACES -2)
                      (("" (LEMMA "quad2b_eq_0")
                        (("" (INST?)
                          (("" (INST -1 "tt")
                            (("" (EXPAND "quadratic")
                              (("" (ASSERT)
                                (("" (ASSERT)
                                  (("" (INST 1 "eps") (("" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|quadratic| CONST-DECL "real" |quadratic| |reals|)
    (|quad2b_eq_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL)
  (|Theta_D_on_D-1| |nil| 3471112100
   ("" (SKEEP)
    (("" (SKOLETIN 1 :POSTFIX "t")
      (("" (EXPAND "Theta_D")
        (("" (REWRITE "sqv_add")
          (("" (REWRITE "sqv_scal")
            (("" (MOVE-TERMS 1 L 2)
              (("" (LEMMA "Delta_discr2b")
                (("" (INST?)
                  (("" (SKOLETIN* -1)
                    (("" (REPLACES -2)
                      (("" (LEMMA "quad2b_eq_0")
                        (("" (INST?)
                          (("" (INST -1 "tt")
                            (("" (EXPAND "quadratic")
                              (("" (ASSERT)
                                (("" (INST 1 "eps") (("" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|quadratic| CONST-DECL "real" |quadratic| |reals|)
    (|quad2b_eq_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_unique_eps| 0
  (|Theta_D_unique_eps-1| |nil| 3463581075
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (ASSERT)
            (("" (LEMMA "quad2b_eq_0")
              (("" (INST?)
                (("" (EXPAND "quadratic")
                  (("" (REWRITE "sqv_add")
                    (("" (REWRITE "sqv_scal") (("" (GROUND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|quad2b_eq_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|quadratic| CONST-DECL "real" |quadratic| |reals|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_unique| 0
  (|Theta_D_unique-1| |nil| 3463314173
   ("" (SKEEP)
    (("" (LEMMA "Theta_D_unique_eps")
      (("" (INST?)
        (("" (ASSERT)
          (("" (REPLACES -1)
            (("" (GROUND)
              (("1" (SKEEP -1 :PREDS? T) (("1" (GROUND) NIL NIL)) NIL)
               ("2" (INST? 1) NIL NIL) ("3" (INST? 1) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_symm_TCC1| 0
  (|Theta_D_symm_TCC1-1| |nil| 3431347102
   ("" (SKEEP) (("" (REWRITE "Delta_symm") NIL NIL)) NIL)
   ((|Delta_symm| FORMULA-DECL NIL |horizontal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL
   (|Theta_D_symm| SUBTYPE "(vectors_2D.-)(horizontal.nzv)"
    "{nzv | reals.>=(horizontal.Delta((vectors_2D.-)(horizontal.s), horizontal.nzv), 0)}")))
 (|Theta_D_symm| 0
  (|Theta_D_symm-1| |nil| 3431347102
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (REWRITE "neg_dot_neg")
        (("" (REWRITE "sqv_neg") (("" (REWRITE "sqv_neg") NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|neg_dot_neg| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_scal_TCC1| 0
  (|Theta_D_scal_TCC1-1| |nil| 3467396128
   ("" (SKEEP)
    (("" (LEMMA "Delta_scal")
      (("" (INST - "s" "nzk" "nzv")
        (("" (LEMMA NNREAL_TIMES_NNREAL_IS_NNREAL)
          (("" (INST - "sq(nzk)" "Delta(s,nzv)") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Delta_scal| FORMULA-DECL NIL |horizontal| NIL)
    (|nnreal_times_nnreal_is_nnreal| JUDGEMENT-TCC NIL |real_types| NIL)
    (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|s| SKOLEM-CONST-DECL "Vect2" |horizontal| NIL)
    (|nzv| SKOLEM-CONST-DECL "Nz_vect2" |horizontal| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|Theta_D_scal| SUBTYPE "vectors_2D.*(horizontal.nzk, horizontal.nzv)"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|Theta_D_scal| 0
  (|Theta_D_scal-1| |nil| 3467396128
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (EXPAND "root2b")
        (("" (EXPAND "discr2b")
          (("" (LEMMA "dot_comm")
            (("" (LABEL "dc" -1)
              (("" (INST-CP -1 "s" "nzk*nzv")
                (("" (REPLACE -2)
                  (("" (LABEL "cdlem" -1)
                    (("" (LEMMA "sq_times")
                      (("" (LABEL "sqt" -1)
                        (("" (INST-CP -1 "nzk" "nzv*s")
                          (("" (LABEL "sqtlem" -1)
                            (("" (INST "cdlem" "s" "nzv")
                              (("" (LEMMA "dot_assoc")
                                (("" (LABEL "assoc" -1)
                                  (("" (INST - "nzk" "nzv" "s")
                                    (("" (REPLACE -1 + RL)
                                      (("" (REPLACE "sqt")
                                        (("" (REPLACE "cdlem" + RL)
                                          (("" (REWRITE "sqv_scal")
                                            ((""
                                              (CASE-REPLACE
                                               "sq(nzk) * sq(s * nzv) + sq(D) * (sq(nzk) * sqv(nzv)) -
                 sq(nzk) * sqv(nzv) * sqv(s) = sq(nzk)*(sq(s*nzv)+sq(D)*sqv(nzv)-sqv(nzv)*sqv(s))")
                                              (("1" (LEMMA "sqrt_times")
                                                (("1"
                                                  (INST - "sq(nzk)"
                                                   "sq(s*nzv)+sq(D)*sqv(nzv)-sqv(nzv)*sqv(s)")
                                                  (("1" (REPLACE -1)
                                                    (("1"
                                                      (CASE
                                                          "forall (x: nzreal): sqrt(sq(x)) = sign(x)*x")
                                                      (("1"
                                                        (LABEL "sqrtlem" -1)
                                                        (("1" (INST - "nzk")
                                                          (("1" (REPLACE -1)
                                                            (("1"
                                                              (HIDE-ALL-BUT 1)
                                                              (("1"
                                                                (CROSS-MULT 1)
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE-ALL-BUT 1)
                                                        (("2" (SKEEP)
                                                          (("2" (EXPAND "sign")
                                                            (("2" (LIFT-IF)
                                                              (("2"
                                                                (LEMMA
                                                                 "sqrt_sq")
                                                                (("2" (SPLIT)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (INST -
                                                                       "x")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (INST -
                                                                       "-x")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE 2)
                                                    (("2"
                                                      (LEMMA "Delta_discr2b")
                                                      (("2" (INST?)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "discr2b")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|sq_times| FORMULA-DECL NIL |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sign| CONST-DECL "Sign" |sign| |reals|)
    (|sqrt_sq_neg| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqrt_times| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|dot_comm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|))
   SHOSTAK))
 (|Theta_D_neg_nzv_TCC1| 0
  (|Theta_D_neg_nzv_TCC1-1| |nil| 3466420967 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL))
   NIL
   (|Theta_D_neg_nzv| SUBTYPE "(vectors_2D.-)(horizontal.nzv)"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|Theta_D_neg_nzv| 0
  (|Theta_D_neg_nzv-1| |nil| 3466420967
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (EXPAND "root2b")
        (("" (EXPAND "discr2b")
          (("" (LEMMA "sqv_neg")
            (("" (INST - "nzv")
              (("" (REPLACE -1)
                (("" (HIDE -1)
                  (("" (CASE-REPLACE "sq(s* -nzv) = sq(s*nzv)")
                    (("1" (CASE-REPLACE "-(s* -nzv) = s*nzv")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT 1) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|neg_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|sign_neg_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|))
   SHOSTAK))
 (|Theta_D_le| 0
  (|Theta_D_le-1| |nil| 3431347163
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (ASSERT)
            (("" (REPLACES -1)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "root2b_root")
                  (("" (REWRITE "discr2b_discr_ge_0")
                    (("" (LEMMA "root_le")
                      (("" (INST?)
                        (("" (ASSERT) (("" (REWRITE "sign_eq_1") NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|root_le| FORMULA-DECL NIL |quadratic| |reals|)
    (|sign_eq_1| FORMULA-DECL NIL |sign| |reals|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_lt_TCC1| 0
  (|Theta_D_lt_TCC1-1| |nil| 3431347262
   ("" (SKEEP)
    (("" (LEMMA "Delta_gt_0_nzv") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|Delta_gt_0_nzv| FORMULA-DECL NIL |horizontal| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|Theta_D_lt| SUBTYPE "horizontal.v"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|Theta_D_lt| 0
  (|Theta_D_lt-1| |nil| 3431347262
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_gt_0_nzv")
        (("" (INST?)
          (("" (ASSERT)
            (("" (LEMMA "Delta_discr2b")
              (("" (INST?)
                (("" (ASSERT)
                  (("" (REPLACES -1)
                    (("" (REWRITE "root2b_root")
                      (("" (REWRITE "root2b_root")
                        (("" (REWRITE "discr2b_discr_gt_0")
                          (("" (LEMMA "root_lt")
                            (("" (INST?)
                              (("" (ASSERT)
                                (("" (REWRITE "sign_eq_1") NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|discr2b_discr_gt_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|sign_eq_1| FORMULA-DECL NIL |sign| |reals|)
    (|root_lt| FORMULA-DECL NIL |quadratic| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_Delta_eq_0| 0
  (|Theta_D_Delta_eq_0-1| |nil| 3463397993
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (ASSERT)
            (("" (REPLACES -1)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "root2b_root")
                  (("" (REWRITE "discr2b_discr_eq_0")
                    (("" (REWRITE "discr2b_discr_ge_0")
                      (("" (LEMMA "root_eq")
                        (("" (INST?) (("" (GROUND) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|root_eq| FORMULA-DECL NIL |quadratic| |reals|)
    (|discr2b_discr_eq_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_eq_0| 0
  (|Theta_D_eq_0-1| |nil| 3431351490
   ("" (SKEEP)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (ASSERT)
            (("" (REPLACES -1)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "discr2b_discr_ge_0")
                  (("" (LEMMA "root_eq_0")
                    (("" (INST?)
                      (("" (ASSERT) (("" (REWRITE "sign_eq_neg1") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|sign_nat| FORMULA-DECL NIL |sign| |reals|)
    (|sign_eq_neg1| FORMULA-DECL NIL |sign| |reals|)
    (|root_eq_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_ge_0| 0
  (|Theta_D_ge_0-2| |nil| 3565277314
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (SKOLETIN* -1 :OLD? T)
            (("" (REPLACES -2)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "discr2b_discr_ge_0")
                  (("" (LEMMA "roots_ge_0")
                    (("" (INST -1 "a" "2*b" "c" "-1")
                      (("" (ASSERT) (("" (REAL-PROPS 1) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|roots_ge_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL)
  (|Theta_D_ge_0-1| |nil| 3431352792
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (SKOLETIN* -1)
            (("" (REPLACES -2)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "discr2b_discr_ge_0")
                  (("" (LEMMA "roots_ge_0")
                    (("" (INST -1 "a" "2*b" "c" "-1")
                      (("" (ASSERT) (("" (REAL-PROPS 1) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|roots_ge_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_neq_0| 0
  (|Theta_D_neq_0-2| |nil| 3565277334
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (SKOLETIN* -1 :OLD? T)
            (("" (REPLACES -2)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "discr2b_discr_ge_0")
                  (("" (LEMMA "root_neq_0")
                    (("" (INST -1 "a" "2*b" "c" "eps") (("" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|root_neq_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL)
  (|Theta_D_neq_0-1| |nil| 3432553520
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "Theta_D")
      (("" (LEMMA "Delta_discr2b")
        (("" (INST?)
          (("" (SKOLETIN* -1)
            (("" (REPLACES -2)
              (("" (REWRITE "root2b_root")
                (("" (REWRITE "discr2b_discr_ge_0")
                  (("" (LEMMA "root_neq_0")
                    (("" (INST -1 "a" "2*b" "c" "eps") (("" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr2b_discr_ge_0| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|root_neq_0| FORMULA-DECL NIL |quadratic| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|root2b_root| FORMULA-DECL NIL |quadratic_2b| |reals|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|))
   NIL))
 (|horizontal_conflict| 0
  (|horizontal_conflict-1| |nil| 3431450389
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (LEMMA "horizontal_conflict_ever")
          (("1" (INST?)
            (("1" (ASSERT)
              (("1" (LEMMA "Delta_gt_0")
                (("1" (INST?)
                  (("1" (ASSERT)
                    (("1" (LEMMA "sdotv_lt_0 ")
                      (("1" (INST?)
                        (("1" (ASSERT) NIL NIL)
                         ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "horizontal_conflict?")
          (("2" (SPLIT -2)
            (("1" (INST 1 "0") (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (NAME "tt1" "Theta_D(s,nzv,-1)")
              (("1" (CASE "tt1 >= 0")
                (("1" (NAME "tt2" "Theta_D(s,nzv,1)")
                  (("1" (LEMMA "Theta_D_on_D")
                    (("1" (INST-CP -1 "1" "nzv" "s")
                      (("1" (ASSERT)
                        (("1" (INST -1 "-1" "nzv" "s")
                          (("1" (ASSERT)
                            (("1" (LEMMA "Theta_D_lt")
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (LEMMA "t1_lt_t2_lt_D")
                                    (("1"
                                      (INST -1 "s" "nzv" _ "tt1" "tt2" "sq(D)")
                                      (("1" (ASSERT)
                                        (("1" (INST -1 "(tt1+tt2)/2")
                                          (("1" (ASSERT)
                                            (("1" (INST? 1)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (INST 2 "0")
                  (("2" (LEMMA "Theta_D_ge_0")
                    (("2" (INST?)
                      (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|t1_lt_t2_lt_D| FORMULA-DECL NIL |closest_approach_2D| |vectors|)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|horizontal_conflict_on_D| 0
  (|horizontal_conflict_on_D-1| |nil| 3469977604
   ("" (SKEEP)
    (("" (CASE "v /= zero")
      (("1" (FLATTEN)
        (("1" (LEMMA "horizontal_conflict")
          (("1" (INST - "v" "s")
            (("1" (REPLACE -1)
              (("1" (HIDE -1)
                (("1" (GROUND)
                  (("1" (EXPAND "Delta")
                    (("1" (CASE "s*v /= 0")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE 2)
                        (("2" (FLATTEN)
                          (("2" (HIDE -2)
                            (("2" (LEMMA "parallel_det_0")
                              (("2" (INST - "s" "perpR(v)")
                                (("1" (CASE "det(s,perpR(v)) = 0")
                                  (("1" (ASSERT)
                                    (("1" (HIDE -1)
                                      (("1" (EXPAND "parallel?")
                                        (("1" (SKOSIMP*)
                                          (("1" (REPLACE -1 -)
                                            (("1" (HIDE-ALL-BUT (-3 -4))
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT (-2 1))
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT (1 2))
                                  (("2" (FLATTEN)
                                    (("2" (EXPAND "zero")
                                      (("2" (EXPAND "perpR")
                                        (("2" (FLATTEN)
                                          (("2" (DECOMPOSE-EQUALITY) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("3" (FLATTEN)
                                  (("3" (REPLACE -1)
                                    (("3" (EXPAND "sqv")
                                      (("3" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "Delta")
                    (("2" (CASE "sq(D) * sqv(v) - sq(det(s, v)) >= 0")
                      (("1" (ASSERT)
                        (("1" (CASE "sq(D) * sqv(v) - sq(det(s, v)) /= 0")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (HIDE 2)
                            (("2" (HIDE -1)
                              (("2" (FLATTEN)
                                (("2" (LEMMA "parallel_dot_1")
                                  (("2" (INST - "s" "perpR(v)")
                                    (("1" (GROUND)
                                      (("1" (EXPAND "parallel?")
                                        (("1" (SKOSIMP*)
                                          (("1" (REPLACE -1)
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE 2)
                                        (("2" (REWRITE "det_perpR")
                                          (("2" (EXPAND "^")
                                            (("2" (LEMMA "sq_eq")
                                              (("2" (INST?)
                                                (("2" (ASSERT)
                                                  (("2" (HIDE 2)
                                                    (("2" (REWRITE "sq_times")
                                                      (("2"
                                                        (REWRITE "sq_times")
                                                        (("2"
                                                          (REWRITE "sq_div")
                                                          (("1"
                                                            (REWRITE "sq_div")
                                                            (("1"
                                                              (CROSS-MULT 1)
                                                              (("1"
                                                                (LEMMA
                                                                 "sq_norm")
                                                                (("1"
                                                                  (INST-CP -
                                                                   "perpR(v)")
                                                                  (("1"
                                                                    (INST -
                                                                     "s")
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1)
                                                                      (("1"
                                                                        (HIDE
                                                                         -1)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1)
                                                                          (("1"
                                                                            (HIDE
                                                                             -1)
                                                                            (("1"
                                                                              (REWRITE
                                                                               "sqv_perpR")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (LEMMA
                                                               "norm_eq_0")
                                                              (("2" (INST?)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (LEMMA "norm_eq_0")
                                                            (("2" (INST?)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (HIDE-ALL-BUT
                                                                   (-1 3))
                                                                  (("2"
                                                                    (EXPAND
                                                                     "zero")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "perpR")
                                                                      (("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (DECOMPOSE-EQUALITY)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (HIDE-ALL-BUT (-1 1))
                                        (("2" (EXPAND "zero")
                                          (("2" (EXPAND "perpR")
                                            (("2" (FLATTEN)
                                              (("2" (DECOMPOSE-EQUALITY) NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (FLATTEN)
                                      (("3" (REPLACE -1)
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (REPLACE -2 + RL)
                        (("2" (LEMMA "cauchy_schwarz")
                          (("2" (INST - "s" "perpR(v)")
                            (("2" (REWRITE "det_perpR")
                              (("2" (REWRITE "sqv_perpR")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "horizontal_conflict?")
          (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|parallel_det_0| FORMULA-DECL NIL |parallel_2D| |vectors|)
    (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_zero_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|parallel?| CONST-DECL "bool" |vectors_2D| |vectors|)
    (|Nz_vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|perpR| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (|parallel_dot_1| FORMULA-DECL NIL |parallel_2D| |vectors|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|det_perpR| FORMULA-DECL NIL |det_2D| |vectors|)
    (|sq_eq| FORMULA-DECL NIL |sq| |reals|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_abs| FORMULA-DECL NIL |sq| |reals|)
    (|sq_1| FORMULA-DECL NIL |sq| |reals|)
    (|sq_times| FORMULA-DECL NIL |sq| |reals|)
    (|sq_div| FORMULA-DECL NIL |sq| |reals|)
    (|norm_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|norm_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_0| FORMULA-DECL NIL |sq| |reals|)
    (|sqv_perpR| FORMULA-DECL NIL |perpendicular_2D| |vectors|)
    (|sq_norm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|cauchy_schwarz| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|scal_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|horizontal_entry_le| 0
  (|horizontal_entry_le-1| |nil| 3445266437
   ("" (SKEEP)
    (("" (CASE-REPLACE "v=zero")
      (("1" (ASSERT) NIL NIL)
       ("2" (LEMMA "sqv_eq_0")
        (("2" (INST -1 "v")
          (("2" (ASSERT)
            (("2" (REWRITE "sqv_add")
              (("2" (REWRITE "sqv_add")
                (("2" (REWRITE "sqv_scal")
                  (("2" (REWRITE "sqv_scal")
                    (("2" (LEMMA "quad_min_mono_dec")
                      (("2" (INST -1 "sqv(v)" "2*(s*v)" "-sq(D)" "t1" "t2")
                        (("2" (ASSERT)
                          (("2" (EXPAND "quadratic")
                            (("2" (CROSS-MULT 1)
                              (("2" (REWRITE "dot_add_left")
                                (("2" (REWRITE "sqv" :DIR RL)
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|dot_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|quad_min_mono_dec| FORMULA-DECL NIL |quad_minmax| |reals|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|quadratic| CONST-DECL "real" |quadratic| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|not_horizontal_entry_lt| 0
  (|not_horizontal_entry_lt-1| |nil| 3445271454
   ("" (SKEEP)
    (("" (EXPAND "horizontal_tca")
      (("" (NAME-REPLACE "tt1" "max(0,-(s*nzv)/sqv(nzv))" :HIDE? NIL)
        (("" (FLATTEN)
          (("" (CASE "tt1 < t2")
            (("1" (ASSERT)
              (("1" (LEMMA "quad_min_mono_inc")
                (("1" (INST -1 "sqv(nzv)" "2*(s*nzv)" "-sq(D)" "t2" "tt1")
                  (("1" (ASSERT)
                    (("1" (EXPAND "quadratic")
                      (("1" (REWRITE "sqv_add")
                        (("1" (REWRITE "sqv_add")
                          (("1" (REWRITE "sqv_scal")
                            (("1" (REWRITE "sqv_scal") (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 3)
              (("2" (REPLACES -1 :DIR RL)
                (("2" (REWRITE "max_lt")
                  (("2" (ASSERT)
                    (("2" (CROSS-MULT 1)
                      (("2" (REWRITE "dot_add_left")
                        (("2" (REWRITE "sqv" :DIR RL) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|quadratic| CONST-DECL "real" |quadratic| |reals|)
    (|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_canon| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_add| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|quad_min_mono_inc| FORMULA-DECL NIL |quad_minmax| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|horizontal_los_inside_Theta| 0
  (|horizontal_los_inside_Theta-1| |nil| 3448810543
   ("" (SKEEP)
    (("" (LEMMA "Theta_D_on_D")
      (("" (INST -1 "-1" "nzv" "s")
        (("" (ASSERT)
          (("" (LEMMA "Theta_D_on_D")
            (("" (INST -1 "1" "nzv" "s")
              (("" (ASSERT)
                (("" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (LEMMA "t1_lt_t2_lt_D")
                      (("1" (INST?)
                        (("1" (INST -1 "Theta_D(s,nzv,-1)" "Theta_D(s,nzv,1)")
                          (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (LEMMA "lt_D_t1_lt_t2")
                      (("2"
                        (INST -1 "s" "nzv" "t" "Theta_D(s,nzv,-1)"
                         "Theta_D(s,nzv,1)" "sq(D)")
                        (("2" (ASSERT)
                          (("2" (ASSERT)
                            (("2" (SPLIT -1)
                              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (HIDE -2 -3 2)
                                (("2" (LEMMA "Theta_D_lt")
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (HIDE 2)
                                        (("2" (LEMMA "Delta_gt_0")
                                          (("2" (INST?)
                                            (("2" (ASSERT)
                                              (("2"
                                                (EXPAND
                                                 "horizontal_conflict_ever?")
                                                (("2" (INST? 1) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|t1_lt_t2_lt_D| FORMULA-DECL NIL |closest_approach_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|lt_D_t1_lt_t2| FORMULA-DECL NIL |closest_approach_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|))
   NIL))
 (|horizontal_sep_outside_Theta| 0
  (|horizontal_sep_outside_Theta-1| |nil| 3463397290
   ("" (SKOSIMP*)
    (("" (CASE "Delta(s!1,nzv!1) = 0")
      (("1" (LEMMA "Theta_D_Delta_eq_0")
        (("1" (INST?)
          (("1" (ASSERT)
            (("1" (LEMMA "horizontal_los_inside_Theta")
              (("1" (INST - "nzv!1" "s!1" "t!1")
                (("1" (ASSERT)
                  (("1" (LEMMA "Theta_D_unique")
                    (("1" (INST - "nzv!1" "s!1" "t!1")
                      (("1" (ASSERT) (("1" (GROUND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "horizontal_los_inside_Theta")
        (("2" (INST - "nzv!1" "s!1" "t!1")
          (("2" (LEMMA "Theta_D_unique")
            (("2" (INST - "nzv!1" "s!1" "t!1")
              (("2" (LEMMA "Theta_D_lt")
                (("2" (INST - "s!1" "nzv!1") (("2" (GROUND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   NIL))
 (|not_horiz_sep_inside_closed_Theta| 0
  (|not_horiz_sep_inside_closed_Theta-1| |nil| 3466352902
   ("" (SKEEP)
    (("" (LEMMA "horizontal_los_inside_Theta")
      (("" (INST?)
        (("" (ASSERT)
          (("" (LEMMA "Theta_D_unique")
            (("" (INST?)
              (("" (ASSERT)
                (("" (LEMMA "horizontal_sep_outside_Theta")
                  (("" (INST?)
                    (("" (ASSERT)
                      (("" (NAME-REPLACE "AA" "Theta_D(s,nzv,-1)")
                        (("" (NAME-REPLACE "BB" "Theta_D(s,nzv,1)")
                          (("" (NAME-REPLACE "CC" "sqv(s+t*nzv)")
                            (("" (NAME-REPLACE "SQD" "sq(D)")
                              (("" (HIDE -4) (("" (GRIND) NIL NIL)) NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_entry_gt_0_TCC1| 0
  (|Theta_D_entry_gt_0_TCC1-1| |nil| 3460765023
   ("" (SKEEP)
    (("" (REWRITE "horizontal_conflict") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|horizontal_conflict| FORMULA-DECL NIL |horizontal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Ss_vect2| TYPE-EQ-DECL NIL |horizontal| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|Theta_D_entry_gt_0| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.ss, horizontal.nzv), 0)}")))
 (|Theta_D_entry_gt_0| 0
  (|Theta_D_entry_gt_0-1| |nil| 3460765023
   ("" (SKEEP)
    (("" (LEMMA "horizontal_conflict")
      (("" (INST?)
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (LEMMA "Theta_D_neq_0")
              (("" (INST?)
                (("" (ASSERT)
                  (("" (FLATTEN)
                    (("" (LEMMA "Theta_D_ge_0")
                      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_exit_gt_0| 0
  (|Theta_D_exit_gt_0-4| |nil| 3460763196
   ("" (SKEEP)
    (("" (USE "Delta_gt_0_nzv")
      (("" (ASSERT)
        (("" (FLATTEN)
          (("" (CASE "sqv(v) > 0")
            (("1" (SPLIT)
              (("1" (FLATTEN)
                (("1" (LEMMA "horizontal_conflict")
                  (("1" (INST?)
                    (("1" (ASSERT)
                      (("1" (REPLACES -1 :DIR RL)
                        (("1" (EXPAND "horizontal_conflict?")
                          (("1" (SKEEP -1)
                            (("1" (LEMMA "horizontal_los_inside_Theta")
                              (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (EXPAND "Theta_D")
                  (("2" (LEMMA "Delta_discr2b")
                    (("2" (INST?)
                      (("2" (BETA)
                        (("2" (EXPAND "root2b")
                          (("2" (REPLACES -1)
                            (("2" (CROSS-MULT -1)
                              (("2" (REAL-PROPS)
                                (("2" (MOVE-TERMS -1 L 2)
                                  (("2" (REAL-PROPS)
                                    (("2" (LEMMA "sqrt_gt")
                                      (("2"
                                        (INST -1
                                         "discr2b(sqv(v), s * v, sqv(s) - sq(D))"
                                         "sq(s*v)")
                                        (("2" (ASSERT)
                                          (("2" (HIDE (-2 -4))
                                            (("2" (EXPAND "discr2b")
                                              (("2" (MOVE-TERMS -1 L 1)
                                                (("2" (ASSERT)
                                                  (("2" (MULT-BY 1 "sqv(v)")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "sqv_eq_0")
              (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|sqrt_gt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   NIL))
 (|Theta_D_entry_lt_t_TCC1| 0
  (|Theta_D_entry_lt_t_TCC1-1| |nil| 3460762246 ("" (SUBTYPE-TCC) NIL NIL)
   ((NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|Theta_D_entry_lt_t| SUBTYPE "horizontal.v"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|Theta_D_entry_lt_t| 0
  (|Theta_D_entry_lt_t-1| |nil| 3460631023
   ("" (SKEEP)
    (("" (BETA)
      (("" (FLATTEN)
        (("" (USE "Delta_gt_0_nzv")
          (("" (ASSERT)
            (("" (FLATTEN)
              (("" (CASE "sqv(v) > 0")
                (("1" (EXPAND "Theta_D")
                  (("1" (EXPAND "root2b")
                    (("1" (LEMMA "Delta_discr2b")
                      (("1" (INST?)
                        (("1" (ASSERT)
                          (("1" (REPLACES -1 :DIR RL)
                            (("1" (NAME-REPLACE "dd" "Delta(s,v)")
                              (("1" (SPLIT)
                                (("1" (FLATTEN)
                                  (("1" (CROSS-MULT 1)
                                    (("1" (CASE "s * v + sqv(v) * t >= 0")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (ASSERT)
                                        (("2"
                                          (CASE
                                              "-sqrt(dd) < s * v + sqv(v) * t")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (HIDE 3)
                                            (("2"
                                              (NAME-REPLACE "aa"
                                               "s * v + sqv(v) * t")
                                              (("2" (NEG-FORMULA 1)
                                                (("2" (BOTH-SIDES-F 1 "sq")
                                                  (("1" (SQ-SIMP) NIL NIL)
                                                   ("2" (REWRITE "sq_lt") NIL
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (CROSS-MULT -1)
                                    (("2"
                                      (CASE "-sqrt(dd) < s * v + sqv(v) * t")
                                      (("1" (HIDE -2)
                                        (("1"
                                          (NAME-REPLACE "aa"
                                           "s * v + sqv(v) * t")
                                          (("1" (NEG-FORMULA -1)
                                            (("1" (BOTH-SIDES-F -1 "sq")
                                              (("1" (SQ-SIMP) NIL NIL)
                                               ("2" (REWRITE "sq_lt") NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (LEMMA "sqv_eq_0")
                  (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sqv_eq_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_neg| FORMULA-DECL NIL |sq| |reals|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (|sq_lt| FORMULA-DECL NIL |sq| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|))
   SHOSTAK))
 (|horizontal_conflict_entry_TCC1| 0
  (|horizontal_conflict_entry_TCC1-1| |nil| 3451241048
   ("" (SKEEP)
    (("" (LEMMA "horizontal_conflict")
      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|horizontal_conflict| FORMULA-DECL NIL |horizontal| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Sp_vect2| TYPE-EQ-DECL NIL |horizontal| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|horizontal_conflict_entry| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.sp, horizontal.nzv), 0)}")))
 (|horizontal_conflict_entry| 0
  (|horizontal_conflict_entry-1| |nil| 3451241217
   ("" (SKEEP)
    (("" (LEMMA "horizontal_conflict")
      (("" (INST?)
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (EXPAND "horizontal_conflict?")
              (("" (SKEEP -3)
                (("" (INST 1 "nnt-t")
                  (("1" (REWRITE "add_assoc" :DIR RL)
                    (("1" (REWRITE "scal_add_left" :DIR RL) NIL NIL)) NIL)
                   ("2" (LEMMA "horizontal_los_inside_Theta")
                    (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|scal_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|add_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|not_horizontal_conflict_exit_TCC1| 0
  (|not_horizontal_conflict_exit_TCC1-1| |nil| 3463397521
   ("" (SKEEP)
    (("" (LEMMA "Delta_ge_0_2")
      (("" (INST?)
        (("" (ASSERT)
          (("" (EXPAND "horizontal_conflict?")
            (("" (SKOSIMP*) (("" (INST + "nnt!1") (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Delta_ge_0_2| FORMULA-DECL NIL |horizontal| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|horizontal_conflict?| CONST-DECL "bool" |horizontal| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|not_horizontal_conflict_exit| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|not_horizontal_conflict_exit| 0
  (|not_horizontal_conflict_exit-1| |nil| 3451319212
   ("" (SKEEP)
    (("" (LEMMA "horizontal_conflict")
      (("" (INST?)
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (EXPAND "horizontal_conflict?" -5)
              (("" (SKEEP -5)
                (("" (LEMMA "horizontal_los_inside_Theta")
                  (("" (INST -1 "nzv" "s" "t+nnt")
                    (("" (SPLIT -1)
                      (("1" (REWRITE "scal_add_left")
                        (("1" (REWRITE "add_assoc") (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|add_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|Theta_D_horizontal_dir_TCC1| 0
  (|Theta_D_horizontal_dir_TCC1-1| |nil| 3463413713 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|Theta_D_horizontal_dir| SUBTYPE "horizontal.v"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|Theta_D_horizontal_dir| 0
  (|Theta_D_horizontal_dir-1| |nil| 3463413719
   ("" (SKEEP)
    (("" (REWRITE "dot_add_left")
      (("" (REWRITE "sqv" :DIR RL)
        (("" (EXPAND "Theta_D")
          (("" (LEMMA "Delta_discr2b")
            (("" (INST?)
              (("1" (BETA)
                (("1" (EXPAND "root2b")
                  (("1" (REPLACES -1 :DIR RL)
                    (("1" (FIELD)
                      (("1" (HIDE-ALL-BUT 1)
                        (("1" (TYPEPRED "eps") (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "Delta_gt_0_nzv")
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dot_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|))
   NIL))
 (|horizontal_tca_midpoint| 0
  (|horizontal_tca_midpoint-1| |nil| 3448792764
   ("" (SKEEP) (("" (HIDE -1) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|discr2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|))
   SHOSTAK))
 (|horizontal_tca_entry_exit_TCC1| 0
  (|horizontal_tca_entry_exit_TCC1-1| |nil| 3463397521
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|horizontal_tca_entry_exit| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|horizontal_tca_entry_exit| 0
  (|horizontal_tca_entry_exit-1| |nil| 3448791091
   ("" (SKEEP)
    (("" (REWRITE "horizontal_tca_midpoint")
      (("" (LEMMA "Theta_D_lt") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|))
   SHOSTAK))
 (|horizontal_tca_entry_exit_le| 0
  (|horizontal_tca_entry_exit_le-2| |nil| 3826049871
   ("" (SKEEP)
    (("" (REWRITE "horizontal_tca_midpoint")
      (("" (LEMMA "Theta_D_le") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|))
   NIL)
  (|horizontal_tca_entry_exit_le-1| |nil| 3826049850
   ("" (SKEEP) (("" (POSTPONE) NIL NIL)) NIL) NIL SHOSTAK))
 (|horizontal_tca_los| 0
  (|horizontal_tca_los-1| |nil| 3448810376
   ("" (SKEEP)
    (("" (LEMMA "horizontal_tca_entry_exit")
      (("" (INST?)
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (LEMMA "horizontal_los_inside_Theta")
              (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|horizontal_tca_le_D| 0
  (|horizontal_tca_le_D-1| |nil| 3598223991
   ("" (SKEEP)
    (("" (REWRITE "Delta_ge_0")
      (("" (SKEEP)
        (("" (LEMMA "horizontal_tca_min")
          (("" (INST?)
            (("" (REWRITE "horizontal_sq_dtca_eq") (("" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|horizontal_tca_min| FORMULA-DECL NIL |definitions| NIL)
    (|horizontal_sq_dtca_eq| FORMULA-DECL NIL |definitions| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   NIL))
 (|horizontal_tca_pos| 0
  (|horizontal_tca_pos-1| |nil| 3448814244
   ("" (SKEEP)
    (("" (LEMMA "horizontal_tca_entry_exit")
      (("" (INST?)
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (LEMMA "Theta_D_ge_0")
              (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|Theta_D_positive_conflict| 0
  (|Theta_D_positive_conflict-1| |nil| 3467564658
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "horizontal_conflict?")
          (("1" (SKOSIMP*)
            (("1" (LEMMA "horizontal_los_inside_Theta")
              (("1" (INST - "v" "s" "nnt!1") (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (CASE "Theta_D(s,v,-1) < 0")
          (("1" (EXPAND "horizontal_conflict?")
            (("1" (INST + "0")
              (("1" (LEMMA "horizontal_los_inside_Theta")
                (("1" (INST - "v" "s" "0") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("2" (LEMMA "horizontal_tca_entry_exit")
            (("2" (INST - "v" "s")
              (("2" (ASSERT)
                (("2" (FLATTEN)
                  (("2" (EXPAND "horizontal_conflict?")
                    (("2" (INST + "horizontal_tca(s,v)")
                      (("1" (LEMMA "horizontal_los_inside_Theta")
                        (("1" (INST - "v" "s" "horizontal_tca(s,v)")
                          (("1" (ASSERT) NIL NIL)) NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL))
   SHOSTAK))
 (|Theta_D_linear_TCC1| 0
  (|Theta_D_linear_TCC1-1| |nil| 3826046352 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|det| CONST-DECL "real" |det_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|Theta_D_linear| SUBTYPE "horizontal.nzv"
    "{nzv_1 | reals.>=(horizontal.Delta((vectors_2D.+)(horizontal.s, vectors_2D.*(horizontal.t, horizontal.nzv)), nzv_1), 0)}")))
 (|Theta_D_linear| 0
  (|Theta_D_linear-1| |nil| 3826046367
   ("" (SKEEP)
    (("" (LEMMA "Delta_eq")
      (("" (INST?)
        (("" (LEMMA "Delta_discr2b")
          (("" (INST?)
            (("" (BETA)
              (("" (LEMMA "Delta_discr2b")
                (("" (INST -1 "nzv" "s+t*nzv")
                  (("" (BETA)
                    (("" (EXPAND "Theta_D")
                      (("" (EXPAND "root2b")
                        (("" (REPLACES -2 :DIR RL)
                          (("" (REPLACES -1 :DIR RL)
                            (("" (REPLACES -1 :DIR RL)
                              (("" (MOVE-TERMS 1 R 1)
                                (("" (NAME-REPLACE "SS" "sqrt(Delta(s, nzv))")
                                  (("" (HIDE -1)
                                    ((""
                                      (NAME-REPLACE "A"
                                       "(-((s + t * nzv) * nzv) + eps * SS)")
                                      ((""
                                        (NAME-REPLACE "B"
                                         "(-(s * nzv) + eps * SS)")
                                        ((""
                                          (CASE-REPLACE
                                           "A / sqv(nzv) - B / sqv(nzv) = (A-B)/sqv(nzv)")
                                          (("1" (HIDE -1)
                                            (("1" (CROSS-MULT 1)
                                              (("1" (EXPAND "A")
                                                (("1" (EXPAND "B")
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE-ALL-BUT 1)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|root2b| CONST-DECL "real" |quadratic_2b| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|))
   SHOSTAK))
 (|circle_solution_2D_horizontal_sep| 0
  (|circle_solution_2D_horizontal_sep-1| |nil| 3466182088
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "circle_solution_2D?")
        (("" (FLATTEN)
          (("" (LEMMA "horizontal_entry_le")
            (("" (INST -1 "s" "tt" "t" "v") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   NIL))
 (|Theta_D_circle_solution_2D| 0
  (|Theta_D_circle_solution_2D-3| |nil| 3463413379
   ("" (SKEEP)
    (("" (EXPAND "circle_solution_2D?")
      (("" (LEMMA "Theta_D_on_D")
        (("" (INST?)
          (("1" (SPLIT)
            (("1" (ASSERT)
              (("1" (LEMMA "Theta_D_horizontal_dir")
                (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (LEMMA "Delta_gt_0_nzv")
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|))
   NIL)
  (|Theta_D_circle_solution_2D-2| |nil| 3463413254
   ("" (SKEEP)
    (("" (EXPAND "circle_solution_2D?")
      (("" (LEMMA "Theta_D_on_D")
        (("" (INST?)
          (("1" (SPLIT)
            (("1" (ASSERT)
              (("1" (LEMMA "Theta_D_horizontal_dir")
                (("1" (INST?) (("1" (ASSERT) NIL)))))))
             ("2" (ASSERT) NIL)))
           ("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (LEMMA "Delta_gt_0_nzv")
                (("2" (INST?) (("2" (ASSERT) NIL))))))))))))))))
    NIL)
   NIL NIL)
  (|Theta_D_circle_solution_2D-1| |nil| 3463413151
   ("" (SKEEP)
    (("" (EXPAND "circle_solution_2D?")
      (("" (LEMMA "Theta_D_on_D")
        (("" (INST?)
          (("1" (SPLIT)
            (("1" (ASSERT)
              (("1" (LEMMA "Theta_D_horizontal_dir")
                (("1" (INST?) (("1" (ASSERT) NIL)))))))
             ("2" (ASSERT) NIL)))
           ("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (LEMMA "Delta_gt_0_nzv")
                (("2" (INST?) (("2" (ASSERT) NIL))))))))))))))))
    NIL)
   NIL NIL))
 (|circle_solution_2D_Delta_ge_0| 0
  (|circle_solution_2D_Delta_ge_0-1| |nil| 3466349793
   ("" (SKEEP)
    (("" (LEMMA "Delta_ge_0")
      (("" (INST?)
        (("" (ASSERT)
          (("" (EXPAND "circle_solution_2D?")
            (("" (FLATTEN) (("" (INST 1 "t") NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|))
   NIL))
 (|circle_solution_2D_Theta_D_TCC1| 0
  (|circle_solution_2D_Theta_D_TCC1-1| |nil| 3466349793
   ("" (SKEEP)
    (("" (LEMMA "circle_solution_2D_Delta_ge_0")
      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|circle_solution_2D_Delta_ge_0| FORMULA-DECL NIL |horizontal| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|circle_solution_2D_Theta_D| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|circle_solution_2D_Theta_D| 0
  (|circle_solution_2D_Theta_D-2| |nil| 3466348778
   ("" (SKEEP)
    (("" (LEMMA "circle_solution_2D_Delta_ge_0")
      (("" (INST?)
        (("" (ASSERT)
          (("" (EXPAND "circle_solution_2D?")
            (("" (FLATTEN)
              (("" (LEMMA "Theta_D_unique_eps")
                (("" (INST - "nzv" "s" "t")
                  (("" (ASSERT)
                    (("" (SKOSIMP*)
                      (("" (CASE "eps!1 = dir")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (LEMMA "Theta_D_horizontal_dir")
                          (("2" (INST - "eps!1" "s" "nzv")
                            (("2" (ASSERT)
                              (("2" (REPLACE -2 - RL)
                                (("2" (CASE "((s + t * nzv) * nzv) = 0")
                                  (("1" (LEMMA "horizontal_tca_los")
                                    (("1" (INST - "nzv" "s")
                                      (("1" (SPLIT -1)
                                        (("1" (LEMMA "sdotv_lt_0")
                                          (("1" (INST-CP -1 "s+t*nzv" "nzv")
                                            (("1" (INST -1 "s+t*nzv" "-nzv")
                                              (("1"
                                                (CASE-REPLACE
                                                 "(s+t*nzv)*-nzv = 0")
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (EXPAND
                                                     "horizontal_conflict?")
                                                    (("1"
                                                      (CASE
                                                          "t >= horizontal_tca(s,nzv)")
                                                      (("1"
                                                        (INST +
                                                         "t-horizontal_tca(s,nzv)")
                                                        (("1" (HIDE 2)
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "s + t * nzv + (t - horizontal_tca(s, nzv)) * -nzv = s + horizontal_tca(s, nzv) * nzv")
                                                            (("1"
                                                              (NAME "tz"
                                                                    "horizontal_tca(s,nzv)")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (INST +
                                                           "horizontal_tca(s,nzv) - t")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (HIDE 2)
                                                        (("2"
                                                          (INST +
                                                           "horizontal_tca(s,nzv) - t")
                                                          (("1"
                                                            (CASE-REPLACE
                                                             "s + t * nzv + (horizontal_tca(s, nzv) - t) * nzv = s + horizontal_tca(s, nzv) * nzv")
                                                            (("1"
                                                              (NAME "tz"
                                                                    "horizontal_tca(s,nzv)")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (HIDE-ALL-BUT
                                                                   1)
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE-ALL-BUT (-4 1))
                                                  (("2" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (LEMMA "Theta_D_Delta_eq_0")
                                          (("2" (INST - "nzv" "s")
                                            (("2" (ASSERT)
                                              (("2"
                                                (CASE
                                                    "(eps!1 = 1 and dir = -1) OR (eps!1 = -1 and dir = 1)")
                                                (("1" (SPLIT -1)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (TYPEPRED "eps!1")
                                                    (("2" (TYPEPRED "dir")
                                                      (("2" (GROUND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (CASE "(s + t * nzv) * nzv > 0")
                                    (("1" (LEMMA "pos_times_le")
                                      (("1"
                                        (INST - "eps!1" "(s + t * nzv) * nzv")
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "pos_times_le")
                                            (("1"
                                              (INST - "dir"
                                               "(s + t * nzv) * nzv")
                                              (("1" (ASSERT)
                                                (("1" (TYPEPRED "dir")
                                                  (("1" (TYPEPRED "eps!1")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (LEMMA "neg_times_le")
                                      (("2"
                                        (INST - "-dir" "(s + t * nzv) * nzv")
                                        (("2" (ASSERT)
                                          (("2" (LEMMA "neg_times_le")
                                            (("2"
                                              (INST - "-eps!1"
                                               "(s + t * nzv) * nzv")
                                              (("2" (ASSERT)
                                                (("2" (TYPEPRED "eps!1")
                                                  (("2" (TYPEPRED "dir")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "real" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|neg_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sign_neg_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|))
   NIL)
  (|circle_solution_2D_Theta_D-1| |nil| 3466346897
   ("" (SKEEP)
    (("" (EXPAND "circle_solution_2D?")
      (("" (FLATTEN)
        (("" (LEMMA "Theta_D_unique_eps")
          (("" (INST -1 "nzv" "s" "t")
            (("" (ASSERT)
              (("" (SKOLEM -1 "eps1")
                (("" (CASE-REPLACE "eps1=dir")
                  (("" (CASE-REPLACE "eps1=-dir")
                    (("1" (HIDE -1 1)
                      (("1" (LEMMA "Theta_D_horizontal_dir")
                        (("1" (INST?)
                          (("1" (REPLACES -2 :DIR RL)
                            (("1" (ASSERT) (("1" (POSTPONE) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT (1 2))
                      (("2" (TYPEPRED "eps1" "dir") (("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|circle_solution_2D_strict_horizontal_sep| 0
  (|circle_solution_2D_strict_horizontal_sep-1| |nil| 3467651708
   ("" (SKEEP)
    (("" (LEMMA "circle_solution_2D_Theta_D")
      (("" (INST?)
        (("" (ASSERT)
          (("" (LEMMA "horizontal_sep_outside_Theta")
            (("" (SKOSIMP*)
              (("" (INST?)
                (("" (ASSERT)
                  (("" (LEMMA "Delta_ge_0")
                    (("" (INST?)
                      (("" (ASSERT)
                        (("" (INST + "t")
                          (("" (EXPAND "circle_solution_2D?")
                            (("" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|))
   SHOSTAK))
 (|Theta_D_line_intersection| 0
  (|Theta_D_line_intersection-2| "" 3504655736
   ("" (SKEEP)
    (("" (SKOLETIN 1)
      (("" (FLATTEN)
        (("" (CROSS-MULT 2)
          (("1" (LEMMA "Theta_D_unique_eps")
            (("1" (INST - "v" "s" "Theta_D(s,v,eps)")
              (("1" (ASSERT)
                (("1" (FLATTEN)
                  (("1" (HIDE -1)
                    (("1" (SPLIT -1)
                      (("1" (NAME "td" "Theta_D(s,v,eps)")
                        (("1" (REPLACE -1)
                          (("1" (HIDE -1)
                            (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (INST 1 "eps") NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|))
   SHOSTAK)
  (|Theta_D_line_intersection-1| |nil| 3470492680
   ("" (SKEEP)
    (("" (SKOLETIN 1)
      (("" (FLATTEN)
        (("" (CROSS-MULT 2)
          (("" (LEMMA "Theta_D_unique_eps")
            (("" (INST - "v" "s" "Theta_D(s,v,eps)")
              (("1" (ASSERT)
                (("1" (FLATTEN)
                  (("1" (HIDE -1)
                    (("1" (SPLIT -1)
                      (("1" (NAME "td" "Theta_D(s,v,eps)")
                        (("1" (REPLACE -1)
                          (("1" (HIDE -1)
                            (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (INST 1 "eps") NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|))
   SHOSTAK))
 (|tangent_line_intersection_v_independent| 0
  (|tangent_line_intersection_v_independent-2| "" 3504714516
   ("" (SKEEP)
    (("" (EXPAND "sqv")
      (("" (REWRITE "dot_add_left")
        (("" (REWRITE "dot_add_left")
          ((""
            (CASE "pt * (v * (s + pt * v)) =
              pr * (w * (s + pt * v))")
            (("1" (HIDE -2)
              (("1" (NAME "const34" "v * (s + pt * v)")
                (("1" (REPLACE -1)
                  (("1" (NAME "const35" "w * (s + pt * v)")
                    (("1" (REPLACE -1)
                      (("1" (HIDE -1)
                        (("1" (HIDE -1)
                          (("1" (EXPAND "sign")
                            (("1" (LIFT-IF)
                              (("1" (LIFT-IF)
                                (("1" (GROUND)
                                  (("1" (DIV-BY -2 "pr")
                                    (("1"
                                      (LEMMA "nnreal_times_nnreal_is_nnreal")
                                      (("1" (INST - "pt/pr" "const34")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (LIFT-IF)
                                    (("2" (GROUND)
                                      (("2" (DIV-BY -2 "pt")
                                        (("2"
                                          (LEMMA
                                           "nnreal_times_nnreal_is_nnreal")
                                          (("2" (INST - "pr/pt" "const35")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sign| CONST-DECL "Sign" |sign| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|dot_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK)
  (|tangent_line_intersection_v_independent-1| |nil| 3471084326
   ("" (SKEEP)
    (("" (EXPAND "sqv")
      (("" (REWRITE "dot_add_left")
        (("" (REWRITE "dot_add_left")
          ((""
            (CASE "pt * (v * (s + pt * v)) =
       pr * (w * (s + pt * v))")
            (("1" (HIDE -2)
              (("1" (NAME "const34" "v * (s + pt * v)")
                (("1" (REPLACE -1)
                  (("1" (NAME "const35" "w * (s + pt * v)")
                    (("1" (REPLACE -1)
                      (("1" (HIDE -1)
                        (("1" (HIDE -1)
                          (("1" (EXPAND "sign")
                            (("1" (LIFT-IF)
                              (("1" (LIFT-IF)
                                (("1" (GROUND)
                                  (("1" (DIV-BY -2 "pt")
                                    (("1"
                                      (LEMMA "nnreal_times_nnreal_is_nnreal")
                                      (("1" (INST - "pr/pt" "const35")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (DIV-BY -2 "pr")
                                    (("2"
                                      (LEMMA "nnreal_times_nnreal_is_nnreal")
                                      (("2" (INST - "pt/pr" "const34")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sign| CONST-DECL "Sign" |sign| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|dot_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|))
   SHOSTAK))
 (|tangent_vector_not_conflict| 0
  (|tangent_vector_not_conflict-2| |nil| 3471108285
   ("" (SKEEP)
    (("" (LEMMA "Delta_gt_0_nzv")
      (("" (INST?)
        (("" (ASSERT)
          (("" (NAME "pp" "s + Theta_D(s, v, dir) * v")
            (("" (LABEL "ppname" -1)
              (("" (REPLACE -1)
                (("" (CASE "sqv(pp) = sq(D)")
                  (("1" (LABEL "onD" -1)
                    (("1" (EXPAND "horizontal_conflict?")
                      (("1" (SKOSIMP*)
                        (("1" (CASE "s*pp = sq(D)")
                          (("1" (LABEL "spponD" -1)
                            (("1" (CASE "(s + nnt!1*v)*pp = sq(D)")
                              (("1" (LEMMA "cauchy_schwarz")
                                (("1" (INST?)
                                  (("1" (REPLACE -2)
                                    (("1" (REPLACE "onD")
                                      (("1" (EXPAND "sq" -1 1)
                                        (("1" (DIV-BY -1 "sq(D)")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "sqv" "onD")
                                (("2" (NAME-REPLACE "TD" "Theta_D(s,v,dir)")
                                  (("2" (CASE "v*pp = 0")
                                    (("1" (HIDE-ALL-BUT (-1 -2 1))
                                      (("1" (GRIND) NIL NIL)) NIL)
                                     ("2" (CASE-REPLACE "pp*pp = (s+TD*v)*pp")
                                      (("1" (HIDE -1)
                                        (("1" (REWRITE "dot_add_left" "onD")
                                          (("1" (REPLACE -1)
                                            (("1" (MOVE-TERMS -2 L 1)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (REWRITE "dot_add_left")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (LEMMA "Theta_D_on_D")
                    (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|cauchy_schwarz| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_add_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|))
   NIL)
  (|tangent_vector_not_conflict-1| |nil| 3471108265
   ("" (SKEEP) (("" (POSTPONE) NIL NIL)) NIL) NIL SHOSTAK))
 (|horizontal_conflict_is_an_open_set| 0
  (|horizontal_conflict_is_an_open_set-2| |nil| 3471192141
   ("" (SKEEP)
    (("" (EXPAND "horizontal_conflict?" -1)
      (("" (SKOSIMP*)
        (("" (LABEL "underD" -1)
          (("" (CASE "nnt!1 /= 0")
            (("1" (FLATTEN)
              (("1" (NAME "delta" "D - norm(ss + nnt!1 * vv)")
                (("1" (LABEL "deltaname" -1)
                  (("1" (INST + "delta/(2*nnt!1)")
                    (("1" (SKEEP 2)
                      (("1" (EXPAND "horizontal_conflict?")
                        (("1" (INST + "nnt!1")
                          (("1" (CASE "norm(ss + nnt!1 * (vv + ww)) < D")
                            (("1" (LEMMA "sq_lt")
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (LEMMA "vectors_2D.sqrt_sqv_norm")
                                    (("1" (INST?)
                                      (("1" (HIDE-ALL-BUT (-2 2))
                                        (("1" (NAME "cv2" "ss + nnt!1*(vv+ww)")
                                          (("1" (REPLACE -1)
                                            (("1"
                                              (CASE "sq(norm(cv2)) = sqv(cv2)")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (EXPAND "sqv")
                                                  (("2" (EXPAND "norm")
                                                    (("2" (EXPAND "sqv")
                                                      (("2" (REWRITE "sq_sqrt")
                                                        (("2"
                                                          (TYPEPRED "sqv(cv2)")
                                                          (("2" (EXPAND "sqv")
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 3)
                              (("2" (LEMMA "vectors_2D.norm_add_le")
                                (("2" (INST - "ss + nnt!1*vv" "nnt!1*ww")
                                  (("2" (ASSERT)
                                    (("2"
                                      (CASE
                                          "ss + nnt!1 * vv + nnt!1 * ww = ss + nnt!1 * (vv + ww)")
                                      (("1"
                                        (CASE
                                            "norm(nnt!1 * ww) + norm(ss + nnt!1 * vv) < D")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (HIDE 2)
                                          (("2" (HIDE -2)
                                            (("2" (HIDE -1)
                                              (("2" (REWRITE "norm_scal")
                                                (("2"
                                                  (CASE "abs(nnt!1) = nnt!1")
                                                  (("1" (REPLACE -1)
                                                    (("1"
                                                      (CASE
                                                          "nnt!1*norm(ww) < delta")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (HIDE 2)
                                                        (("2"
                                                          (DIV-BY 1 "nnt!1")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (EXPAND "abs")
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (CASE "delta /( 2*nnt!1) > 0")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (CROSS-MULT 1)
                        (("2" (ASSERT)
                          (("2" (CASE "norm(ss+nnt!1*vv) < D")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (HIDE (2 3))
                              (("2" (LEMMA "sq_lt")
                                (("2" (INST?)
                                  (("2" (ASSERT)
                                    (("2"
                                      (CASE
                                          "sq(norm(ss+nnt!1*vv)) = sqv(ss+nnt!1*vv)")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (EXPAND "norm")
                                          (("2" (REWRITE "sq_sqrt") NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (ASSERT) NIL NIL))
                      NIL)
                     ("3" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2" (REPLACE -1)
                (("2" (INST + "1")
                  (("2" (SKOSIMP*)
                    (("2" (EXPAND "horizontal_conflict?")
                      (("2" (INST + "nnt!1")
                        (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|norm_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|norm_add_le| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sq_lt| FORMULA-DECL NIL |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|sq_sqrt| FORMULA-DECL NIL |sqrt| |reals|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqrt_sqv_norm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|))
   NIL)
  (|horizontal_conflict_is_an_open_set-1| |nil| 3471192120
   ("" (SKEEP)
    (("" (EXPAND "conflict?" -1)
      (("" (SKOSIMP*)
        (("" (LABEL "underH" -1)
          (("" (LABEL "underD" -2)
            (("" (CASE "nnt!1 /= 0")
              (("1" (FLATTEN)
                (("1" (NAME "del1" "H - abs(ss`z + nnt!1 * vv`z)")
                  (("1" (LABEL "del1name" -1)
                    (("1"
                      (NAME "del2" "D - norm(vect2(ss) + nnt!1 * vect2(vv))")
                      (("1" (LABEL "del2name" -1)
                        (("1" (CASE "del2 > 0")
                          (("1" (LABEL "del2pos" -1)
                            (("1" (HIDE "del2pos")
                              (("1" (NAME "delta" "min(del1,del2)")
                                (("1" (LABEL "deltaname" -1)
                                  (("1" (INST + "delta/(2*nnt!1)")
                                    (("1" (SKEEP 2)
                                      (("1"
                                        (CASE
                                            "norm(ww) >= abs(ww`z) AND norm(ww) >= norm(vect2(ww))")
                                        (("1" (LABEL "normlem" -1)
                                          (("1" (HIDE "normlem")
                                            (("1" (EXPAND "conflict?")
                                              (("1" (INST + "nnt!1")
                                                (("1" (SPLIT 2)
                                                  (("1" (LEMMA "triangle")
                                                    (("1"
                                                      (REWRITE "vz_distr_add")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (INST -
                                                           "ss`z + vv`z*nnt!1"
                                                           "ww`z*nnt!1")
                                                          (("1"
                                                            (CASE
                                                                "abs(ww`z*nnt!1) < del1")
                                                            (("1" (ASSERT) NIL)
                                                             ("2" (HIDE 2)
                                                              (("2"
                                                                (REWRITE
                                                                 "abs_mult")
                                                                (("2"
                                                                  (CASE
                                                                      "abs(nnt!1) = nnt!1")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("1"
                                                                      (REVEAL
                                                                       "normlem")
                                                                      (("1"
                                                                        (FLATTEN)
                                                                        (("1"
                                                                          (DIV-BY
                                                                           1
                                                                           "nnt!1")
                                                                          (("1"
                                                                            (CASE
                                                                                "del1 / nnt!1 >= delta / (2 * nnt!1)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE
                                                                               2)
                                                                              (("2"
                                                                                (CROSS-MULT
                                                                                 1)
                                                                                (("2"
                                                                                  (DIV-BY
                                                                                   1
                                                                                   "nnt!1")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL)))))))))))))))))
                                                                   ("2"
                                                                    (EXPAND
                                                                     "abs")
                                                                    (("2"
                                                                      (PROPAX)
                                                                      NIL)))))))))))))))))))
                                                   ("2"
                                                    (CASE
                                                        "norm(vect2(ss) + nnt!1 * vect2(vv + ww)) < D")
                                                    (("1" (LEMMA "sq_lt")
                                                      (("1" (INST?)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (LEMMA
                                                             "vectors_2D.sqrt_sqv_norm")
                                                            (("1" (INST?)
                                                              (("1"
                                                                (REPLACE -1
                                                                         :DIR
                                                                         RL)
                                                                (("1"
                                                                  (REWRITE
                                                                   "vect2_add")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL)))))))))))))))
                                                     ("2" (HIDE 2)
                                                      (("2"
                                                        (REWRITE "vect2_add")
                                                        (("2"
                                                          (LEMMA
                                                           "vectors_2D.norm_add_le")
                                                          (("2"
                                                            (INST -
                                                             "vect2(ss) + nnt!1*vect2(vv)"
                                                             "nnt!1*vect2(ww)")
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (CASE
                                                                    "norm(nnt!1 * vect2(ww)) + norm(vect2(ss) + nnt!1 * vect2(vv)) < D")
                                                                (("1"
                                                                  (CASE
                                                                      "vect2(ss) + nnt!1 * vect2(vv) + nnt!1 * vect2(ww) = vect2(ss) + nnt!1 * (vect2(vv) + vect2(ww))")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL)
                                                                   ("2"
                                                                    (HIDE 2)
                                                                    (("2"
                                                                      (HIDE-ALL-BUT
                                                                       1)
                                                                      (("2"
                                                                        (GRIND)
                                                                        NIL)))))))
                                                                 ("2"
                                                                  (CASE
                                                                      "norm(nnt!1*vect2(ww)) < del2")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL)
                                                                   ("2"
                                                                    (HIDE 2)
                                                                    (("2"
                                                                      (HIDE 2)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "norm_scal")
                                                                        (("2"
                                                                          (CASE
                                                                              "abs(nnt!1) = nnt!1")
                                                                          (("1"
                                                                            (REPLACE
                                                                             -1)
                                                                            (("1"
                                                                              (DIV-BY
                                                                               1
                                                                               "nnt!1")
                                                                              (("1"
                                                                                (CASE
                                                                                    "del2 / nnt!1 >= delta/(2*nnt!1)")
                                                                                (("1"
                                                                                  (REVEAL
                                                                                   "normlem")
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL)))))
                                                                                 ("2"
                                                                                  (HIDE
                                                                                   2)
                                                                                  (("2"
                                                                                    (CROSS-MULT
                                                                                     1)
                                                                                    (("2"
                                                                                      (DIV-BY
                                                                                       1
                                                                                       "nnt!1")
                                                                                      (("2"
                                                                                        (CASE
                                                                                            "2*del2 >= delta")
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (CASE
                                                                                              "del2 > 0")
                                                                                          (("1"
                                                                                            (HIDE-ALL-BUT
                                                                                             (-1
                                                                                              "deltaname"
                                                                                              1))
                                                                                            (("1"
                                                                                              (GRIND)
                                                                                              NIL)))
                                                                                           ("2"
                                                                                            (REPLACE
                                                                                             "del2name"
                                                                                             :DIR
                                                                                             RL)
                                                                                            (("2"
                                                                                              (HIDE-ALL-BUT
                                                                                               ("underD"
                                                                                                1))
                                                                                              (("2"
                                                                                                (CASE
                                                                                                    "sqv(vect2(ss) + nnt!1 * vect2(vv)) = sq(norm(vect2(ss) + nnt!1 * vect2(vv)))")
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (HIDE
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (LEMMA
                                                                                                       "sq_lt")
                                                                                                      (("1"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL)))))))))
                                                                                                 ("2"
                                                                                                  (HIDE-ALL-BUT
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (NAME
                                                                                                     "cvect1"
                                                                                                     "vect2(ss) + nnt!1 * vect2(vv)")
                                                                                                    (("2"
                                                                                                      (REPLACE
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (HIDE
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (EXPAND
                                                                                                           "norm")
                                                                                                          (("2"
                                                                                                            (LEMMA
                                                                                                             "sq_sqrt")
                                                                                                            (("2"
                                                                                                              (INST?)
                                                                                                              (("2"
                                                                                                                (SPLIT
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL)))))))))))))))))))))))))))))))))))))))
                                                                           ("2"
                                                                            (EXPAND
                                                                             "abs")
                                                                            (("2"
                                                                              (PROPAX)
                                                                              NIL)))))))))))))))))))))))))))))))))))))
                                         ("2" (HIDE-ALL-BUT 1)
                                          (("2" (SPLIT)
                                            (("1" (EXPAND "norm")
                                              (("1" (EXPAND "sqv")
                                                (("1" (LEMMA "sq_ge")
                                                  (("1" (INST?)
                                                    (("1" (ASSERT)
                                                      (("1" (HIDE 2)
                                                        (("1" (EXPAND "*")
                                                          (("1"
                                                            (EXPAND "sq" 1 2)
                                                            (("1"
                                                              (LEMMA "sqrt_ge")
                                                              (("1"
                                                                (INST -
                                                                 "ww`x * ww`x + ww`y * ww`y + ww`z * ww`z"
                                                                 "ww`z*ww`z")
                                                                (("1" (ASSERT)
                                                                  NIL)))))))))))))
                                                     ("2" (TYPEPRED "sqv(ww)")
                                                      (("2" (EXPAND "sqv")
                                                        (("2" (PROPAX)
                                                          NIL)))))))))))))
                                             ("2" (EXPAND "norm")
                                              (("2" (EXPAND "sqv")
                                                (("2" (LEMMA "sqrt_ge")
                                                  (("2" (INST?)
                                                    (("1" (ASSERT)
                                                      (("1" (HIDE 2)
                                                        (("1" (GRIND) NIL)))))
                                                     ("2"
                                                      (TYPEPRED
                                                       "sqv(vect2(ww))")
                                                      (("2" (EXPAND "sqv")
                                                        (("2" (PROPAX) NIL)))))
                                                     ("3" (TYPEPRED "sqv(ww)")
                                                      (("3" (EXPAND "sqv")
                                                        (("3" (PROPAX)
                                                          NIL)))))))))))))))))))))
                                     ("2" (CASE "delta /( 2*nnt!1) > 0")
                                      (("1" (ASSERT) NIL)
                                       ("2" (HIDE 2)
                                        (("2" (CROSS-MULT 1)
                                          (("2" (REVEAL "del2pos")
                                            (("2"
                                              (CASE
                                                  "delta = del1 or delta = del2")
                                              (("1" (GROUND) NIL)
                                               ("2"
                                                (HIDE-ALL-BUT ("deltaname" 1))
                                                (("2" (GRIND) NIL)))))))))))
                                       ("3" (ASSERT) NIL)))
                                     ("3" (ASSERT) NIL)))))))))))
                           ("2" (LEMMA "sq_lt")
                            (("2"
                              (INST - "norm(vect2(ss) + nnt!1 * vect2(vv))"
                               "D")
                              (("2" (ASSERT)
                                (("2"
                                  (NAME "cvect3"
                                        "vect2(ss) + nnt!1 * vect2(vv)")
                                  (("2" (REPLACE -1)
                                    (("2"
                                      (CASE "sqv(cvect3) = sq(norm(cvect3))")
                                      (("1" (ASSERT) NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2"
                                          (LEMMA "vectors_2D.sqrt_sqv_norm")
                                          (("2" (INST?)
                                            (("2" (REPLACE -1 :DIR RL)
                                              (("2" (HIDE -1)
                                                (("2" (LEMMA "sq_sqrt")
                                                  (("2" (INST?)
                                                    (("2" (SPLIT -1)
                                                      (("1" (ASSERT) NIL)
                                                       ("2" (ASSERT)
                                                        NIL)))))))))))))))))))))))))))))))))))))))))
               ("2" (FLATTEN)
                (("2" (REPLACE -1)
                  (("2" (ASSERT)
                    (("2" (INST + "1")
                      (("2" (SKEEP)
                        (("2" (EXPAND "conflict?")
                          (("2" (INST + "0")
                            (("2" (ASSERT) NIL))))))))))))))))))))))))))
    NIL)
   NIL NIL))
 (|inside_0_inside_t_TCC1| 0
  (|inside_0_inside_t_TCC1-2| |nil| 3826874135
   ("" (SKEEP)
    (("" (LEMMA "Delta_ge_0_2")
      (("" (INST?)
        (("" (REPLACES -1) (("" (INST 1 "0") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Delta_ge_0_2| FORMULA-DECL NIL |horizontal| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|inside_0_inside_t| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}"))
  (|inside_0_inside_t_TCC1-1| |nil| 3826874093 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL
   (|inside_0_inside_t| SUBTYPE "horizontal.nzv"
    "{nzv | reals.>=(horizontal.Delta(horizontal.s, horizontal.nzv), 0)}")))
 (|inside_0_inside_t| 0
  (|inside_0_inside_t-1| |nil| 3826874098
   ("" (SKEEP)
    (("" (TCCS-FORMULA -2)
      (("" (LEMMA "not_horiz_sep_inside_closed_Theta")
        (("" (INST?)
          (("" (ASSERT)
            (("" (CASE "Theta_D(s,nzv,-1) <= 0")
              (("1" (ASSERT) NIL NIL)
               ("2" (LEMMA "not_horiz_sep_inside_closed_Theta")
                (("2" (INST -1 "nzv" "s" "0") (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|Theta_D| CONST-DECL "real" |horizontal| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|not_horiz_sep_inside_closed_Theta| FORMULA-DECL NIL |horizontal| NIL))
   NIL))
 (|outside_0_inside_t| 0
  (|outside_0_inside_t-1| |nil| 3826874351
   ("" (SKEEP)
    (("" (LEMMA "not_horiz_sep_inside_closed_Theta")
      (("" (ASSERT)
        (("" (INSTEEP)
          (("" (ASSERT)
            (("" (LEMMA "Theta_D_exit_gt_0")
              (("" (INST -1 "s+t*nzv" "nzv")
                (("" (REWRITE "Delta_eq" :DIR RL)
                  (("" (ASSERT)
                    (("" (REWRITE "Theta_D_linear")
                      (("" (ASSERT)
                        (("" (CASE "Delta(s,nzv)=0")
                          (("1" (HIDE (-2 1))
                            (("1" (LEMMA "Theta_D_Delta_eq_0")
                              (("1" (INSTEEP)
                                (("1" (ASSERT)
                                  (("1" (LEMMA "horizontal_tca_entry_exit_le")
                                    (("1" (INSTEEP)
                                      (("1" (ASSERT)
                                        (("1" (LEMMA "horizontal_tca_nzv_ge_0")
                                          (("1" (INST -1 "nzv" "s+t*nzv")
                                            (("1"
                                              (REWRITE "horizontal_tca_linear")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_horiz_sep_inside_closed_Theta| FORMULA-DECL NIL |horizontal| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Theta_D_exit_gt_0| FORMULA-DECL NIL |horizontal| NIL)
    (|Delta_eq| FORMULA-DECL NIL |horizontal| NIL)
    (|Theta_D_linear| FORMULA-DECL NIL |horizontal| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Delta| CONST-DECL "real" |horizontal| NIL)
    (|Theta_D_Delta_eq_0| FORMULA-DECL NIL |horizontal| NIL)
    (|horizontal_tca_nzv_ge_0| FORMULA-DECL NIL |definitions| NIL)
    (|horizontal_tca_linear| FORMULA-DECL NIL |definitions| NIL)
    (|horizontal_tca_entry_exit_le| FORMULA-DECL NIL |horizontal| NIL)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK))
 (|sqv_hmd_tangent_point| 0
  (|sqv_hmd_tangent_point-1| |nil| 3823640737
   ("" (SKEEP)
    (("" (EXPAND "hmd_tangent_point")
      (("" (REWRITE "sqv_scal")
        (("" (REWRITE "sqv_perpL")
          (("" (REWRITE "sqv_normalize") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|sqv_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|perpL| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Normalized| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|perpL_nz| APPLICATION-JUDGEMENT "Nz_vect2" |perpendicular_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqv_normalize| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sqv_perpL| FORMULA-DECL NIL |perpendicular_2D| |vectors|))
   SHOSTAK))
 (|hmd_tangent_point_neg| 0
  (|hmd_tangent_point_neg-1| |nil| 3826638747
   ("" (SKEEP)
    (("" (EXPAND "hmd_tangent_point")
      (("" (REWRITE "normalize_neg")
        (("" (REWRITE "perpL_neg")
          (("" (REWRITE "scal_neg")
            (("" (ASSERT) (("" (REWRITE "neg_scal") NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|normalize_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|neg_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|scal_neg| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|perpL| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|neg_scal| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|perpL_nz| APPLICATION-JUDGEMENT "Nz_vect2" |perpendicular_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|Normalized| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|perpL_neg| FORMULA-DECL NIL |perpendicular_2D| |vectors|)
    (|hmd_tangent_point| CONST-DECL "Nz_vect2" |horizontal| NIL))
   NIL))
 (|perpR_hmd_tangent_point| 0
  (|perpR_hmd_tangent_point-1| |nil| 3823680515 ("" (GRIND) NIL NIL)
   ((* CONST-DECL "real" |vectors_2D| |vectors|)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|perpL| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (|perpR| CONST-DECL "Vect2" |perpendicular_2D| |vectors|))
   SHOSTAK))
 (|dot_hmd_tangent_point| 0
  (|dot_hmd_tangent_point-1| |nil| 3829673795
   ("" (SKEEP)
    (("" (EXPAND "hmd_tangent_point")
      (("" (REWRITE "dot_scal_right")
        (("" (REWRITE "dot_comm")
          (("" (REWRITE "perpL_normalized_dot") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|hmd_tangent_point| CONST-DECL "Nz_vect2" |horizontal| NIL)
    (|dot_comm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|dot_scal_left| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|perpL_nz| APPLICATION-JUDGEMENT "Nz_vect2" |perpendicular_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_scal_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|perpL| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (|Nz_vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Normalized| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|perpL_normalized_dot| FORMULA-DECL NIL |perpendicular_2D| |vectors|))
   SHOSTAK))
 (|det_hmd_tangent_point| 0
  (|det_hmd_tangent_point-1| |nil| 3829736017
   ("" (SKEEP)
    (("" (REWRITE "det_perpR")
      (("" (LEMMA "perpR_hmd_tangent_point")
        (("" (INST?)
          (("" (REPLACES -1)
            (("" (CASE-REPLACE " nzv * (D * ^(nzv)) = D*(nzv*^(nzv))")
              (("1" (HIDE -1)
                (("1" (CANCEL-BY 1 "D")
                  (("1" (HIDE 1)
                    (("1" (CASE-REPLACE "nzv*^(nzv)=(1/norm(nzv))*(nzv*nzv)")
                      (("1" (HIDE -1)
                        (("1" (REWRITE "sqv" :DIR RL)
                          (("1" (CROSS-MULT)
                            (("1" (REWRITE "sq" :DIR RL)
                              (("1" (REWRITE "sq_norm")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (EXPAND "^")
                          (("2" (NAME-REPLACE "nn" "1/norm(nzv)")
                            (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (NAME-REPLACE "nn" "^(nzv)") (("2" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|det_perpR| FORMULA-DECL NIL |det_2D| |vectors|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|hmd_tangent_point| CONST-DECL "Nz_vect2" |horizontal| NIL)
    (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|perpR_nz| APPLICATION-JUDGEMENT "Nz_vect2" |perpendicular_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|Nz_vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|Normalized| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nz_sqv_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq_norm| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|times_div2| FORMULA-DECL NIL |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|perpR_hmd_tangent_point| FORMULA-DECL NIL |horizontal| NIL))
   SHOSTAK))
 (|neq_hmd_tangent_point| 0
  (|neq_hmd_tangent_point-1| |nil| 3829678284
   ("" (SKEEP)
    (("" (CASE-REPLACE "t=0")
      (("1" (ASSERT) NIL NIL)
       ("2" (EXPAND "hmd_tangent_point")
        (("2" (EXPAND "^")
          (("2" (REWRITE "perpL_scal")
            (("2" (REWRITE "scal_assoc")
              (("2" (NAME-REPLACE "tt" "(D * (1 / norm(nzv))) ")
                (("2" (LEMMA "neq_perpL")
                  (("2" (INST? -1)
                    (("1" (INST -1 "tt") (("1" (FLATTEN) NIL NIL)) NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (^ CONST-DECL "Normalized" |vectors_2D| |vectors|)
    (|perpL| CONST-DECL "Vect2" |perpendicular_2D| |vectors|)
    (D FORMAL-CONST-DECL "posreal" |horizontal| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|scal_assoc| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|neq_perpL| FORMULA-DECL NIL |perpendicular_2D| |vectors|)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|perpL_nz| APPLICATION-JUDGEMENT "Nz_vect2" |perpendicular_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|norm| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|perpL_scal| FORMULA-DECL NIL |perpendicular_2D| |vectors|)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nz_norm_gt_0| APPLICATION-JUDGEMENT "posreal" |vectors_2D| |vectors|)
    (|hmd_tangent_point| CONST-DECL "Nz_vect2" |horizontal| NIL))
   SHOSTAK))
 (|vel_of_hcpa_TCC1| 0
  (|vel_of_hcpa_TCC1-1| NIL 3921241634
   ("" (SKEEP*)
    (("" (SPLIT 2)
      (("1" (LEMMA "horizontal_tca_min")
        (("1" (REPLACES -2 :DIR RL)
          (("1" (INST -1 "v" "s" "t")
            (("1" (REWRITE "horizontal_sq_dtca_eq")
              (("1" (EXPAND "horizontal_tca")
                (("1" (REPLACES -2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (FLATTEN) (("2" (REPLACES -1) (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE-ALL-BUT 1)
        (("2" (EXPAND "gs_only?")
          (("2" (INST 1 "1") (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|scal_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|horizontal_sq_dtca_eq| FORMULA-DECL NIL |definitions| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|v| SKOLEM-CONST-DECL "Vector" |horizontal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|horizontal_tca_min| FORMULA-DECL NIL |definitions| NIL)
    (|gs_only?| CONST-DECL "bool" |definitions| NIL)
    (|nz_nzv| APPLICATION-JUDGEMENT "Nz_vector" |vectors_2D| |vectors|)
    (|scal_1| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|vel_of_hcpa| SUBTYPE "horizontal.v2"
    "{nv2: vectors_2D_def.Vect2 | booleans.IMPLIES(nv2 /= vectors_2D.zero, FORALL (t: reals.real): booleans.AND(reals.>=(vectors_2D.sqv((vectors_2D.+)(horizontal.s, vectors_2D.*(t, ((vectors_2D.-)(horizontal.v1, nv2))))), vectors_2D.sqv(horizontal.s)), definitions.gs_only?(horizontal.v2)(nv2)))}")))
 (|vel_of_hcpa_TCC2| 0
  (|vel_of_hcpa_TCC2-1| NIL 3921241634 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|gs_only?| CONST-DECL "bool" |definitions| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|))
   NIL
   (|vel_of_hcpa| SUBTYPE "vectors_2D.zero"
    "{nv2: vectors_2D_def.Vect2 | booleans.IMPLIES(nv2 /= vectors_2D.zero, FORALL (t: reals.real): booleans.AND(reals.>=(vectors_2D.sqv((vectors_2D.+)(horizontal.s, vectors_2D.*(t, ((vectors_2D.-)(horizontal.v1, nv2))))), vectors_2D.sqv(horizontal.s)), definitions.gs_only?(horizontal.v2)(nv2)))}")))
 (|vel_of_hcpa_TCC3| 0
  (|vel_of_hcpa_TCC3-1| NIL 3921241634 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL (|vel_of_hcpa| SUBTYPE "horizontal.sdotv2" "nznum")))
 (|vel_of_hcpa_TCC4| 0
  (|vel_of_hcpa_TCC4-1| NIL 3921241634
   ("" (SKEEP*)
    (("" (CASE-REPLACE "s*v1 = 0")
      (("1" (REPLACES -4) (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (SPLIT 5)
        (("1" (REPLACES -2)
          (("1" (LEMMA "horizontal_tca_min")
            (("1" (INST -1 "v1-r*v2" "s" "t")
              (("1" (LEMMA "horizontal_sq_dtca_eq")
                (("1" (INST?)
                  (("1" (REPLACES -1)
                    (("1" (CASE-REPLACE "horizontal_tca(s, v1 - r*v2) = 0")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (HIDE -1 2)
                        (("2" (EXPAND "horizontal_tca")
                          (("2" (CROSS-MULT 1)
                            (("2" (NEG-FORMULA)
                              (("2" (REWRITE "dot_sub_right")
                                (("2" (MOVE-TERMS 1 L 2)
                                  (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (REWRITE "sub_eq_zero")
                  (("2" (REPLACES -1 :DIR RL) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "gs_only?") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (|Vect2| TYPE-EQ-DECL NIL |vectors_2D_def| |vectors|)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|zero| CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|Nz_vect2| TYPE-EQ-DECL NIL |vectors_2D| |vectors|)
    (|scal_0| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|gs_only?| CONST-DECL "bool" |definitions| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|v1| SKOLEM-CONST-DECL "Nz_vect2" |horizontal| NIL)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|r| SKOLEM-CONST-DECL "real" |horizontal| NIL)
    (|v2| SKOLEM-CONST-DECL "Nz_vect2" |horizontal| NIL)
    (|horizontal_tca| CONST-DECL "real" |definitions| NIL)
    (|add_zero_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|neg_neg| FORMULA-DECL NIL |extra_tegies| NIL)
    (|neg_one_times| FORMULA-DECL NIL |extra_tegies| NIL)
    (|zero_times1| FORMULA-DECL NIL |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|dot_scal_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|dot_sub_right| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|div_cancel3| FORMULA-DECL NIL |real_props| NIL)
    (|horizontal_sq_dtca_eq| FORMULA-DECL NIL |definitions| NIL)
    (|sub_eq_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|scal_zero| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|sub_eq_args| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|horizontal_tca_min| FORMULA-DECL NIL |definitions| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|vel_of_hcpa| SUBTYPE "vectors_2D.*(horizontal.r, horizontal.v2)"
    "{nv2: vectors_2D_def.Vect2 | booleans.IMPLIES(nv2 /= vectors_2D.zero, FORALL (t: reals.real): booleans.AND(reals.>=(vectors_2D.sqv((vectors_2D.+)(horizontal.s, vectors_2D.*(t, ((vectors_2D.-)(horizontal.v1, nv2))))), vectors_2D.sqv(horizontal.s)), definitions.gs_only?(horizontal.v2)(nv2)))}")))
 (|vel_of_hcpa_TCC5| 0
  (|vel_of_hcpa_TCC5-1| NIL 3921246859 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|gs_only?| CONST-DECL "bool" |definitions| NIL)
    (|sqv| CONST-DECL "nnreal" |vectors_2D| |vectors|)
    (+ CONST-DECL "Vector" |vectors_2D| |vectors|)
    (* CONST-DECL "Vector" |vectors_2D| |vectors|)
    (|comp_zero_y| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (|comp_zero_x| FORMULA-DECL NIL |vectors_2D| |vectors|)
    (* CONST-DECL "real" |vectors_2D| |vectors|)
    (- CONST-DECL "Vector" |vectors_2D| |vectors|))
   NIL
   (|vel_of_hcpa| SUBTYPE "vectors_2D.zero"
    "{nv2: vectors_2D_def.Vect2 | booleans.IMPLIES(nv2 /= vectors_2D.zero, FORALL (t: reals.real): booleans.AND(reals.>=(vectors_2D.sqv((vectors_2D.+)(horizontal.s, vectors_2D.*(t, ((vectors_2D.-)(horizontal.v1, nv2))))), vectors_2D.sqv(horizontal.s)), definitions.gs_only?(horizontal.v2)(nv2)))}"))))

