(|tu_game|
 (|solution_concept_TCC1| 1
  (|solution_concept_TCC1-2| "Manually" 3450690788
   ("" (EXPAND "core")
    (("" (EXPAND "solution_concept?")
      (("" (SKOSIMP)
        (("" (EXPAND "subset?")
          (("" (SKOSIMP)
            (("" (EXPAND "member")
              (("" (EXPAND "core")
                (("" (EXPAND "member")
                  (("" (COMMENT "setFP(g!1) vers setFP[ ]")
                    (("" (EXPAND "setFP")
                      (("" (FLATTEN)
                        (("" (HIDE -2) (("" (GRIND) NIL NIL)) NIL)) NIL))
                      ";;; setFP(g!1) vers setFP[ ]"))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|core| CONST-DECL "set_vect" |imputations| NIL)
    (|setFP| CONST-DECL "set_vect" |imputations| NIL)
    (|setPI| CONST-DECL "set_vect" |imputations| NIL)
    (|tot| CONST-DECL "real" |coalition_fun| NIL))
   SHOSTAK (|solution_concept| SUBTYPE "tu_game.core" "solution_concept"))
  (|solution_concept_TCC1-1| |nil| 3450605344 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|core| CONST-DECL "set_vect(g`1)" |tu_game| NIL)
    (|setFP| CONST-DECL "set_vect(g`1)" |tu_game| NIL)
    (|fullN| CONST-DECL "powset" |coalition_fun| NIL)
    (|tot| CONST-DECL "real" |coalition_fun| NIL)
    (|setPI| CONST-DECL "set_vect" |imputations| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|core| CONST-DECL "set_vect" |imputations| NIL)
    (|setFP| CONST-DECL "set_vect" |imputations| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (|solution_concept?| CONST-DECL "bool" |tu_game| NIL))
   SHOSTAK (|solution_concept| SUBTYPE "tu_game.core" "solution_concept")))
 (|a_test| 0
  (|a_test-2| "With solution_concept?" 3450606167
   ("" (SKOSIMP)
    (("" (TYPEPRED "s!1")
      (("" (EXPAND "solution_concept?") (("" (INST - "g!1") NIL NIL)) NIL))
      NIL))
    NIL)
   ((|solution_concept| NONEMPTY-TYPE-EQ-DECL NIL |tu_game| NIL)
    (|solution_concept?| CONST-DECL "bool" |tu_game| NIL)
    (|set_vect| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK)
  (|a_test-1| |nil| 3450530486
   ("" (SKOSIMP)
    (("" (EXPAND "subset?")
      (("" (SKOSIMP)
        (("" (EXPAND "setFP")
          (("" (EXPAND "member")
            (("" (TYPEPRED "s!1")
              (("" (EXPAND "solution_concept?") (("" (POSTPONE) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL))
   SHOSTAK))
 (|test_param| 0
  (|test_param-1| |nil| 3450604393 ("" (SKOSIMP) (("" (ASSERT) NIL NIL)) NIL)
   NIL SHOSTAK))
 (|tau_v_TCC1| 0
  (|tau_v_TCC1-2| "OK" 3450611682
   ("" (SKOSIMP)
    (("" (EXPAND "coalition_fun?")
      (("" (EXPAND "o")
        (("" (EXPAND "inverse_image")
          (("" (EXPAND "inverse_image")
            (("" (EXPAND "member")
              (("" (EXPAND "emptyset")
                (("" (TYPEPRED "g!1`2")
                  (("" (EXPAND "coalition_fun?")
                    (("" (EXPAND "emptyset") (("" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coalition_fun?| CONST-DECL "bool" |coalition_fun| NIL) NIL
    (|member| CONST-DECL "bool" |sets| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|powset| TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL) NIL
    (O CONST-DECL "T3" |function_props| NIL))
   SHOSTAK
   (|tau_v| SUBTYPE
    "function_props[set[(NN)], powset[U, g`1], real].o(tu_game.g`2, function_image[(tu_game.g`1), (tu_game.NN)].inverse_image(tu_game.tau))"
    "coalition_fun[U, NN]"))
  (|tau_v_TCC1-1| |nil| 3450610898 ("" (SUBTYPE-TCC) NIL NIL)
   ((|coalition_fun?| CONST-DECL "bool" |coalition_fun| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL))
   NIL
   (|tau_v| SUBTYPE
    "function_props[set[(NN)], powset[U, g`1], real].o(tu_game.g`2, function_image[(tu_game.g`1), (tu_game.NN)].inverse_image(tu_game.tau))"
    "coalition_fun[U, NN]")))
 (|tau_x_TCC1| 0
  (|tau_x_TCC1-1| |nil| 3451131861 ("" (EXISTENCE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|tau_type| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL NIL NIL (|surjective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL))
   NIL (|tau_x| EXISTENCE "" "(tu_game.g`1)")))
 (|bstar_TCC1| 0
  (|bstar_TCC1-2| "" 3790341768 ("" (TCC) NIL NIL) NIL SHOSTAK
   (|bstar| SUBTYPE
    "LAMBDA (S: tu_game.powset(tu_game.N)): coalition_fun[tu_game.U, tu_game.N].tot(S, tu_game.b)"
    "coalition_fun[U, N]"))
  (|bstar_TCC1-1| |nil| 3450619785 ("" (TCC))
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|tot| CONST-DECL "real" |coalition_fun| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (|coalition_fun?| CONST-DECL "bool" |coalition_fun| NIL))
   NIL
   (|bstar| SUBTYPE
    "LAMBDA (S: tu_game.powset(tu_game.N)): coalition_fun[tu_game.U, tu_game.N].tot(S, tu_game.b)"
    "coalition_fun[U, N]")))
 (|affinestar_TCC1| 0
  (|affinestar_TCC1-2| "" 3790341768 ("" (TCC) NIL NIL) NIL SHOSTAK
   (|affinestar| SUBTYPE
    "LAMBDA (S: tu_game.powset(tu_game.N)): (number_fields.+)(number_fields.*(tu_game.a, tu_game.v(S)), tu_game.bstar(tu_game.N, tu_game.b)(S))"
    "coalition_fun[U, N]"))
  (|affinestar_TCC1-1| |nil| 3450619785 ("" (TCC))
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|powset| TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|tot| CONST-DECL "real" |coalition_fun| NIL)
    (|bstar| CONST-DECL "coalition_fun[U, N]" |tu_game| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|sum| DEF-DECL "R" |finite_sets_sum| |finite_sets|)
    (|coalition_fun?| CONST-DECL "bool" |coalition_fun| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|affinestar| SUBTYPE
    "LAMBDA (S: tu_game.powset(tu_game.N)): (number_fields.+)(number_fields.*(tu_game.a, tu_game.v(S)), tu_game.bstar(tu_game.N, tu_game.b)(S))"
    "coalition_fun[U, N]")))
 (|interch_impl_desir| 0
  (|interch_impl_desir-1| |nil| 3463556569
   ("" (SKOSIMP) (("" (GRIND) NIL NIL)) NIL)
   ((|more_desirable?| CONST-DECL "bool" |tu_game| NIL)
    (|interchangeable?| CONST-DECL "bool" |tu_game| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL)
   SHOSTAK))
 (|interch_is_sym| 0
  (|interch_is_sym-1| |nil| 3463556524
   ("" (SKOSIMP) (("" (EXPAND "interchangeable?") (("" (GRIND) NIL NIL)) NIL))
    NIL)
   ((|interchangeable?| CONST-DECL "bool" |tu_game| NIL) NIL
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   SHOSTAK))
 (|DES_implies_ETP| 0
  (|DES_implies_ETP-2| "" 3463557186
   ("" (SKOSIMP)
    (("" (EXPAND "ETP")
      (("" (SKOSIMP)
        (("" (EXPAND "DES")
          (("" (INST-CP - "g!1" "x!1" "i!1" "j!1")
            (("" (INST - "g!1" "x!1" "j!1" "i!1")
              (("" (LEMMA "interch_impl_desir" ("g" "g!1" "i" "i!1" "j" "j!1"))
                ((""
                  (LEMMA "interch_impl_desir" ("g" "g!1" "i" "j!1" "j" "i!1"))
                  (("" (LEMMA "interch_is_sym" ("g" "g!1" "i" "i!1" "j" "j!1"))
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((ETP CONST-DECL "bool" |tu_game| NIL) (DES CONST-DECL "bool" |tu_game| NIL)
    (|interch_is_sym| FORMULA-DECL NIL |tu_game| NIL)
    (|interch_impl_desir| FORMULA-DECL NIL |tu_game| NIL)
    (|solution_concept| NONEMPTY-TYPE-EQ-DECL NIL |tu_game| NIL)
    (|solution_concept?| CONST-DECL "bool" |tu_game| NIL)
    (|set_vect| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL))
   SHOSTAK)
  (|DES_implies_ETP-1| |nil| 3450619978
   ("" (SKOSIMP)
    (("" (EXPAND "ETP")
      (("" (SKOSIMP)
        (("" (SKOSIMP)
          (("" (EXPAND "DES")
            (("" (INST - "g!1")
              (("" (INST - "x!1")
                (("" (SKOLEM!)
                  (("" (INST-CP - "i!1" "j!1")
                    (("" (INST - "j!1" "i!1")
                      (("" (FLATTEN)
                        (("" (LEMMA "DES_ETP_lemma2" ("g" "g!1"))
                          (("" (INST - "i!1" "j!1") (("" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL))
   SHOSTAK))
 (|SIVA_implies_NE| 0
  (|SIVA_implies_NE-1| |nil| 3450530028
   ("" (SKOSIMP)
    (("" (EXPAND "NE")
      (("" (EXPAND "SIVA")
        (("" (SKOSIMP)
          (("" (INST - "g!1")
            (("" (REWRITE "nonempty_card") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((NE CONST-DECL "bool" |tu_game| NIL)
    (|nonempty_card| FORMULA-DECL NIL |finite_sets| NIL)
    (|set_vect| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|solution_concept?| CONST-DECL "bool" |tu_game| NIL)
    (|solution_concept| NONEMPTY-TYPE-EQ-DECL NIL |tu_game| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|tu_game| TYPE-EQ-DECL NIL |tu_game| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (SIVA CONST-DECL "bool" |tu_game| NIL))
   SHOSTAK))
 (|PO_core| 0
  (|PO_core-1| |nil| 3450692276 ("" (GRIND) NIL NIL)
   ((|core| CONST-DECL "set_vect(g`1)" |tu_game| NIL)
    (|setPI| CONST-DECL "set_vect(g`1)" |tu_game| NIL)
    (|fullN| CONST-DECL "powset" |coalition_fun| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|tot| CONST-DECL "real" |coalition_fun| NIL)
    (|setPI| CONST-DECL "set_vect" |imputations| NIL)
    (|core| CONST-DECL "set_vect" |imputations| NIL)
    (|subset?| CONST-DECL "bool" |sets| NIL)
    (PO CONST-DECL "bool" |tu_game| NIL))
   SHOSTAK))
 (|affine_bij| 0
  (|affine_bij-1| |nil| 3451305234
   ("" (SKOSIMP)
    (("" (EXPAND "affineinv")
      (("" (EXPAND "affine")
        (("" (EXPAND "lin")
          (("" (EXPAND "dif") (("" (APPLY-EXTENSIONALITY) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|affineinv| CONST-DECL "[(N) -> real]" |tu_game| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|lin| CONST-DECL "real" |tu_game| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|dif| CONST-DECL "real" |tu_game| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|affine| CONST-DECL "[(N) -> real]" |tu_game| NIL))
   SHOSTAK))
 (|COV_core| 0
  (|COV_core-1| |nil| 3450701509
   ("" (EXPAND "COV")
    (("" (SKOSIMP)
      (("" (EXPAND "core")
        (("" (APPLY-EXTENSIONALITY :HIDE? T)
          (("" (EXPAND "core")
            (("" (EXPAND "image")
              (("" (IFF)
                (("" (SPLIT)
                  (("1" (SKOSIMP)
                    (("1" (NAME "y" "affineinv(N!1,a!1,b!1)(x!1)")
                      (("1" (INST + "y")
                        (("1" (REPLACE -1 :DIR RL)
                          (("1" (HIDE -) (("1" (REWRITE "affine_bij") NIL NIL))
                            NIL))
                          NIL)
                         ("2" (SPLIT)
                          (("1" (HIDE -3)
                            (("1" (EXPAND "member")
                              (("1" (EXPAND "setPI")
                                (("1" (REPLACE -1 :DIR RL)
                                  (("1" (EXPAND "affineinv")
                                    (("1" (EXPAND "affinestar")
                                      (("1"
                                        (REWRITE-LEMMA "tot_div_const"
                                         ("S" "fullN[U,N!1]" "a" "a!1" "x"
                                          "dif(N!1, x!1, b!1)"))
                                        (("1" (HIDE -1)
                                          (("1" (EXPAND "dif")
                                            (("1"
                                              (REWRITE-LEMMA "tot_distrib_sub"
                                               ("S" "fullN[U,N!1]" "x" "x!1"
                                                "y" "b!1"))
                                              (("1" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -2)
                            (("2" (SKOSIMP)
                              (("2" (INST - "S!1")
                                (("2" (REPLACE -1 :DIR RL)
                                  (("2" (EXPAND "affineinv")
                                    (("2"
                                      (REWRITE-LEMMA "tot_div_const"
                                       ("S" "S!1" "a" "a!1" "x"
                                        "dif(N!1, x!1, b!1)"))
                                      (("2" (EXPAND "dif")
                                        (("2"
                                          (REWRITE-LEMMA "tot_distrib_sub"
                                           ("S" "S!1" "x" "x!1" "y" "b!1"))
                                          (("2" (EXPAND "affinestar")
                                            (("2" (EXPAND "bstar")
                                              (("2" (EXPAND ">=")
                                                (("2"
                                                  (REWRITE "div_mult_pos_le2" +
                                                   ("py" "a!1"))
                                                  (("2" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKOSIMP)
                    (("2" (SKOSIMP)
                      (("2" (SPLIT)
                        (("1" (TYPEPRED "x!2")
                          (("1" (HIDE -2)
                            (("1" (EXPAND "member")
                              (("1" (EXPAND "setPI")
                                (("1" (REPLACE -2)
                                  (("1" (HIDE -2)
                                    (("1" (EXPAND "affinestar")
                                      (("1" (EXPAND "affine")
                                        (("1" (EXPAND "bstar")
                                          (("1" (EXPAND "fullN")
                                            (("1"
                                              (REWRITE-LEMMA "tot_distrib"
                                               ("S" "fullset[(N!1)]" "x"
                                                "lin(N!1,a!1,x!2)" "y" "b!1"))
                                              (("1" (EXPAND "lin")
                                                (("1" (EXPAND "tot")
                                                  (("1" (REWRITE "sum_mult")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (TYPEPRED "x!2")
                            (("2" (INST - "S!1")
                              (("2" (EXPAND "affinestar")
                                (("2" (EXPAND "bstar")
                                  (("2" (EXPAND "affine")
                                    (("2" (REPLACE -3)
                                      (("2"
                                        (REWRITE-LEMMA "tot_distrib"
                                         ("S" "S!1" "x" "lin(N!1,a!1,x!2)" "y"
                                          "b!1"))
                                        (("2" (EXPAND "lin")
                                          (("2" (LEMMA "both_sides_plus_ge2")
                                            (("2"
                                              (BOTH-SIDES "-" "tot(S!1, b!1)"
                                               1)
                                              (("2" (ASSERT)
                                                (("2" (HIDE-ALL-BUT (-2) -)
                                                  (("2"
                                                    (REWRITE-LEMMA
                                                     "tot_mult_const"
                                                     ("S" "S!1" "c" "a!1" "x"
                                                      "x!2"))
                                                    (("2"
                                                      (BOTH-SIDES "/" "a!1" 1)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((COV CONST-DECL "bool" |tu_game| NIL)
    (|core| CONST-DECL "set_vect(g`1)" |tu_game| NIL)
    (|sum_mult| FORMULA-DECL NIL |finite_sets_sum_real| |finite_sets|)
    (|lin| CONST-DECL "real" |tu_game| NIL)
    (|tot_distrib| FORMULA-DECL NIL |coalition_fun| NIL)
    (|both_sides_plus_ge2| FORMULA-DECL NIL |real_props| NIL)
    (|tot_mult_const| FORMULA-DECL NIL |coalition_fun| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|both_sides_div_pos_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|both_sides_times_pos_ge2| FORMULA-DECL NIL |real_props| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|both_sides_minus_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|both_sides_plus_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|tot| CONST-DECL "real" |coalition_fun| NIL)
    (|setPI| CONST-DECL "set_vect" |imputations| NIL)
    (|v!1| SKOLEM-CONST-DECL "coalition_fun[U, N!1]" |tu_game| NIL)
    (|y| SKOLEM-CONST-DECL "[(N!1) -> real]" |tu_game| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (N!1 SKOLEM-CONST-DECL "players_set[U]" |tu_game| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|affine_bij| FORMULA-DECL NIL |tu_game| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|div_mult_pos_le2| FORMULA-DECL NIL |real_props| NIL)
    (|tot_div_const| FORMULA-DECL NIL |coalition_fun| NIL)
    (|fullN| CONST-DECL "powset" |coalition_fun| NIL)
    (|dif| CONST-DECL "real" |tu_game| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|bstar| CONST-DECL "coalition_fun[U, N]" |tu_game| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|tot_distrib_sub| FORMULA-DECL NIL |coalition_fun| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|affineinv| CONST-DECL "[(N) -> real]" |tu_game| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|players_set| NONEMPTY-TYPE-EQ-DECL NIL |players_set| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (U FORMAL-NONEMPTY-TYPE-DECL NIL |tu_game| NIL)
    (|affine| CONST-DECL "[(N) -> real]" |tu_game| NIL)
    (|image| CONST-DECL "set[R]" |function_image| NIL)
    (|core| CONST-DECL "set_vect" |imputations| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|affinestar| CONST-DECL "coalition_fun[U, N]" |tu_game| NIL)
    (|coalition_fun| NONEMPTY-TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|coalition_fun?| CONST-DECL "bool" |coalition_fun| NIL)
    (|powset| TYPE-EQ-DECL NIL |coalition_fun| NIL)
    (|set_vect| TYPE-EQ-DECL NIL |coalition_fun| NIL))
   SHOSTAK)))

