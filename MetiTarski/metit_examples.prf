(|metit_examples|
 (|simple| 0
  (|simple-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|simple_abs| 0
  (|simple_abs-1| |nil| 3600858779
   ("" (SKEEP :PREDS? T) (("" (METIT (-3 -4 1)) NIL NIL)) NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|sqrtx3_TCC1| 0
  (|sqrtx3_TCC1-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|[\|\|]| CONST-DECL "Interval" |interval| |interval_arith|)
    (|##| CONST-DECL "bool" |interval| |interval_arith|))
   NIL (|sqrtx3| SUBTYPE "metit_examples.x" "nonneg_real")))
 (|sqrtx3| 0
  (|sqrtx3-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|tr_35_TCC1| 0
  (|tr_35_TCC1-1| |nil| 3600858465
   ("" (SKEEP) (("" (EXPAND "Tan?") (("" (METIT *) NIL NIL)) NIL)) NIL)
   ((|Tan?| CONST-DECL "bool" |trig_basic| |trig|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|))
   NIL
   (|tr_35| SUBTYPE
    "number_fields./(number_fields.*(metit_examples.phi, pi_def.pi), 180)"
    "(trig_basic.Tan?)")))
 (|tr_35| 0
  (|tr_35-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|tr_35_le_TCC1| 0
  (|tr_35_le_TCC1-1| |nil| 3600858465
   ("" (EXPAND "Tan?") (("" (METIT) NIL NIL)) NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Tan?| CONST-DECL "bool" |trig_basic| |trig|))
   NIL
   (|tr_35_le| SUBTYPE "number_fields./(number_fields.*(35, pi_def.pi), 180)"
    "(trig_basic.Tan?)")))
 (|tr_35_le| 0
  (|tr_35_le-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|sqrt23| 0
  (|sqrt23-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|sin6sqrt2| 0
  (|sin6sqrt2-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (G_TCC1 0
  (G_TCC1-1 |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (G SUBTYPE "(number_fields.-)(1, metit_examples.x)" "posreal")))
 (|A_and_S| 0
  (|A_and_S-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|r_TCC1| 0
  (|r_TCC1-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((/= CONST-DECL "boolean" |notequal| NIL)) NIL
   (|r| SUBTYPE "3"
    "{i: integers.int | booleans.OR(metit_examples.x /= 0, reals.>=(i, 0))}")))
 (|r_TCC2| 0
  (|r_TCC2-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((/= CONST-DECL "boolean" |notequal| NIL)) NIL
   (|r| SUBTYPE "5"
    "{i: integers.int | booleans.OR(metit_examples.x /= 0, reals.>=(i, 0))}")))
 (|atan_implementation| 0
  (|atan_implementation-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ajn| 0
  (|ajn-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|double_quad_simple_min| 0
  (|double_quad_simple_min-2| "" 3790099872
   ("" (SKEEP :PREDS? T)
    (("" (GRIND) (("" (METIT (-2 -4 -11 1)) NIL NIL)) NIL)) NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|quad| CONST-DECL "real" |double_quadratic| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   SHOSTAK)
  (|double_quad_simple_min-1| |nil| 3664050699
   ("" (THEN (SKEEP :PREDS? T) (GRIND) (METIT (-2 -4 -11 1))) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|ex1_ba_TCC1| 0
  (|ex1_ba_TCC1-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((|[\|\|]| CONST-DECL "Interval" |interval| |interval_arith|)
    (|##| CONST-DECL "bool" |interval| |interval_arith|)
    (/= CONST-DECL "boolean" |notequal| NIL))
   NIL
   (|ex1_ba| SUBTYPE "2"
    "{i: integers.int | booleans.OR(metit_examples.x /= 0, reals.>=(i, 0))}")))
 (|ex1_ba_TCC2| 0
  (|ex1_ba_TCC2-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|[\|\|]| CONST-DECL "Interval" |interval| |interval_arith|)
    (|##| CONST-DECL "bool" |interval| |interval_arith|))
   NIL (|ex1_ba| SUBTYPE "(number_fields.+)(1, metit_examples.x)" "posreal")))
 (|ex1_ba| 0
  (|ex1_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ex2_ba_TCC1| 0
  (|ex2_ba_TCC1-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|[\|\|]| CONST-DECL "Interval" |interval| |interval_arith|)
    (|##| CONST-DECL "bool" |interval| |interval_arith|))
   NIL (|ex2_ba| SUBTYPE "(number_fields.-)(1, metit_examples.x)" "posreal")))
 (|ex2_ba| 0
  (|ex2_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ex3_ba_TCC1| 0
  (|ex3_ba_TCC1-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|[\|\|]| CONST-DECL "Interval" |interval| |interval_arith|)
    (|##| CONST-DECL "bool" |interval| |interval_arith|))
   NIL (|ex3_ba| SUBTYPE "(number_fields.-)(1, metit_examples.x)" "posreal")))
 (|ex3_ba| 0
  (|ex3_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ex4_ba| 0
  (|ex4_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ex5_ba_TCC1| 0
  (|ex5_ba_TCC1-1| |nil| 3600858465 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|[\|\|]| CONST-DECL "Interval" |interval| |interval_arith|)
    (|##| CONST-DECL "bool" |interval| |interval_arith|))
   NIL (|ex5_ba| SUBTYPE "(number_fields.+)(1, metit_examples.x)" "posreal")))
 (|ex5_ba| 0
  (|ex5_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ex6_ba| 0
  (|ex6_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ex7_ba| 0
  (|ex7_ba-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|quadratic| 0
  (|quadratic-1| |nil| 3600858510 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|Tunnel_3_IL| 0
  (|Tunnel_3_IL-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|Tunnel_3_IL_LU| 0
  (|Tunnel_3_IL_LU-1| |nil| 3600858779 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|Ayad_Marche| 0
  (|Ayad_Marche-1| |nil| 3600858545 ("" (METIT) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK)))

