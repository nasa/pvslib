(|arccos| (|IMP_derivative_props_TCC1| 0 (|IMP_derivative_props_TCC1-1| |nil| 3708362116 ("" (ASSUMING-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)) NIL (|IMP_derivative_props| ASSUMING "derivative_props[posreal_lt_pi].derivative_props" "connected_domain: ASSUMPTION deriv_domain_def[T].connected?"))) (|IMP_derivative_props_TCC2| 0 (|IMP_derivative_props_TCC2-1| |nil| 3708362116 ("" (EXPAND "not_one_element?") (("" (SKOSIMP*) (("" (INST-CP + "pi/4") (("" (INST-CP + "pi/2") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)) NIL (|IMP_derivative_props| ASSUMING "derivative_props[posreal_lt_pi].derivative_props" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|cos_restrict_range| 0 (|cos_restrict_range-1| |nil| 3706882260 ("" (SKOSIMP*) (("" (CASE "cos(x!1) = -1 IMPLIES x!1 = pi") (("1" (CASE "cos(x!1) = 1 IMPLIES x!1 = 0") (("1" (GROUND) NIL NIL) ("2" (HIDE -1 2) (("2" (FLATTEN) (("2" (LEMMA "cos_eq_1") (("2" (INST?) (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (HIDE -2) (("2" (CASE "i!1 = 0") (("1" (ASSERT) NIL NIL) ("2" (CASE "i!1 >= 1") (("1" (ASSERT) (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "i!1 <= -1") (("1" (ASSERT) (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (FLATTEN) (("2" (LEMMA "cos_eq_m1") (("2" (INST?) (("2" (ASSERT) (("2" (SKOSIMP*) (("2" (CASE "i!1 = 0") (("1" (ASSERT) NIL NIL) ("2" (CASE "i!1 >= 1") (("1" (ASSERT) (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (CASE "i!1 <= -1") (("1" (ASSERT) (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|cos_eq_1| FORMULA-DECL NIL |trig_basic| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (<= CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cos_eq_m1| FORMULA-DECL NIL |trig_basic| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|cos_restrict_TCC1| 0 (|cos_restrict_TCC1-1| |nil| 3707142920 ("" (SKOSIMP*) (("" (LEMMA "cos_restrict_range") (("" (INST?) NIL NIL)) NIL)) NIL) ((|cos_restrict_range| FORMULA-DECL NIL |arccos| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL)) NIL (|cos_restrict| SUBTYPE "sincos_def.cos(arccos.x)" "real_abs_lt1"))) (|cos_restrict_inj| 0 (|cos_restrict_inj-1| |nil| 3707144475 ("" (EXPAND "injective?") (("" (SKOSIMP*) (("" (CASE "x1!1 <= x2!1") (("1" (LEMMA "cos_decreasing") (("1" (INST - "x2!1" "x1!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "x2!1") (("2" (LEMMA "cos_decreasing") (("2" (INST - "x1!1" "x2!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|cos_decreasing| FORMULA-DECL NIL |trig_ineq| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|injective?| CONST-DECL "bool" |functions| NIL)) NIL)) (|cos_restrict_surj| 0 (|cos_restrict_surj-1| |nil| 3707143124 ("" (EXPAND "surjective?") (("" (SKOSIMP*) (("" (LEMMA "intermediate_value4[0,pi]") (("1" (INST - "cos" "y!1") (("1" (ASSERT) (("1" (EXPAND "restrict") (("1" (REWRITE "cos_pi") (("1" (REWRITE "cos_0") (("1" (ASSERT) (("1" (SPLIT -1) (("1" (SKOSIMP*) (("1" (INST + "c!1") (("1" (ASSERT) (("1" (TYPEPRED "c!1") (("1" (CASE-REPLACE "c!1 = pi") (("1" (REWRITE "cos_pi") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) (("2" (CASE-REPLACE "c!1 = 0") (("1" (REWRITE "cos_0") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "continuous?") (("2" (SKOSIMP*) (("2" (LEMMA "cos_continuous") (("2" (INST?) (("2" (EXPAND "continuous?") (("2" (SKOSIMP*) (("2" (INST - "epsilon!1") (("2" (SKOSIMP*) (("2" (INST + "delta!1") (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (J NONEMPTY-TYPE-EQ-DECL NIL |continuity_interval| |analysis|) (|restrict| CONST-DECL "R" |restrict| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|cos_0| FORMULA-DECL NIL |sincos_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|c!1| SKOLEM-CONST-DECL "J[0, pi]" |arccos| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|) (|cos_continuous| FORMULA-DECL NIL |sincos| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|continuous?| CONST-DECL "bool" |continuous_functions| |analysis|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|cos_pi| FORMULA-DECL NIL |sincos| NIL) (<= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (< CONST-DECL "bool" |reals| NIL) (> CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|intermediate_value4| FORMULA-DECL NIL |continuity_interval| |analysis|) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|surjective?| CONST-DECL "bool" |functions| NIL)) NIL)) (|cos_restrict_bij| 0 (|cos_restrict_bij-1| |nil| 3707144441 ("" (EXPAND "bijective?") (("" (LEMMA "cos_restrict_surj") (("" (ASSERT) (("" (LEMMA "cos_restrict_inj") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|cos_restrict_surj| FORMULA-DECL NIL |arccos| NIL) (|cos_restrict_inj| FORMULA-DECL NIL |arccos| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL)) NIL)) (|del_neigh_lem2| 0 (|del_neigh_lem2-1| |nil| 3707145720 ("" (EXPAND "del_neigh_all?") (("" (SKOSIMP*) (("" (INST + "min(a!1/2,(pi-a!1)/2)") (("1" (SKOSIMP*) (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|a!1| SKOLEM-CONST-DECL "posreal_lt_pi" |arccos| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|del_neigh_all?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)) SHOSTAK)) (|deriv_cos_restrict| 0 (|deriv_cos_restrict-2| |nil| 3707145754 ("" (LEMMA "derivable_cos") (("" (LEMMA "derivable_subtype[real,posreal_lt_pi]") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict") (("" (ASSERT) (("" (LEMMA "deriv_subtype[real,posreal_lt_pi]") (("" (INST?) (("" (ASSERT) (("" (SPLIT -1) (("1" (EXPAND "restrict") (("1" (ASSERT) (("1" (LEMMA "deriv_cos_fun") (("1" (REPLACE -1) (("1" (EXPAND "-") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (LEMMA "del_neigh_lem2") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|noa_posreal_lt_pi| FORMULA-DECL NIL |sincos| NIL) (|deriv_domain_posreal_lt_pi| FORMULA-DECL NIL |sincos| NIL) (- CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|deriv_cos_fun| FORMULA-DECL NIL |sincos| NIL) (|del_neigh_lem2| FORMULA-DECL NIL |arccos| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|deriv_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|) (|restrict| CONST-DECL "R" |restrict| NIL) (|derivable_cos| FORMULA-DECL NIL |sincos_def| NIL)) NIL) (|deriv_cos_restrict-1| |nil| 3707144837 ("" (LEMMA "derivable_cos") (("" (LEMMA "derivable_subtype[real,posreal_lt_pi]") (("" (INST?) (("" (ASSERT) (("" (EXPAND "restrict") (("" (ASSERT) (("" (LEMMA "deriv_subtype[real,posreal_lt_pi]") (("" (INST?) (("" (ASSERT) (("" (SPLIT -1) (("1" (EXPAND "restrict") (("1" (ASSERT) (("1" (LEMMA "deriv_cos_fun") (("1" (REPLACE -1) (("1" (EXPAND "-") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (EXPAND "del_neigh_all?") (("2" (SKOSIMP*) (("2" (TYPEPRED "a!1") (("2" (INST + "min(a!1/2,(pi-a!1)/2)") (("1" (SKOSIMP*) (("1" (GRIND) NIL NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL)) (|arc_cos_exists| 0 (|arc_cos_exists-3| "" 3790092583 ("" (LEMMA "cos_restrict_range") (("" (INST + "inverse[posreal_lt_pi,real_abs_lt1](cos_restrict)") (("" (SKOSIMP*) (("" (LEMMA "inverse_surjective[posreal_lt_pi,real_abs_lt1]") (("" (INST?) (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_surj") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|inverse| CONST-DECL "D" |function_inverse| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|inverse_surjective| FORMULA-DECL NIL |function_inverse| NIL) (|cos_restrict_surj| FORMULA-DECL NIL |arccos| NIL) (|surjective?| CONST-DECL "bool" |functions| NIL) (|cos_restrict_range| FORMULA-DECL NIL |arccos| NIL)) SHOSTAK) (|arc_cos_exists-2| |nil| 3707142798 ("" (LEMMA "cos_restrict_range") (("" (INST + "inverse[posreal_lt_pi,real_abs_lt1](cos_restrict)") (("1" (SKOSIMP*) (("1" (LEMMA "inverse_surjective[posreal_lt_pi,real_abs_lt1]") (("1" (INST?) (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_surj") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (INST?) (("3" (FLATTEN) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (INST?) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|arc_cos_exists-1| |nil| 3707142764 ("" (LEMMA "cos_restrict_range") (("" (INST + "inverse[real_abs_lt_pi2,real_abs_lt1](cos_restrict)") (("1" (SKOSIMP*) (("1" (LEMMA "inverse_surjective[real_abs_lt_pi2,real_abs_lt1]") (("1" (INST?) (("1" (ASSERT) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_surj") (("2" (PROPAX) NIL))))) ("3" (ASSERT) (("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (INST?) (("3" (FLATTEN) (("3" (ASSERT) NIL))))))))))))))))) ("2" (SKOSIMP*) (("2" (INST?) (("2" (FLATTEN) (("2" (ASSERT) NIL)))))))))) NIL) NIL NIL)) (|arc_cos_TCC1| 0 (|arc_cos_TCC1-2| "" 3790092583 ("" (LEMMA ARC_COS_EXISTS) (("" (PROPAX) NIL NIL)) NIL) ((|arc_cos_exists| FORMULA-DECL NIL |arccos| NIL)) SHOSTAK (|arc_cos| EXISTENCE "" "[y: real_abs_lt1 -> {x: trig_types.posreal_lt_pi | y = sincos_def.cos(x)}]")) (|arc_cos_TCC1-1| |nil| 3408970754 ("" (LEMMA ARC_COS_EXISTS) (("" (SKOSIMP*) (("" (INST?) (("" (SKOSIMP*) (("" (ASSERT) (("" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL) NIL (|arc_cos| EXISTENCE "" "[y: real_abs_lt1 -> {x: trig_types.posreal_lt_pi | y = sincos_def.cos(x)}]"))) (|arc_cos_inverse| 0 (|arc_cos_inverse-3| "" 3882467523 ("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (LEMMA "inverse_injective[posreal_lt_pi,real_abs_lt1]") (("1" (INST - "arc_cos(x!1)" "(LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_inj") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (HIDE -1 -2 2) (("3" (SKOSIMP*) (("3" (LEMMA "cos_restrict_range") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "cos_restrict_range") (("2" (PROPAX) NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|arc_cos_inverse-2| "" 3790092583 ("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (LEMMA "inverse_injective[posreal_lt_pi,real_abs_lt1]") (("1" (INST - "arc_cos(x!1)" "(LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_inj") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (HIDE -1 -2 2) (("3" (SKOSIMP*) (("3" (LEMMA "cos_restrict_range") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (LEMMA "cos_restrict") (("2" (REPLACE -1 * RL) (("2" (HIDE -1) (("2" (LEMMA "inverse_surjective[posreal_lt_pi, real_abs_lt1]") (("2" (INST?) (("1" (EXPAND "cos_restrict") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA COS_RESTRICT_SURJ) (("2" (ASSERT) (("2" (EXPAND "cos_restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "cos_restrict_range") (("3" (PROPAX) NIL NIL)) NIL)) NIL) ((|inverse_injective| FORMULA-DECL NIL |function_inverse| NIL) (|cos_restrict_range| FORMULA-DECL NIL |arccos| NIL) (|cos_restrict_inj| FORMULA-DECL NIL |arccos| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|inverse| CONST-DECL "D" |function_inverse| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL)) SHOSTAK) (|arc_cos_inverse-1| |nil| 3707146068 ("" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (LEMMA "inverse_injective[posreal_lt_pi,real_abs_lt1]") (("1" (INST - "arc_cos(x!1)" "(LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_inj") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (HIDE -1 -2 2) (("3" (SKOSIMP*) (("3" (LEMMA "cos_restrict_range") (("3" (INST?) (("3" (ASSERT) (("3" (FLATTEN) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (LEMMA "cos_restrict") (("2" (REPLACE -1 * RL) (("2" (HIDE -1) (("2" (LEMMA "inverse_surjective[posreal_lt_pi, real_abs_lt1]") (("2" (INST?) (("1" (EXPAND "cos_restrict") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA COS_RESTRICT_SURJ) (("2" (ASSERT) (("2" (EXPAND "cos_restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "cos_restrict_range") (("3" (ASSERT) (("3" (SKOSIMP*) (("3" (INST?) (("3" (FLATTEN) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL)) (|cos_arc_cos| 0 (|cos_arc_cos-2| |nil| 3707146111 ("" (SKOSIMP*) (("" (TYPEPRED "arc_cos(y!1)") (("" (ASSERT) NIL NIL)) NIL)) NIL) ((|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL)) NIL) (|cos_arc_cos-1| |nil| 3408970791 ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) (NIL) SHOSTAK)) (|arc_cos_cos| 0 (|arc_cos_cos-2| |nil| 3707146146 ("" (SKOSIMP*) (("" (TYPEPRED "arc_cos(cos(x!1))") (("" (LEMMA "cos_restrict_inj") (("" (EXPAND "injective?") (("" (INST - "x!1" "arc_cos(cos(x!1))") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|cos_restrict_inj| FORMULA-DECL NIL |arccos| NIL)) NIL) (|arc_cos_cos-1| |nil| 3408971160 ("" (SKOSIMP*) (("" (TYPEPRED "arc_cos(cos(x!1))") (("" (POSTPONE) NIL NIL)) NIL)) NIL) (NIL) SHOSTAK)) (|arc_cos_derivable_TCC1| 0 (|arc_cos_derivable_TCC1-1| |nil| 3707469805 ("" (LEMMA "deriv_domain_open") (("" (INST - "-1" "1") NIL NIL)) NIL) ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|deriv_domain_open| FORMULA-DECL NIL |deriv_domain| |analysis|)) NIL (|arc_cos_derivable| ASSUMING "analysis@derivatives[real_abs_lt1].derivatives" "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"))) (|arc_cos_derivable_TCC2| 0 (|arc_cos_derivable_TCC2-1| |nil| 3707469805 ("" (EXPAND "not_one_element?") (("" (SKOSIMP*) (("" (INST-CP + "0") (("" (INST-CP + "1/2") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)) NIL (|arc_cos_derivable| ASSUMING "analysis@derivatives[real_abs_lt1].derivatives" "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"))) (|arc_cos_derivable| 0 (|arc_cos_derivable-3| "" 3790092584 ("" (LEMMA "inverse_derivable_fun[posreal_lt_pi,real_abs_lt1]") (("1" (INST - "(LAMBDA (x: posreal_lt_pi): cos(x))" "(LAMBDA (x: real_abs_lt1): arc_cos(x))" "deriv[posreal_lt_pi](LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (SPLIT -1) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "deriv_cos_restrict") (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (LEMMA "cos_restrict_bij") (("3" (PROPAX) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (EXPAND "inverse?") (("4" (SKOSIMP*) (("4" (TYPEPRED "arc_cos(r!1)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (LEMMA "deriv_cos") (("2" (INST?) (("2" (LEMMA "deriv_subtype[real,posreal_lt_pi]") (("2" (INST?) (("2" (ASSERT) (("2" (SPLIT -1) (("1" (EXPAND "restrict") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (HIDE -1 -2) (("1" (TYPEPRED "x1!1") (("1" (LEMMA "sin_eq_0_2pi") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (LEMMA "cos_derivable_fun") (("2" (ASSERT) (("2" (LEMMA "derivable_subtype[real,posreal_lt_pi]") (("2" (INST?) (("2" (ASSERT) (("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "cos_derivable_fun") (("2" (PROPAX) NIL NIL)) NIL) ("3" (LEMMA DEL_NEIGH_LEM2) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "deriv_cos_restrict") (("3" (FLATTEN) NIL NIL)) NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "x!1") (("4" (LEMMA "cos_restrict_range") (("4" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "connected?") (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (EXPAND "connected?") (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|derivable?| CONST-DECL "bool" |derivatives| |analysis|) (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|) (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|inverse?| CONST-DECL "bool" |function_inverse_def| NIL) (|cos_restrict_bij| FORMULA-DECL NIL |arccos| NIL) (|deriv_cos_restrict| FORMULA-DECL NIL |arccos| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|deriv_domain_posreal_lt_pi| FORMULA-DECL NIL |sincos| NIL) (|derivable_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|) (|cos_derivable_fun| FORMULA-DECL NIL |sincos| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|sin_eq_0_2pi| FORMULA-DECL NIL |sincos| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|del_neigh_lem2| FORMULA-DECL NIL |arccos| NIL) (|noa_posreal_lt_pi| FORMULA-DECL NIL |sincos| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|deriv_subtype| FORMULA-DECL NIL |derivatives_subtype| |analysis|) (|deriv_cos| FORMULA-DECL NIL |sincos_def| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|cos_restrict_range| FORMULA-DECL NIL |arccos| NIL) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|inverse_derivable_fun| FORMULA-DECL NIL |derivative_inverse| |analysis|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL)) SHOSTAK) (|arc_cos_derivable-2| |nil| 3707220987 ("" (LEMMA "inverse_derivable_fun[posreal_lt_pi,real_abs_lt1]") (("1" (INST - "(LAMBDA (x: posreal_lt_pi): cos(x))" "(LAMBDA (x: real_abs_lt1): arc_cos(x))" "deriv[posreal_lt_pi](LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (SPLIT -1) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "deriv_cos_restrict") (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (LEMMA "cos_restrict_bij") (("3" (PROPAX) NIL NIL)) NIL) ("4" (HIDE 2) (("4" (EXPAND "inverse?") (("4" (SKOSIMP*) (("4" (TYPEPRED "arc_cos(r!1)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (LEMMA "deriv_cos") (("2" (INST?) (("2" (LEMMA "deriv_subtype[real,posreal_lt_pi]") (("2" (INST?) (("2" (ASSERT) (("2" (SPLIT -1) (("1" (EXPAND "restrict") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (HIDE -1 -2) (("1" (TYPEPRED "x1!1") (("1" (LEMMA "sin_eq_0_2pi") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (LEMMA "cos_derivable_fun") (("2" (ASSERT) (("2" (LEMMA "derivable_subtype[real,posreal_lt_pi]") (("2" (INST?) (("2" (ASSERT) (("2" (EXPAND "restrict") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "cos_derivable_fun") (("2" (PROPAX) NIL NIL)) NIL) ("3" (LEMMA DEL_NEIGH_LEM2) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "deriv_cos_restrict") (("3" (FLATTEN) NIL NIL)) NIL) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "x!1") (("4" (LEMMA "cos_restrict_range") (("4" (INST?) (("4" (ASSERT) (("4" (FLATTEN) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "connected?") (("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (EXPAND "connected?") (("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|arc_cos_derivable-1| |nil| 3707220948 ("" (LEMMA "inverse_derivable_fun[real_abs_lt_pi2,real_abs_lt1]") (("1" (INST - "(LAMBDA (x: real_abs_lt_pi2): sin(x))" "(LAMBDA (x: real_abs_lt1): arc_sin(x))" "deriv[real_abs_lt_pi2](LAMBDA (x: real_abs_lt_pi2): sin(x))") (("1" (SPLIT -1) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_sin(x)) = arc_sin") (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))) ("2" (HIDE 2) (("2" (LEMMA "deriv_sin_restrict") (("2" (FLATTEN) NIL))))) ("3" (LEMMA "sin_restrict_bij") (("3" (PROPAX) NIL))) ("4" (HIDE 2) (("4" (EXPAND "inverse?") (("4" (SKOSIMP*) (("4" (TYPEPRED "arc_sin(r!1)") (("4" (ASSERT) NIL))))))))))) ("2" (SKOSIMP*) (("2" (LEMMA "deriv_sin") (("2" (INST?) (("2" (LEMMA "deriv_subtype[real,real_abs_lt_pi2]") (("2" (INST?) (("2" (ASSERT) (("2" (SPLIT -1) (("1" (EXPAND "restrict") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (REPLACE -2) (("1" (REPLACE -1) (("1" (HIDE -1 -2 1) (("1" (LEMMA "cos_gt_0") (("1" (INST?) (("1" (ASSERT) NIL))))))))))))) ("2" (HIDE -1 -2 1 2) (("2" (LEMMA "cos_gt_0") (("2" (INST?) (("2" (ASSERT) NIL))))))))))))) ("2" (LEMMA "sin_derivable_fun") (("2" (PROPAX) NIL))) ("3" (HIDE -1 -2 2) (("3" (LEMMA DEL_NEIGH_LEM) (("3" (PROPAX) NIL))))))))))))))))))) ("3" (LEMMA "deriv_sin_restrict") (("3" (FLATTEN) NIL))) ("4" (SKOSIMP*) (("4" (ASSERT) (("4" (TYPEPRED "x!1") (("4" (LEMMA "sin_restrict_range") (("4" (INST?) (("4" (ASSERT) (("4" (FLATTEN) (("4" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (EXPAND "connected?") (("2" (SKOSIMP*) (("2" (ASSERT) NIL))))))) ("3" (HIDE 2) (("3" (EXPAND "connected?") (("3" (SKOSIMP*) (("3" (ASSERT) NIL)))))))) NIL) NIL NIL)) (|arc_cos_range_lt| 0 (|arc_cos_range_lt-2| |nil| 3707221986 ("" (SKOSIMP*) (("" (TYPEPRED "x!1") (("" (CASE "arc_cos(x!1) = 0 IMPLIES x!1 = 1") (("1" (CASE "arc_cos(x!1) = pi IMPLIES x!1 = -1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (FLATTEN) (("2" (CASE "cos(pi) = -1") (("1" (ASSERT) NIL NIL) ("2" (REWRITE "cos_pi") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|cos_pi| FORMULA-DECL NIL |sincos| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)) NIL) (|arc_cos_range_lt-1| |nil| 3707221972 ("" (SKOSIMP*) (("" (TYPEPRED "x!1") (("" (CASE "arc_sin(x!1) = pi/2 IMPLIES x!1 = 1") (("1" (CASE "arc_sin(x!1) = -pi/2 IMPLIES x!1 = -1") (("1" (ASSERT) NIL) ("2" (HIDE -1 2) (("2" (FLATTEN) (("2" (CASE "sin(-pi/2) = -1") (("1" (ASSERT) NIL) ("2" (HIDE -1) (("2" (LEMMA "sin_pi2") (("2" (LEMMA "sin_neg") (("2" (INST - "pi/2") (("2" (ASSERT) NIL))))))))))))))))) ("2" (HIDE 2) (("2" (FLATTEN) (("2" (LEMMA "sin_pi2") (("2" (ASSERT) NIL)))))))))))) NIL) NIL NIL)) (|deriv_arc_cos_prep| 0 (|deriv_arc_cos_prep-1| |nil| 3707470209 ("" (SKOSIMP*) (("" (TYPEPRED "x!1") (("" (MULT-INEQ -2 -2) (("1" (ASSERT) (("1" (EXPAND "sq") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ((|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|odd_times_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|lt_times_lt_any1| FORMULA-DECL NIL |extra_real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}" |real_defs| NIL) (|nzint_abs_is_pos| APPLICATION-JUDGEMENT "{j: posint | j >= i}" |real_defs| NIL) (|nzrat_abs_is_pos| APPLICATION-JUDGEMENT "{r: posrat | r >= q}" |real_defs| NIL)) NIL)) (|deriv_arc_cos_fun_TCC1| 0 (|deriv_arc_cos_fun_TCC1-1| |nil| 3707220934 ("" (SKOSIMP*) (("" (LEMMA "deriv_arc_cos_prep") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|deriv_arc_cos_prep| FORMULA-DECL NIL |arccos| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)) NIL (|deriv_arc_cos_fun| SUBTYPE "(number_fields.-)(1, sq.sq(arccos.x))" "nonneg_real"))) (|deriv_arc_cos_fun_TCC2| 0 (|deriv_arc_cos_fun_TCC2-1| |nil| 3707220934 ("" (FLATTEN) (("" (HIDE -1) (("" (LEMMA "deriv_arc_cos_prep") (("" (SKOSIMP*) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|deriv_arc_cos_prep| FORMULA-DECL NIL |arccos| NIL)) NIL (|deriv_arc_cos_fun| SUBTYPE "sqrt.sqrt((number_fields.-)(1, sq.sq(arccos.x)))" "nznum"))) (|deriv_arc_cos_fun| 0 (|deriv_arc_cos_fun-4| |nil| 3707470390 ("" (LEMMA "arc_cos_derivable") (("" (ASSERT) (("" (LEMMA "deriv_cos_restrict") (("" (FLATTEN) (("" (LEMMA "chain_rule[real_abs_lt1,posreal_lt_pi]") (("" (INST - "(LAMBDA (x: real_abs_lt1): arc_cos(x))" "(LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (EXPAND "*") (("1" (ASSERT) (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (CASE-REPLACE "deriv[real_abs_lt1](LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = const_fun(1)") (("1" (ASSERT) (("1" (HIDE -1) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (ASSERT) (("1" (EXPAND "const_fun") (("1" (CASE-REPLACE "-sin(arc_cos(x!1)) = -sqrt(1-sq(x!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (CROSS-MULT 1) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 2) (("2" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (LEMMA "sqrt_lem") (("1" (INST - "1-sq(x!1)" "sin(arc_cos(x!1))") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (ASSERT) (("1" (HIDE 2) (("1" (CASE "sq(cos(arc_cos(x!1))) = sq(x!1)") (("1" (HIDE -2) (("1" (LEMMA "sin2_cos2") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (HIDE -2) (("1" (REWRITE "sq_rew") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_ge_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1 -2 -3) (("1" (EXPAND "const_fun") (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -1 -3 -4) (("3" (HIDE -1) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -4 -5 -6 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (SKOSIMP*) (("2" (LEMMA "deriv_arc_cos_prep") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "sq_le") (("3" (CASE "x!1 >= 0") (("1" (INST - "x!1" "1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST - "-x!1" "1") (("1" (ASSERT) (("1" (REWRITE "sq_neg") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|derivable?| CONST-DECL "bool" |derivatives| |analysis|) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|) (|sq_1| FORMULA-DECL NIL |sq| |reals|) (|x!1| SKOLEM-CONST-DECL "real_abs_lt1" |arccos| NIL) (|sq_neg| FORMULA-DECL NIL |sq| |reals|) (|sq_le| FORMULA-DECL NIL |sq| |reals|) (|deriv_arc_cos_prep| FORMULA-DECL NIL |arccos| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|const_fun| CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|derivable_const| APPLICATION-JUDGEMENT "deriv_fun" |pi_def| NIL) (|constant_seq2| APPLICATION-JUDGEMENT "(convergent_nz?)" |convergence_ops| |analysis|) (|derivable_const| APPLICATION-JUDGEMENT "deriv_fun" |derivatives| |analysis|) (|x!1| SKOLEM-CONST-DECL "real_abs_lt1" |arccos| NIL) (|sq_rew| FORMULA-DECL NIL |sq| |reals|) (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types| NIL) (|sin2_cos2| FORMULA-DECL NIL |sincos_def| NIL) (|sin_ge_0| FORMULA-DECL NIL |trig_ineq| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|sqrt_lem| FORMULA-DECL NIL |sqrt| |reals|) (|div_cancel4| FORMULA-DECL NIL |real_props| NIL) (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL) (|sin| CONST-DECL "real" |sincos_def| NIL) (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|deriv_linear_fun| FORMULA-DECL NIL |derivatives| |analysis|) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|sq| CONST-DECL "nonneg_real" |sq| |reals|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL) (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|) (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|) (* CONST-DECL "[T -> real]" |real_fun_ops| |reals|) (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|) (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|chain_rule| FORMULA-DECL NIL |chain_rule| |analysis|) (|deriv_cos_restrict| FORMULA-DECL NIL |arccos| NIL) (|arc_cos_derivable| FORMULA-DECL NIL |arccos| NIL)) NIL) (|deriv_arc_cos_fun-3| |nil| 3707224300 ("" (LEMMA "arc_cos_derivable") (("" (ASSERT) (("" (LEMMA "deriv_cos_restrict") (("" (FLATTEN) (("" (LEMMA "chain_rule[real_abs_lt1,posreal_lt_pi]") (("" (INST - "(LAMBDA (x: real_abs_lt1): arc_cos(x))" "(LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (EXPAND "*") (("1" (ASSERT) (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (CASE-REPLACE "deriv[real_abs_lt1](LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = const_fun(1)") (("1" (ASSERT) (("1" (HIDE -1) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (ASSERT) (("1" (EXPAND "const_fun") (("1" (CASE-REPLACE "-sin(arc_cos(x!1)) = -sqrt(1-sq(x!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (CROSS-MULT 1) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("1" (ASSERT) NIL NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -3 2) (("2" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (LEMMA "sqrt_lem") (("1" (INST - "1-sq(x!1)" "sin(arc_cos(x!1))") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (ASSERT) (("1" (HIDE 2) (("1" (CASE "sq(cos(arc_cos(x!1))) = sq(x!1)") (("1" (HIDE -2) (("1" (LEMMA "sin2_cos2") (("1" (INST?) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (HIDE -2) (("1" (REWRITE "sq_rew") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "sin_ge_0") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1 -2 -3) (("1" (EXPAND "const_fun") (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -1 -3 -4) (("3" (HIDE -1) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -4 -5 -6 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (HIDE -) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (SKOSIMP*) (("2" (LEMMA "deriv_arc_sin_prep") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "sq_le") (("3" (CASE "x!1 >= 0") (("1" (INST - "x!1" "1") (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST - "-x!1" "1") (("1" (ASSERT) (("1" (REWRITE "sq_neg") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL) (|deriv_arc_cos_fun-2| |nil| 3707222222 ("" (LEMMA "arc_cos_derivable") (("" (ASSERT) (("" (LEMMA "deriv_cos_restrict") (("" (FLATTEN) (("" (LEMMA "chain_rule[real_abs_lt1,posreal_lt_pi]") (("" (INST - "(LAMBDA (x: real_abs_lt1): arc_cos(x))" "(LAMBDA (x: posreal_lt_pi): cos(x))") (("1" (EXPAND "*") (("1" (ASSERT) (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (CASE-REPLACE "deriv[real_abs_lt1](LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = const_fun(1)") (("1" (ASSERT) (("1" (HIDE -1) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (ASSERT) (("1" (CASE-REPLACE "cos(arc_cos(x!1)) = sqrt(1-sq(x!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (EXPAND "const_fun") (("1" (CROSS-MULT 1) (("1" (ASSERT) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("1" (ASSERT) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))))))))) ("2" (HIDE -1 -2 -3 2) (("2" (CASE "(LAMBDA (x: real_abs_lt1): cos(arc_cos(x))) = (LAMBDA (x: real_abs_lt1): x)") (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (LEMMA "sqrt_lem") (("1" (INST - "1-sq(x!1)" "cos(arc_cos(x!1))") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (ASSERT) (("1" (HIDE 2) (("1" (REPLACE -1 + RL) (("1" (LEMMA "cos2_cos2") (("1" (INST?) (("1" (EXPAND "sq") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE -1 2) (("2" (LEMMA "cos_ge_0") (("2" (INST?) (("2" (ASSERT) NIL))))))))))))))) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))))))))))))) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1 -2 -3) (("1" (EXPAND "const_fun") (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL))))))))))) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))) ("3" (HIDE 2) (("3" (HIDE -1 -3 -4) (("3" (HIDE -1) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL))))))))) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))))))) ("2" (HIDE -4 -5 -6 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))) ("3" (HIDE 2) (("3" (HIDE -) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): cos(arc_cos(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL))))))))) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))) ("2" (HIDE -) (("2" (SKOSIMP*) (("2" (LEMMA "deriv_arc_cos_prep") (("2" (INST?) (("2" (LEMMA "sqrt_eq_0") (("2" (INST?) (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))))))))) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "sq_le") (("3" (CASE "x!1 >= 0") (("1" (INST - "x!1" "1") (("1" (ASSERT) NIL))) ("2" (INST - "-x!1" "1") (("1" (ASSERT) (("1" (REWRITE "sq_neg") (("1" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_cos(x)) = arc_cos") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL)))))))))))))))) NIL) NIL NIL) (|deriv_arc_cos_fun-1| |nil| 3707222147 ("" (LEMMA "arc_sin_derivable") (("" (ASSERT) (("" (LEMMA "deriv_sin_restrict") (("" (FLATTEN) (("" (LEMMA "chain_rule[real_abs_lt1,real_abs_lt_pi2]") (("" (INST - "(LAMBDA (x: real_abs_lt1): arc_sin(x))" "(LAMBDA (x: real_abs_lt_pi2): sin(x))") (("1" (EXPAND "*") (("1" (ASSERT) (("1" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (CASE-REPLACE "deriv[real_abs_lt1](LAMBDA (x_1: real_abs_lt1): sin(arc_sin(x_1))) = const_fun(1)") (("1" (ASSERT) (("1" (HIDE -1) (("1" (REPLACE -3) (("1" (HIDE -3) (("1" (ASSERT) (("1" (CASE-REPLACE "cos(arc_sin(x!1)) = sqrt(1-sq(x!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (EXPAND "const_fun") (("1" (CROSS-MULT 1) (("1" (ASSERT) (("1" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_sin(x)) = arc_sin") (("1" (ASSERT) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))))))))) ("2" (HIDE -1 -2 -3 2) (("2" (CASE "(LAMBDA (x: real_abs_lt1): sin(arc_sin(x))) = (LAMBDA (x: real_abs_lt1): x)") (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST?) (("1" (LEMMA "sqrt_lem") (("1" (INST - "1-sq(x!1)" "cos(arc_sin(x!1))") (("1" (FLATTEN) (("1" (HIDE -1) (("1" (ASSERT) (("1" (HIDE 2) (("1" (REPLACE -1 + RL) (("1" (LEMMA "sin2_cos2") (("1" (INST?) (("1" (EXPAND "sq") (("1" (ASSERT) NIL))))))))))))))))) ("2" (HIDE -1 2) (("2" (LEMMA "cos_ge_0") (("2" (INST?) (("2" (ASSERT) NIL))))))))))))))) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))))))))))))) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): sin(arc_sin(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1 -2 -3) (("1" (EXPAND "const_fun") (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL))))))))))) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))) ("3" (HIDE 2) (("3" (HIDE -1 -3 -4) (("3" (HIDE -1) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): sin(arc_sin(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL))))))))) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))))))) ("2" (HIDE -4 -5 -6 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_sin(x)) = arc_sin") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))) ("3" (HIDE 2) (("3" (HIDE -) (("3" (CASE-REPLACE "(LAMBDA (x_1: real_abs_lt1): sin(arc_sin(x_1))) = (LAMBDA (x_1: real_abs_lt1): x_1)") (("1" (HIDE -1) (("1" (LEMMA "deriv_linear_fun[real_abs_lt1]") (("1" (INST - "1" "0") (("1" (ASSERT) (("1" (FLATTEN) NIL))))))))) ("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL))))))))) ("2" (HIDE -) (("2" (SKOSIMP*) (("2" (LEMMA "deriv_arc_sin_prep") (("2" (INST?) (("2" (LEMMA "sqrt_eq_0") (("2" (INST?) (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))))))))) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (TYPEPRED "x!1") (("3" (LEMMA "sq_le") (("3" (CASE "x!1 >= 0") (("1" (INST - "x!1" "1") (("1" (ASSERT) NIL))) ("2" (INST - "-x!1" "1") (("1" (ASSERT) (("1" (REWRITE "sq_neg") (("1" (ASSERT) NIL))))) ("2" (ASSERT) NIL))))))))))))))))))) ("2" (HIDE -1 -2 2) (("2" (CASE-REPLACE "(LAMBDA (x: real_abs_lt1): arc_sin(x)) = arc_sin") (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) NIL)))))))))))))))) NIL) NIL NIL)) (|arc_cos_continuous| 0 (|arc_cos_continuous-1| |nil| 3707225896 ("" (LEMMA "arc_cos_derivable") (("" (LEMMA "derivable_cont_fun[real_abs_lt1]") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|derivable_cont_fun| FORMULA-DECL NIL |derivatives| |analysis|) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|arc_cos_derivable| FORMULA-DECL NIL |arccos| NIL)) NIL)) (|arc_cos_bij| 0 (|arc_cos_bij-1| |nil| 3707225932 ("" (LEMMA "bij_inv_is_bij[posreal_lt_pi,real_abs_lt1]") (("" (INST - "cos_restrict") (("" (ASSERT) (("" (SPLIT -1) (("1" (LEMMA "arc_cos_inverse") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (LEMMA "cos_restrict_bij") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|arc_cos_inverse| FORMULA-DECL NIL |arccos| NIL) (|cos_restrict_bij| FORMULA-DECL NIL |arccos| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|bij_inv_is_bij| FORMULA-DECL NIL |function_inverse| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (< CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL)) NIL)) (|arccos_TCC1| 0 (|arccos_TCC1-1| |nil| 3707225859 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL (|arccos| SUBTYPE "pi_def.pi" "nnreal_le_pi"))) (|arccos_TCC2| 0 (|arccos_TCC2-1| |nil| 3707225859 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) NIL (|arccos| SUBTYPE "arccos.y" "real_abs_lt1"))) (|arccos_TCC3| 0 (|arccos_TCC3-1| |nil| 3707227366 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL)) NIL (|arccos| SUBTYPE "arccos.arc_cos(arccos.y)" "nnreal_le_pi"))) (|arccos_TCC4| 0 (|arccos_TCC4-1| |nil| 3707469805 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|real_abs_le1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL)) NIL (|arccos| SUBTYPE "0" "nnreal_le_pi"))) (|arc_cos_0| 0 (|arc_cos_0-1| |nil| 3707227416 ("" (TYPEPRED "arc_cos(0)") (("" (LEMMA "cos_eq_0") (("" (INST?) (("" (ASSERT) (("" (SKOSIMP*) (("" (CASE "i!1 = 0") (("1" (ASSERT) NIL NIL) ("2" (CASE "i!1 >= 1") (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "i!1 <= -1") (("1" (MULT-BY -1 "2*pi") (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|cos_eq_0| FORMULA-DECL NIL |sincos| NIL) (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| NIL) (|pi_bound| NAME-JUDGEMENT "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal" |real_types| NIL) (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|arc_cos| CONST-DECL "{x: posreal_lt_pi | y = cos(x)}" |arccos| NIL) (|posreal_lt_pi| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def| NIL) (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL) (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|cos| CONST-DECL "real" |sincos_def| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (< CONST-DECL "bool" |reals| NIL) (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL) (|real_abs_lt1| NONEMPTY-TYPE-EQ-DECL NIL |trig_types| NIL) (>= CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL)))
