trig_basic : THEORY
%-----------------------------------------------------------------------------
%     trig_basic:
%     -----------
%         - definition of tan
%         - sum and difference of two angles
%         - double angle formulas
%         - negative properties, e.g. sin(-a)
%         - periodicity, e.g. sin(a) = sin(a + 2 * j * pi) 
%         - co-function identities, e.g. sin(pi/2 - a) = cos(a)
%         - location of zeros of trig functions
%
%   Version 1.1 27/10/03 Foundational Version David Lester
%           2.0 19/07/17 New Foundational Version  John Siratt, Anthony Narkawicz, Rick Butler
%
%   CHANGES 
%         - Oct 21 2004 (C. Munoz) Moved pi_lb, pi_ub, pi_bound to atan_approx
%
%-----------------------------------------------------------------------------
BEGIN

  IMPORTING reals@sqrt,
            sincos  

  a,b,c,d           : VAR real
  nnc               : VAR nonneg_real 
  i,j,k             : VAR integer
  
% -------------------- Double Angle Formulas -------------------- 

   sin_2a     : LEMMA sin(2*a) = 2 * sin(a) * cos(a)
   cos_2a     : LEMMA cos(2*a) = cos(a)*cos(a) - sin(a)*sin(a)
   cos_2a_cos : LEMMA cos(2*a) = 2 * cos(a)*cos(a) - 1
   cos_2a_sin : LEMMA cos(2*a) = 1 - 2 * sin(a)*sin(a)
 
% ---------------------- Maximum Points -----------------------------

  trig_eq_prep : LEMMA FORALL (r : real): 
                    EXISTS (i : int): 0 <= r + 2 * i * pi AND r + 2 * i * pi <= 2 * pi

  sin_eq_1     : LEMMA sin(a) = 1 IFF EXISTS (i: int): a = 2 * i * pi + pi/2
  cos_eq_1     : LEMMA cos(a) = 1 IFF EXISTS (i: int): a = 2 * i * pi 
  sin_eq_m1    : LEMMA sin(a) = -1 IFF EXISTS (i: int): a = 2 * i * pi - pi/2
  cos_eq_m1    : LEMMA cos(a) = -1 IFF EXISTS (i: int): a = 2 * i * pi + pi

  sin_cos_eq_0:    LEMMA NOT (sin(a) = 0 AND cos(a) = 0)

  eq_iff_periodic: LEMMA sin(a) = sin(b) AND cos(a) = cos(b) IFF
                         EXISTS i: a = b + 2*i*pi

% --------------------- tangent bijective ---------------------------

   cos_gt_0_prep: LEMMA 0 <= a AND a < pi/2 IMPLIES cos(a) > 0
   cos_gt_0     : LEMMA -pi/2 < a AND a < pi/2 IMPLIES cos(a) >  0

   tan_domain: TYPE = {x: real | cos(x) /= 0}

   Tan?(a: real)        : bool = cos(a) /= 0
 
   tan(a:(Tan?))  : real = sin(a)/cos(a)

   tan_0   : LEMMA tan(0) = 0

   tan_neg : LEMMA FORALL(a:(Tan?)): tan(-a) = -tan(a)

   deriv_domain_real_abs_lt_pi2: LEMMA deriv_domain?[real_abs_lt_pi2]
 
   tan_prep: LEMMA FORALL (x: real_abs_lt_pi2): Tan?(x)

   tan_restrict(x: real_abs_lt_pi2): real = tan(x)

   tan_rew           : LEMMA FORALL (a:(Tan?)): sin(a)/cos(a) = tan(a)

   tan_pi      : LEMMA tan(pi) = 0

   tan_2pi     : LEMMA tan(2*pi) = 0

   tan_plus  : LEMMA Tan?(a) AND Tan?(b) AND Tan?(a+b) AND
                    tan(a) * tan(b) /= 1 IMPLIES                 
                      tan(a + b) = (tan(a) + tan(b))/(1 - tan(a)*tan(b)) 

   tan_minus : LEMMA Tan?(a) AND Tan?(b) AND Tan?(a-b) AND
                    tan(a) * tan(b) /= -1 IMPLIES                 
                      tan(a - b) = (tan(a) - tan(b))/(1 + tan(a)*tan(b))

   tan_2a     : LEMMA Tan?(a) AND Tan?(2*a) AND 
                      tan(a) * tan(a) /= 1 IMPLIES 
                        tan(2*a) = 2 * tan(a)/(1 - tan(a) * tan(a))

   tan_period  : LEMMA Tan?(a) IMPLIES tan(a) = tan(a + j * pi) 

   tan_k_pi    : LEMMA tan(k*pi) = 0

   tan_restrict_continuous: LEMMA continuous?[real_abs_lt_pi2](tan_restrict)

   tan_restrict_inj  : LEMMA 
        injective?(LAMBDA (x: real_abs_lt_pi2): tan(x))

   IMPORTING infinite_limits[real_abs_lt_pi2]

   tan_inf_at_pi2    : LEMMA inf_limit_at[real_abs_lt_pi2](tan_restrict,pi/2,1)

   tan_neginf_at_mpi2 : LEMMA inf_limit_at[real_abs_lt_pi2](tan_restrict,-pi/2,-1)

   tan_restrict_surj : LEMMA 
        surjective?(LAMBDA (x: real_abs_lt_pi2): tan(x))

   tan_restrict_bij  : LEMMA 
        bijective?(LAMBDA (x: real_abs_lt_pi2): tan(x))

   tan_eq_0          : LEMMA FORALL (a: (Tan?)):
                             tan(a) = 0 IFF EXISTS (i: int): a = i * pi


   IMPORTING analysis@derivatives_subtype

   deriv_tan_restrict: LEMMA derivable?[real_abs_lt_pi2](tan_restrict) AND
                             deriv[real_abs_lt_pi2](tan_restrict) 
                                  = (LAMBDA (x: real_abs_lt_pi2): 1/sq(cos(x)))

END trig_basic

