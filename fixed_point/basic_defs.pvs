basic_defs
[ base: above(1),
  (importing fixed_point_format[base])
  format: fixed_point_format,
  real2int: [real->int]]: THEORY
BEGIN

  % In this specification, fixed point numbers are represented
  % as bounded integers denoting the bit vector used in most
  % of the current implementations.

  in_range?
  (i: int): bool
  = -format`max <= i <= format`max

  max_representable: posreal
  = format`max * (base ^ -format`scaling_factor)

  min_representable: negreal
  = - max_representable

  in_representable_range?(r: real): bool
  = min_representable <= r <= max_representable

  judgement max_representable has_type (in_representable_range?)
  judgement min_representable has_type (in_representable_range?)

  fixed_point: TYPE
  = [# representation : (in_range?)  #]

  make_fixed_point
  (i: (in_range?) ): fixed_point
  = (# representation := i #)

  % 

  max_fxp: fixed_point
  = make_fixed_point(format`max)

  min_fxp: fixed_point
  = make_fixed_point(-format`max)

END basic_defs
