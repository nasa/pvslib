(|derivative_domain_multi|
 (|deriv_domain?_TCC1| 0
  (|deriv_domain?_TCC1-1| |nil| 3740926980
   ("" (SKEEP)
    (("" (TYPEPRED "vv+p" "p")
      (("" (ASSERT)
        (("" (TYPEPRED "vv")
          (("" (EXPAND "max" -4) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|deriv_domain?| SUBTYPE
    "(matrices.+)(derivative_domain_multi.p, derivative_domain_multi.vv)"
    "VectorN(derivative_domain_multi.n)")))
 (|deriv_domain?_TCC2| 0
  (|deriv_domain?_TCC2-1| |nil| 3740926980 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|deriv_domain?| SUBTYPE "derivative_domain_multi.v"
    "(list_adt[real].cons?)")))
 (|deriv_domain_direction?_TCC1| 0
  (|deriv_domain_direction?_TCC1-1| |nil| 3741000833
   ("" (SKEEP)
    (("" (TYPEPRED "p+delta*v")
      (("" (TYPEPRED "p" "delta*v")
        (("" (ASSERT) (("" (EXPAND "max" -7) (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|deriv_domain_direction?| SUBTYPE
    "(matrices.+)(derivative_domain_multi.p, matrices.*(derivative_domain_multi.delta, derivative_domain_multi.v))"
    "VectorN(derivative_domain_multi.n)")))
 (|deriv_domain_partial?_TCC1| 0
  (|deriv_domain_partial?_TCC1-1| |nil| 3850894799
   ("" (SKEEP)
    (("" (TYPEPRED "p+delta*v" "p" "delta*v" "v")
      (("" (HIDE -1 -3 -6 -8)
        (("" (EXPAND "max" -) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|deriv_domain_partial?| SUBTYPE
    "(matrices.+)(derivative_domain_multi.p, matrices.*(derivative_domain_multi.delta, derivative_domain_multi.v))"
    "VectorN(derivative_domain_multi.n)")))
 (|dd_direction_partial| 0
  (|dd_direction_partial-1| |nil| 3850897040
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_direction?")
        (("" (EXPAND "deriv_domain_partial?")
          (("" (SKEEP)
            (("" (INST -1 "e" "p") (("" (SKEEP) (("" (INST?) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|dd_direction_partial_neg_TCC1| 0
  (|dd_direction_partial_neg_TCC1-1| |nil| 3850896550
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (- CONST-DECL "VectorN(length(v))" |vector_arithmetic| NIL))
   NIL
   (|dd_direction_partial_neg| SUBTYPE
    "(vector_arithmetic.-)(derivative_domain_multi.v)"
    "VectorN(derivative_domain_multi.n)")))
 (|dd_direction_partial_neg| 0
  (|dd_direction_partial_neg-1| |nil| 3850897075
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_direction?")
        (("" (EXPAND "deriv_domain_partial?")
          (("" (SKEEP)
            (("" (INST -1 "e" "p")
              (("" (SKEEP)
                (("" (INST 1 "-delta")
                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (TYPEPRED "delta")
                    (("2" (CASE "delta * -v = -delta * v")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (LEMMA "asso_v")
                        (("2" (INST -1 "delta" "-1" "v")
                          (("1" (EXPAND "-" 1 1) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (TYPEPRED "v") (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((- CONST-DECL "VectorN(length(v))" |vector_arithmetic| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|e_direction_e_partial| 0
  (|e_direction_e_partial-1| |nil| 3852309962
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_e_partial?")
      (("" (EXPAND "deriv_domain_e_direction?")
        (("" (SKEEP)
          (("" (INST?)
            (("" (EXPAND "deriv_domain_partial?")
              (("" (EXPAND "deriv_domain_direction?")
                (("" (SKEEP)
                  (("" (INST?)
                    (("" (INST -1 "p")
                      (("" (SKEEP) (("" (INST 1 "delta") NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|deriv_domain_both_direction?_TCC1| 0
  (|deriv_domain_both_direction?_TCC1-1| |nil| 3741507935
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|deriv_domain_both_direction?| SUBTYPE
    "matrices.*(-1, derivative_domain_multi.v)"
    "VectorN(derivative_domain_multi.n)")))
 (|domain_connect?_TCC1| 0
  (|domain_connect?_TCC1-1| |nil| 3741690348
   ("" (SKEEP)
    (("" (TYPEPRED "p1 + t * (p2 - p1)" "p1" "t * (p2 - p1)" "p2-p1" "p2")
      (("" (EXPAND "max" -) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|domain_connect?| SUBTYPE
    "(matrices.+)(derivative_domain_multi.p1, matrices.*(derivative_domain_multi.t, ((matrices.-)(derivative_domain_multi.p2, derivative_domain_multi.p1))))"
    "VectorN(derivative_domain_multi.n)")))
 (|open_implies_e_direction| 0
  (|open_implies_e_direction-1| |nil| 3741961482
   ("" (SKEEP)
    (("" (EXPAND "open_neigh_domain?")
      (("" (EXPAND "deriv_domain_e_direction?")
        (("" (SKEEP)
          (("" (EXPAND "deriv_domain_direction?")
            (("" (SKEEP)
              (("" (INST -1 "p")
                (("" (INST -1 "e(n,i)")
                  (("" (SKEEP)
                    (("" (INST 1 "min(e_1,epsilon)/2")
                      (("1" (ASSERT)
                        (("1" (EXPAND "abs" 1)
                          (("1" (EXPAND "min" 1)
                            (("1" (ASSERT)
                              (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (INST -1 "min(e_1, epsilon) / 2")
                        (("2" (ASSERT)
                          (("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|open_neigh_domain?| CONST-DECL "bool" |closed_bounded_domain| NIL)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|open_implies_e_partial| 0
  (|open_implies_e_partial-1| |nil| 3852310144
   ("" (LEMMA "open_implies_e_direction")
    (("" (LEMMA "e_direction_e_partial")
      (("" (SKEEP)
        (("" (INST?) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL))
   SHOSTAK))
 (|d_con_ends| 0
  (|d_con_ends-1| |nil| 3741708975
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "domain_connect?")
        (("" (INST-CP -1 "0")
          (("" (INST -1 "1")
            (("" (CASE "p1 + 1 * (p2 - p1) = p2")
              (("1" (ASSERT)
                (("1" (CASE "p1 + 0 * (p2 - p1) = p1")
                  (("1" (ASSERT) NIL NIL)
                   ("2" (LEMMA "zero_id")
                    (("2" (INST -1 "p1")
                      (("2" (LEMMA "mult_zero")
                        (("2" (INST -1 "p2-p1")
                          (("1" (TYPEPRED "p2-p1")
                            (("1" (EXPAND "max" -)
                              (("1" (TYPEPRED "p1" "p2")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "p2-p1" "p2" "p1")
                            (("2" (EXPAND "max") (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (LEMMA "dist_1")
                (("2" (INST -1 "1" "p2" "p1")
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "one_idx")
                      (("1" (INST-CP -1 "p2")
                        (("1" (INST -1 "p1")
                          (("1" (REPLACE -1 1)
                            (("1" (REPLACE -2 1)
                              (("1" (ASSERT)
                                (("1" (LEMMA "asso_sub_commute")
                                  (("1" (INST -1 "p1" "p2" "p1")
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -1 1 RL)
                                        (("1" (LEMMA "sub_self")
                                          (("1" (INST -1 "p1")
                                            (("1" (TYPEPRED "p1")
                                              (("1" (REPLACE -2 -3)
                                                (("1" (REPLACE -3 1)
                                                  (("1" (LEMMA "add_commute")
                                                    (("1"
                                                      (INST -1 "zero_vec(n)"
                                                       "p2")
                                                      (("1" (REPLACE -1 1)
                                                        (("1" (LEMMA "zero_id")
                                                          (("1" (INST -1 "p2")
                                                            (("1"
                                                              (TYPEPRED "p2")
                                                              (("1"
                                                                (REPLACE -2 -3)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (TYPEPRED "p2")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL)
                                                       ("3"
                                                        (EXPAND "zero_vec" 1)
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (TYPEPRED "p1")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (TYPEPRED "p2")
                                      (("2" (ASSERT) NIL NIL)) NIL)
                                     ("3" (TYPEPRED "p1")
                                      (("3" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "p1") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("2" (TYPEPRED "p2") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "p1") (("2" (ASSERT) NIL NIL)) NIL)
                   ("3" (TYPEPRED "p2") (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |derivative_domain_multi| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain_connect?| CONST-DECL "bool" |derivative_domain_multi| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|p1| SKOLEM-CONST-DECL "VectorN(n)" |derivative_domain_multi| NIL)
    (|p2| SKOLEM-CONST-DECL "VectorN(n)" |derivative_domain_multi| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|one_idx| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_sub_commute| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|sub_self| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|add_commute| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|dist_1| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_norm_equiv| 0
  (|dd_norm_equiv-1| |nil| 3740928027
   ("" (SKEEP)
    (("" (LEMMA "equiv_norm")
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND "deriv_domain?" -1)
            (("1" (INST -1 "norm_inf(n)")
              (("1" (INST 1 "norm_inf(n)")
                (("1" (EXPAND "deriv_domain?") (("1" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (EXPAND "deriv_domain?")
              (("2" (SKEEP)
                (("2" (INST -2 "nn" "nn!1")
                  (("2" (EXPAND "equiv?")
                    (("2" (SKEEP)
                      (("2" (SKEEP)
                        (("2" (INST -1 "e/c2" "p")
                          (("2" (SKEEP)
                            (("2" (INST -2 "v")
                              (("2" (FLATTEN)
                                (("2" (MULT-BY -1 "c2")
                                  (("2" (ASSERT)
                                    (("2" (INST 1 "v") (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|equiv_norm| FORMULA-DECL NIL |norms_equiv| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|equiv?| CONST-DECL "bool" |norms_equiv| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL))
   SHOSTAK))
 (|dd_directionv_implies_dd| 0
  (|dd_directionv_implies_dd-1| |nil| 3741351406
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "deriv_domain?")
        (("" (SKEEP)
          (("" (EXPAND "deriv_domain_direction?")
            (("" (SKEEP)
              (("" (TYPEPRED "v")
                (("" (INST -4 "e/nn(v)" "p")
                  (("1" (SKEEP)
                    (("1" (INST 2 "delta*v")
                      (("1" (ASSERT)
                        (("1" (MULT-BY -3 "nn(v)")
                          (("1" (TYPEPRED "nn")
                            (("1" (EXPAND "norm?")
                              (("1" (FLATTEN)
                                (("1" (INST -2 "v" "delta")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "nn")
                            (("2" (EXPAND "norm?")
                              (("2" (FLATTEN)
                                (("2" (INST -3 "v")
                                  (("2" (FLATTEN)
                                    (("2" (HIDE -1 -2 -5)
                                      (("2" (TYPEPRED "nn(v)")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SPLIT)
                        (("1" (TYPEPRED "delta*v" "v") (("1" (ASSERT) NIL NIL))
                          NIL)
                         ("2" (CASE "delta * v= zero_vec(n)")
                          (("1" (ASSERT)
                            (("1" (LEMMA "asso_v")
                              (("1" (INST -1 "1/delta" "delta" "v")
                                (("1" (CASE "v = 1/delta*zero_vec(n)")
                                  (("1" (ASSERT)
                                    (("1" (CASE "NOT 1 / delta * delta = 1")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (REPLACE -1 -3)
                                        (("2" (LEMMA "scal_zero")
                                          (("2" (INST -1 "1/delta" "n")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (CASE "NOT 1 / delta * delta = 1")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (REPLACE -1 -2)
                                        (("2" (LEMMA "one_idx")
                                          (("2" (INST -1 "v")
                                            (("2" (REPLACE -1 -3 LR)
                                              (("2"
                                                (CASE
                                                    "1/delta*delta * v = 1/delta*zero_vec(n)")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "e")
                    (("2" (TYPEPRED "nn")
                      (("2" (EXPAND "norm?")
                        (("2" (FLATTEN)
                          (("2" (INST -3 "v")
                            (("2" (HIDE -1 -2 -4)
                              (("2" (FLATTEN)
                                (("2" (SPLIT)
                                  (("1" (PROPAX) NIL NIL)
                                   ("2" (SPLIT)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (ASSERT)
                                      (("2" (SPLIT)
                                        (("1" (ASSERT)
                                          (("1" (MULT-BY 1 "nn(v)")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (MULT-BY 1 "nn(v)")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (ASSERT)
                    (("3" (TYPEPRED "nn")
                      (("3" (EXPAND "norm?" -1)
                        (("3" (FLATTEN)
                          (("3" (INST -3 "v")
                            (("3" (HIDE -1 -2 -4) (("3" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|one_idx| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_all_direction_implies_dd_all_partial| 0
  (|dd_all_direction_implies_dd_all_partial-1| |nil| 3852709923
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_all_direction?")
      (("" (EXPAND "deriv_domain_all_partial?")
        (("" (SKEEP)
          (("" (INST -1 "v")
            (("" (EXPAND "deriv_domain_partial?")
              (("" (EXPAND "deriv_domain_direction?")
                (("" (SKEEP)
                  (("" (INST -1 "e" "p")
                    (("" (SKEEP) (("" (INST 1 "delta") NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_direction_implies_dd_directionv| 0
  (|dd_direction_implies_dd_directionv-1| |nil| 3741352600
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_all_direction?") (("" (PROPAX) NIL NIL)) NIL))
    NIL)
   NIL SHOSTAK))
 (|dd_direction_implies_dd| 0
  (|dd_direction_implies_dd-2| |nil| 3741430533
   ("" (LEMMA "dd_directionv_implies_dd")
    (("" (LEMMA "dd_direction_implies_dd_directionv")
      (("" (SKEEP)
        (("" (INST -1 "D")
          (("" (INST -2 "D")
            (("" (ASSERT)
              (("" (INST -1 "e(n,0)")
                (("1" (ASSERT)
                  (("1" (INST 1 "e(n,0)")
                    (("1" (ASSERT)
                      (("1" (EXPAND "e" 1)
                        (("1" (EXPAND "zero_vec" -1)
                          (("1" (ASSERT)
                            (("1" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   NIL)
  (|dd_direction_implies_dd-1| |nil| 3741430519 ("" (POSTPONE) NIL NIL) NIL
   SHOSTAK))
 (|dd_all_partial_implies_dd| 0
  (|dd_all_partial_implies_dd-1| |nil| 3852710671
   ("" (SKEEP)
    (("" (LEMMA "dd_norm_equiv")
      (("" (INST -1 "D")
        (("" (ASSERT)
          (("" (INST 1 "norm_inf(n)")
            (("" (HIDE 2)
              (("" (EXPAND "deriv_domain?")
                (("" (EXPAND "deriv_domain_all_partial?")
                  (("" (SKEEP)
                    (("" (EXPAND "deriv_domain_partial?")
                      (("" (INST -1 "e(n,0)")
                        (("1" (INST -1 "e" "p")
                          (("1" (SKEEP)
                            (("1" (TYPEPRED "delta")
                              (("1" (INST 1 "delta * e(n, 0)")
                                (("1" (TYPEPRED "norm_inf(n)")
                                  (("1" (EXPAND "norm?" -1)
                                    (("1" (FLATTEN)
                                      (("1" (INST -2 "e(n,0)" "delta")
                                        (("1" (REPLACE -2)
                                          (("1" (LEMMA "norm_inf_e")
                                            (("1" (INST -1 "n" "0")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (TYPEPRED "delta * e(n,0)" "e(n,0)")
                                  (("2" (ASSERT)
                                    (("2" (TYPEPRED "delta")
                                      (("2" (ASSERT)
                                        (("2"
                                          (CASE
                                              "delta * e(n, 0) = zero_vec(n)")
                                          (("1" (GRIND)
                                            (("1" (DECOMPOSE-EQUALITY -1) NIL
                                              NIL)
                                             ("2" (DECOMPOSE-EQUALITY -1) NIL
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|norm_inf_e| FORMULA-DECL NIL |norms| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_direction_implies_dd_e_direction| 0
  (|dd_direction_implies_dd_e_direction-1| |nil| 3741532527
   ("" (SKEEP)
    (("" (LEMMA "dd_direction_implies_dd_directionv")
      (("" (INST -1 "D")
        (("" (ASSERT)
          (("" (EXPAND "deriv_domain_e_direction?")
            (("" (SKEEP)
              (("" (INST -1 "e(n,i)")
                (("" (ASSERT)
                  (("" (EXPAND "deriv_domain_direction?")
                    (("" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_partial_implies_dd_e_direction| 0
  (|dd_partial_implies_dd_e_direction-1| |nil| 3852711136
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_all_partial?")
      (("" (EXPAND "deriv_domain_e_partial?")
        (("" (SKEEP)
          (("" (INST -1 "e(n,i)")
            (("" (ASSERT)
              (("" (EXPAND "deriv_domain_partial?") (("" (PROPAX) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_direction_implies_dd_e_partial| 0
  (|dd_direction_implies_dd_e_partial-1| |nil| 3852310176
   ("" (LEMMA "dd_direction_implies_dd_e_direction")
    (("" (LEMMA "e_direction_e_partial")
      (("" (SKEEP)
        (("" (INST?) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL))
   SHOSTAK))
 (|dd_vdirection_implies_dd_partial| 0
  (|dd_vdirection_implies_dd_partial-1| |nil| 3851014555
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_direction?")
      (("" (EXPAND "deriv_domain_partial?")
        (("" (SKEEP)
          (("" (INST -1 "e" "p")
            (("" (SKEEP) (("" (INST 1 "delta") NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_edirection_implies_dd_partial| 0
  (|dd_edirection_implies_dd_partial-1| |nil| 3852107713
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_e_direction?" -1)
      (("" (LEMMA "dd_vdirection_implies_dd_partial")
        (("" (INST -2 "i")
          (("" (INST?)
            (("1" (ASSERT)
              (("1" (EXPAND "deriv_domain_direction?") (("1" (PROPAX) NIL NIL))
                NIL))
              NIL)
             ("2" (REWRITE "e_not_zero") NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|e_not_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_epartial_implies_dd_partial| 0
  (|dd_epartial_implies_dd_partial-1| |nil| 3852310216
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_partial?")
      (("" (EXPAND "deriv_domain_e_partial?")
        (("" (SKEEP)
          (("" (INST -1 "i")
            (("" (EXPAND "deriv_domain_partial?")
              (("" (INST -1 "e_1" "p") NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_direction_implies_dd_partial| 0
  (|dd_direction_implies_dd_partial-1| |nil| 3851014580
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_all_direction?")
      (("" (EXPAND "deriv_domain_partial?")
        (("" (SKEEP)
          (("" (INST -1 "v")
            (("" (EXPAND "deriv_domain_direction?")
              (("" (INST -1 "e" "p") (("" (SKEEP) (("" (INST?) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_e_direction_implies_dd| 0
  (|dd_e_direction_implies_dd-1| |nil| 3741443308
   ("" (SKEEP)
    (("" (LEMMA "dd_directionv_implies_dd")
      (("" (INST -1 "D")
        (("" (EXPAND "deriv_domain_e_direction?")
          (("" (INST -2 "0")
            (("1" (SPLIT -1)
              (("1" (PROPAX) NIL NIL)
               ("2" (INST 1 "e(n,0)")
                (("1" (EXPAND "deriv_domain_direction?")
                  (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (EXPAND "e" 1)
                  (("2" (EXPAND "zero_vec" -1)
                    (("2" (TYPEPRED "n")
                      (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -2) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|dd_partial_implies_dd| 0
  (|dd_partial_implies_dd-1| |nil| 3851071994
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain?")
      (("" (SKEEP)
        (("" (EXPAND "deriv_domain_partial?")
          (("" (SKEEP)
            (("" (TYPEPRED "v")
              (("" (INST -4 "e/nn(v)" "p")
                (("1" (SKEEP)
                  (("1" (INST 2 "delta*v")
                    (("1" (ASSERT)
                      (("1" (MULT-BY -3 "nn(v)")
                        (("1" (TYPEPRED "nn")
                          (("1" (EXPAND "norm?")
                            (("1" (FLATTEN)
                              (("1" (INST -2 "v" "delta")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (TYPEPRED "nn")
                          (("2" (EXPAND "norm?")
                            (("2" (FLATTEN)
                              (("2" (INST -3 "v")
                                (("2" (FLATTEN)
                                  (("2" (HIDE -1 -2 -5)
                                    (("2" (TYPEPRED "nn(v)")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (SPLIT)
                      (("1" (TYPEPRED "delta*v" "v") (("1" (ASSERT) NIL NIL))
                        NIL)
                       ("2" (CASE "delta * v= zero_vec(n)")
                        (("1" (ASSERT)
                          (("1" (LEMMA "asso_v")
                            (("1" (INST -1 "1/delta" "delta" "v")
                              (("1" (CASE "v = 1/delta*zero_vec(n)")
                                (("1" (ASSERT)
                                  (("1" (CASE "NOT 1 / delta * delta = 1")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (REPLACE -1 -3)
                                      (("2" (LEMMA "scal_zero")
                                        (("2" (INST -1 "1/delta" "n")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (CASE "NOT 1 / delta * delta = 1")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (REPLACE -1 -2)
                                      (("2" (LEMMA "one_idx")
                                        (("2" (INST -1 "v")
                                          (("2" (REPLACE -1 -3 LR)
                                            (("2"
                                              (CASE
                                                  "1/delta*delta * v = 1/delta*zero_vec(n)")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "e")
                  (("2" (TYPEPRED "nn")
                    (("2" (EXPAND "norm?")
                      (("2" (FLATTEN)
                        (("2" (INST -3 "v")
                          (("2" (HIDE -1 -2 -4)
                            (("2" (FLATTEN)
                              (("2" (SPLIT)
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (SPLIT)
                                  (("1" (PROPAX) NIL NIL)
                                   ("2" (ASSERT)
                                    (("2" (SPLIT)
                                      (("1" (ASSERT)
                                        (("1" (MULT-BY 1 "nn(v)")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (MULT-BY 1 "nn(v)")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (ASSERT)
                  (("3" (TYPEPRED "nn")
                    (("3" (EXPAND "norm?" -1)
                      (("3" (FLATTEN)
                        (("3" (INST -3 "v")
                          (("3" (HIDE -1 -2 -4) (("3" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("4" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|one_idx| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   SHOSTAK))
 (|dd_e_partial_implies_dd| 0
  (|dd_e_partial_implies_dd-1| |nil| 3852310878
   ("" (LEMMA "dd_partial_implies_dd")
    (("" (SKEEP)
      (("" (EXPAND "deriv_domain_e_partial?" -2)
        (("" (INST -2 "0")
          (("1" (INST -1 "D" "e(n,0)")
            (("1" (ASSERT) NIL NIL)
             ("2" (HIDE -1 2)
              (("2" (EXPAND "zero_vec")
                (("2" (EXPAND "e")
                  (("2" (TYPEPRED "n")
                    (("2" (ASSERT)
                      (("2" (EXPAND "length" -2)
                        (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -2) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_partial_implies_scal_partial_TCC1| 0
  (|dd_partial_implies_scal_partial_TCC1-1| |nil| 3852028936
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|dd_partial_implies_scal_partial| SUBTYPE
    "matrices.*(derivative_domain_multi.c, derivative_domain_multi.v)"
    "VectorN(derivative_domain_multi.n)")))
 (|dd_partial_implies_scal_partial| 0
  (|dd_partial_implies_scal_partial-1| |nil| 3852028983
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_partial?")
      (("" (SKEEP 1)
        (("" (CASE "c=0")
          (("1" (INST 1 "e/2")
            (("1" (GRIND) NIL NIL)
             ("2" (LEMMA "mult_zero")
              (("2" (INST -1 "v")
                (("1" (REPLACE -2 1)
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "scal_zero")
                      (("1" (INST -1 "e/2" "length(v)")
                        (("1" (REPLACE -1)
                          (("1" (ASSERT)
                            (("1" (LEMMA "zero_id")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "v")
                                  (("1" (HIDE -1)
                                    (("1" (INST -2 "p")
                                      (("1" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (CASE "c>0")
            (("1" (INST -2 "e*c" "p")
              (("1" (ASSERT)
                (("1" (SKEEP)
                  (("1" (INST 2 "delta/c")
                    (("1" (DIV-BY -2 "c")
                      (("1" (LEMMA "abs_div")
                        (("1" (INST?)
                          (("1" (ASSERT)
                            (("1" (REPLACE -1 2)
                              (("1" (EXPAND "abs" 2 2) (("1" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (TYPEPRED "delta")
                        (("2" (CASE "p + delta * v = p + delta / c * (c * v)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (HIDE 2 3)
                              (("2" (HIDE -)
                                (("2" (LEMMA "add_cancel")
                                  (("2"
                                    (CASE "delta * v = delta / c * (c * v)")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (HIDE -1)
                                      (("2" (HIDE 2)
                                        (("2" (LEMMA "asso_v")
                                          (("2" (INST -1 "delta/c" "c" "v")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (TYPEPRED "v")
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (SPLIT 1)
                  (("1" (ASSERT)
                    (("1" (DIV-BY 1 "c")
                      (("1" (TYPEPRED "e") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (DIV-BY 1 "c")
                    (("2" (TYPEPRED "e") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (CASE "c<0")
              (("1" (INST -2 "e*abs(c)" "p")
                (("1" (SKEEP)
                  (("1" (INST 3 "delta/c")
                    (("1" (ASSERT)
                      (("1" (LEMMA "abs_div")
                        (("1" (INST?)
                          (("1" (DIV-BY -3 "abs(c)") (("1" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (CASE "p + delta * v = p + delta / c * (c * v)")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (ASSERT)
                        (("2" (HIDE 2 3)
                          (("2" (HIDE -)
                            (("2" (LEMMA "add_cancel")
                              (("2" (CASE "delta * v = delta / c * (c * v)")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (HIDE -1)
                                  (("2" (HIDE 2)
                                    (("2" (LEMMA "asso_v")
                                      (("2" (INST -1 "delta/c" "c" "v")
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (TYPEPRED "v")
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (ASSERT) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (DIV-BY 1 "c")
                    (("2" (TYPEPRED "e")
                      (("2" (ASSERT)
                        (("2" (DIV-BY 1 "abs(c)")
                          (("2" (TYPEPRED "e") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|add_cancel| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_scal_partial_implies_partial_TCC1| 0
  (|dd_scal_partial_implies_partial_TCC1-1| |nil| 3852028936
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|dd_scal_partial_implies_partial| SUBTYPE
    "matrices.*(derivative_domain_multi.c, derivative_domain_multi.v)"
    "VectorN(derivative_domain_multi.n)")))
 (|dd_scal_partial_implies_partial| 0
  (|dd_scal_partial_implies_partial-1| |nil| 3852036811
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_partial?")
      (("" (SKEEP)
        (("" (INST -1 "e/abs(c)" "p")
          (("" (SKEEP)
            (("" (INST 1 "delta*c")
              (("1" (LEMMA "abs_mult")
                (("1" (INST?)
                  (("1" (REPLACE -1)
                    (("1" (ASSERT) (("1" (MULT-BY -2 "abs(c)") NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (TYPEPRED "p" "delta")
                  (("2" (HIDE -1)
                    (("2" (ASSERT)
                      (("2" (LEMMA "asso_v")
                        (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_zero| 0
  (|dd_zero-1| |nil| 3741507017
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_direction?")
      (("" (SKEEP)
        (("" (INST 1 "e/2")
          (("1" (EXPAND "abs" 1) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (LEMMA "scal_zero")
              (("2" (TYPEPRED "p")
                (("2" (INST -4 "e/2" "n")
                  (("2" (LEMMA "zero_id")
                    (("2" (INST -1 "p")
                      (("2" (REPLACE -3 -1)
                        (("2" (REPLACE -5 1)
                          (("2" (REPLACE -1 1) (("2" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|dd_zero_partial| 0
  (|dd_zero_partial-1| |nil| 3852023532
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain_partial?")
      (("" (SKEEP)
        (("" (INST 1 "e/2")
          (("1" (EXPAND "abs" 1) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (ASSERT)
            (("2" (LEMMA "scal_zero")
              (("2" (TYPEPRED "p")
                (("2" (INST -4 "e/2" "n")
                  (("2" (LEMMA "zero_id")
                    (("2" (INST -1 "p")
                      (("2" (REPLACE -3 -1)
                        (("2" (REPLACE -5 1)
                          (("2" (REPLACE -1 1) (("2" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|domain_direction_scal_TCC1| 0
  (|domain_direction_scal_TCC1-1| |nil| 3741507015 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|domain_direction_scal| SUBTYPE
    "matrices.*(derivative_domain_multi.c, derivative_domain_multi.v)"
    "VectorN(derivative_domain_multi.n)")))
 (|domain_direction_scal| 0
  (|domain_direction_scal-1| |nil| 3741507130
   ("" (SKEEP)
    (("" (CASE "c=0")
      (("1" (LEMMA "mult_zero")
        (("1" (INST -1 "v")
          (("1" (REPLACE -2 1)
            (("1" (REPLACE -1 1)
              (("1" (TYPEPRED "v")
                (("1" (REPLACE -2 1)
                  (("1" (LEMMA "dd_zero") (("1" (INST -1 "D") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (TYPEPRED "D")
        (("2" (EXPAND "deriv_domain_direction?")
          (("2" (SKEEP)
            (("2" (INST -1 "e*abs(c)" "p")
              (("1" (SKEEP)
                (("1" (INST 2 "delta/abs(c)")
                  (("1" (LEMMA "abs_div")
                    (("1" (INST -1 "abs(c)" "delta")
                      (("1" (REPLACE -1 2)
                        (("1" (EXPAND "abs" 2 2)
                          (("1" (ASSERT)
                            (("1" (MULT-BY 2 "abs(c)") (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (EXPAND "abs" 1)
                      (("2" (LEMMA "asso_v")
                        (("2" (INST -1 "delta/c" "c" "v")
                          (("1" (REPLACE -1 1)
                            (("1" (ASSERT)
                              (("1" (SPLIT)
                                (("1" (MULT-BY 1 "c") (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (MULT-BY 1 "c") (("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (EXPAND "abs" 1 1) (("3" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "e" "abs(c)")
                (("2" (ASSERT)
                  (("2" (DIV-BY 1 "abs(c)") (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|domain_direction_scal_real_TCC1| 0
  (|domain_direction_scal_real_TCC1-1| |nil| 3741507935
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|domain_direction_scal_real| SUBTYPE
    "matrices.*(derivative_domain_multi.c, derivative_domain_multi.v)"
    "VectorN(derivative_domain_multi.n)")))
 (|domain_direction_scal_real| 0
  (|domain_direction_scal_real-1| |nil| 3741508024
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_both_direction?")
        (("" (FLATTEN)
          (("" (CASE "c>=0")
            (("1" (LEMMA "domain_direction_scal")
              (("1" (INST -1 "c" "v" "D")
                (("1" (ASSERT)
                  (("1" (EXPAND "deriv_domain_direction?")
                    (("1" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (CASE "NOT -c>=0")
              (("1" (ASSERT) NIL NIL)
               ("2" (LEMMA "domain_direction_scal")
                (("2" (INST -1 "-c" "-1*v" "D")
                  (("1" (ASSERT)
                    (("1" (LEMMA "asso_v")
                      (("1" (INST -1 "-c" "-1" "v")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "deriv_domain_direction?" 1)
                    (("2" (EXPAND "deriv_domain_direction?" -3)
                      (("2" (SKEEP)
                        (("2" (INST -3 "e" "p")
                          (("2" (SKEEP) (("2" (INST 1 "delta") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   SHOSTAK))
 (|del_neigh_all_mult?_TCC1| 0
  (|del_neigh_all_mult?_TCC1-1| |nil| 3740927819
   ("" (SKEEP)
    (("" (TYPEPRED "x-a")
      (("" (ASSERT)
        (("" (TYPEPRED "x")
          (("" (TYPEPRED "a") (("" (EXPAND "max") (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|del_neigh_all_mult?| SUBTYPE "derivative_domain_multi.x"
    "(list_adt[real].cons?)")))
 (|del_neigh_all_mult?_TCC2| 0
  (|del_neigh_all_mult?_TCC2-1| |nil| 3741355842
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (TYPEPRED "a" "x" "a+x")
        (("" (ASSERT) (("" (EXPAND "max") (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
       |matrices|))
   NIL
   (|del_neigh_all_mult?| SUBTYPE
    "(matrices.+)(derivative_domain_multi.a, derivative_domain_multi.x)"
    "VectorN(derivative_domain_multi.n)")))
 (|del_neigh_norm_equiv| 0
  (|del_neigh_norm_equiv-1| |nil| 3741354390
   ("" (SKEEP)
    (("" (LEMMA "equiv_norm")
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (SKEEP)
            (("1" (EXPAND "del_neigh_all_mult?")
              (("1" (SKEEP)
                (("1" (INST -2 "nn!1" "nn")
                  (("1" (EXPAND "del_neigh_all_mult?")
                    (("1" (SKEEP)
                      (("1" (INST -1 "a")
                        (("1" (SKEEP)
                          (("1" (EXPAND "equiv?" -2)
                            (("1" (SKEEP)
                              (("1" (INST 1 "delta/c2")
                                (("1" (SKEEP)
                                  (("1" (INST -1 "x")
                                    (("1" (INST -3 "x")
                                      (("1" (FLATTEN)
                                        (("1" (SPLIT)
                                          (("1" (PROPAX) NIL NIL)
                                           ("2" (MULT-BY -1 "c2")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "del_neigh_all_mult?")
            (("2" (INST -1 "norm_inf(n)")
              (("2" (INST 1 "norm_inf(n)")
                (("2" (SKEEP)
                  (("2" (EXPAND "del_neigh_all_mult?")
                    (("2" (INST -1 "a") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|equiv_norm| FORMULA-DECL NIL |norms_equiv| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|equiv?| CONST-DECL "bool" |norms_equiv| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL))
   SHOSTAK))
 (|del_neigh_all_lem_mutl| 0
  (|del_neigh_all_lem_mutl-1| |nil| 3741363092
   ("" (SKEEP)
    (("" (LEMMA "del_neigh_norm_equiv")
      (("" (INST -1 "D")
        (("" (FLATTEN)
          (("" (ASSERT)
            (("" (HIDE -2)
              (("" (SPLIT)
                (("1" (ASSERT)
                  (("1" (EXPAND "deriv_domain?")
                    (("1" (EXPAND "del_neigh_all_mult?")
                      (("1" (SKEEP)
                        (("1" (HIDE -2)
                          (("1" (INST -1 "nn")
                            (("1" (EXPAND "del_neigh_all_mult?")
                              (("1" (SKEEP)
                                (("1" (INST -1 "p")
                                  (("1" (SKEEP)
                                    (("1"
                                      (INST 1
                                       "(min(delta,e)/(nn(e(n,0))*2))*e(n,0)")
                                      (("1"
                                        (INST -1
                                         "(min(delta,e)/(nn(e(n,0))*2))*e(n,0)")
                                        (("1" (SPLIT)
                                          (("1" (ASSERT)
                                            (("1" (TYPEPRED "nn")
                                              (("1" (EXPAND "norm?")
                                                (("1" (FLATTEN)
                                                  (("1" (HIDE -1 -3 -4)
                                                    (("1"
                                                      (INST -1 "e(n,0)"
                                                       "(min(delta, e) / (2 * nn(e(n, 0))))")
                                                      (("1" (ASSERT)
                                                        (("1" (REPLACE -1 1)
                                                          (("1"
                                                            (LEMMA "abs_div")
                                                            (("1"
                                                              (INST -1
                                                               "(2 * nn(e(n, 0)))"
                                                               "min(delta, e)")
                                                              (("1"
                                                                (REPLACE -1 1)
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "min(delta, e)")
                                                                  (("1"
                                                                    (EXPAND
                                                                     "abs" 1 1)
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "nn(e(n, 0))")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (MULT-BY
                                                                           -1
                                                                           "2")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "abs"
                                                                               1
                                                                               1)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (TYPEPRED "nn")
                                            (("2" (EXPAND "norm?")
                                              (("2" (FLATTEN)
                                                (("2"
                                                  (INST -2 "e(n, 0)"
                                                   "(min(delta, e) / (nn(e(n, 0)) * 2))")
                                                  (("2" (HIDE -1 -3 -4)
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (REPLACE -1 2)
                                                        (("2" (LEMMA "abs_div")
                                                          (("2"
                                                            (INST -1
                                                             "(nn(e(n, 0)) * 2)"
                                                             "(min(delta, e))")
                                                            (("2"
                                                              (REPLACE -1 1)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND "abs"
                                                                          1 1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "abs" 1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2"
                                          (TYPEPRED
                                           "(min(delta, e) / (2 * nn(e(n, 0)))) * e(n, 0)")
                                          (("2" (TYPEPRED "e(n,0)")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SPLIT)
                                        (("1"
                                          (TYPEPRED
                                           "(min(delta, e) / (2 * nn(e(n, 0)))) * e(n, 0)")
                                          (("1" (TYPEPRED "e(n,0)")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (LEMMA "zero_scal")
                                          (("2"
                                            (INST -1 "e(n,0)"
                                             "(min(delta, e) / (2 * nn(e(n, 0))))")
                                            (("2" (ASSERT)
                                              (("2" (TYPEPRED "e(n,0)")
                                                (("2" (HIDE -1)
                                                  (("2" (REPLACE -1 -2)
                                                    (("2"
                                                      (EXPAND "zero_vec" -2)
                                                      (("2" (EXPAND "e" -2)
                                                        (("2"
                                                          (DECOMPOSE-EQUALITY
                                                           -2)
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3"
                                          (INST -1
                                           "(min(delta, e) / (2 * nn(e(n, 0)))) * e(n, 0)")
                                          (("1" (ASSERT)
                                            (("1" (TYPEPRED "nn")
                                              (("1" (EXPAND "norm?")
                                                (("1" (FLATTEN)
                                                  (("1" (HIDE -1 -3 -4)
                                                    (("1"
                                                      (INST -1 "e(n,0)"
                                                       "(min(delta, e) / (2 * nn(e(n, 0))))")
                                                      (("1" (ASSERT)
                                                        (("1" (REPLACE -1 2)
                                                          (("1"
                                                            (LEMMA "abs_div")
                                                            (("1"
                                                              (INST -1
                                                               "(2 * nn(e(n, 0)))"
                                                               "min(delta, e)")
                                                              (("1"
                                                                (REPLACE -1 2)
                                                                (("1"
                                                                  (EXPAND "abs"
                                                                          2)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (TYPEPRED
                                             "(min(delta, e) / (2 * nn(e(n, 0)))) * e(n, 0)"
                                             "e(n,0)")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("3" (TYPEPRED "nn")
                                        (("3" (EXPAND "norm?")
                                          (("3" (FLATTEN)
                                            (("3" (HIDE -1 -4 -2)
                                              (("3" (INST -1 "e(n,0)")
                                                (("3" (FLATTEN)
                                                  (("3" (MULT-BY -3 "1/2")
                                                    (("3" (ASSERT)
                                                      (("3" (EXPAND "e" -2)
                                                        (("3"
                                                          (EXPAND "zero_vec"
                                                                  -2)
                                                          (("3"
                                                            (DECOMPOSE-EQUALITY
                                                             -2)
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("4" (TYPEPRED "(e(n, 0))")
                                        (("4" (ASSERT) NIL NIL)) NIL)
                                       ("5" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (PROPAX) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL))
 (|domain_partial_p?_TCC1| 0
  (|domain_partial_p?_TCC1-1| |nil| 3841322117
   ("" (SKEEP)
    (("" (TYPEPRED "p+delta*e(n,i)" "p" "delta*e(n,i)" "e(n,i)")
      (("" (ASSERT)
        (("" (HIDE -1 -3 -6 -8)
          (("" (REPLACE -2)
            (("" (REPLACE -5)
              (("" (REPLACE -4)
                (("" (EXPAND "max " -1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|domain_partial_p?| SUBTYPE
    "(matrices.+)(derivative_domain_multi.p, matrices.*(derivative_domain_multi.delta, vector_arithmetic.e(derivative_domain_multi.n, derivative_domain_multi.i)))"
    "VectorN(derivative_domain_multi.n)"))))

