(|init_partial_def|
 (|D_down_TCC1| 0
  (|D_down_TCC1-2| |nil| 3851004022
   ("" (SKEEP)
    (("" (TYPEPRED "p+Delta*v")
      (("" (TYPEPRED "p" "Delta*v")
        (("" (ASSERT)
          (("" (TYPEPRED "v")
            (("" (ASSERT) (("" (EXPAND "max" -8) (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|D_down| SUBTYPE
    "(matrices.+)(init_partial_def.p, matrices.*(init_partial_def.Delta, init_partial_def.v))"
    "VectorN(init_partial_def.n)"))
  (|D_down_TCC1-1| |nil| 3851003286 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|D_down| SUBTYPE
    "(matrices.+)(init_partial_def.p, matrices.*(init_partial_def.Delta, init_partial_def.v))"
    "VectorN(init_partial_def.n)")))
 (|D_down_der_domain| 0
  (|D_down_der_domain-1| |nil| 3851004042
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (TYPEPRED "p")
        (("" (TYPEPRED "v")
          (("" (EXPAND "deriv_domain?")
            (("" (SKEEP)
              (("" (TYPEPRED "x")
                (("" (EXPAND "D_down" -1)
                  (("" (ASSERT)
                    (("" (EXPAND "deriv_domain_direction?" -7)
                      (("" (INST -7 "e" "p+x*v")
                        (("" (SKEEP)
                          (("" (TYPEPRED "delta")
                            (("" (INST 1 "delta")
                              (("" (EXPAND "D_down")
                                (("" (LEMMA "dist_scalar")
                                  (("" (INST -1 "x" "delta" "v")
                                    (("" (ASSERT)
                                      (("" (REPLACE -1 1)
                                        (("" (ASSERT)
                                          (("" (LEMMA "asso_add")
                                            (("" (INST -1 "p" "x*v" "delta*v")
                                              (("" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dist_scalar| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_add| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   NIL))
 (|D_down_domain| 0
  (|D_down_domain-1| |nil| 3851004141
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (LEMMA "D_down_der_domain")
        (("" (INST -1 "v" "D" "p")
          (("" (EXPAND "deriv_domain_all_direction?")
            (("" (INST -1 "v")
              (("" (GROUND)
                (("" (EXPAND "deriv_domain_direction?") (("" (PROPAX) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|D_down_der_domain_unit| 0
  (|D_down_der_domain_unit-1| |nil| 3851004176
   ("" (SKEEP)
    (("" (TYPEPRED "p")
      (("" (TYPEPRED "v")
        (("" (HIDE -1 -3)
          (("" (EXPAND "deriv_domain?")
            (("" (SKEEP)
              (("" (TYPEPRED "D")
                (("" (EXPAND "deriv_domain_all_direction?")
                  (("" (INST -1 "v")
                    (("" (EXPAND "deriv_domain_direction?")
                      (("" (INST -1 "min(min(e,abs(1-x)),abs(x))/2" "p+x*v")
                        (("1" (SKEEP)
                          (("1" (TYPEPRED "delta")
                            (("1" (INST 1 "delta")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (SPLIT)
                                (("1" (EXPAND "D_down" 1)
                                  (("1" (LEMMA "dist_scalar")
                                    (("1" (INST -1 "x" "delta" "v")
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -1 1)
                                          (("1" (ASSERT)
                                            (("1" (LEMMA "asso_add")
                                              (("1"
                                                (INST -1 "p" "x * v"
                                                 "delta * v")
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (HIDE -3 -5 -6 -7)
                                    (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (TYPEPRED "p + x * v" "p" "x*v")
                            (("2" (ASSERT)
                              (("2" (EXPAND "max" -)
                                (("2" (ASSERT)
                                  (("2" (TYPEPRED "x")
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "D_down" -1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|asso_add| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|dist_scalar| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   SHOSTAK))
 (|D_down_domain_unit| 0
  (|D_down_domain_unit-1| |nil| 3851004266
   ("" (SKEEP)
    (("" (LEMMA "D_down_der_domain_unit") (("" (INST -1 "v" "D" "p") NIL NIL))
      NIL))
    NIL)
   ((|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL))
 (|D_down_domain_unitc| 0
  (|D_down_domain_unitc-1| |nil| 3851004321
   ("" (SKEEP)
    (("" (EXPAND "deriv_domain?")
      (("" (SKEEP)
        (("" (TYPEPRED "x")
          (("" (CASE "x=1")
            (("1" (TYPEPRED "D")
              (("1" (EXPAND "deriv_domain_all_direction?")
                (("1" (INST -1 "-1*v")
                  (("1" (EXPAND "deriv_domain_direction?")
                    (("1" (INST -1 "min(e/2,1/2)" "p+x*v")
                      (("1" (SKEEP)
                        (("1" (INST 1 "-delta")
                          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                           ("2" (SPLIT)
                            (("1" (TYPEPRED "delta")
                              (("1" (EXPAND "D_down" 1)
                                (("1" (LEMMA "asso_v")
                                  (("1" (INST -1 "delta" "-1" "v")
                                    (("1" (REPLACE -1 -4)
                                      (("1" (ASSERT)
                                        (("1" (LEMMA "dist_scalar")
                                          (("1" (ASSERT)
                                            (("1"
                                              (CASE "NOT -delta = delta*-1")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (REPLACE -1 -6)
                                                (("2" (REPLACE -1 -6 RL)
                                                  (("2"
                                                    (INST -2 "x" "-delta" "v")
                                                    (("1" (REPLACE -2 1)
                                                      (("1" (LEMMA "asso_add")
                                                        (("1"
                                                          (INST -1 "p" "x*v"
                                                           "-delta*v")
                                                          (("1" (ASSERT) NIL
                                                            NIL)
                                                           ("2"
                                                            (TYPEPRED
                                                             "-delta*v" "v")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("3"
                                                            (TYPEPRED "x*v"
                                                             "v")
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL)
                                                           ("4" (TYPEPRED "p")
                                                            (("4" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (TYPEPRED "v")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (TYPEPRED "v")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SPLIT)
                        (("1" (TYPEPRED "p+x*v" "x*v" "v")
                          (("1" (EXPAND "max" -) (("1" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("2" (EXPAND "D_down" -2) (("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (TYPEPRED "-1*v" "v")
              (("2" (ASSERT)
                (("2" (TYPEPRED "D")
                  (("2" (EXPAND "deriv_domain_all_direction?")
                    (("2" (INST -1 "v")
                      (("2" (EXPAND "deriv_domain_direction?")
                        (("2" (INST -1 "min(e,abs(1-x))/2" "p+x*v")
                          (("1" (SKEEP)
                            (("1" (INST 2 "delta")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (SPLIT)
                                (("1" (TYPEPRED "delta")
                                  (("1" (EXPAND "D_down" 1)
                                    (("1" (LEMMA "dist_scalar")
                                      (("1" (LEMMA "asso_add")
                                        (("1" (INST -2 "x" "delta" "v")
                                          (("1" (INST -1 "p" "delta*v" "x*v")
                                            (("1" (ASSERT)
                                              (("1" (REPLACE -2 1)
                                                (("1" (ASSERT)
                                                  (("1" (LEMMA "asso_add")
                                                    (("1"
                                                      (INST -1 "p" "x*v"
                                                       "delta*v")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (TYPEPRED "delta*v" "v")
                                              (("2" (ASSERT)
                                                (("2" (TYPEPRED "x*v" "v")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (TYPEPRED "p")
                                              (("3" (ASSERT)
                                                (("3" (TYPEPRED "x*v" "v")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (TYPEPRED "delta*v" "v")
                                  (("2" (ASSERT)
                                    (("2" (TYPEPRED "p")
                                      (("2" (ASSERT)
                                        (("2" (TYPEPRED "v")
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (SPLIT)
                            (("1" (TYPEPRED "p+x*v" "x*v" "v")
                              (("1" (EXPAND "max" -) (("1" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (HIDE 3) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("3" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|scal| DEF-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|dist_scalar| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|asso_add| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   NIL))
 (|D_down_not_one| 0
  (|D_down_not_one-1| |nil| 3851004533
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?")
      (("" (SKEEP)
        (("" (TYPEPRED "D")
          (("" (EXPAND "deriv_domain_all_direction?")
            (("" (INST -1 "v")
              (("" (EXPAND "deriv_domain_direction?")
                (("" (INST-CP -1 "1" "p")
                  (("" (SKEEP)
                    (("" (INST -1 "delta" "p")
                      (("" (CASE "x=delta")
                        (("1" (SKEEP)
                          (("1" (INST 1 "delta_1")
                            (("1" (GRIND) NIL NIL)
                             ("2" (TYPEPRED "delta_1")
                              (("2" (EXPAND "D_down") (("2" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKEEP)
                          (("2" (INST 2 "delta")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "D_down" 1) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|D_down_not_one_unit| 0
  (|D_down_not_one_unit-1| |nil| 3851004733
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?")
      (("" (SKEEP)
        (("" (TYPEPRED "D")
          (("" (EXPAND "deriv_domain_all_direction?")
            (("" (INST -1 "v")
              (("" (EXPAND "deriv_domain_direction?")
                (("" (INST-CP -1 "1" "p")
                  (("" (SKEEP)
                    (("" (INST -1 "min(delta,1)" "p")
                      (("" (SKEEP)
                        (("" (CASE "x=delta")
                          (("1" (INST 1 "delta_1")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (TYPEPRED "delta_1")
                              (("2" (EXPAND "D_down" 1)
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (INST 2 "delta")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "D_down" 1) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK))
 (|D_down_not_one_unitc| 0
  (|D_down_not_one_unitc-1| |nil| 3851004760
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?")
      (("" (SKEEP)
        (("" (TYPEPRED "D")
          (("" (EXPAND "deriv_domain_all_direction?")
            (("" (INST -1 "v")
              (("" (EXPAND "deriv_domain_direction?")
                (("" (INST-CP -1 "1/2" "p")
                  (("" (SKEEP)
                    (("" (INST -1 "min(delta,1)" "p")
                      (("" (SKEEP)
                        (("" (CASE "x=delta")
                          (("1" (INST 1 "delta_1")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (SPLIT)
                              (("1" (EXPAND "D_down" 1)
                                (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL)
                           ("2" (INST 2 "delta")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "D_down" 1) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain_all_direction?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|D_down_partial| 0
  (|D_down_partial-1| |nil| 3851011128
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain?")
        (("" (EXPAND "deriv_domain_partial?")
          (("" (SKEEP)
            (("" (TYPEPRED "x")
              (("" (EXPAND "D_down" -1)
                (("" (INST -2 "e" "p+x*v")
                  (("" (SKEEP)
                    (("" (TYPEPRED "delta")
                      (("" (INST 1 "delta")
                        (("" (EXPAND "D_down" 1)
                          ((""
                            (CASE
                                "p + x * v + delta * v = p + (delta + x) * v")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (HIDE 2)
                              (("2" (LEMMA "dist_scalar")
                                (("2" (INST -1 "x" "delta" "v")
                                  (("1" (ASSERT)
                                    (("1" (REPLACE -1 1)
                                      (("1" (LEMMA "asso_add")
                                        (("1" (INST -1 "p" "x*v" "delta*v")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (HIDE 2)
                                            (("2" (TYPEPRED "delta*v" "v")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("3" (TYPEPRED "x*v" "v")
                                            (("3" (ASSERT) NIL NIL)) NIL)
                                           ("4" (TYPEPRED "p")
                                            (("4" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|asso_add| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|dist_scalar| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   SHOSTAK))
 (|D_down_all_partial| 0
  (|D_down_all_partial-1| |nil| 3852717116
   ("" (SKEEP)
    (("" (LEMMA "D_down_partial")
      (("" (INST -1 "v" "D" "p")
        (("" (TYPEPRED "D")
          (("" (EXPAND "deriv_domain_all_partial?" -1)
            (("" (INST -1 "v")
              (("" (EXPAND "deriv_domain_partial?") (("" (PROPAX) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|D_down_partial_not_one| 0
  (|D_down_partial_not_one-1| |nil| 3851013600
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_partial?" -1)
        (("" (EXPAND "not_one_element?" 1)
          (("" (SKEEP)
            (("" (TYPEPRED "x")
              (("" (EXPAND "D_down" -1)
                (("" (INST -2 "abs(x)" "p")
                  (("1" (SKEEP)
                    (("1" (INST 1 "delta")
                      (("1" (TYPEPRED "delta") (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (TYPEPRED "delta")
                        (("2" (EXPAND "D_down" 1) (("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (CASE "NOT x=0")
                      (("1" (GRIND) NIL NIL)
                       ("2" (REPLACE -1)
                        (("2" (ASSERT)
                          (("2" (TYPEPRED "D")
                            (("2" (EXPAND "deriv_domain_partial?" -1)
                              (("2" (INST -1 "1" "p")
                                (("2" (SKEEP)
                                  (("2" (TYPEPRED "delta")
                                    (("2" (INST 2 "delta")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (EXPAND "D_down" 1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|))
   SHOSTAK))
 (|D_down_direction_not_one| 0
  (|D_down_direction_not_one-1| |nil| 3852215750
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_direction?")
        (("" (EXPAND "not_one_element?" 1)
          (("" (SKEEP)
            (("" (TYPEPRED "x")
              (("" (EXPAND "D_down" -1)
                (("" (TYPEPRED "p")
                  (("" (TYPEPRED "x")
                    (("" (HIDE -1)
                      (("" (CASE "x=0")
                        (("1" (INST -6 "1" "p")
                          (("1" (SKEEP)
                            (("1" (TYPEPRED "delta")
                              (("1" (INST 1 "delta")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (EXPAND "D_down" 1)
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (INST 2 "0")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "D_down" 1)
                              (("2" (ASSERT)
                                (("2" (LEMMA "mult_zero")
                                  (("2" (INST?)
                                    (("2" (REPLACE -1)
                                      (("2" (LEMMA "zero_id")
                                        (("2" (INST -1 "p")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|D_down_direction_deriv_domain| 0
  (|D_down_direction_deriv_domain-1| |nil| 3852216341
   ("" (SKEEP)
    (("" (LEMMA "D_down_partial")
      (("" (INST -1 "v" "D" "p")
        (("" (ASSERT)
          (("" (TYPEPRED "D")
            (("" (HIDE 2)
              (("" (EXPAND "deriv_domain_partial?")
                (("" (EXPAND "deriv_domain_direction?")
                  (("" (SKEEP)
                    (("" (INST?)
                      (("" (INST -1 "p!1")
                        (("" (SKEEP) (("" (INST 1 "delta") NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|init_partial?_TCC1| 0
  (|init_partial?_TCC1-1| |nil| 3851010631
   ("" (SKEEP)
    (("" (EXPAND "D_down" 1 1)
      (("" (TYPEPRED "p")
        (("" (CASE "p = p + 0 *v")
          (("1" (ASSERT) NIL NIL)
           ("2" (HIDE 2)
            (("2" (LEMMA "zero_id")
              (("2" (LEMMA "mult_zero")
                (("2" (INST -1 "v")
                  (("1" (REPLACE -1)
                    (("1" (TYPEPRED "v")
                      (("1" (INST -4 "p") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (TYPEPRED "v")
                    (("2" (EXPAND "length") (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL))
   NIL
   (|init_partial?| SUBTYPE "0"
    "(init_partial_def.D_down(init_partial_def.D, init_partial_def.p, init_partial_def.v))")))
 (|init_partial?_TCC2| 0
  (|init_partial?_TCC2-1| |nil| 3851010631
   ("" (SKEEP)
    (("" (LEMMA "D_down_partial") (("" (INST -1 "v" "D" "p") NIL NIL)) NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial?| ASSUMING
    "analysis@derivatives_def[(init_partial_def.D_down(init_partial_def.D, init_partial_def.p, init_partial_def.v))].derivatives_def"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
 (|init_partial?_TCC3| 0
  (|init_partial?_TCC3-1| |nil| 3851010631
   ("" (LEMMA "D_down_partial_not_one") (("" (PROPAX) NIL NIL)) NIL) NIL NIL
   (|init_partial?| ASSUMING
    "analysis@derivatives_def[(init_partial_def.D_down(init_partial_def.D, init_partial_def.p, init_partial_def.v))].derivatives_def"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (|diff_imp_init_partial_TCC1| 0
  (|diff_imp_init_partial_TCC1-1| |nil| 3851013571
   ("" (SKEEP)
    (("" (LEMMA "dd_all_partial_implies_dd")
      (("" (INST -1 "D") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|dd_all_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi|
     NIL)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|diff_imp_init_partial| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|diff_imp_init_partial_TCC2| 0
  (|diff_imp_init_partial_TCC2-1| |nil| 3851013571
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_all_partial?")
        (("" (SKEEP)
          (("" (INST -1 "v")
            (("" (EXPAND "deriv_domain_partial?") (("" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|diff_imp_init_partial| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(init_partial_def.v))")))
 (|diff_imp_init_partial| 0
  (|diff_imp_init_partial-1| |nil| 3851014749
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (CASE "v=zero_vec(n)")
        (("1" (REPLACE -1 1)
          (("1" (EXPAND "init_partial?")
            (("1" (EXPAND "derivable?")
              (("1" (EXPAND "convergent?" 1)
                (("1" (INST 1 "0")
                  (("1" (EXPAND "convergence" 1)
                    (("1" (EXPAND "convergence" 1)
                      (("1" (SPLIT)
                        (("1" (EXPAND "adh" 1)
                          (("1" (SKEEP)
                            (("1" (TYPEPRED "D")
                              (("1" (EXPAND "deriv_domain_all_partial?")
                                (("1" (EXPAND "fullset")
                                  (("1" (INST -1 "v")
                                    (("1" (EXPAND "deriv_domain_partial?")
                                      (("1" (INST -1 "e" "p")
                                        (("1" (SKEEP)
                                          (("1" (INST 1 "delta")
                                            (("1" (EXPAND "A" 1)
                                              (("1" (EXPAND "D_down" 1)
                                                (("1" (TYPEPRED "delta")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKEEP)
                          (("2" (INST 1 "1")
                            (("2" (SKEEP)
                              (("2" (ASSERT)
                                (("2" (LEMMA "scal_zero")
                                  (("2"
                                    (CASE
                                        "NOT (LAMBDA (Delta: real): f(p + Delta * zero_vec(n))) = LAMBDA (Delta: real): f(p+zero_vec(n))")
                                    (("1" (DECOMPOSE-EQUALITY 1)
                                      (("1" (INST -1 "x!1" "n")
                                        (("1" (ASSERT) NIL NIL)) NIL)
                                       ("2" (TYPEPRED "p + zero_vec(n)")
                                        (("2" (EXPAND "max" -2)
                                          (("2" (TYPEPRED "p")
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("3" (SKEEP)
                                        (("3"
                                          (TYPEPRED "p + Delta * zero_vec(n)")
                                          (("3"
                                            (TYPEPRED "Delta * zero_vec(n)")
                                            (("3" (TYPEPRED "zero_vec(n)")
                                              (("3" (EXPAND "max")
                                                (("3" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (REPLACE -1 1)
                                      (("2" (HIDE -1)
                                        (("2" (LEMMA "zero_id")
                                          (("2"
                                            (CASE
                                                " NOT (LAMBDA (Delta: real): f(p + zero_vec(n))) = LAMBDA (Delta: real): f(p)")
                                            (("1" (DECOMPOSE-EQUALITY 1)
                                              (("1" (INST -1 "p")
                                                (("1" (TYPEPRED "p")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (TYPEPRED "p + zero_vec(n)")
                                                (("2" (TYPEPRED "p")
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (TYPEPRED "p"
                                                       "zero_vec(n)")
                                                      (("2" (ASSERT)
                                                        (("2" (EXPAND "max")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (REPLACE -1 1)
                                              (("2" (EXPAND "NQ" 1)
                                                (("2" (ASSERT)
                                                  (("2" (EXPAND "restrict" 1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (TYPEPRED "p + zero_vec(n)")
                                      (("3" (TYPEPRED "p")
                                        (("3" (ASSERT)
                                          (("3" (TYPEPRED "p" "zero_vec(n)")
                                            (("3" (ASSERT)
                                              (("3" (EXPAND "max" -)
                                                (("3" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("4" (SKEEP)
                                      (("4"
                                        (TYPEPRED "p + Delta * zero_vec(n)")
                                        (("4" (TYPEPRED "p")
                                          (("4" (TYPEPRED "Delta*zero_vec(n)")
                                            (("4" (TYPEPRED "zero_vec(n)")
                                              (("4" (ASSERT)
                                                (("4"
                                                  (TYPEPRED "p"
                                                   "Delta*zero_vec(n)"
                                                   "zero_vec(n)")
                                                  (("4"
                                                    (TYPEPRED
                                                     "p+Delta*zero_vec(n)")
                                                    (("4" (EXPAND "max" -)
                                                      (("4" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "differentiable?")
          (("2" (SKEEP)
            (("2" (EXPAND "convergence_zero?")
              (("2" (EXPAND "init_partial?")
                (("2" (EXPAND "derivable?")
                  (("2" (EXPAND "convergent?")
                    (("2" (INST 2 "g*v")
                      (("2" (EXPAND "convergence")
                        (("2" (EXPAND "convergence" 2)
                          (("2" (SPLIT)
                            (("1" (EXPAND "adh" 1)
                              (("1" (SKEEP)
                                (("1" (TYPEPRED "D")
                                  (("1" (EXPAND "fullset" 1)
                                    (("1" (EXPAND "deriv_domain_all_partial?")
                                      (("1" (INST -1 "v")
                                        (("1" (EXPAND "deriv_domain_partial?")
                                          (("1" (INST -1 "e" "p")
                                            (("1" (SKEEP)
                                              (("1" (INST 1 "delta")
                                                (("1" (EXPAND "A")
                                                  (("1" (TYPEPRED "delta")
                                                    (("1" (EXPAND "D_down")
                                                      (("1" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (EXPAND "NQ" -1)
                                (("2" (EXPAND "NQ" 1)
                                  (("2" (INST -1 "epsilon/norm_inf(n)(v)")
                                    (("1" (SKEEP)
                                      (("1" (INST 1 "delta/norm_inf(n)(v)")
                                        (("1" (SKEEP)
                                          (("1" (INST -3 "x * v")
                                            (("1" (LEMMA "sub_zero")
                                              (("1" (LEMMA "mult_zero")
                                                (("1" (EXPAND "restrict" 1)
                                                  (("1" (INST -1 "v")
                                                    (("1" (REPLACE -1 1)
                                                      (("1" (TYPEPRED "v")
                                                        (("1" (REPLACE -2 1)
                                                          (("1" (HIDE -1)
                                                            (("1"
                                                              (LEMMA "zero_id")
                                                              (("1"
                                                                (INST -1 "p")
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "p")
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -4)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -4 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "zero_id")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "p")
                                                                            (("1"
                                                                              (TYPEPRED
                                                                               "norm_inf(n)")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "norm?"
                                                                                 -1)
                                                                                (("1"
                                                                                  (FLATTEN)
                                                                                  (("1"
                                                                                    (HIDE
                                                                                     -1
                                                                                     -3
                                                                                     -4)
                                                                                    (("1"
                                                                                      (INST
                                                                                       -1
                                                                                       "v"
                                                                                       "x")
                                                                                      (("1"
                                                                                        (TYPEPRED
                                                                                         "x")
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (SPLIT)
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (MULT-BY
                                                                                                 -1
                                                                                                 "norm_inf(n)(v)")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (LEMMA
                                                                                                     "abs_div")
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "abs(x) * norm_inf(n)(v)"
                                                                                                       "f(p + x * v) - f(p) - g * (x * v)")
                                                                                                      (("1"
                                                                                                        (LEMMA
                                                                                                         "abs_mult")
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -1
                                                                                                           "abs(x)"
                                                                                                           "norm_inf(n)(v)")
                                                                                                          (("1"
                                                                                                            (TYPEPRED
                                                                                                             "norm_inf(n)(v)")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (CASE
                                                                                                                    "NOT abs(f(p + x * v) - f(p) - g * (x * v)) / (abs(x) * norm_inf(n)(v)) *
                                                                                                                            norm_inf(n)(v) = abs(f(p + x * v) - f(p) - g * (x * v)) / (abs(x))")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (LEMMA
                                                                                                                   "abs_div")
                                                                                                                  (("2"
                                                                                                                    (INST
                                                                                                                     -1
                                                                                                                     "x"
                                                                                                                     "f(p + x * v) - f(p) - g * (x * v)")
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (CASE
                                                                                                                            "NOT (f(p + x * v) - f(p) - g * (x * v)) / x = (f(p + x * v) - f(p)) / x - g * v")
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "div_distributes_minus")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "x"
                                                                                                                               "f(p + x * v) - f(p)"
                                                                                                                               "g * (x * v)")
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (REPLACE
                                                                                                                                   -1
                                                                                                                                   1
                                                                                                                                   RL)
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("1"
                                                                                                                                      (LEMMA
                                                                                                                                       "scal_cancel")
                                                                                                                                      (("1"
                                                                                                                                        (LEMMA
                                                                                                                                         "scal_asso")
                                                                                                                                        (("1"
                                                                                                                                          (INST
                                                                                                                                           -1
                                                                                                                                           "g"
                                                                                                                                           "v"
                                                                                                                                           "x")
                                                                                                                                          (("1"
                                                                                                                                            (REPLACE
                                                                                                                                             -1
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -10
                                                                                                                             -7)
                                                                                                                            (("2"
                                                                                                                              (REPLACE
                                                                                                                               -6
                                                                                                                               -7)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "abs"
                                                                                                                                 -7
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (REPLACE
                                                                                                                                   -3
                                                                                                                                   -7)
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -2
                                                                                                                                       -7
                                                                                                                                       RL)
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1
                                                                                                                                         -7)
                                                                                                                                        (("2"
                                                                                                                                          (PROPAX)
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (CASE
                                                                                                              "abs(x) * norm_inf(n)(v) = 0")
                                                                                                          (("1"
                                                                                                            (DIV-BY
                                                                                                             -1
                                                                                                             "abs(x)")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (CASE
                                                                                                                    "0 / abs(x) =0")
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (TYPEPRED
                                                                                                                     "norm_inf(n)")
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "norm?")
                                                                                                                      (("1"
                                                                                                                        (FLATTEN)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -3
                                                                                                                           "v")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (CASE
                                                                                                      "norm_inf(n)(v)=0")
                                                                                                  (("1"
                                                                                                    (TYPEPRED
                                                                                                     "norm_inf(n)")
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "norm?")
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -3
                                                                                                           "v")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (LEMMA
                                                                                               "sub_zero")
                                                                                              (("2"
                                                                                                (LEMMA
                                                                                                 "mult_zero")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -2
                                                                                                   "x * v")
                                                                                                  (("2"
                                                                                                    (TYPEPRED
                                                                                                     "x*v")
                                                                                                    (("2"
                                                                                                      (TYPEPRED
                                                                                                       "v")
                                                                                                      (("2"
                                                                                                        (REPLACE
                                                                                                         -2
                                                                                                         -4)
                                                                                                        (("2"
                                                                                                          (REPLACE
                                                                                                           -4
                                                                                                           -6)
                                                                                                          (("2"
                                                                                                            (HIDE
                                                                                                             -1
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (REPLACE
                                                                                                               -4
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (TYPEPRED
                                                                                                                 "norm_inf(n)")
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "norm?"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (HIDE
                                                                                                                       -1
                                                                                                                       -3
                                                                                                                       -4)
                                                                                                                      (("2"
                                                                                                                        (TYPEPRED
                                                                                                                         "x")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -9
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (MULT-BY
                                                                                                                               -19
                                                                                                                               "norm_inf(n)(v)")
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SPLIT)
                                              (("1" (TYPEPRED "x*v")
                                                (("1" (TYPEPRED "v")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "fullset" -1)
                                                (("2" (TYPEPRED "x")
                                                  (("2" (EXPAND "A" -2)
                                                    (("2" (EXPAND "D_down" -2)
                                                      (("2" (TYPEPRED "p")
                                                        (("2" (TYPEPRED "x*v")
                                                          (("2" (EXPAND "NQ" 1)
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (CASE "x*v = zero_vec(n)")
                                                (("1" (ASSERT)
                                                  (("1" (TYPEPRED "x")
                                                    (("1" (LEMMA "zero_scal")
                                                      (("1" (INST -1 "v" "x")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (SPLIT)
                                          (("1" (TYPEPRED "norm_inf(n)(v)")
                                            (("1" (TYPEPRED "delta")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (DIV-BY -1 "norm_inf(n)(v)")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2"
                                                    (TYPEPRED "norm_inf(n)(v)")
                                                    (("2"
                                                      (TYPEPRED "norm_inf(n)")
                                                      (("2" (EXPAND "norm?")
                                                        (("2" (FLATTEN)
                                                          (("2" (INST -3 "v")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (TYPEPRED "delta")
                                            (("2" (TYPEPRED "norm_inf(n)(v)")
                                              (("2"
                                                (DIV-BY -3 "norm_inf(n)(v)")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (TYPEPRED "norm_inf(n)")
                                                  (("2" (EXPAND "norm?" -1)
                                                    (("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2" (INST -3 "v")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (ASSERT)
                                          (("3" (TYPEPRED "norm_inf(n)")
                                            (("3" (EXPAND "norm?")
                                              (("3" (FLATTEN)
                                                (("3" (INST -3 "v")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("4" (TYPEPRED "v")
                                          (("4" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SPLIT)
                                      (("1" (TYPEPRED "epsilon")
                                        (("1" (TYPEPRED "norm_inf(n)(v)")
                                          (("1" (DIV-BY -2 "norm_inf(n)(v)")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (TYPEPRED "norm_inf(n)")
                                              (("2" (EXPAND "norm?")
                                                (("2" (FLATTEN)
                                                  (("2" (INST -3 "v")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (TYPEPRED "epsilon")
                                        (("2" (TYPEPRED "norm_inf(n)(v)")
                                          (("2" (DIV-BY -2 "norm_inf(n)(v)")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (TYPEPRED "norm_inf(n)")
                                              (("2" (EXPAND "norm?")
                                                (("2" (FLATTEN)
                                                  (("2" (INST -3 "v")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (ASSERT)
                                      (("3" (TYPEPRED "norm_inf(n)")
                                        (("3" (EXPAND "norm?" -1)
                                          (("3" (FLATTEN)
                                            (("3" (INST -3 "v")
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("4" (TYPEPRED "v")
                                      (("4" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|differentiable?| CONST-DECL "bool" |differentiable_def| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|both_sides_div_pos_ge1| FORMULA-DECL NIL |real_props| NIL)
    (|both_sides_div_pos_gt1| FORMULA-DECL NIL |real_props| NIL)
    (|zero_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|sub_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|scal_cancel| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_asso| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|div_distributes_minus| FORMULA-DECL NIL |real_props| NIL)
    (|nnreal_div_posreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|abs_mult| FORMULA-DECL NIL |real_props| NIL)
    (|times_div_cancel1| FORMULA-DECL NIL |extra_real_props| NIL)
    (|both_sides_div1| FORMULA-DECL NIL |real_props| NIL)
    (|abs_div| FORMULA-DECL NIL |real_props| NIL)
    (|div_cancel2| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|x| SKOLEM-CONST-DECL "(A[(D_down(D, p, v))](0))" |init_partial_def| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|delta| SKOLEM-CONST-DECL "posreal" |init_partial_def| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|epsilon| SKOLEM-CONST-DECL "posreal" |init_partial_def| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|delta| SKOLEM-CONST-DECL "{delta: nzreal | D(p + delta * v)}"
     |init_partial_def| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|add| DEF-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|deriv_domain_partial?| CONST-DECL "bool" |derivative_domain_multi| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nonzero_abs_is_pos| APPLICATION-JUDGEMENT "{y: posreal | y >= x}"
     |real_defs| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (D SKOLEM-CONST-DECL "(deriv_domain_all_partial?)" |init_partial_def| NIL)
    (|p| SKOLEM-CONST-DECL "(D)" |init_partial_def| NIL)
    (|v| SKOLEM-CONST-DECL "VectorN(n)" |init_partial_def| NIL)
    (|delta| SKOLEM-CONST-DECL "{delta: nzreal | D(p + delta * v)}"
     |init_partial_def| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|setof| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|D_down| CONST-DECL "bool" |init_partial_def| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|init_partial?| CONST-DECL "bool" |init_partial_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|n| FORMAL-CONST-DECL "posnat" |init_partial_def| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|diff_imp_init_partial1_TCC1| 0
  (|diff_imp_init_partial1_TCC1-1| |nil| 3851013571
   ("" (LEMMA "dd_directionv_implies_dd")
    (("" (SKEEP)
      (("" (INST?)
        (("" (ASSERT)
          (("" (TYPEPRED "v")
            (("" (TYPEPRED "D")
              (("" (INST 1 "v")
                (("" (ASSERT)
                  (("" (EXPAND "deriv_domain_direction?")
                    (("" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dd_directionv_implies_dd| FORMULA-DECL NIL |derivative_domain_multi|
     NIL))
   NIL
   (|diff_imp_init_partial1| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|diff_imp_init_partial1_TCC2| 0
  (|diff_imp_init_partial1_TCC2-1| |nil| 3852716736
   ("" (SKEEP)
    (("" (LEMMA "dd_vdirection_implies_dd_partial")
      (("" (INST -1 "D" "v")
        (("" (ASSERT)
          (("" (TYPEPRED "D")
            (("" (EXPAND "deriv_domain_direction?") (("" (PROPAX) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dd_vdirection_implies_dd_partial| FORMULA-DECL NIL
     |derivative_domain_multi| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|diff_imp_init_partial1| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(init_partial_def.v))")))
 (|diff_imp_init_partial1| 0
  (|diff_imp_init_partial1-1| |nil| 3851068206
   ("" (SKEEP)
    (("" (CASE "v=zero_vec(n)")
      (("1" (REPLACE -1 1)
        (("1" (EXPAND "init_partial?")
          (("1" (EXPAND "derivable?")
            (("1" (EXPAND "convergent?" 1)
              (("1" (INST 1 "0")
                (("1" (EXPAND "convergence" 1)
                  (("1" (EXPAND "convergence" 1)
                    (("1" (SPLIT)
                      (("1" (EXPAND "adh" 1)
                        (("1" (SKEEP)
                          (("1" (TYPEPRED "D")
                            (("1" (EXPAND "deriv_domain_direction?")
                              (("1" (INST -1 "e" "p")
                                (("1" (SKEEP)
                                  (("1" (INST 1 "delta")
                                    (("1" (SPLIT)
                                      (("1" (EXPAND "fullset")
                                        (("1" (PROPAX) NIL NIL)) NIL)
                                       ("2" (PROPAX) NIL NIL))
                                      NIL)
                                     ("2" (EXPAND "A" 1)
                                      (("2" (TYPEPRED "delta")
                                        (("2" (EXPAND "D_down" 1)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (INST 1 "1")
                          (("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "scal_zero")
        (("2" (EXPAND "init_partial?")
          (("2" (EXPAND "differentiable?")
            (("2" (SKEEP)
              (("2" (EXPAND "derivable?")
                (("2" (EXPAND "convergent?")
                  (("2" (EXPAND "convergence_zero?")
                    (("2" (INST 2 "g*v")
                      (("2" (EXPAND "convergence")
                        (("2" (EXPAND "convergence" 2)
                          (("2" (SPLIT)
                            (("1" (EXPAND "adh" 1)
                              (("1" (SKEEP)
                                (("1" (TYPEPRED "D")
                                  (("1" (EXPAND "deriv_domain_direction?")
                                    (("1" (INST -1 "e" "p")
                                      (("1" (SKEEP)
                                        (("1" (INST 1 "delta")
                                          (("1" (SPLIT)
                                            (("1" (EXPAND "fullset" 1)
                                              (("1" (PROPAX) NIL NIL)) NIL)
                                             ("2" (PROPAX) NIL NIL))
                                            NIL)
                                           ("2" (EXPAND "A" 1)
                                            (("2" (EXPAND "D_down" 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (EXPAND "NQ" 1)
                                (("2" (HIDE -1)
                                  (("2" (INST -1 "epsilon/norm_inf(n)(v)")
                                    (("1" (SKEEP)
                                      (("1" (INST 1 "delta/norm_inf(n)(v)")
                                        (("1" (SKEEP)
                                          (("1" (INST -3 "x * v")
                                            (("1" (LEMMA "sub_zero")
                                              (("1" (LEMMA "mult_zero")
                                                (("1" (EXPAND "restrict" 1)
                                                  (("1" (INST -1 "v")
                                                    (("1" (REPLACE -1 1)
                                                      (("1" (TYPEPRED "v")
                                                        (("1" (REPLACE -2 1)
                                                          (("1" (HIDE -1)
                                                            (("1"
                                                              (LEMMA "zero_id")
                                                              (("1"
                                                                (INST -1 "p")
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "p")
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -4)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -4 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "zero_id")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "p")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "NQ")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SPLIT)
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (LIFT-IF)
                                                                                      (("1"
                                                                                        (SPLIT)
                                                                                        (("1"
                                                                                          (FLATTEN)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -2
                                                                                             -3
                                                                                             -4
                                                                                             -5
                                                                                             -6
                                                                                             -7
                                                                                             -8
                                                                                             -9)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "norm_inf(n)")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "norm?"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (HIDE
                                                                                                     -1
                                                                                                     -3
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "v"
                                                                                                       "x")
                                                                                                      (("1"
                                                                                                        (TYPEPRED
                                                                                                         "x")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -3
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (MULT-BY
                                                                                                               -4
                                                                                                               "norm_inf(n)(v)")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (LEMMA
                                                                                                                   "abs_div")
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -1
                                                                                                                     "(abs(x) * norm_inf(n)(v))"
                                                                                                                     "f(p + x * v) - f(p) - g * (x * v)")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (REPLACE
                                                                                                                         -1
                                                                                                                         -5)
                                                                                                                        (("1"
                                                                                                                          (HIDE
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "abs_mult")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "abs(x)"
                                                                                                                               "norm_inf(n)(v)")
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "abs"
                                                                                                                                   -5
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("1"
                                                                                                                                      (CASE
                                                                                                                                          " NOT abs(f(p + x * v) - f(p) - g * (x * v)) /
                              (abs(x) * abs(norm_inf(n)(v)))
                              * norm_inf(n)(v) = abs(f(p + x * v) - f(p) - g * (x * v)) /
                              (abs(x))")
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("1"
                                                                                                                                          (EXPAND
                                                                                                                                           "abs"
                                                                                                                                           1
                                                                                                                                           3)
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1
                                                                                                                                         -6)
                                                                                                                                        (("2"
                                                                                                                                          (HIDE
                                                                                                                                           -1
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (LEMMA
                                                                                                                                             "abs_div")
                                                                                                                                            (("2"
                                                                                                                                              (INST
                                                                                                                                               -1
                                                                                                                                               "x"
                                                                                                                                               "f(p + x * v) - f(p) - g * (x * v)")
                                                                                                                                              (("2"
                                                                                                                                                (REPLACE
                                                                                                                                                 -1
                                                                                                                                                 -5
                                                                                                                                                 RL)
                                                                                                                                                (("2"
                                                                                                                                                  (CASE
                                                                                                                                                      "NOT (f(p + x * v) - f(p) - g * (x * v)) / x = (f(p + x * v) - f(p)) / x - g * v")
                                                                                                                                                  (("1"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("1"
                                                                                                                                                      (LEMMA
                                                                                                                                                       "div_distributes_minus")
                                                                                                                                                      (("1"
                                                                                                                                                        (INST
                                                                                                                                                         -1
                                                                                                                                                         "x"
                                                                                                                                                         "f(p + x * v) - f(p)"
                                                                                                                                                         "g * (x * v)")
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACE
                                                                                                                                                           -1
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -1
                                                                                                                                                             1
                                                                                                                                                             RL)
                                                                                                                                                            (("1"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              (("1"
                                                                                                                                                                (LEMMA
                                                                                                                                                                 "scal_cancel")
                                                                                                                                                                (("1"
                                                                                                                                                                  (LEMMA
                                                                                                                                                                   "scal_asso")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (INST
                                                                                                                                                                     -1
                                                                                                                                                                     "g"
                                                                                                                                                                     "v"
                                                                                                                                                                     "x")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (REPLACE
                                                                                                                                                                       -1
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("2"
                                                                                                                                                      (REPLACE
                                                                                                                                                       -1
                                                                                                                                                       -6)
                                                                                                                                                      (("2"
                                                                                                                                                        (PROPAX)
                                                                                                                                                        NIL
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (TYPEPRED
                                                                                                                 "v")
                                                                                                                (("2"
                                                                                                                  (TYPEPRED
                                                                                                                   "norm_inf(n)")
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "norm?")
                                                                                                                    (("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -3
                                                                                                                         "v")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (FLATTEN)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (TYPEPRED
                                                                                               "x")
                                                                                              (("2"
                                                                                                (LEMMA
                                                                                                 "zero_scal")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "v"
                                                                                                   "x")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "sub_zero")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -1
                                                                                         "x*v")
                                                                                        (("2"
                                                                                          (TYPEPRED
                                                                                           "x*v"
                                                                                           "v")
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -4
                                                                                             -2)
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -2
                                                                                               -6)
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -6
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (TYPEPRED
                                                                                                   "norm_inf(n)")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "norm?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (INST
                                                                                                         -2
                                                                                                         "v"
                                                                                                         "x")
                                                                                                        (("2"
                                                                                                          (REPLACE
                                                                                                           -2
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (MULT-BY
                                                                                                             -19
                                                                                                             "norm_inf(n)(v)")
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SPLIT)
                                              (("1" (TYPEPRED "x*v" "v")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (EXPAND "NQ" 1)
                                                (("2" (ASSERT)
                                                  (("2" (TYPEPRED "x*v")
                                                    (("2" (TYPEPRED "v")
                                                      (("2" (TYPEPRED "x")
                                                        (("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (EXPAND "A" -1)
                                                              (("2"
                                                                (EXPAND
                                                                 "D_down" -1)
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (LEMMA "zero_scal")
                                                (("3" (INST -1 "v" "x")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (CASE "NOT norm_inf(n)(v) >0")
                                          (("1" (TYPEPRED "norm_inf(n)")
                                            (("1" (EXPAND "norm?" -1)
                                              (("1" (FLATTEN)
                                                (("1" (INST -3 "v")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (SPLIT)
                                              (("1"
                                                (MULT-BY 1 "norm_inf(n)(v)")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2"
                                                (MULT-BY 1 "norm_inf(n)(v)")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("3" (TYPEPRED "v")
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("3" (ASSERT)
                                          (("3" (TYPEPRED "norm_inf(n)")
                                            (("3" (EXPAND "norm?")
                                              (("3" (FLATTEN)
                                                (("3" (INST -3 "v")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("4" (TYPEPRED "v")
                                          (("4" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (CASE "NOT norm_inf(n)(v)>0")
                                      (("1" (TYPEPRED "norm_inf(n)")
                                        (("1" (EXPAND "norm?" -1)
                                          (("1" (FLATTEN)
                                            (("1" (INST -3 "v")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SPLIT)
                                        (("1" (ASSERT)
                                          (("1" (MULT-BY 1 "norm_inf(n)(v)")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (MULT-BY 1 "norm_inf(n)(v)")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("3" (TYPEPRED "v")
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("3" (ASSERT)
                                      (("3" (TYPEPRED "v")
                                        (("3" (HIDE -1 -2 -3)
                                          (("3" (TYPEPRED "norm_inf(n)")
                                            (("3" (EXPAND "norm?")
                                              (("3" (FLATTEN)
                                                (("3" (INST -3 "v")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("4" (TYPEPRED "v")
                                      (("4" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|sub_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|zero_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|scal_asso| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_cancel| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|differentiable?| CONST-DECL "bool" |differentiable_def| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|diff_imp_init_partial2_TCC1| 0
  (|diff_imp_init_partial2_TCC1-1| |nil| 3852716736
   ("" (SKEEP)
    (("" (LEMMA "dd_partial_implies_dd")
      (("" (INST -1 "D" "v") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|dd_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|diff_imp_init_partial2| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|diff_imp_init_partial2| 0
  (|diff_imp_init_partial2-1| |nil| 3852021962
   ("" (SKEEP)
    (("" (CASE "v=zero_vec(n)")
      (("1" (REPLACE -1 1)
        (("1" (EXPAND "init_partial?")
          (("1" (EXPAND "derivable?")
            (("1" (EXPAND "convergent?" 1)
              (("1" (INST 1 "0")
                (("1" (EXPAND "convergence" 1)
                  (("1" (EXPAND "convergence" 1)
                    (("1" (SPLIT)
                      (("1" (EXPAND "adh" 1)
                        (("1" (SKEEP)
                          (("1" (TYPEPRED "D")
                            (("1" (EXPAND "deriv_domain_partial?")
                              (("1" (INST -1 "e" "p")
                                (("1" (SKEEP)
                                  (("1" (INST 1 "delta")
                                    (("1" (SPLIT)
                                      (("1" (EXPAND "fullset")
                                        (("1" (PROPAX) NIL NIL)) NIL)
                                       ("2" (PROPAX) NIL NIL))
                                      NIL)
                                     ("2" (EXPAND "A" 1)
                                      (("2" (TYPEPRED "delta")
                                        (("2" (EXPAND "D_down" 1)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (SKEEP)
                        (("2" (INST 1 "1")
                          (("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "scal_zero")
        (("2" (EXPAND "init_partial?")
          (("2" (EXPAND "differentiable?")
            (("2" (SKEEP)
              (("2" (EXPAND "derivable?")
                (("2" (EXPAND "convergent?")
                  (("2" (EXPAND "convergence_zero?")
                    (("2" (INST 2 "g*v")
                      (("2" (EXPAND "convergence")
                        (("2" (EXPAND "convergence" 2)
                          (("2" (SPLIT)
                            (("1" (EXPAND "adh" 1)
                              (("1" (SKEEP)
                                (("1" (TYPEPRED "D")
                                  (("1" (EXPAND "deriv_domain_partial?")
                                    (("1" (INST -1 "e" "p")
                                      (("1" (SKEEP)
                                        (("1" (INST 1 "delta")
                                          (("1" (SPLIT)
                                            (("1" (EXPAND "fullset" 1)
                                              (("1" (PROPAX) NIL NIL)) NIL)
                                             ("2" (PROPAX) NIL NIL))
                                            NIL)
                                           ("2" (EXPAND "A" 1)
                                            (("2" (EXPAND "D_down" 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (EXPAND "NQ" 1)
                                (("2" (HIDE -1)
                                  (("2" (INST -1 "epsilon/norm_inf(n)(v)")
                                    (("1" (SKEEP)
                                      (("1" (INST 1 "delta/norm_inf(n)(v)")
                                        (("1" (SKEEP)
                                          (("1" (INST -3 "x * v")
                                            (("1" (LEMMA "sub_zero")
                                              (("1" (LEMMA "mult_zero")
                                                (("1" (EXPAND "restrict" 1)
                                                  (("1" (INST -1 "v")
                                                    (("1" (REPLACE -1 1)
                                                      (("1" (TYPEPRED "v")
                                                        (("1" (REPLACE -2 1)
                                                          (("1" (HIDE -1)
                                                            (("1"
                                                              (LEMMA "zero_id")
                                                              (("1"
                                                                (INST -1 "p")
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "p")
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -4)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -4 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "zero_id")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "p")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "NQ")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SPLIT)
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (LIFT-IF)
                                                                                      (("1"
                                                                                        (SPLIT)
                                                                                        (("1"
                                                                                          (FLATTEN)
                                                                                          (("1"
                                                                                            (HIDE
                                                                                             -2
                                                                                             -3
                                                                                             -4
                                                                                             -5
                                                                                             -6
                                                                                             -7
                                                                                             -8
                                                                                             -9)
                                                                                            (("1"
                                                                                              (TYPEPRED
                                                                                               "norm_inf(n)")
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "norm?"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (FLATTEN)
                                                                                                  (("1"
                                                                                                    (HIDE
                                                                                                     -1
                                                                                                     -3
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "v"
                                                                                                       "x")
                                                                                                      (("1"
                                                                                                        (TYPEPRED
                                                                                                         "x")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -3
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (MULT-BY
                                                                                                               -4
                                                                                                               "norm_inf(n)(v)")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (LEMMA
                                                                                                                   "abs_div")
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -1
                                                                                                                     "(abs(x) * norm_inf(n)(v))"
                                                                                                                     "f(p + x * v) - f(p) - g * (x * v)")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (REPLACE
                                                                                                                         -1
                                                                                                                         -5)
                                                                                                                        (("1"
                                                                                                                          (HIDE
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "abs_mult")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "abs(x)"
                                                                                                                               "norm_inf(n)(v)")
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "abs"
                                                                                                                                   -5
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("1"
                                                                                                                                      (CASE
                                                                                                                                          " NOT abs(f(p + x * v) - f(p) - g * (x * v)) /
                                                     (abs(x) * abs(norm_inf(n)(v)))
                                                     * norm_inf(n)(v) = abs(f(p + x * v) - f(p) - g * (x * v)) /
                                                     (abs(x))")
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("1"
                                                                                                                                          (EXPAND
                                                                                                                                           "abs"
                                                                                                                                           1
                                                                                                                                           3)
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1
                                                                                                                                         -6)
                                                                                                                                        (("2"
                                                                                                                                          (HIDE
                                                                                                                                           -1
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (LEMMA
                                                                                                                                             "abs_div")
                                                                                                                                            (("2"
                                                                                                                                              (INST
                                                                                                                                               -1
                                                                                                                                               "x"
                                                                                                                                               "f(p + x * v) - f(p) - g * (x * v)")
                                                                                                                                              (("2"
                                                                                                                                                (REPLACE
                                                                                                                                                 -1
                                                                                                                                                 -5
                                                                                                                                                 RL)
                                                                                                                                                (("2"
                                                                                                                                                  (CASE
                                                                                                                                                      "NOT (f(p + x * v) - f(p) - g * (x * v)) / x = (f(p + x * v) - f(p)) / x - g * v")
                                                                                                                                                  (("1"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("1"
                                                                                                                                                      (LEMMA
                                                                                                                                                       "div_distributes_minus")
                                                                                                                                                      (("1"
                                                                                                                                                        (INST
                                                                                                                                                         -1
                                                                                                                                                         "x"
                                                                                                                                                         "f(p + x * v) - f(p)"
                                                                                                                                                         "g * (x * v)")
                                                                                                                                                        (("1"
                                                                                                                                                          (REPLACE
                                                                                                                                                           -1
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -1
                                                                                                                                                             1
                                                                                                                                                             RL)
                                                                                                                                                            (("1"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              (("1"
                                                                                                                                                                (LEMMA
                                                                                                                                                                 "scal_cancel")
                                                                                                                                                                (("1"
                                                                                                                                                                  (LEMMA
                                                                                                                                                                   "scal_asso")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (INST
                                                                                                                                                                     -1
                                                                                                                                                                     "g"
                                                                                                                                                                     "v"
                                                                                                                                                                     "x")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (REPLACE
                                                                                                                                                                       -1
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("2"
                                                                                                                                                      (REPLACE
                                                                                                                                                       -1
                                                                                                                                                       -6)
                                                                                                                                                      (("2"
                                                                                                                                                        (PROPAX)
                                                                                                                                                        NIL
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (TYPEPRED
                                                                                                                 "v")
                                                                                                                (("2"
                                                                                                                  (TYPEPRED
                                                                                                                   "norm_inf(n)")
                                                                                                                  (("2"
                                                                                                                    (EXPAND
                                                                                                                     "norm?")
                                                                                                                    (("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -3
                                                                                                                         "v")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (FLATTEN)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (TYPEPRED
                                                                                               "x")
                                                                                              (("2"
                                                                                                (LEMMA
                                                                                                 "zero_scal")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "v"
                                                                                                   "x")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "sub_zero")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -1
                                                                                         "x*v")
                                                                                        (("2"
                                                                                          (TYPEPRED
                                                                                           "x*v"
                                                                                           "v")
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -4
                                                                                             -2)
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -2
                                                                                               -6)
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -6
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (TYPEPRED
                                                                                                   "norm_inf(n)")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "norm?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (INST
                                                                                                         -2
                                                                                                         "v"
                                                                                                         "x")
                                                                                                        (("2"
                                                                                                          (REPLACE
                                                                                                           -2
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (MULT-BY
                                                                                                             -19
                                                                                                             "norm_inf(n)(v)")
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SPLIT)
                                              (("1" (TYPEPRED "x*v" "v")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (EXPAND "NQ" 1)
                                                (("2" (ASSERT)
                                                  (("2" (TYPEPRED "x*v")
                                                    (("2" (TYPEPRED "v")
                                                      (("2" (TYPEPRED "x")
                                                        (("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (EXPAND "A" -1)
                                                              (("2"
                                                                (EXPAND
                                                                 "D_down" -1)
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (LEMMA "zero_scal")
                                                (("3" (INST -1 "v" "x")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (CASE "NOT norm_inf(n)(v) >0")
                                          (("1" (TYPEPRED "norm_inf(n)")
                                            (("1" (EXPAND "norm?" -1)
                                              (("1" (FLATTEN)
                                                (("1" (INST -3 "v")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (SPLIT)
                                              (("1"
                                                (MULT-BY 1 "norm_inf(n)(v)")
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2"
                                                (MULT-BY 1 "norm_inf(n)(v)")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("3" (TYPEPRED "v")
                                            (("3" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("3" (ASSERT)
                                          (("3" (TYPEPRED "norm_inf(n)")
                                            (("3" (EXPAND "norm?")
                                              (("3" (FLATTEN)
                                                (("3" (INST -3 "v")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("4" (TYPEPRED "v")
                                          (("4" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (CASE "NOT norm_inf(n)(v)>0")
                                      (("1" (TYPEPRED "norm_inf(n)")
                                        (("1" (EXPAND "norm?" -1)
                                          (("1" (FLATTEN)
                                            (("1" (INST -3 "v")
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SPLIT)
                                        (("1" (ASSERT)
                                          (("1" (MULT-BY 1 "norm_inf(n)(v)")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (MULT-BY 1 "norm_inf(n)(v)")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("3" (TYPEPRED "v")
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL)
                                     ("3" (ASSERT)
                                      (("3" (TYPEPRED "v")
                                        (("3" (HIDE -1 -2 -3)
                                          (("3" (TYPEPRED "norm_inf(n)")
                                            (("3" (EXPAND "norm?")
                                              (("3" (FLATTEN)
                                                (("3" (INST -3 "v")
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("4" (TYPEPRED "v")
                                      (("4" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|sub_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|zero_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|scal_asso| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_cancel| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|differentiable?| CONST-DECL "bool" |differentiable_def| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|init_partial_TCC1| 0
  (|init_partial_TCC1-1| |nil| 3851071425
   ("" (SKEEP)
    (("" (TYPEPRED "v")
      (("" (SPLIT)
        (("1" (EXPAND "D_down" 1)
          (("1" (ASSERT)
            (("1" (TYPEPRED "p")
              (("1" (LEMMA "mult_zero")
                (("1" (INST -1 "v")
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "zero_id")
                      (("1" (INST -1 "p")
                        (("1" (REPLACE -4 -1) (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "restrict" 1)
          (("2" (TYPEPRED "p")
            (("2" (EXPAND "init_partial?")
              (("2" (ASSERT)
                (("2" (EXPAND "restrict" -4) (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL))
   NIL
   (|init_partial| SUBTYPE "0"
    "{x | derivatives_def[(init_partial_def.D_down(init_partial_def.D, init_partial_def.p, init_partial_def.v))].derivable?(restrict[real, (init_partial_def.D_down(init_partial_def.D, init_partial_def.p, init_partial_def.v)), real].restrict(LAMBDA (Delta: reals.real): init_partial_def.f((matrices.+)(init_partial_def.p, matrices.*(Delta, init_partial_def.v)))), x)}")))
 (|init_partial_zero_derivable_TCC1| 0
  (|init_partial_zero_derivable_TCC1-1| |nil| 3852022780
   ("" (LEMMA "dd_zero_partial") (("" (PROPAX) NIL NIL)) NIL)
   ((|dd_zero_partial| FORMULA-DECL NIL |derivative_domain_multi| NIL)) NIL
   (|init_partial_zero_derivable| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(vector_arithmetic.zero_vec(init_partial_def.n)))")))
 (|init_partial_zero_derivable| 0
  (|init_partial_zero_derivable-1| |nil| 3852023759
   ("" (SKEEP)
    (("" (EXPAND "init_partial?")
      (("" (SKEEP)
        (("" (EXPAND "init_partial?")
          (("" (EXPAND "restrict" 1)
            (("" (EXPAND "derivable?" 1)
              (("" (EXPAND "NQ")
                (("" (EXPAND "convergent?")
                  (("" (INST 1 "0")
                    (("" (EXPAND "convergence" 1)
                      (("" (EXPAND "convergence")
                        (("" (SPLIT)
                          (("1" (EXPAND "fullset" 1)
                            (("1" (EXPAND "adh" 1)
                              (("1" (SKEEP)
                                (("1" (INST 1 "e/2")
                                  (("1" (EXPAND "abs" 1)
                                    (("1" (ASSERT) NIL NIL)) NIL)
                                   ("2" (EXPAND "A")
                                    (("2" (EXPAND "D_down")
                                      (("2" (LEMMA "scal_zero")
                                        (("2" (LEMMA "zero_id")
                                          (("2" (INST -2 "e/2" "n")
                                            (("2" (REPLACE -2 1)
                                              (("2" (TYPEPRED "p")
                                                (("2" (LEMMA "zero_id")
                                                  (("2" (LEMMA "scal_zero")
                                                    (("2" (INST -1 "0" "n")
                                                      (("2" (TYPEPRED "p")
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (LEMMA "zero_id")
                                                            (("2" (INST -1 "p")
                                                              (("2"
                                                                (REPLACE -3 -1)
                                                                (("2"
                                                                  (REPLACE -1
                                                                           1)
                                                                  (("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (SKEEP)
                            (("2" (INST 1 "1")
                              (("2" (SKEEP)
                                (("2" (LEMMA "zero_id")
                                  (("2" (LEMMA "scal_zero")
                                    (("2" (INST-CP -1 "x" "n")
                                      (("2" (INST -1 "0" "n")
                                        (("2" (REPLACE -1 1)
                                          (("2" (REPLACE -2 1)
                                            (("2" (INST -3 "p")
                                              (("2" (TYPEPRED "p")
                                                (("2" (REPLACE -2 -6)
                                                  (("2" (REPLACE -6 1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|))
   SHOSTAK))
 (|init_partial_zero_TCC1| 0
  (|init_partial_zero_TCC1-1| |nil| 3852042751
   ("" (LEMMA "init_partial_zero_derivable")
    (("" (SKEEP)
      (("" (INST?)
        (("" (INST -1 "f")
          (("" (EXPAND "init_partial?" -1) (("" (INST -1 "p") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_zero| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(vector_arithmetic.zero_vec(init_partial_def.n), init_partial_def.D, init_partial_def.f))")))
 (|init_partial_zero| 0
  (|init_partial_zero-1| |nil| 3852042803
   ("" (SKEEP)
    (("" (EXPAND "init_partial")
      (("" (EXPAND "deriv")
        ((""
          (LEMMA "lim_fun_def[(analysis@derivatives_def
                      [(D_down(D, p, vector_arithmetic.zero_vec(n)))].A
                      (0))]")
          (("1"
            (INST -1 "NQ(restrict[real, (D_down(D, p, zero_vec(n))), real]
                           (LAMBDA (Delta: real): f(p + Delta * zero_vec(n))),0)"
             "0" "0")
            (("1" (ASSERT)
              (("1" (EXPAND "convergence" 1)
                (("1" (EXPAND "convergence" 1)
                  (("1" (SPLIT)
                    (("1" (EXPAND "adh")
                      (("1" (HIDE 2)
                        (("1" (SKEEP)
                          (("1" (INST 1 "e/2")
                            (("1" (SPLIT)
                              (("1" (EXPAND "fullset" 1)
                                (("1" (PROPAX) NIL NIL)) NIL)
                               ("2" (EXPAND "abs" 1) (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL)
                             ("2" (EXPAND "A" 1)
                              (("2" (EXPAND "D_down" 1)
                                (("2" (LEMMA "scal_zero")
                                  (("2" (INST -1 "e/2" "n")
                                    (("2" (REPLACE -1 1)
                                      (("2" (LEMMA "zero_id")
                                        (("2" (INST -1 "p")
                                          (("2" (TYPEPRED "p")
                                            (("2" (REPLACE -2 -4)
                                              (("2" (REPLACE -4 1)
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (SKEEP)
                      (("2" (HIDE 2)
                        (("2" (INST 1 "1")
                          (("2" (SKEEP)
                            (("2" (EXPAND "NQ" 1)
                              (("2" (EXPAND "restrict" 1)
                                (("2" (LEMMA "zero_id")
                                  (("2" (LEMMA "scal_zero")
                                    (("2" (INST-CP -1 "0" "n")
                                      (("2" (INST -1 "x" "n")
                                        (("2" (REPLACE -1 1)
                                          (("2" (REPLACE -2 1)
                                            (("2" (INST -3 "p")
                                              (("2" (TYPEPRED "p")
                                                (("2" (REPLACE -2 -6)
                                                  (("2" (REPLACE -6 1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "not_one_element?")
              (("2" (SKEEP)
                (("2" (HIDE 2)
                  (("2" (CASE "x=0")
                    (("1" (INST 1 "1")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "D_down" 1)
                        (("2" (TYPEPRED "p")
                          (("2" (LEMMA "scal_zero")
                            (("2" (INST -1 "1" "n")
                              (("2" (REPLACE -1 1)
                                (("2" (LEMMA "zero_id")
                                  (("2" (INST -1 "p")
                                    (("2" (REPLACE -4 -1)
                                      (("2" (REPLACE -1 1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (INST 2 "0")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "D_down" 1)
                        (("2" (LEMMA "zero_id")
                          (("2" (LEMMA "scal_zero")
                            (("2" (INST -1 "0" "n")
                              (("2" (REPLACE -1 1)
                                (("2" (INST -2 "p")
                                  (("2" (TYPEPRED "p")
                                    (("2" (REPLACE -2 -5)
                                      (("2" (REPLACE -5 1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (ASSERT)
              (("3" (EXPAND "deriv_domain?")
                (("3" (SKEEP)
                  (("3" (INST 1 "e/2")
                    (("1" (EXPAND "abs" 1) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (HIDE 2)
                      (("2" (EXPAND "D_down" 1)
                        (("2" (LEMMA "scal_zero")
                          (("2" (INST -1 "e/2+x" "n")
                            (("2" (REPLACE -1 1)
                              (("2" (LEMMA "zero_id")
                                (("2" (INST -1 "p")
                                  (("2" (TYPEPRED "p")
                                    (("2" (REPLACE -2 -4)
                                      (("2" (REPLACE -4 1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("4" (HIDE 2)
              (("4" (SKEEP)
                (("4"
                  (TYPEPRED "p + Delta * zero_vec(n)" "p" "Delta * zero_vec(n)"
                   "zero_vec(n)")
                  (("4" (ASSERT)
                    (("4" (EXPAND "max" -) (("4" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (EXPAND "not_one_element?" 1)
              (("2" (SKEEP)
                (("2" (TYPEPRED "x")
                  (("2" (ASSERT)
                    (("2" (TYPEPRED "p")
                      (("2" (INST 1 "x+1")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "D_down" 1 1)
                            (("2" (ASSERT)
                              (("2" (LEMMA "scal_zero")
                                (("2" (INST -1 "(1+x)" "n")
                                  (("2" (ASSERT)
                                    (("2" (REPLACE -1)
                                      (("2" (EXPAND "D_down" -5)
                                        (("2" (ASSERT)
                                          (("2" (LEMMA "scal_zero")
                                            (("2" (INST -1 "x" "n")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (EXPAND "deriv_domain?" 1)
              (("3" (SKEEP)
                (("3" (INST 1 "e/2")
                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (EXPAND "D_down" 1)
                    (("2" (ASSERT)
                      (("2" (LEMMA "scal_zero")
                        (("2" (INST -1 "(e/2+x)" "n")
                          (("2" (ASSERT)
                            (("2" (REPLACE -1 1)
                              (("2" (TYPEPRED "p")
                                (("2" (LEMMA "zero_id")
                                  (("2" (INST -1 "p") (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|lim_fun_def| FORMULA-DECL NIL |lim_of_functions| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|))
   NIL))
 (|frech_diff_imp_init_partial_TCC1| 0
  (|frech_diff_imp_init_partial_TCC1-1| |nil| 3852026193
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (LEMMA "dd_partial_implies_dd")
        (("" (INST -1 "D" "v") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|dd_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi| NIL))
   NIL
   (|frech_diff_imp_init_partial| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|frech_diff_imp_init_partial| 0
  (|frech_diff_imp_init_partial-1| |nil| 3852026274
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (TYPEPRED "D")
          (("1" (LEMMA "diff_imp_init_partial2")
            (("1" (INST -1 "v" "D" "f" "p")
              (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (LEMMA " init_partial_zero_derivable")
          (("2" (INST -1 "D" "f")
            (("2" (ASSERT)
              (("2" (EXPAND "init_partial?" -1)
                (("2" (INST -1 "p") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL))
   SHOSTAK))
 (|init_partial_scal_TCC1| 0
  (|init_partial_scal_TCC1-1| |nil| 3852037187 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|))
   NIL
   (|init_partial_scal| SUBTYPE
    "matrices.*(init_partial_def.c, init_partial_def.v)"
    "VectorN(init_partial_def.n)")))
 (|init_partial_scal_TCC2| 0
  (|init_partial_scal_TCC2-1| |nil| 3852037187
   ("" (LEMMA "dd_partial_implies_scal_partial")
    (("" (SKEEP) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)
   ((|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dd_partial_implies_scal_partial| FORMULA-DECL NIL
     |derivative_domain_multi| NIL))
   NIL
   (|init_partial_scal| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(matrices.*(init_partial_def.c, init_partial_def.v)))")))
 (|init_partial_scal| 0
  (|init_partial_scal-1| |nil| 3852037722
   ("" (SKEEP)
    (("" (CASE "v=zero_vec(n)")
      (("1" (REPLACE -1 -2)
        (("1" (REPLACE -1 1)
          (("1" (LEMMA "scal_zero")
            (("1" (INST -1 "c" "n")
              (("1" (REPLACE -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "c=0")
        (("1" (REPLACE -1 2)
          (("1" (LEMMA "mult_zero")
            (("1" (INST -1 "v")
              (("1" (TYPEPRED "v")
                (("1" (REPLACE -2 -3)
                  (("1" (REPLACE -3 2)
                    (("1" (LEMMA "init_partial_zero_derivable")
                      (("1" (ASSERT)
                        (("1" (INST -1 "D" "f")
                          (("1" (EXPAND "init_partial?")
                            (("1" (INST -1 "p")
                              (("1" (TYPEPRED "v") (("1" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "init_partial?")
          (("2" (EXPAND "restrict")
            (("2" (EXPAND "derivable?")
              (("2" (EXPAND "NQ")
                (("2" (EXPAND "convergent?")
                  (("2" (SKEEP)
                    (("2" (INST 3 "c*l")
                      (("2" (EXPAND "convergence")
                        (("2" (EXPAND "convergence")
                          (("2" (SPLIT)
                            (("1" (EXPAND "adh")
                              (("1" (SKEEP)
                                (("1" (INST -1 "e*abs(c)")
                                  (("1" (SKEEP)
                                    (("1" (INST 1 "x/c")
                                      (("1" (SPLIT)
                                        (("1" (EXPAND "fullset" 1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (LEMMA "abs_div")
                                          (("2" (INST -1 "c" "x")
                                            (("2" (REPLACE -1 1)
                                              (("2" (MULT-BY 1 "abs(c)") NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (EXPAND "A" 1)
                                        (("2" (TYPEPRED "x")
                                          (("2" (EXPAND "A" -2)
                                            (("2" (EXPAND "D_down")
                                              (("2" (ASSERT)
                                                (("2" (LEMMA "asso_v")
                                                  (("2"
                                                    (INST -1 "x / c" "c" "v")
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (TYPEPRED "v")
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (TYPEPRED "e")
                                      (("2" (DIV-BY 1 "abs(c)")
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (SKEEP)
                                (("2" (LEMMA "mult_zero")
                                  (("2" (INST -1 "c*v")
                                    (("1" (TYPEPRED "c*v" "v")
                                      (("1" (REPLACE -4 -2)
                                        (("1" (REPLACE -2 -5)
                                          (("1" (REPLACE -5 1)
                                            (("1" (HIDE -1 -2 -3 -4)
                                              (("1" (LEMMA "mult_zero")
                                                (("1" (INST -1 "v")
                                                  (("1" (TYPEPRED "v")
                                                    (("1" (REPLACE -2 -3)
                                                      (("1" (REPLACE -3 -6)
                                                        (("1" (LEMMA "zero_id")
                                                          (("1" (INST -1 "p")
                                                            (("1"
                                                              (TYPEPRED "p")
                                                              (("1"
                                                                (REPLACE -2 -4)
                                                                (("1"
                                                                  (HIDE -1 -2
                                                                   -5)
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -7)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -2 1)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "asso_v")
                                                                        (("1"
                                                                          (INST
                                                                           -8
                                                                           "epsilon/abs(c)")
                                                                          (("1"
                                                                            (SKEEP)
                                                                            (("1"
                                                                              (INST
                                                                               1
                                                                               "delta/abs(c)")
                                                                              (("1"
                                                                                (SKEEP)
                                                                                (("1"
                                                                                  (INST
                                                                                   -10
                                                                                   "c*x")
                                                                                  (("1"
                                                                                    (SPLIT)
                                                                                    (("1"
                                                                                      (MULT-BY
                                                                                       -1
                                                                                       "abs(c)")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "abs_mult")
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "(f(p + c * x * v) - f(p)) / (c * x) - l"
                                                                                             "c")
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               -2
                                                                                               RL)
                                                                                              (("1"
                                                                                                (HIDE
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "(f(p + c * x * v) - f(p)) / (c * x) * c  = (f(p + x * (c * v)) - f(p)) / x")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (CASE
                                                                                                          "NOT (f(p + c * x * v) - f(p)) / (c * x) * c = (f(p + c * x * v) - f(p)) / x")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        NIL
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (REPLACE
                                                                                                         -1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (CASE
                                                                                                              "NOT p + c * x * v = p + x * (c * v)")
                                                                                                          (("1"
                                                                                                            (LEMMA
                                                                                                             "asso_v")
                                                                                                            (("1"
                                                                                                              (INST
                                                                                                               -1
                                                                                                               "c"
                                                                                                               "x"
                                                                                                               "v")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   1
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    (("1"
                                                                                                                      (HIDE
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (LEMMA
                                                                                                                         "asso_1_scal")
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -1
                                                                                                                           "v"
                                                                                                                           "c"
                                                                                                                           "x")
                                                                                                                          (("1"
                                                                                                                            (EXPAND
                                                                                                                             "*"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (EXPAND
                                                                                       "fullset"
                                                                                       1)
                                                                                      (("2"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("3"
                                                                                      (LEMMA
                                                                                       "abs_mult")
                                                                                      (("3"
                                                                                        (INST
                                                                                         -1
                                                                                         "c"
                                                                                         "x")
                                                                                        (("3"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           1)
                                                                                          (("3"
                                                                                            (DIV-BY
                                                                                             1
                                                                                             "abs(c)")
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "A"
                                                                                       1)
                                                                                      (("2"
                                                                                        (TYPEPRED
                                                                                         "x")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "A")
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "D_down")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              (("2"
                                                                                                (LEMMA
                                                                                                 "asso_v")
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "x"
                                                                                                   "c"
                                                                                                   "v")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SPLIT)
                                                                                (("1"
                                                                                  (MULT-BY
                                                                                   1
                                                                                   "abs(c)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (MULT-BY
                                                                                     1
                                                                                     "abs(c)")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (SPLIT)
                                                                            (("1"
                                                                              (MULT-BY
                                                                               1
                                                                               "abs(c)")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (MULT-BY
                                                                               1
                                                                               "abs(c)")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (TYPEPRED "v")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (TYPEPRED "c*v" "v")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|abs_nat| FORMULA-DECL NIL |abs_lems| |reals|)
    (|asso_1_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|asso_v| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|der_f_is_init_partial_TCC1| 0
  (|der_f_is_init_partial_TCC1-1| |nil| 3852037187
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (LEMMA "dd_partial_implies_dd")
        (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dd_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi| NIL))
   NIL
   (|der_f_is_init_partial| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|der_f_is_init_partial_TCC2| 0
  (|der_f_is_init_partial_TCC2-1| |nil| 3852037187
   ("" (LEMMA "frech_diff_imp_init_partial")
    (("" (SKEEP)
      (("" (INST?)
        (("" (ASSERT)
          (("" (TYPEPRED "f")
            (("" (EXPAND "differentiableD?" -1) (("" (INST -1 "p") NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|der_f_is_init_partial| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(init_partial_def.v, init_partial_def.D, init_partial_def.f))")))
 (|der_f_is_init_partial| 0
  (|der_f_is_init_partial-1| |nil| 3852038742
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "init_partial")
        (("" (EXPAND "deriv")
          ((""
            (LEMMA
             "lim_fun_def[(analysis@derivatives_def[(D_down(D, p, v))].A(0))]")
            (("1"
              (INST -1 "NQ(restrict[real, (D_down(D, p, v)), real]
                              (LAMBDA (Delta: real): f(p + Delta * v)),
                          0)"
               "der_f(D)(f)(p) * v" "0")
              (("1" (FLATTEN)
                (("1" (ASSERT)
                  (("1" (ASSERT)
                    (("1" (HIDE -1)
                      (("1" (EXPAND "convergence" 1)
                        (("1" (EXPAND "convergence" 1)
                          (("1" (SPLIT)
                            (("1" (EXPAND "adh" 1)
                              (("1" (SKEEP)
                                (("1" (TYPEPRED "D")
                                  (("1" (EXPAND "deriv_domain_partial?")
                                    (("1" (INST -1 "e" "_")
                                      (("1" (INST -1 "p")
                                        (("1" (SKEEP)
                                          (("1" (INST 1 "delta")
                                            (("1" (EXPAND "fullset" 1)
                                              (("1" (PROPAX) NIL NIL)) NIL)
                                             ("2" (EXPAND "A" 1)
                                              (("2" (EXPAND "D_down" 1)
                                                (("2" (CASE "v=zero_vec(n)")
                                                  (("1" (REPLACE -1 1)
                                                    (("1" (LEMMA "mult_zero")
                                                      (("1"
                                                        (INST -1 "zero_vec(n)")
                                                        (("1"
                                                          (TYPEPRED
                                                           "zero_vec(n)")
                                                          (("1" (REPLACE -2 -3)
                                                            (("1"
                                                              (LEMMA "zero_id")
                                                              (("1"
                                                                (INST -1 "p")
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "p")
                                                                  (("1"
                                                                    (REPLACE -2
                                                                             -4)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "scal_zero")
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "delta")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (CASE "v=zero_vec(n)")
                                (("1" (REPLACE -1 1)
                                  (("1" (EXPAND "restrict" 1)
                                    (("1" (EXPAND "NQ" 1)
                                      (("1" (LEMMA "mult_zero")
                                        (("1" (INST -1 "zero_vec(n)")
                                          (("1" (TYPEPRED "zero_vec(n)")
                                            (("1" (REPLACE -2 -3)
                                              (("1" (REPLACE -3 1)
                                                (("1" (LEMMA "zero_id")
                                                  (("1" (INST -1 "p")
                                                    (("1" (TYPEPRED "p")
                                                      (("1" (REPLACE -2 -4)
                                                        (("1" (REPLACE -4 1)
                                                          (("1"
                                                            (LEMMA "scal_zero")
                                                            (("1" (INST 1 "1")
                                                              (("1" (SKEEP)
                                                                (("1"
                                                                  (INST -1 "x"
                                                                   "n")
                                                                  (("1"
                                                                    (REPLACE -1
                                                                             1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -5 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (TYPEPRED "zero_vec(n)")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "restrict" 2)
                                  (("2" (EXPAND "NQ" 2)
                                    (("2" (TYPEPRED "der_f(D)(f)")
                                      (("2" (INST -1 "p")
                                        (("2" (EXPAND "convergence_zero?" -1)
                                          (("2" (EXPAND "NQ" -1 1)
                                            (("2" (LEMMA "mult_zero")
                                              (("2" (INST -1 "v")
                                                (("1" (REPLACE -1 2)
                                                  (("1" (TYPEPRED "v")
                                                    (("1" (TYPEPRED "p")
                                                      (("1" (REPLACE -5 2)
                                                        (("1" (LEMMA "zero_id")
                                                          (("1" (INST -1 "p")
                                                            (("1"
                                                              (REPLACE -3 -1)
                                                              (("1"
                                                                (REPLACE -1 2)
                                                                (("1"
                                                                  (INST -9
                                                                   "epsilon/norm_inf(n)(v)")
                                                                  (("1" (SKEEP)
                                                                    (("1"
                                                                      (INST 3
                                                                       "delta/norm_inf(v)")
                                                                      (("1"
                                                                        (SKEEP)
                                                                        (("1"
                                                                          (INST
                                                                           -8
                                                                           "x*v")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (LEMMA
                                                                               "mult_zero")
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "sub_zero")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "x*v")
                                                                                  (("1"
                                                                                    (TYPEPRED
                                                                                     "x*v")
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -10
                                                                                       -2)
                                                                                      (("1"
                                                                                        (REPLACE
                                                                                         -2
                                                                                         -3)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -3
                                                                                           -12)
                                                                                          (("1"
                                                                                            (TYPEPRED
                                                                                             "norm_inf(n)")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "norm?"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (FLATTEN)
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -2
                                                                                                   "v"
                                                                                                   "x")
                                                                                                  (("1"
                                                                                                    (REPLACE
                                                                                                     -2
                                                                                                     -16)
                                                                                                    (("1"
                                                                                                      (MULT-BY
                                                                                                       -18
                                                                                                       "norm_inf(v)")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (CASE
                                                                                                              "NOT norm_inf(n)(v) =  norm_inf(v)")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "norm_inf"
                                                                                                               1
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (PROPAX)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (HIDE
                                                                                                               -1
                                                                                                               -2
                                                                                                               -3
                                                                                                               -4
                                                                                                               -5
                                                                                                               -6
                                                                                                               -7
                                                                                                               -8
                                                                                                               -9
                                                                                                               -10)
                                                                                                              (("2"
                                                                                                                (LEMMA
                                                                                                                 "abs_div")
                                                                                                                (("2"
                                                                                                                  (INST
                                                                                                                   -1
                                                                                                                   "(abs(x) * norm_inf(n)(v))"
                                                                                                                   "f(p + x * v) - f(p) - der_f(D)(f)(p) * (x * v)")
                                                                                                                  (("2"
                                                                                                                    (LEMMA
                                                                                                                     "abs_mult")
                                                                                                                    (("2"
                                                                                                                      (INST
                                                                                                                       -1
                                                                                                                       "abs(x)"
                                                                                                                       "norm_inf(n)(v)")
                                                                                                                      (("2"
                                                                                                                        (EXPAND
                                                                                                                         "abs"
                                                                                                                         -1
                                                                                                                         3)
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "abs"
                                                                                                                           -1
                                                                                                                           4)
                                                                                                                          (("2"
                                                                                                                            (REPLACE
                                                                                                                             -1
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (REPLACE
                                                                                                                               -2
                                                                                                                               -9)
                                                                                                                              (("2"
                                                                                                                                (MULT-BY
                                                                                                                                 -9
                                                                                                                                 "norm_inf(n)(v)")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (CASE
                                                                                                                                        "NOT abs(f(p + x * v) - f(p) - der_f(D)(f)(p) * (x * v)) /
                                                               (abs(x) * norm_inf(n)(v))
                                                               * norm_inf(n)(v) = abs(f(p + x * v) - f(p) - der_f(D)(f)(p) * (x * v)) /
                                                               (abs(x))")
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -1
                                                                                                                                       -10)
                                                                                                                                      (("2"
                                                                                                                                        (HIDE
                                                                                                                                         -1
                                                                                                                                         -2
                                                                                                                                         -3
                                                                                                                                         -4
                                                                                                                                         -5)
                                                                                                                                        (("2"
                                                                                                                                          (LEMMA
                                                                                                                                           "abs_div")
                                                                                                                                          (("2"
                                                                                                                                            (INST
                                                                                                                                             -1
                                                                                                                                             "x"
                                                                                                                                             "f(p + x * v) - f(p) - der_f(D)(f)(p) * (x * v)")
                                                                                                                                            (("2"
                                                                                                                                              (REPLACE
                                                                                                                                               -1
                                                                                                                                               -6
                                                                                                                                               RL)
                                                                                                                                              (("2"
                                                                                                                                                (CASE
                                                                                                                                                    "NOT (f(p + x * v) - f(p) - der_f(D)(f)(p) * (x * v)) / x = (f(p + x * v) - f(p)) / x - der_f(D)(f)(p) * v")
                                                                                                                                                (("1"
                                                                                                                                                  (LEMMA
                                                                                                                                                   "div_distributes_minus")
                                                                                                                                                  (("1"
                                                                                                                                                    (INST
                                                                                                                                                     -1
                                                                                                                                                     "x"
                                                                                                                                                     "f(p + x * v) - f(p)"
                                                                                                                                                     "der_f(D)(f)(p) * (x * v)")
                                                                                                                                                    (("1"
                                                                                                                                                      (REPLACE
                                                                                                                                                       -1
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (REPLACE
                                                                                                                                                         -1
                                                                                                                                                         1
                                                                                                                                                         RL)
                                                                                                                                                        (("1"
                                                                                                                                                          (LEMMA
                                                                                                                                                           "scal_cancel")
                                                                                                                                                          (("1"
                                                                                                                                                            (LEMMA
                                                                                                                                                             "scal_asso")
                                                                                                                                                            (("1"
                                                                                                                                                              (ASSERT)
                                                                                                                                                              (("1"
                                                                                                                                                                (TYPEPRED
                                                                                                                                                                 "x*v")
                                                                                                                                                                (("1"
                                                                                                                                                                  (INST
                                                                                                                                                                   -3
                                                                                                                                                                   "der_f(D)(f)(p)"
                                                                                                                                                                   "v"
                                                                                                                                                                   "x")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (REPLACE
                                                                                                                                                                     -3
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (ASSERT)
                                                                                                                                                                      NIL
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL)
                                                                                                                                                 ("2"
                                                                                                                                                  (REPLACE
                                                                                                                                                   -1
                                                                                                                                                   -7)
                                                                                                                                                  (("2"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (HIDE
                                                                                                                                   -)
                                                                                                                                  (("2"
                                                                                                                                    (TYPEPRED
                                                                                                                                     "norm_inf(n)")
                                                                                                                                    (("2"
                                                                                                                                      (EXPAND
                                                                                                                                       "norm?"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (FLATTEN)
                                                                                                                                        (("2"
                                                                                                                                          (INST
                                                                                                                                           -3
                                                                                                                                           "v")
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (HIDE
                                                                                                         -)
                                                                                                        (("2"
                                                                                                          (TYPEPRED
                                                                                                           "norm_inf(n)")
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "norm?"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (FLATTEN)
                                                                                                              (("2"
                                                                                                                (INST
                                                                                                                 -3
                                                                                                                 "v")
                                                                                                                (("2"
                                                                                                                  (HIDE
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (CASE
                                                                                                                          "NOT norm_inf(v) = norm_inf(n)(v)")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "norm_inf"
                                                                                                                         1
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (PROPAX)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (SPLIT)
                                                                            (("1"
                                                                              (TYPEPRED
                                                                               "x*v"
                                                                               "v")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (EXPAND
                                                                               "NQ"
                                                                               1)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (TYPEPRED
                                                                                   "p")
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "v")
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "x*v")
                                                                                      (("2"
                                                                                        (HIDE
                                                                                         -1
                                                                                         -3
                                                                                         -6
                                                                                         -10
                                                                                         -13)
                                                                                        (("2"
                                                                                          (FLATTEN)
                                                                                          (("2"
                                                                                            (TYPEPRED
                                                                                             "D")
                                                                                            (("2"
                                                                                              (TYPEPRED
                                                                                               "x")
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "A"
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "D_down"
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (PROPAX)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("3"
                                                                              (ASSERT)
                                                                              (("3"
                                                                                (CASE
                                                                                    "x * v = zero_vec(n)")
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "zero_scal")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "v"
                                                                                     "x")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (SPLIT)
                                                                        (("1"
                                                                          (MULT-BY
                                                                           1
                                                                           "norm_inf(v)")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL)
                                                                           ("2"
                                                                            (CASE
                                                                                "NOT norm_inf(n)(v) = norm_inf(v)")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "norm_inf"
                                                                               1
                                                                               1)
                                                                              (("1"
                                                                                (PROPAX)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (REPLACE
                                                                                 -1
                                                                                 1
                                                                                 RL)
                                                                                (("2"
                                                                                  (TYPEPRED
                                                                                   "norm_inf(n)")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "norm?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (FLATTEN)
                                                                                      (("2"
                                                                                        (INST
                                                                                         -3
                                                                                         "v")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (MULT-BY
                                                                           1
                                                                           "norm_inf(v)")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("3"
                                                                        (CASE
                                                                            "NOT norm_inf(v) = norm_inf(n)(v)")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "norm_inf"
                                                                             1
                                                                             2)
                                                                            (("1"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (REPLACE
                                                                             -1
                                                                             1)
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "norm_inf(n)")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "norm?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (INST
                                                                                     -3
                                                                                     "v")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("4"
                                                                        (TYPEPRED
                                                                         "v")
                                                                        (("4"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2" (SPLIT)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (MULT-BY
                                                                         1
                                                                         "norm_inf(n)(v)")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (TYPEPRED
                                                                           "norm_inf(n)")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "norm?")
                                                                            (("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (INST
                                                                                 -3
                                                                                 "v")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (MULT-BY
                                                                       1
                                                                       "norm_inf(n)(v)")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("3"
                                                                    (TYPEPRED
                                                                     "norm_inf(n)")
                                                                    (("3"
                                                                      (EXPAND
                                                                       "norm?")
                                                                      (("3"
                                                                        (FLATTEN)
                                                                        (("3"
                                                                          (INST
                                                                           -3
                                                                           "v")
                                                                          (("3"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("4"
                                                                    (TYPEPRED
                                                                     "v")
                                                                    (("4"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (TYPEPRED "v")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (EXPAND "not_one_element?")
                (("2" (SKEEP)
                  (("2" (TYPEPRED "D")
                    (("2" (EXPAND "deriv_domain_partial?")
                      (("2" (INST-CP -1 "1" "p")
                        (("2" (SKEEP)
                          (("2" (INST-CP -1 "1" "p")
                            (("2" (SKEEP)
                              (("2" (INST -1 "abs(delta)" "p")
                                (("2" (SKEEP)
                                  (("2" (CASE "delta=delta_1")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (EXPAND "abs" -1)
                                      (("2" (ASSERT)
                                        (("2" (CASE "x=delta")
                                          (("1" (INST 2 "delta_1")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (EXPAND "D_down" 1)
                                              (("2" (TYPEPRED "delta_1")
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (TYPEPRED "delta")
                                              (("2" (INST 3 "delta")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (EXPAND "D_down" 1)
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (TYPEPRED "D")
                (("3" (TYPEPRED "p")
                  (("3" (LEMMA "D_down_partial")
                    (("3" (INST -1 "v" "D" "p") NIL NIL)) NIL))
                  NIL))
                NIL)
               ("4" (SKEEP)
                (("4" (TYPEPRED "p+Delta*v")
                  (("4" (TYPEPRED "p")
                    (("4" (TYPEPRED "Delta*v")
                      (("4" (TYPEPRED "v")
                        (("4" (ASSERT)
                          (("4" (EXPAND "max" -) (("4" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (HIDE 2)
              (("2" (TYPEPRED "D")
                (("2" (EXPAND "deriv_domain_partial?")
                  (("2" (EXPAND "not_one_element?" 1)
                    (("2" (SKEEP)
                      (("2" (TYPEPRED "x")
                        (("2" (EXPAND "D_down" -1)
                          (("2" (CASE "x=0")
                            (("1" (INST -3 "1" "p")
                              (("1" (SKEEP)
                                (("1" (INST 1 "delta")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (EXPAND "D_down" 1)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST -2 "abs(x)/2" "p")
                              (("1" (SKEEP)
                                (("1" (INST 2 "delta")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (EXPAND "D_down" 1)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (TYPEPRED "x")
                                  (("2" (MULT-BY 1 "2")
                                    (("2" (ASSERT)
                                      (("2" (REVEAL -)
                                        (("2" (REVEAL +)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (TYPEPRED "D")
              (("3" (LEMMA "D_down_partial")
                (("3" (INST -1 "v" "D" "p") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|der_f| CONST-DECL "{gg: [(D) -> VectorN(n)] |
   FORALL (p: (D)):
     convergence_zero?(NQ(D, p), NQ(f, gg(p), p), zero_vec(n))}"
     |differentiable_def| NIL)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| NIL)
    (|scal_cancel| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_asso| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|abs_nat| FORMULA-DECL NIL |abs_lems| |reals|)
    (|sub_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|lim_fun_def| FORMULA-DECL NIL |lim_of_functions| |analysis|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|))
   SHOSTAK))
 (|conv_NQ_is_init_partial_TCC1| 0
  (|conv_NQ_is_init_partial_TCC1-1| |nil| 3852724118
   ("" (SKEEP)
    (("" (TYPEPRED "v")
      (("" (LEMMA "diff_imp_init_partial2")
        (("" (INST -1 "v" "D" "f" "p")
          (("" (ASSERT)
            (("" (EXPAND "differentiable?" 1) (("" (INST 1 "dif") NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiable?| CONST-DECL "bool" |differentiable_def| NIL))
   NIL
   (|conv_NQ_is_init_partial| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(init_partial_def.v, init_partial_def.D, init_partial_def.f))")))
 (|conv_NQ_is_init_partial| 0
  (|conv_NQ_is_init_partial-1| |nil| 3852726373
   ("" (SKEEP)
    (("" (EXPAND "init_partial")
      (("" (EXPAND "deriv")
        ((""
          (LEMMA
           "lim_fun_def[(analysis@derivatives_def[(D_down(D, p, v))].A(0))]")
          (("1"
            (INST -1 "NQ(restrict[real, (D_down(D, p, v)), real]
                                  (LAMBDA (Delta: real): f(p + Delta * v)),
                              0)"
             "dif * v" "0")
            (("1" (FLATTEN)
              (("1" (ASSERT)
                (("1" (ASSERT)
                  (("1" (HIDE -1)
                    (("1" (EXPAND "convergence" 1)
                      (("1" (EXPAND "convergence" 1)
                        (("1" (SPLIT)
                          (("1" (EXPAND "adh" 1)
                            (("1" (SKEEP)
                              (("1" (TYPEPRED "D")
                                (("1" (EXPAND "deriv_domain_partial?")
                                  (("1" (INST -1 "e" "_")
                                    (("1" (INST -1 "p")
                                      (("1" (SKEEP)
                                        (("1" (INST 1 "delta")
                                          (("1" (EXPAND "fullset" 1)
                                            (("1" (PROPAX) NIL NIL)) NIL)
                                           ("2" (EXPAND "A" 1)
                                            (("2" (EXPAND "D_down" 1)
                                              (("2" (CASE "v=zero_vec(n)")
                                                (("1" (REPLACE -1 1)
                                                  (("1" (LEMMA "mult_zero")
                                                    (("1"
                                                      (INST -1 "zero_vec(n)")
                                                      (("1"
                                                        (TYPEPRED
                                                         "zero_vec(n)")
                                                        (("1" (REPLACE -2 -3)
                                                          (("1"
                                                            (LEMMA "zero_id")
                                                            (("1" (INST -1 "p")
                                                              (("1"
                                                                (TYPEPRED "p")
                                                                (("1"
                                                                  (REPLACE -2
                                                                           -4)
                                                                  (("1"
                                                                    (LEMMA
                                                                     "scal_zero")
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "delta")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (SKEEP)
                              (("2" (CASE "v=zero_vec(n)")
                                (("1" (REPLACE -1 1)
                                  (("1" (EXPAND "restrict" 1)
                                    (("1" (EXPAND "NQ" 1)
                                      (("1" (LEMMA "mult_zero")
                                        (("1" (INST -1 "zero_vec(n)")
                                          (("1" (TYPEPRED "zero_vec(n)")
                                            (("1" (REPLACE -2 -3)
                                              (("1" (REPLACE -3 1)
                                                (("1" (LEMMA "zero_id")
                                                  (("1" (INST -1 "p")
                                                    (("1" (TYPEPRED "p")
                                                      (("1" (REPLACE -2 -4)
                                                        (("1" (REPLACE -4 1)
                                                          (("1"
                                                            (LEMMA "scal_zero")
                                                            (("1" (INST 1 "1")
                                                              (("1" (SKEEP)
                                                                (("1"
                                                                  (INST -1 "x"
                                                                   "n")
                                                                  (("1"
                                                                    (REPLACE -1
                                                                             1)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -5 1)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (TYPEPRED "zero_vec(n)")
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "restrict" 2)
                                      (("2" (EXPAND "NQ" 2)
                                        (("2" (HIDE -1 -2)
                                          (("2" (EXPAND "convergence_zero?" -1)
                                            (("2" (EXPAND "NQ" -1 1)
                                              (("2" (LEMMA "mult_zero")
                                                (("2" (INST -1 "v")
                                                  (("2" (REPLACE -1 2)
                                                    (("2" (TYPEPRED "v")
                                                      (("2" (TYPEPRED "p")
                                                        (("2" (REPLACE -5 2)
                                                          (("2"
                                                            (LEMMA "zero_id")
                                                            (("2" (INST -1 "p")
                                                              (("2"
                                                                (REPLACE -3 -1)
                                                                (("2"
                                                                  (REPLACE -1
                                                                           2)
                                                                  (("2"
                                                                    (INST -9
                                                                     "epsilon/norm_inf(n)(v)")
                                                                    (("1"
                                                                      (SKEEP)
                                                                      (("1"
                                                                        (INST 3
                                                                         "delta/norm_inf(v)")
                                                                        (("1"
                                                                          (SKEEP)
                                                                          (("1"
                                                                            (HIDE
                                                                             -2
                                                                             -5)
                                                                            (("1"
                                                                              (INST
                                                                               -8
                                                                               "x*v")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "mult_zero")
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "sub_zero")
                                                                                    (("1"
                                                                                      (INST
                                                                                       -1
                                                                                       "x*v")
                                                                                      (("1"
                                                                                        (TYPEPRED
                                                                                         "x*v")
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -2
                                                                                           -3)
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -8
                                                                                             -2)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -8
                                                                                               -3)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -3
                                                                                                 -12)
                                                                                                (("1"
                                                                                                  (TYPEPRED
                                                                                                   "norm_inf(n)")
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "norm?"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (FLATTEN)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -2
                                                                                                         "v"
                                                                                                         "x")
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -2
                                                                                                           -16)
                                                                                                          (("1"
                                                                                                            (MULT-BY
                                                                                                             -15
                                                                                                             "norm_inf(v)")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (CASE
                                                                                                                    "NOT norm_inf(n)(v) =  norm_inf(v)")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "norm_inf"
                                                                                                                     1
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (PROPAX)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (EXPAND
                                                                                                                   "norm_inf"
                                                                                                                   -17
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (HIDE
                                                                                                                       -1
                                                                                                                       -2
                                                                                                                       -3
                                                                                                                       -4
                                                                                                                       -5
                                                                                                                       -6
                                                                                                                       -7
                                                                                                                       -8
                                                                                                                       -9
                                                                                                                       -10)
                                                                                                                      (("2"
                                                                                                                        (LEMMA
                                                                                                                         "abs_div")
                                                                                                                        (("2"
                                                                                                                          (INST
                                                                                                                           -1
                                                                                                                           "(abs(x) * norm_inf(n)(v))"
                                                                                                                           "f(p + x * v) - f(p) - dif* (x * v)")
                                                                                                                          (("2"
                                                                                                                            (LEMMA
                                                                                                                             "abs_mult")
                                                                                                                            (("2"
                                                                                                                              (INST
                                                                                                                               -1
                                                                                                                               "abs(x)"
                                                                                                                               "norm_inf(n)(v)")
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "abs"
                                                                                                                                 -1
                                                                                                                                 3)
                                                                                                                                (("2"
                                                                                                                                  (EXPAND
                                                                                                                                   "abs"
                                                                                                                                   -1
                                                                                                                                   4)
                                                                                                                                  (("2"
                                                                                                                                    (REPLACE
                                                                                                                                     -1
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -2
                                                                                                                                       -9)
                                                                                                                                      (("2"
                                                                                                                                        (MULT-BY
                                                                                                                                         -9
                                                                                                                                         "norm_inf(n)(v)")
                                                                                                                                        (("1"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("1"
                                                                                                                                            (CASE
                                                                                                                                                "NOT abs(f(p + x * v) - f(p) - dif * (x * v)) /
                                                                                            (abs(x) * norm_inf(n)(v))
                                                                                            * norm_inf(n)(v) = abs(f(p + x * v) - f(p) - dif * (x * v)) /
                                                                                            (abs(x))")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL)
                                                                                                                                             ("2"
                                                                                                                                              (REPLACE
                                                                                                                                               -1
                                                                                                                                               -10)
                                                                                                                                              (("2"
                                                                                                                                                (HIDE
                                                                                                                                                 -1
                                                                                                                                                 -2
                                                                                                                                                 -3
                                                                                                                                                 -4
                                                                                                                                                 -5)
                                                                                                                                                (("2"
                                                                                                                                                  (LEMMA
                                                                                                                                                   "abs_div")
                                                                                                                                                  (("2"
                                                                                                                                                    (INST
                                                                                                                                                     -1
                                                                                                                                                     "x"
                                                                                                                                                     "f(p + x * v) - f(p) - dif * (x * v)")
                                                                                                                                                    (("2"
                                                                                                                                                      (REPLACE
                                                                                                                                                       -1
                                                                                                                                                       -6
                                                                                                                                                       RL)
                                                                                                                                                      (("2"
                                                                                                                                                        (CASE
                                                                                                                                                            "NOT (f(p + x * v) - f(p) - dif * (x * v)) / x = (f(p + x * v) - f(p)) / x - dif * v")
                                                                                                                                                        (("1"
                                                                                                                                                          (LEMMA
                                                                                                                                                           "div_distributes_minus")
                                                                                                                                                          (("1"
                                                                                                                                                            (INST
                                                                                                                                                             -1
                                                                                                                                                             "x"
                                                                                                                                                             "f(p + x * v) - f(p)"
                                                                                                                                                             " dif * (x * v)")
                                                                                                                                                            (("1"
                                                                                                                                                              (REPLACE
                                                                                                                                                               -1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (REPLACE
                                                                                                                                                                 -1
                                                                                                                                                                 1
                                                                                                                                                                 RL)
                                                                                                                                                                (("1"
                                                                                                                                                                  (LEMMA
                                                                                                                                                                   "scal_cancel")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (LEMMA
                                                                                                                                                                     "scal_asso")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (ASSERT)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (TYPEPRED
                                                                                                                                                                         "x*v")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (INST
                                                                                                                                                                           -3
                                                                                                                                                                           "dif"
                                                                                                                                                                           "v"
                                                                                                                                                                           "x")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (REPLACE
                                                                                                                                                                             -3
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (ASSERT)
                                                                                                                                                                              NIL
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL)
                                                                                                                                                         ("2"
                                                                                                                                                          (REPLACE
                                                                                                                                                           -1
                                                                                                                                                           -7)
                                                                                                                                                          (("2"
                                                                                                                                                            (PROPAX)
                                                                                                                                                            NIL
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (HIDE
                                                                                                                                           -)
                                                                                                                                          (("2"
                                                                                                                                            (TYPEPRED
                                                                                                                                             "norm_inf(n)")
                                                                                                                                            (("2"
                                                                                                                                              (EXPAND
                                                                                                                                               "norm?"
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (FLATTEN)
                                                                                                                                                (("2"
                                                                                                                                                  (INST
                                                                                                                                                   -3
                                                                                                                                                   "v")
                                                                                                                                                  (("2"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (HIDE
                                                                                                               -)
                                                                                                              (("2"
                                                                                                                (TYPEPRED
                                                                                                                 "norm_inf(n)")
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "norm?"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (INST
                                                                                                                       -3
                                                                                                                       "v")
                                                                                                                      (("2"
                                                                                                                        (HIDE
                                                                                                                         -1
                                                                                                                         -2
                                                                                                                         -4)
                                                                                                                        (("2"
                                                                                                                          (FLATTEN)
                                                                                                                          (("2"
                                                                                                                            (CASE
                                                                                                                                "NOT norm_inf(v) = norm_inf(n)(v)")
                                                                                                                            (("1"
                                                                                                                              (EXPAND
                                                                                                                               "norm_inf"
                                                                                                                               1
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (PROPAX)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (ASSERT)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SPLIT)
                                                                                (("1"
                                                                                  (TYPEPRED
                                                                                   "x*v"
                                                                                   "v")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "NQ"
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (TYPEPRED
                                                                                       "p")
                                                                                      (("2"
                                                                                        (TYPEPRED
                                                                                         "v")
                                                                                        (("2"
                                                                                          (TYPEPRED
                                                                                           "x*v")
                                                                                          (("2"
                                                                                            (HIDE
                                                                                             -1
                                                                                             -3
                                                                                             -6
                                                                                             -10
                                                                                             -13)
                                                                                            (("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (TYPEPRED
                                                                                                 "D")
                                                                                                (("2"
                                                                                                  (TYPEPRED
                                                                                                   "x")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "A"
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (EXPAND
                                                                                                       "D_down"
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("3"
                                                                                  (ASSERT)
                                                                                  (("3"
                                                                                    (CASE
                                                                                        "x * v = zero_vec(n)")
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "zero_scal")
                                                                                      (("1"
                                                                                        (INST
                                                                                         -1
                                                                                         "v"
                                                                                         "x")
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (SPLIT)
                                                                          (("1"
                                                                            (MULT-BY
                                                                             1
                                                                             "norm_inf(v)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (CASE
                                                                                  "NOT norm_inf(n)(v) = norm_inf(v)")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "norm_inf"
                                                                                 1
                                                                                 1)
                                                                                (("1"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (REPLACE
                                                                                   -1
                                                                                   1
                                                                                   RL)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "norm_inf(n)")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "norm?"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (INST
                                                                                           -3
                                                                                           "v")
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (MULT-BY
                                                                             1
                                                                             "norm_inf(v)")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("3"
                                                                          (CASE
                                                                              "NOT norm_inf(v) = norm_inf(n)(v)")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "norm_inf"
                                                                               1
                                                                               2)
                                                                              (("1"
                                                                                (PROPAX)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (REPLACE
                                                                               -1
                                                                               1)
                                                                              (("2"
                                                                                (TYPEPRED
                                                                                 "norm_inf(n)")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "norm?"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (FLATTEN)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -3
                                                                                       "v")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (TYPEPRED
                                                                       "v")
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (SPLIT)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (MULT-BY
                                                                               1
                                                                               "norm_inf(n)(v)")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (TYPEPRED
                                                                                 "norm_inf(n)")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "norm?")
                                                                                  (("2"
                                                                                    (FLATTEN)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -3
                                                                                       "v")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (MULT-BY
                                                                             1
                                                                             "norm_inf(n)(v)")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (TYPEPRED
                                                                       "norm_inf(n)")
                                                                      (("3"
                                                                        (EXPAND
                                                                         "norm?")
                                                                        (("3"
                                                                          (FLATTEN)
                                                                          (("3"
                                                                            (INST
                                                                             -3
                                                                             "v")
                                                                            (("3"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (TYPEPRED "v")
              (("2" (ASSERT)
                (("2" (TYPEPRED "v")
                  (("2" (TYPEPRED "D")
                    (("2" (LEMMA "D_down_partial_not_one")
                      (("2" (INST -1 "v" "D" "p") NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("3" (LEMMA "D_down_partial")
              (("3" (INST -1 "v" "D" "p") NIL NIL)) NIL)
             ("4" (SKEEP)
              (("4" (TYPEPRED "p+Delta*v")
                (("4" (TYPEPRED "p")
                  (("4" (TYPEPRED "Delta*v")
                    (("4" (TYPEPRED "v")
                      (("4" (ASSERT)
                        (("4" (EXPAND "max" -) (("4" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2)
            (("2" (TYPEPRED "D")
              (("2" (EXPAND "deriv_domain_partial?")
                (("2" (LEMMA "D_down_partial_not_one")
                  (("2" (INST -1 "v" "D" "p") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("3" (LEMMA "D_down_partial") (("3" (INST -1 "v" "D" "p") NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|lim_fun_def| FORMULA-DECL NIL |lim_of_functions| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|scal_cancel| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_asso| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|abs_nat| FORMULA-DECL NIL |abs_lems| |reals|)
    (|sub_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_scal| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|norm?| CONST-DECL "bool" |norms| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|))
   SHOSTAK))
 (|der_f_is_init_partial1_TCC1| 0
  (|der_f_is_init_partial1_TCC1-1| |nil| 3852037187
   ("" (LEMMA "dd_all_partial_implies_dd")
    (("" (SKEEP) (("" (INST -1 "D") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)
   ((|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dd_all_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi|
     NIL))
   NIL
   (|der_f_is_init_partial1| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|der_f_is_init_partial1_TCC2| 0
  (|der_f_is_init_partial1_TCC2-1| |nil| 3852037187
   ("" (ASSERT)
    (("" (LEMMA "diff_imp_init_partial")
      (("" (SKEEP)
        (("" (INST?)
          (("" (ASSERT)
            (("" (INST -1 "f" "p")
              (("" (TYPEPRED "p")
                (("" (TYPEPRED "f")
                  (("" (EXPAND "differentiableD?" -1)
                    (("" (INST -1 "p")
                      (("" (ASSERT) (("" (INST -5 "v") NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL))
   NIL
   (|der_f_is_init_partial1| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(init_partial_def.v, init_partial_def.D, init_partial_def.f))")))
 (|der_f_is_init_partial1_TCC3| 0
  (|der_f_is_init_partial1_TCC3-1| |nil| 3852037187
   ("" (SKEEP)
    (("" (TYPEPRED "D")
      (("" (EXPAND "deriv_domain_all_partial?")
        (("" (INST -1 "v")
          (("" (ASSERT)
            (("" (EXPAND "deriv_domain_partial?") (("" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|der_f_is_init_partial1| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(init_partial_def.v))")))
 (|der_f_is_init_partial1| 0
  (|der_f_is_init_partial1-1| |nil| 3852042199
   ("" (LEMMA "der_f_is_init_partial")
    (("" (SKEEP)
      (("" (SKEEP)
        (("" (INST -1 "v" "D" "f" "p")
          (("" (CASE "NOT v= zero_vec(n)")
            (("1" (ASSERT) NIL NIL)
             ("2" (REPLACE -1 2)
              (("2" (LEMMA "dot_zero")
                (("2" (INST -1 "der_f(D)(f)(p)" "n")
                  (("1" (REPLACE -1 2)
                    (("1" (EXPAND "init_partial")
                      (("1" (EXPAND "deriv" 2)
                        (("1"
                          (LEMMA "lim_fun_def[(analysis@derivatives_def
                             [(D_down(D, p, vector_arithmetic.zero_vec(n)))].A
                             (0))]")
                          (("1"
                            (INST -1
                             "NQ(restrict[real, (D_down(D, p, zero_vec(n))), real]
                                          (LAMBDA (Delta: real): f(p + Delta * zero_vec(n))),
                                      0)"
                             "0" "0")
                            (("1" (ASSERT)
                              (("1" (HIDE 2 3)
                                (("1" (EXPAND "convergence" 1)
                                  (("1" (EXPAND "convergence" 1)
                                    (("1" (SPLIT)
                                      (("1" (EXPAND "adh" 1)
                                        (("1" (SKEEP)
                                          (("1" (INST 1 "e/2")
                                            (("1" (EXPAND "fullset" 1)
                                              (("1" (EXPAND "abs" 1)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (EXPAND "A" 1)
                                              (("2" (EXPAND "D_down" 1)
                                                (("2" (LEMMA "scal_zero")
                                                  (("2" (INST -1 "e/2" "n")
                                                    (("2" (TYPEPRED "p")
                                                      (("2" (REPLACE -4 1)
                                                        (("2" (LEMMA "zero_id")
                                                          (("2" (INST -1 "p")
                                                            (("2"
                                                              (REPLACE -3 -1)
                                                              (("2"
                                                                (REPLACE -1 1)
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKEEP)
                                        (("2" (INST 1 "1")
                                          (("2" (SKEEP)
                                            (("2" (EXPAND "NQ" 1)
                                              (("2" (EXPAND "restrict" 1)
                                                (("2" (LEMMA "scal_zero")
                                                  (("2" (INST -1 "x" "n")
                                                    (("2" (LEMMA "scal_zero")
                                                      (("2" (INST -1 "0" "n")
                                                        (("2" (REPLACE -1 1)
                                                          (("2" (REPLACE -2 1)
                                                            (("2"
                                                              (LEMMA "zero_id")
                                                              (("2"
                                                                (INST -1 "p")
                                                                (("2"
                                                                  (TYPEPRED
                                                                   "p")
                                                                  (("2"
                                                                    (REPLACE -2
                                                                             -4)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -4 1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2 3)
                              (("2" (HIDE -1 -2)
                                (("2" (EXPAND "not_one_element?")
                                  (("2" (SKEEP)
                                    (("2" (TYPEPRED "D")
                                      (("2"
                                        (EXPAND "deriv_domain_all_partial?")
                                        (("2" (INST -1 "zero_vec(n)")
                                          (("2" (CASE "x=1")
                                            (("1" (INST 1 "2")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (EXPAND "D_down" 1)
                                                (("2" (LEMMA "scal_zero")
                                                  (("2" (INST -1 "2" "n")
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (LEMMA "zero_id")
                                                        (("2" (INST -1 "p")
                                                          (("2" (TYPEPRED "p")
                                                            (("2"
                                                              (REPLACE -2 -4)
                                                              (("2"
                                                                (REPLACE -4 1)
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (INST 2 "1")
                                              (("1" (ASSERT) NIL NIL)
                                               ("2" (EXPAND "D_down")
                                                (("2" (LEMMA "zero_id")
                                                  (("2" (LEMMA "scal_zero")
                                                    (("2" (INST -1 "1" "n")
                                                      (("2" (REPLACE -1 1)
                                                        (("2" (INST -2 "p")
                                                          (("2" (TYPEPRED "p")
                                                            (("2"
                                                              (REPLACE -2 -5)
                                                              (("2"
                                                                (REPLACE -5 1)
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (TYPEPRED "D")
                              (("3" (LEMMA "D_down_all_partial")
                                (("3" (INST -1 "zero_vec(n)" "D" "p") NIL NIL))
                                NIL))
                              NIL)
                             ("4" (SKEEP)
                              (("4"
                                (TYPEPRED "p + Delta * zero_vec(n)" "p"
                                 "Delta*zero_vec(n)" "zero_vec(n)")
                                (("4" (ASSERT)
                                  (("4" (EXPAND "max" -)
                                    (("4" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE -1 -2 2 3)
                            (("2" (EXPAND "not_one_element?" 1)
                              (("2" (SKEEP)
                                (("2" (TYPEPRED "x")
                                  (("2" (INST 1 "x+1")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (EXPAND "D_down")
                                      (("2" (ASSERT)
                                        (("2" (LEMMA "scal_zero")
                                          (("2" (INST-CP -1 "x" "n")
                                            (("2" (INST -1 "1+x" "n")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (HIDE 2 3)
                            (("3" (LEMMA "D_down_all_partial")
                              (("3" (INST -1 "zero_vec(n)" "D" "p") NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (TYPEPRED "der_f[n](D)(f)(p)")
                      (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|der_f| CONST-DECL "{gg: [(D) -> VectorN(n)] |
   FORALL (p: (D)):
     convergence_zero?(NQ(D, p), NQ(f, gg(p), p), zero_vec(n))}"
     |differentiable_def| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|lim_fun_def| FORMULA-DECL NIL |lim_of_functions| |analysis|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|dot_zero| FORMULA-DECL NIL |vector_arithmetic| NIL))
   SHOSTAK))
 (|conv_NQ_is_init_partial1_TCC1| 0
  (|conv_NQ_is_init_partial1_TCC1-1| |nil| 3852728263
   ("" (SKEEP)
    (("" (LEMMA "diff_imp_init_partial")
      (("" (TYPEPRED "D")
        (("" (INST -2 "D" "f" "p")
          (("" (ASSERT)
            (("" (SPLIT -2)
              (("1" (INST -1 "v") NIL NIL)
               ("2" (EXPAND "differentiable?" 1) (("2" (INST 1 "dif") NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiable?| CONST-DECL "bool" |differentiable_def| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL))
   NIL
   (|conv_NQ_is_init_partial1| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(init_partial_def.v, init_partial_def.D, init_partial_def.f))")))
 (|conv_NQ_is_init_partial1_TCC2| 0
  (|conv_NQ_is_init_partial1_TCC2-1| |nil| 3852728263
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL))
   NIL
   (|conv_NQ_is_init_partial1| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(init_partial_def.v))")))
 (|conv_NQ_is_init_partial1| 0
  (|conv_NQ_is_init_partial1-1| |nil| 3852728431
   ("" (LEMMA "conv_NQ_is_init_partial")
    (("" (SKEEP)
      (("" (INST -1 "v" "D" "f" "p" "dif")
        (("1" (ASSERT) NIL NIL)
         ("2" (CASE "NOT v= zero_vec(n)")
          (("1" (ASSERT) NIL NIL)
           ("2" (REPLACE -1 2)
            (("2" (LEMMA "dot_zero")
              (("2" (INST -1 "dif" "n")
                (("1" (REPLACE -1 2)
                  (("1" (EXPAND "init_partial")
                    (("1" (EXPAND "deriv" 2)
                      (("1"
                        (LEMMA "lim_fun_def[(analysis@derivatives_def
                                                   [(D_down(D, p, vector_arithmetic.zero_vec(n)))].A
                                                   (0))]")
                        (("1"
                          (INST -1
                           "NQ(restrict[real, (D_down(D, p, zero_vec(n))), real]
                                                                      (LAMBDA (Delta: real): f(p + Delta * zero_vec(n))),
                                                                  0)"
                           "0" "0")
                          (("1" (ASSERT)
                            (("1" (HIDE 2 3)
                              (("1" (EXPAND "convergence" 1)
                                (("1" (EXPAND "convergence" 1)
                                  (("1" (SPLIT)
                                    (("1" (EXPAND "adh" 1)
                                      (("1" (SKEEP)
                                        (("1" (INST 1 "e/2")
                                          (("1" (EXPAND "fullset" 1)
                                            (("1" (EXPAND "abs" 1)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (EXPAND "A" 1)
                                            (("2" (EXPAND "D_down" 1)
                                              (("2" (LEMMA "scal_zero")
                                                (("2" (INST -1 "e/2" "n")
                                                  (("2" (TYPEPRED "p")
                                                    (("2" (REPLACE -4 1)
                                                      (("2" (LEMMA "zero_id")
                                                        (("2" (INST -1 "p")
                                                          (("2" (REPLACE -3 -1)
                                                            (("2"
                                                              (REPLACE -1 1)
                                                              (("2" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SKEEP)
                                      (("2" (INST 1 "1")
                                        (("2" (SKEEP)
                                          (("2" (EXPAND "NQ" 1)
                                            (("2" (EXPAND "restrict" 1)
                                              (("2" (LEMMA "scal_zero")
                                                (("2" (INST -1 "x" "n")
                                                  (("2" (LEMMA "scal_zero")
                                                    (("2" (INST -1 "0" "n")
                                                      (("2" (REPLACE -1 1)
                                                        (("2" (REPLACE -2 1)
                                                          (("2"
                                                            (LEMMA "zero_id")
                                                            (("2" (INST -1 "p")
                                                              (("2"
                                                                (TYPEPRED "p")
                                                                (("2"
                                                                  (REPLACE -2
                                                                           -4)
                                                                  (("2"
                                                                    (REPLACE -4
                                                                             1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE 2 3)
                            (("2" (HIDE -1 -2)
                              (("2" (EXPAND "not_one_element?")
                                (("2" (SKEEP)
                                  (("2" (TYPEPRED "D")
                                    (("2" (EXPAND "deriv_domain_all_partial?")
                                      (("2" (INST -1 "zero_vec(n)")
                                        (("2" (CASE "x=1")
                                          (("1" (INST 1 "2")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (EXPAND "D_down" 1)
                                              (("2" (LEMMA "scal_zero")
                                                (("2" (INST -1 "2" "n")
                                                  (("2" (REPLACE -1 1)
                                                    (("2" (LEMMA "zero_id")
                                                      (("2" (INST -1 "p")
                                                        (("2" (TYPEPRED "p")
                                                          (("2" (REPLACE -2 -4)
                                                            (("2"
                                                              (REPLACE -4 1)
                                                              (("2" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (INST 2 "1")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (EXPAND "D_down")
                                              (("2" (LEMMA "zero_id")
                                                (("2" (LEMMA "scal_zero")
                                                  (("2" (INST -1 "1" "n")
                                                    (("2" (REPLACE -1 1)
                                                      (("2" (INST -2 "p")
                                                        (("2" (TYPEPRED "p")
                                                          (("2" (REPLACE -2 -5)
                                                            (("2"
                                                              (REPLACE -5 1)
                                                              (("2" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("3" (TYPEPRED "D")
                            (("3" (LEMMA "D_down_all_partial")
                              (("3" (INST -1 "zero_vec(n)" "D" "p") NIL NIL))
                              NIL))
                            NIL)
                           ("4" (SKEEP)
                            (("4"
                              (TYPEPRED "p + Delta * zero_vec(n)" "p"
                               "Delta*zero_vec(n)" "zero_vec(n)")
                              (("4" (ASSERT)
                                (("4" (EXPAND "max" -) (("4" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1 -2 2 3)
                          (("2" (EXPAND "not_one_element?" 1)
                            (("2" (SKEEP)
                              (("2" (TYPEPRED "x")
                                (("2" (INST 1 "x+1")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (EXPAND "D_down")
                                    (("2" (ASSERT)
                                      (("2" (LEMMA "scal_zero")
                                        (("2" (INST-CP -1 "x" "n")
                                          (("2" (INST -1 "1+x" "n")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (HIDE 2 3)
                          (("3" (LEMMA "D_down_all_partial")
                            (("3" (INST -1 "zero_vec(n)" "D" "p") NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dot_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|convergent?| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (NQ CONST-DECL "real" |derivatives_def| |analysis|)
    (|convergence| CONST-DECL "bool" |convergence_functions| |analysis|)
    (|abs_0| FORMULA-DECL NIL |abs_lems| |reals|)
    (|adh| CONST-DECL "setof[real]" |convergence_functions| |analysis|)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|convergence| CONST-DECL "bool" |lim_of_functions| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (A CONST-DECL "setof[nzreal]" |derivatives_def| |analysis|)
    (|lim_fun_def| FORMULA-DECL NIL |lim_of_functions| |analysis|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|conv_NQ_unique| 0
  (|conv_NQ_unique-1| |nil| 3852729431
   ("" (SKEEP)
    (("" (LEMMA "conv_NQ_is_init_partial1")
      (("" (LEMMA "list_extensionality[real]")
        (("" (INST -1 "dif1" "dif2")
          (("" (ASSERT)
            (("" (HIDE 2)
              (("" (SKEEP)
                (("" (INST-CP -1 "e(n,n!1)" "D" "f" "p" "dif1")
                  (("" (INST-CP -1 "e(n,n!1)" "D" "f" "p" "dif2")
                    (("" (HIDE -1)
                      (("" (ASSERT)
                        (("" (LEMMA "dot_prod_e")
                          (("" (INST-CP -1 "n" "n!1" "dif1")
                            (("" (INST-CP -1 "n" "n!1" "dif2")
                              (("" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|deriv_domain_all_partial?| CONST-DECL "bool" |derivative_domain_multi|
     NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|dot_prod_e| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|))
   SHOSTAK))
 (|der_f_unique_TCC1| 0
  (|der_f_unique_TCC1-1| |nil| 3853433564
   ("" (SKEEP)
    (("" (LEMMA "dd_e_partial_implies_dd")
      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|dd_e_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi| NIL)
    (|deriv_domain_e_partial?| CONST-DECL "bool" |derivative_domain_multi| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|der_f_unique| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|der_f_unique| 0
  (|der_f_unique-1| |nil| 3852729206
   ("" (SKEEP)
    (("" (LEMMA "list_extensionality[real]")
      (("" (INST?)
        (("" (ASSERT)
          (("" (NAME "k" "length(dif)")
            ((""
              (CASE
                  " FORALL (n: below(length(dif))): dif * e(k,n) = der_f(D,p)(f) * e(k,n)")
              (("1" (SKEEP)
                (("1" (INST -1 "n!1")
                  (("1" (LEMMA "dot_prod_e")
                    (("1" (INST?)
                      (("1" (REPLACE -1)
                        (("1" (LEMMA "dot_prod_e")
                          (("1" (INST -1 "k" "n!1" "der_f(D,p)(f)")
                            (("1" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (LEMMA "conv_NQ_is_init_partial")
                  (("2" (LEMMA "der_f_is_init_partial")
                    (("2" (SKEEP)
                      (("2" (INST -2 "e(k,n!1)" "D" "f" "p" "dif")
                        (("1" (ASSERT)
                          (("1" (REPLACE -2)
                            (("1" (HIDE -1)
                              (("1" (LEMMA "conv_NQ_is_init_partial")
                                (("1"
                                  (INST -1 "e(k,n!1)" "D" "f" "p"
                                   "der_f(D,p)(f)")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (LEMMA "e_not_zero")
                                    (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -)
                          (("2" (TYPEPRED "D")
                            (("2" (EXPAND "deriv_domain_e_partial?" -1)
                              (("2" (INST -1 "n!1")
                                (("2" (ASSERT)
                                  (("2" (REVEAL -) (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (ASSERT)
                          (("3" (HIDE -)
                            (("3" (LEMMA "e_not_zero")
                              (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|e| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (* CONST-DECL "real" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|dot_prod_e| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|e_not_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|deriv_domain_e_partial?| CONST-DECL "bool" |derivative_domain_multi| NIL)
    (|der_f| CONST-DECL
     "{gg: VectorN(n) | convergence_zero?(NQ(D, p), NQ(f, gg, p), zero_vec(n))}"
     |differentiable_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|differentiable?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|init_partial_scalar_TCC1| 0
  (|init_partial_scalar_TCC1-1| |nil| 3852037187
   ("" (SKEEP)
    (("" (TYPEPRED "f")
      (("" (LEMMA "frech_diff_imp_init_partial")
        (("" (INST -1 "c*v" "D" "f" "p")
          (("" (ASSERT)
            (("" (FLATTEN)
              (("" (ASSERT)
                (("" (EXPAND "differentiableD?" -1)
                  (("" (INST -1 "p") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   NIL
   (|init_partial_scalar| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(matrices.*(init_partial_def.c, init_partial_def.v), init_partial_def.D, init_partial_def.f))")))
 (|init_partial_scalar_TCC2| 0
  (|init_partial_scalar_TCC2-1| |nil| 3852037187 ("" (SUBTYPE-TCC) NIL NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| NIL)
    (|sub| CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices|
     |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|norm_inf| CONST-DECL "[(cons?) -> nonneg_real]" |norms| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "real" |matrices| |matrices|)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|differentiable?| CONST-DECL "bool" |differentiable_def| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|init_partial_scalar| SUBTYPE
    "matrices.*(init_partial_def.c, init_partial_def.v)"
    "VectorN(init_partial_def.n)")))
 (|init_partial_scalar_TCC3| 0
  (|init_partial_scalar_TCC3-1| |nil| 3852037187
   ("" (LEMMA "dd_partial_implies_scal_partial")
    (("" (SKEEP) (("" (INST -1 "D" "v" "c") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|dd_partial_implies_scal_partial| FORMULA-DECL NIL
     |derivative_domain_multi| NIL))
   NIL
   (|init_partial_scalar| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain_partial?(matrices.*(init_partial_def.c, init_partial_def.v)))")))
 (|init_partial_scalar| 0
  (|init_partial_scalar-1| |nil| 3852042589
   ("" (SKEEP)
    (("" (CASE "v=zero_vec(n)")
      (("1" (REPLACE -1 1)
        (("1" (LEMMA "init_partial_zero")
          (("1" (INST -1 "D" "f" "p")
            (("1" (LEMMA "scal_zero")
              (("1" (INST -1 "c" "n")
                (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "der_f_is_init_partial")
        (("2" (INST-CP -1 "v" "D" "f" "p")
          (("2" (INST -1 "c*v" "D" "f" "p")
            (("1" (ASSERT)
              (("1" (LEMMA "dot_scalar1")
                (("1" (INST -1 "der_f(D)(f)(p)" "v" "c")
                  (("1" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (CASE "c=0")
              (("1" (REPLACE -1 1)
                (("1" (REPLACE -1 3)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mult_zero")
                      (("1" (ASSERT)
                        (("1" (CASE "NOT 0 * init_partial(v, D, f)(p)=0")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (REPLACE -1 3)
                            (("2" (INST -2 "v")
                              (("2" (TYPEPRED "v")
                                (("2" (ASSERT)
                                  (("2" (LEMMA "init_partial_zero")
                                    (("2" (INST -1 "D" "f" "p")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (LEMMA "zero_mult")
                  (("2" (INST -1 "c" "v") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|mult_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_mult| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|der_f| CONST-DECL "{gg: [(D) -> VectorN(n)] |
   FORALL (p: (D)):
     convergence_zero?(NQ(D, p), NQ(f, gg(p), p), zero_vec(n))}"
     |differentiable_def| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|dot_scalar1| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|))
   SHOSTAK))
 (|init_partial_additive_TCC1| 0
  (|init_partial_additive_TCC1-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (TYPEPRED "v1+v2" "v1" "v2")
      (("" (ASSERT)
        (("" (REPLACE -4)
          (("" (REPLACE -7)
            (("" (EXPAND "max" -2 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_additive| SUBTYPE
    "(matrices.+)(init_partial_def.v1, init_partial_def.v2)"
    "VectorN(init_partial_def.n)")))
 (|init_partial_additive_TCC2| 0
  (|init_partial_additive_TCC2-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (LEMMA "dd_partial_implies_dd")
      (("" (ASSERT)
        (("" (TYPEPRED "D")
          (("" (TYPEPRED "v1")
            (("" (INST -7 "D" "v1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|dd_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_additive| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|init_partial_additive_TCC3| 0
  (|init_partial_additive_TCC3-1| |nil| 3852043296
   ("" (LEMMA "frech_diff_imp_init_partial")
    (("" (SKEEP)
      (("" (INST -1 "v1+v2" "D" "f" "p")
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (ASSERT)
              (("" (TYPEPRED "f")
                (("" (EXPAND "differentiableD?" -1)
                  (("" (INST -1 "p") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_additive| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?((matrices.+)(init_partial_def.v1, init_partial_def.v2), init_partial_def.D, init_partial_def.f))")))
 (|init_partial_additive_TCC4| 0
  (|init_partial_additive_TCC4-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (TYPEPRED "v1+v2" "v1" "v2")
      (("" (REPLACE -4)
        (("" (REPLACE -7)
          (("" (ASSERT)
            (("" (REPLACE -2)
              (("" (EXPAND "max" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_additive| SUBTYPE
    "(matrices.+)(init_partial_def.v1, init_partial_def.v2)"
    "VectorN(init_partial_def.n)")))
 (|init_partial_additive_TCC5| 0
  (|init_partial_additive_TCC5-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (LEMMA "frech_diff_imp_init_partial")
      (("" (INST -1 "v1" "D" "f" "p")
        (("" (ASSERT)
          (("" (TYPEPRED "f")
            (("" (EXPAND "differentiableD?") (("" (INST -1 "p") NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_additive| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(init_partial_def.v1, init_partial_def.D, init_partial_def.f))")))
 (|init_partial_additive_TCC6| 0
  (|init_partial_additive_TCC6-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (LEMMA "frech_diff_imp_init_partial")
      (("" (INST -1 "v2" "D" "f" "p")
        (("" (ASSERT)
          (("" (FLATTEN)
            (("" (ASSERT)
              (("" (TYPEPRED "f")
                (("" (EXPAND "differentiableD?" -1)
                  (("" (INST -1 "p") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_additive| SUBTYPE "init_partial_def.p"
    "(init_partial_def.init_partial?(init_partial_def.v2, init_partial_def.D, init_partial_def.f))")))
 (|init_partial_additive| 0
  (|init_partial_additive-1| |nil| 3852045361
   ("" (LEMMA "der_f_is_init_partial")
    (("" (SKEEP)
      (("" (CASE "v1=zero_vec(n)")
        (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (CASE "v2=zero_vec(n)")
          (("1" (REPLACE -1 2)
            (("1" (LEMMA "zero_id")
              (("1" (INST -1 "v1")
                (("1" (TYPEPRED "v1")
                  (("1" (HIDE -1)
                    (("1" (REPLACE -1)
                      (("1" (REPLACE -3)
                        (("1" (LEMMA "init_partial_zero")
                          (("1" (INST -1 "D" "f" "p") (("1" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (CASE "v1+v2 = zero_vec(n)")
              (("1" (REPLACE -1 3)
                (("1" (LEMMA "init_partial_zero")
                  (("1" (INST -1 "D" "f" "p")
                    (("1" (REPLACE -1 3)
                      (("1" (LEMMA "add_zero_imp_eq")
                        (("1" (INST -1 "n" "v1" "v2")
                          (("1" (ASSERT)
                            (("1" (REPLACE -1 3)
                              (("1" (LEMMA "init_partial_scalar")
                                (("1" (INST -1 "v2" "D" "f" "p" "-1")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "D")
                (("2" (EXPAND "deriv_domain_partial?" -3)
                  (("2" (ASSERT)
                    (("2" (HIDE -1 -2 -3)
                      (("2" (INST-CP -1 "v1+v2" "D" "f" "p")
                        (("2" (INST-CP -1 "v1" "D" "f" "p")
                          (("2" (INST -1 "v2" "D" "f" "p")
                            (("2" (REPLACE -1 4 RL)
                              (("2" (REPLACE -2 4 RL)
                                (("2" (REPLACE -3 4 RL)
                                  (("2" (LEMMA "dot_dist")
                                    (("2" (INST -1 "der_f(D)(f)(p)" "v1" "v2")
                                      (("2" (ASSERT) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|add_zero_imp_eq| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|convergence_zero?| CONST-DECL "bool" |vector_sequences| NIL)
    (NQ CONST-DECL "bool" |differentiable_def| NIL)
    (NQ CONST-DECL "real" |differentiable_def| NIL)
    (|der_f| CONST-DECL "{gg: [(D) -> VectorN(n)] |
   FORALL (p: (D)):
     convergence_zero?(NQ(D, p), NQ(f, gg(p), p), zero_vec(n))}"
     |differentiable_def| NIL)
    (|dot_dist| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL))
   SHOSTAK))
 (|init_partial_linear_TCC1| 0
  (|init_partial_linear_TCC1-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (TYPEPRED "v1+c*v2" "v1" "c*v2" "v2")
      (("" (REPLACE -7)
        (("" (REPLACE -9)
          (("" (REPLACE -4)
            (("" (EXPAND "max" -2) (("" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_linear| SUBTYPE
    "(matrices.+)(init_partial_def.v1, matrices.*(init_partial_def.c, init_partial_def.v2))"
    "VectorN(init_partial_def.n)")))
 (|init_partial_linear_TCC2| 0
  (|init_partial_linear_TCC2-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (LEMMA "dd_partial_implies_dd")
      (("" (TYPEPRED "D") (("" (INST -4 "D" "v1") (("" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|dd_partial_implies_dd| FORMULA-DECL NIL |derivative_domain_multi| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   NIL
   (|init_partial_linear| SUBTYPE "init_partial_def.D"
    "(derivative_domain_multi[init_partial_def.n].deriv_domain?)")))
 (|init_partial_linear_TCC3| 0
  (|init_partial_linear_TCC3-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (TYPEPRED "v1+c*v2" "v1" "c*v2" "v2")
      (("" (REPLACE -7)
        (("" (REPLACE -4)
          (("" (REPLACE -9)
            (("" (EXPAND "max " -2) (("" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|init_partial_linear| SUBTYPE
    "(matrices.+)(init_partial_def.v1, matrices.*(init_partial_def.c, init_partial_def.v2))"
    "VectorN(init_partial_def.n)")))
 (|init_partial_linear_TCC4| 0
  (|init_partial_linear_TCC5-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (LEMMA "frech_diff_imp_init_partial")
      (("" (SKEEP)
        (("" (INST-CP -1 "v1" "D" "f" "x")
          (("" (INST -1 "v2" "D" "f" "x")
            (("" (ASSERT)
              (("" (FLATTEN)
                (("" (SPLIT 1)
                  (("1" (FLATTEN)
                    (("1" (ASSERT)
                      (("1" (TYPEPRED "f")
                        (("1" (EXPAND "differentiableD?")
                          (("1" (INST -1 "x") NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (ASSERT)
                        (("2" (TYPEPRED "f")
                          (("2" (EXPAND "differentiableD?")
                            (("2" (INST -1 "x") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL))
   NIL
   (|init_partial_linear| SUBTYPE
    "real_fun_ops[(init_partial_def.init_partial?(init_partial_def.v2, init_partial_def.D, init_partial_def.f))].*(init_partial_def.c, init_partial_def.init_partial(init_partial_def.v2, init_partial_def.D, init_partial_def.f))"
    "[(init_partial_def.init_partial?(init_partial_def.v1, init_partial_def.D, init_partial_def.f)) -> real]")))
 (|init_partial_linear_TCC5| 0
  (|init_partial_linear_TCC6-1| |nil| 3852043296
   ("" (SKEEP)
    (("" (LEMMA "frech_diff_imp_init_partial")
      (("" (SKEEP)
        (("" (INST-CP -1 "v1" "D" "f" "x")
          (("" (INST -1 "v1 + c*v2" "D" "f" "x")
            (("" (ASSERT)
              (("" (FLATTEN)
                (("" (SPLIT 1)
                  (("1" (FLATTEN)
                    (("1" (ASSERT)
                      (("1" (TYPEPRED "f")
                        (("1" (EXPAND "differentiableD?")
                          (("1" (INST -1 "x") (("1" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (TYPEPRED "f")
                        (("2" (EXPAND "differentiableD?")
                          (("2" (INST -1 "x") NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|list| TYPE-DECL NIL |list_adt| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL))
   NIL
   (|init_partial_linear| SUBTYPE
    "(real_fun_ops[(init_partial_def.init_partial?(init_partial_def.v1, init_partial_def.D, init_partial_def.f))].+)(init_partial_def.init_partial(init_partial_def.v1, init_partial_def.D, init_partial_def.f), real_fun_ops[(init_partial_def.init_partial?(init_partial_def.v2, init_partial_def.D, init_partial_def.f))].*(init_partial_def.c, init_partial_def.init_partial(init_partial_def.v2, init_partial_def.D, init_partial_def.f)))"
    "[(init_partial_def.init_partial?((matrices.+)(init_partial_def.v1, matrices.*(init_partial_def.c, init_partial_def.v2)), init_partial_def.D, init_partial_def.f)) -> real]")))
 (|init_partial_linear| 0
  (|init_partial_linear-1| |nil| 3852046072
   ("" (SKEEP)
    (("" (LEMMA "init_partial_additive")
      (("" (INST -1 "v1" "c*v2" "D" "f" "_")
        (("1" (WITH-TCCS (DECOMPOSE-EQUALITY 1))
          (("1" (INST -1 "x!1")
            (("1" (LEMMA "init_partial_scalar")
              (("1" (INST -1 "v2" "D" "f" "x!1" "c")
                (("1" (ASSERT)
                  (("1" (REPLACE -2 1)
                    (("1" (REPLACE -1 1 RL)
                      (("1" (ASSERT)
                        (("1" (EXPAND "+" 1 2)
                          (("1" (ASSERT)
                            (("1" (EXPAND "*" 1 2) (("1" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "v2")
                  (("2" (LEMMA "init_partial_zero")
                    (("2" (INST -1 "D" "f" "_")
                      (("2" (INST -1 "x!1")
                        (("2" (CASE "NOT v2 = zero_vec(n)")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (REPLACE -1)
                            (("2" (ASSERT)
                              (("2" (EXPAND "*" 2 2)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "+" 2 2)
                                    (("2" (REPLACE -2 2)
                                      (("2" (ASSERT)
                                        (("2"
                                          (CASE "v1 + c * zero_vec(n) = v1")
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (HIDE 3)
                                            (("2" (LEMMA "scal_zero")
                                              (("2" (INST -1 "c" "n")
                                                (("2" (REPLACE -1 1)
                                                  (("2" (LEMMA "zero_id")
                                                    (("2" (INST -1 "v1")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (TYPEPRED "v2")
          (("2" (TYPEPRED "D")
            (("2" (TYPEPRED "c")
              (("2" (LEMMA "dd_partial_implies_scal_partial")
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("3" (TYPEPRED "c*v2" "v2")
          (("3" (HIDE -1 -3) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|dd_partial_implies_scal_partial| FORMULA-DECL NIL
     |derivative_domain_multi| NIL)
    (|scal_zero| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|zero_id| FORMULA-DECL NIL |vector_arithmetic| NIL)
    (|differentiableD?| CONST-DECL "bool" |differentiable_def| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|zero_vec| DEF-DECL "VectorN(m)" |vector_arithmetic| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|))
   SHOSTAK)))

