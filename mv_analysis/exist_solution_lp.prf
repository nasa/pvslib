(|exist_solution_lp|
 (|norm_program?_TCC1| 0
  (|norm_program?_TCC1-1| |nil| 3742914685 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (+ CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|norm?| CONST-DECL "bool" |norms| |matrices|)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| |matrices|))
   NIL
   (|norm_program?| SUBTYPE "exist_solution_lp.x" "(list_adt[real].cons?)")))
 (|convergence_in_solution_set_TCC1| 0
  (|convergence_in_solution_set_TCC1-1| |nil| 3742825394
   ("" (SKEEP)
    (("" (TYPEPRED "mult(m, n, A, VV(i)) - b")
      (("" (TYPEPRED "b" "mult(m, n, A, VV(i))")
        (("" (EXPAND "max" -) (("" (ASSERT) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication| |matrices|)
    (|n| FORMAL-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|vec_seq| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| |matrices|))
   NIL
   (|convergence_in_solution_set| SUBTYPE
    "(matrices.-)(matrix_vector_multiplication.mult(exist_solution_lp.m, exist_solution_lp.n, exist_solution_lp.A, exist_solution_lp.VV(exist_solution_lp.i)), exist_solution_lp.b)"
    "(list_adt[real].cons?)")))
 (|convergence_in_solution_set_TCC2| 0
  (|convergence_in_solution_set_TCC2-1| |nil| 3742825394
   ("" (SKEEP)
    (("" (TYPEPRED "mult(m, n, A, L) - b" "b" "mult(m, n, A, L)")
      (("" (EXPAND "max" -) (("" (ASSERT) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication| |matrices|)
    (|n| FORMAL-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| |matrices|))
   NIL
   (|convergence_in_solution_set| SUBTYPE
    "(matrices.-)(matrix_vector_multiplication.mult(exist_solution_lp.m, exist_solution_lp.n, exist_solution_lp.A, exist_solution_lp.L), exist_solution_lp.b)"
    "(list_adt[real].cons?)")))
 (|convergence_in_solution_set| 0
  (|convergence_in_solution_set-1| |nil| 3742826095
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (SKEEP)
        (("" (LEMMA "sequential_criterian1")
          ((""
            (INST -1 "LAMBDA(v:VectorN(n)): TRUE"
             "LAMBDA(v:VectorN(n)): norm_inf(m)(mult(m, n, A, v) - b)")
            (("1" (SPLIT)
              (("1" (INST -1 "V" "L")
                (("1" (ASSERT)
                  (("1" (TYPEPRED "V")
                    (("1"
                      (CASE
                          "NOT (LAMBDA (i: nat): norm_inf(m)(mult(m, n, A, V(i)) - b)) = LAMBDA(i:nat): 0")
                      (("1" (DECOMPOSE-EQUALITY 1)
                        (("1" (SKEEP)
                          (("1"
                            (TYPEPRED "mult(m, n, A, V(i)) - b" "b"
                             "mult(m, n, A, V(i))")
                            (("1" (EXPAND "max" -)
                              (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (REPLACE -1 -3)
                          (("2" (EXPAND "convergence")
                            (("2" (INST -3 "norm_inf(m)(mult(m, n, A, L) - b)")
                              (("2" (SKEEP)
                                (("2" (INST -3 "n_1+1")
                                  (("2" (ASSERT)
                                    (("2" (LEMMA "abs_mult")
                                      (("2"
                                        (INST -1 "-1"
                                         "norm_inf(m)(mult(m, n, A, L) - b)")
                                        (("2" (EXPAND "abs" -1 2)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("3" (SKEEP)
                        (("3"
                          (TYPEPRED "mult(m, n, A, V(i)) - b" "b"
                           "mult(m, n, A, V(i))")
                          (("3" (EXPAND "max" -)
                            (("3" (ASSERT) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2 -1)
                (("2" (EXPAND "contD?")
                  (("2" (SKEEP)
                    (("2" (LEMMA "contD_norm_v2r")
                      (("2"
                        (INST -1 "LAMBDA (v: VectorN(n)): TRUE"
                         "LAMBDA (v: VectorN(n)): norm_inf(m)(mult(m, n, A, v) - b)")
                        (("1" (FLATTEN)
                          (("1" (SPLIT -1)
                            (("1" (EXPAND "contD?" -1)
                              (("1" (INST -1 "p")
                                (("1" (ASSERT)
                                  (("1" (HIDE -2)
                                    (("1" (EXPAND "contp?")
                                      (("1" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (HIDE -1)
                                (("2" (INST 1 "norm_2(n)")
                                  (("2" (EXPAND "contD?")
                                    (("2" (SKEEP 1)
                                      (("2" (TYPEPRED "p!1")
                                        (("2" (CASE "max_row_2(m,n, A)=0")
                                          (("1" (HIDE 2)
                                            (("1" (EXPAND "contp?" 1)
                                              (("1" (SKEEP)
                                                (("1" (INST 1 "1")
                                                  (("1" (SKEEP)
                                                    (("1"
                                                      (LEMMA "reverse_triag")
                                                      (("1"
                                                        (INST -1 "m"
                                                         "mult(m, n, A, x) - b"
                                                         "mult(m, n, A, p!1) - b"
                                                         "norm_inf(m)")
                                                        (("1"
                                                          (LEMMA "quad_cancel")
                                                          (("1"
                                                            (INST -1
                                                             "mult(m, n, A, x)"
                                                             "b"
                                                             "mult(m, n, A, p!1)")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (REPLACE -1 -2)
                                                                (("1"
                                                                  (LEMMA
                                                                   "mmult_sub_dist")
                                                                  (("1"
                                                                    (INST -1
                                                                     "m" "n"
                                                                     "A" "x"
                                                                     "p!1")
                                                                    (("1"
                                                                      (REPLACE
                                                                       -1 -3
                                                                       RL)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "mmult_inf_bound")
                                                                        (("1"
                                                                          (INST
                                                                           -1
                                                                           "m"
                                                                           "n"
                                                                           "A"
                                                                           "x-p!1")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (TYPEPRED
                                                               "mult(m, n, A, p!1)")
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("3"
                                                              (TYPEPRED
                                                               "mult(m, n, A, x)")
                                                              (("3" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (TYPEPRED
                                                           "mult(m, n, A, p!1) - b"
                                                           "mult(m, n, A, p!1)"
                                                           "b")
                                                          (("2"
                                                            (EXPAND "max" -)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("3"
                                                          (TYPEPRED
                                                           "mult(m, n, A, x) - b"
                                                           "mult(m, n, A, x)"
                                                           "b")
                                                          (("3"
                                                            (EXPAND "max" -)
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE -1)
                                            (("2" (HIDE 3)
                                              (("2" (EXPAND "contp?" 2)
                                                (("2" (SKEEP)
                                                  (("2"
                                                    (INST 2
                                                     "eps/max_row_2(m,n,A)")
                                                    (("1" (SKEEP)
                                                      (("1"
                                                        (MULT-BY -2
                                                         "max_row_2(m, n, A)")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (LEMMA
                                                             "reverse_triag")
                                                            (("1"
                                                              (INST -1 "m"
                                                               "mult(m, n, A, x) - b"
                                                               "mult(m, n, A, p!1) - b"
                                                               "norm_inf(m)")
                                                              (("1"
                                                                (LEMMA
                                                                 "quad_cancel")
                                                                (("1"
                                                                  (INST -1
                                                                   "mult(m, n, A, x)"
                                                                   "b"
                                                                   "mult(m, n, A, p!1)")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1 -2)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "mmult_sub_dist")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "m"
                                                                             "n"
                                                                             "A"
                                                                             "x"
                                                                             "p!1")
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1
                                                                               -3
                                                                               RL)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "mmult_inf_bound")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "m"
                                                                                   "n"
                                                                                   "A"
                                                                                   "x-p!1")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (TYPEPRED
                                                                 "mult(m, n, A, p!1) - b"
                                                                 "mult(m, n, A, p!1)"
                                                                 "b")
                                                                (("2"
                                                                  (EXPAND "max"
                                                                          -)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("3"
                                                                (TYPEPRED
                                                                 "mult(m, n, A, x) - b"
                                                                 "b"
                                                                 "mult(m, n, A, x)")
                                                                (("3"
                                                                  (EXPAND "max"
                                                                          -)
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (SPLIT)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (MULT-BY 1
                                                           "max_row_2(m, n, A)")
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (MULT-BY 1
                                                         "max_row_2(m, n, A)")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("3" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKEEP)
                          (("2"
                            (TYPEPRED "mult(m, n, A, v) - b" "mult(m, n, A, v)"
                             "b")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKEEP)
              (("2" (TYPEPRED "mult(m, n, A, v) - b" "mult(m, n, A, v)" "b")
                (("2" (EXPAND "max" -)
                  (("2" (ASSERT) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sequential_criterian1| FORMULA-DECL NIL |sequential_criterian| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (V SKOLEM-CONST-DECL "{VV: vec_seq(n) |
   FORALL (i: nat): norm_inf(m)(mult(m, n, A, VV(i)) - b) = 0}"
     |exist_solution_lp| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|abs_mult| FORMULA-DECL NIL |real_props| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|convergence| CONST-DECL "bool" |convergence_sequences| |analysis|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|vec_seq| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|contD?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|contD_norm_v2r| FORMULA-DECL NIL |continuity_multivar| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|norm_2| CONST-DECL "(norm?(m))" |norms| |matrices|)
    (|max_row_2| CONST-DECL "{c: nonneg_real |
   (FORALL (j: below(m)): norm_2(n)(row(A)(j)) <= c) AND
    EXISTS (i: below(m)): c = norm_2(n)(row(A)(i))}"
     |matrix_vector_multiplication| |matrices|)
    (|row| CONST-DECL "Vector" |matrices| |matrices|)
    (<= CONST-DECL "bool" |reals| NIL)
    (|contp?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|reverse_triag| FORMULA-DECL NIL |norms| |matrices|)
    (|quad_cancel| FORMULA-DECL NIL |vector_arithmetic| |matrices|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|mmult_sub_dist| FORMULA-DECL NIL |matrix_vector_multiplication|
     |matrices|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|mmult_inf_bound| FORMULA-DECL NIL |matrix_vector_multiplication|
     |matrices|)
    (|p!1| SKOLEM-CONST-DECL "VectorN(n)" |exist_solution_lp| NIL)
    (|x| SKOLEM-CONST-DECL "VectorN(n)" |exist_solution_lp| NIL)
    (|both_sides_times_pos_ge1| FORMULA-DECL NIL |real_props| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|x| SKOLEM-CONST-DECL "VectorN(n)" |exist_solution_lp| NIL)
    (|div_cancel2| FORMULA-DECL NIL |real_props| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|both_sides_times_pos_lt1| FORMULA-DECL NIL |real_props| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|eps| SKOLEM-CONST-DECL "posreal" |exist_solution_lp| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|contD?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|contD?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|contp?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|contp?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| |matrices|)
    (|norm?| CONST-DECL "bool" |norms| |matrices|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication| |matrices|)
    (|m| SKOLEM-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (A SKOLEM-CONST-DECL "MatrixMN(m, n)" |exist_solution_lp| NIL)
    (|b| SKOLEM-CONST-DECL "VectorN(m)" |exist_solution_lp| NIL)
    (|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| |matrices|))
   SHOSTAK))
 (|existance_np_1| 0
  (|existance_np_1-3| |nil| 3742915214
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (LEMMA "extreme_value")
        (("" (EXPAND "norm_program?")
          (("" (SKEEP)
            ((""
              (INST -1
               "{vv:VectorN(n)| (sat_eq_constraint?(m, eq_constraints)(vv) AND nn(vv)<=nn(v)) AND sat_ineq_constraint?(n,ineq_constraints)(vv)}"
               "LAMBDA( u:VectorN(n)): nn(u)")
              (("1" (ASSERT)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE -2)
                      (("1" (SKEEP)
                        (("1" (HIDE -2)
                          (("1" (INST 1 "pmin")
                            (("1" (EXPAND "is_glob_minimizer?")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "pmin")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "feasible?")
                                      (("1" (SKEEP)
                                        (("1" (INST -6 "v2")
                                          (("1" (ASSERT)
                                            (("1" (INST-CP -8 "pmin")
                                              (("1" (INST-CP -8 "v2")
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (INST-CP -7 "pmin")
                                              (("2" (INST -7 "v2")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 2)
                    (("2" (ASSERT)
                      (("2" (EXPAND "contD?")
                        (("2" (SKEEP)
                          (("2" (LEMMA "contp_norm_v2r")
                            (("2"
                              (INST -1 "LAMBDA (u: VectorN(n)): nn(u)"
                               "{vv: VectorN(n) |
                      (sat_eq_constraint?(m, eq_constraints)(vv) AND
                        nn(vv) <= nn(v))
                       AND sat_ineq_constraint?(n, ineq_constraints)(vv)}"
                               "p")
                              (("2" (FLATTEN)
                                (("2" (ASSERT)
                                  (("2" (HIDE -2)
                                    (("2" (SPLIT -1)
                                      (("1" (EXPAND "contp?")
                                        (("1" (PROPAX) NIL NIL)) NIL)
                                       ("2" (HIDE 2)
                                        (("2" (EXPAND "contp?")
                                          (("2" (INST 1 "nn")
                                            (("2" (SKEEP)
                                              (("2" (LEMMA "reverse_triag")
                                                (("2" (INST 1 "eps/2")
                                                  (("2" (SKEEP)
                                                    (("2"
                                                      (INST -1 "n" "x" "p"
                                                       "nn")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (SKEEP)
                  (("2" (TYPEPRED "v") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("3" (SKEEP)
                (("3" (ASSERT)
                  (("3" (SPLIT)
                    (("1" (EXPAND "closed_domain?")
                      (("1" (SKEEP)
                        (("1" (ASSERT)
                          (("1" (SPLIT)
                            (("1" (EXPAND "sat_eq_constraint?")
                              (("1" (REPLACE -4 1)
                                (("1" (LEMMA "zero_vec0")
                                  (("1" (INST -1 "m" "mult(A, L) - b")
                                    (("1" (ASSERT)
                                      (("1" (FLATTEN)
                                        (("1" (HIDE -2)
                                          (("1" (SPLIT)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2" (TYPEPRED "norm_inf(m)")
                                              (("2" (EXPAND "norm?" -1)
                                                (("2" (FLATTEN)
                                                  (("2"
                                                    (INST -3 "mult(A, L) - b")
                                                    (("1" (ASSERT)
                                                      (("1" (HIDE -1 -2 -3)
                                                        (("1"
                                                          (LEMMA
                                                           "convergence_in_solution_set")
                                                          (("1"
                                                            (INST -1 "m" "A"
                                                             "b" "L")
                                                            (("1" (SPLIT)
                                                              (("1"
                                                                (EXPAND "mult"
                                                                        -1 1)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2"
                                                                (INST 1 "V")
                                                                (("2"
                                                                  (TYPEPRED
                                                                   "V")
                                                                  (("2" (SKEEP)
                                                                    (("2"
                                                                      (INST -1
                                                                       "i")
                                                                      (("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "sat_eq_constraint?")
                                                                          (("2"
                                                                            (LEMMA
                                                                             "zero_vec0")
                                                                            (("2"
                                                                              (REPLACE
                                                                               -8
                                                                               -2)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "m"
                                                                                   "mult(A, V(i)) - b")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (HIDE
                                                                                         -1)
                                                                                        (("1"
                                                                                          (SPLIT)
                                                                                          (("1"
                                                                                            (TYPEPRED
                                                                                             "norm_inf(m)")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "norm?")
                                                                                              (("1"
                                                                                                (FLATTEN)
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -3
                                                                                                   "mult(A, V(i)) - b")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "mult"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (TYPEPRED
                                                                                                     "mult(A, V(i)) - b"
                                                                                                     "mult(A, V(i))"
                                                                                                     "b")
                                                                                                    (("2"
                                                                                                      (HIDE
                                                                                                       -1
                                                                                                       -3
                                                                                                       -4)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (PROPAX)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (TYPEPRED
                                                                                     "mult(m, n, A, V(i)) - b"
                                                                                     "mult(m, n, A, V(i))"
                                                                                     "b")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "mult"
                                                                                         -4)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "mult"
                                                                                           -2)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "max"
                                                                                             -)
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (TYPEPRED
                                                       "mult(m,n,A, L) - b"
                                                       "mult(m,n,A, L)" "b")
                                                      (("2" (EXPAND "max" -)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "mult" -2)
                                                            (("2"
                                                              (EXPAND "mult"
                                                                      -4)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (TYPEPRED "mult(m,n,A, L) - b"
                                       "mult(m,n,A, L)" "b")
                                      (("2" (EXPAND "max" -)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND "mult" -2)
                                            (("2" (EXPAND "mult" -4)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (EXPAND "convergence?")
                                (("2" (EXPAND "convergence?")
                                  (("2" (HIDE -2 -3 -4 -5 2)
                                    (("2" (INST -1 "nn")
                                      (("2" (INST -1 "nn(L)-nn(v)")
                                        (("2" (SKEEP)
                                          (("2" (TYPEPRED "V")
                                            (("2" (INST -2 "N+1")
                                              (("2" (INST -1 "N+1")
                                                (("2" (ASSERT)
                                                  (("2" (FLATTEN)
                                                    (("2"
                                                      (LEMMA "reverse_triag")
                                                      (("2"
                                                        (INST -1 "n" "V(1+N)"
                                                         "L" "nn")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (EXPAND "sat_ineq_constraint?")
                              (("3" (REPLACE -3 1)
                                (("3" (ASSERT)
                                  (("3" (TYPEPRED "v")
                                    (("3" (ASSERT)
                                      (("3" (EXPAND "convergence?")
                                        (("3" (HIDE -1 -2 -4 -5 -6 -7 -8)
                                          (("3" (HIDE 2)
                                            (("3" (TYPEPRED "V")
                                              (("3"
                                                (EXPAND "sat_eq_constraint?")
                                                (("3"
                                                  (EXPAND
                                                   "sat_ineq_constraint?")
                                                  (("3" (EXPAND "convergence?")
                                                    (("3"
                                                      (INST -2 "norm_inf(n)")
                                                      (("3" (SKEEP)
                                                        (("3"
                                                          (INST -2
                                                           "- nth(L, i)")
                                                          (("1" (SKEEP)
                                                            (("1"
                                                              (INST -2 "N+1")
                                                              (("1"
                                                                (INST -1 "N+1")
                                                                (("1"
                                                                  (REVEAL -8)
                                                                  (("1"
                                                                    (REPLACE -1
                                                                             -2)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "norm_inf_nth_m")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "n"
                                                                             "V(1 + N) - L")
                                                                            (("1"
                                                                              (SKEEP)
                                                                              (("1"
                                                                                (LEMMA
                                                                                 "norm_inf_nth_ineq_m")
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "n"
                                                                                   "V(1 + N) - L"
                                                                                   "i")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (CASE
                                                                                          "NOT abs(nth(V(1 + N) - L, i))<-nth(L, i)")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (CASE
                                                                                            "nth(V(1 + N) - L, i) = nth(V(1+N),i) - nth(L,i)")
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1
                                                                                           -2)
                                                                                          (("1"
                                                                                            (INST
                                                                                             -8
                                                                                             "i")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "abs"
                                                                                               -2)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "nth_sum")
                                                                                            (("2"
                                                                                              (INST
                                                                                               -1
                                                                                               "V(1 + N)"
                                                                                               "-1*L")
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (SPLIT)
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "i")
                                                                                                      (("1"
                                                                                                        (LEMMA
                                                                                                         "nth_dist")
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -1
                                                                                                           "L"
                                                                                                           "-1"
                                                                                                           "i")
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -1
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (LEMMA
                                                                                                                 "sub_idx")
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -1
                                                                                                                   "V(1 + N)"
                                                                                                                   "L")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (TYPEPRED
                                                                                                     "V(1 + N)"
                                                                                                     "-1*L"
                                                                                                     "L")
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (TYPEPRED
                                                                                                 "-1*L"
                                                                                                 "L")
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (TYPEPRED
                                                                                     "V(1 + N) - L"
                                                                                     "V(1+N)"
                                                                                     "L")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "max"
                                                                                       -)
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (TYPEPRED
                                                                               "V(1 + N) - L"
                                                                               "L"
                                                                               "V(1+N)")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "max"
                                                                                   -)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (LEMMA "bounded_equiv")
                      (("2"
                        (INST -1 "{vv: VectorN(n) |
                    (sat_eq_constraint?[n](m, eq_constraints)(vv) AND
                      nn(vv) <= nn(v))
                     AND sat_ineq_constraint?[n](n, ineq_constraints)(vv)}")
                        (("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2" (HIDE -1)
                              (("2" (HIDE 2)
                                (("2" (INST 1 "nn")
                                  (("2" (EXPAND "bounded_domain?")
                                    (("2" (INST 1 "nn(v)+1")
                                      (("2" (SKEEP) (("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("3" (TYPEPRED "v")
                      (("3" (ASSERT)
                        (("3" (TYPEPRED "v")
                          (("3" (EXPAND "nonempty?" 1)
                            (("3" (EXPAND "empty?")
                              (("3" (INST -5 "v")
                                (("3" (EXPAND "member")
                                  (("3" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|listn_0| NAME-JUDGEMENT "listn[real](0)" |vector_arithmetic| |matrices|)
    (|norm_program?| CONST-DECL "bool" |exist_solution_lp| NIL)
    (|vec2real_f| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bounded_domain?| CONST-DECL "bool" |closed_bounded_domain| NIL)
    (|ineq_constraints| SKOLEM-CONST-DECL "constraints[n](n)"
     |exist_solution_lp| NIL)
    (|sat_ineq_constraint?| CONST-DECL "bool"
     |fundamentals_constrained_optimization| NIL)
    (|nn| SKOLEM-CONST-DECL "(norm?(n))" |exist_solution_lp| NIL)
    (|norm?| CONST-DECL "bool" |norms| |matrices|)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|closed_domain?| CONST-DECL "bool" |closed_bounded_domain| NIL)
    (|domain| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|v| SKOLEM-CONST-DECL "VectorN(n)" |exist_solution_lp| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|eq_constraints| SKOLEM-CONST-DECL "constraints[n](m)" |exist_solution_lp|
     NIL)
    (|m| SKOLEM-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|sat_eq_constraint?| CONST-DECL "bool"
     |fundamentals_constrained_optimization| NIL)
    (|constraints| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|VectorN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|is_glob_minimizer?| CONST-DECL "bool"
     |fundamentals_constrained_optimization| NIL)
    (|is_glob_minimizer?| CONST-DECL "bool" |unconstrained_global_extrema| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|feasible?| CONST-DECL "bool" |fundamentals_constrained_optimization| NIL)
    (|v2| SKOLEM-CONST-DECL "VectorN(n)" |exist_solution_lp| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|contp?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|contp?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|contp?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|reverse_triag| FORMULA-DECL NIL |norms| |matrices|)
    (|contp_norm_v2r| FORMULA-DECL NIL |continuity_multivar| NIL)
    (|contD?| CONST-DECL "bool" |continuity_multivar| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|bounded_equiv| FORMULA-DECL NIL |closed_bounded_domain| NIL)
    (|nnreal_plus_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|bounded_domain?| CONST-DECL "bool" |closed_bounded_domain| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|i| SKOLEM-CONST-DECL "below(n)" |exist_solution_lp| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|norm_inf_nth_m| FORMULA-DECL NIL |norms| |matrices|)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (* CONST-DECL "VectorN(length(v2))" |matrices| |matrices|)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sub_idx| FORMULA-DECL NIL |vector_arithmetic| |matrices|)
    (|nth_dist| FORMULA-DECL NIL |vector_arithmetic| |matrices|)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|nth_sum| FORMULA-DECL NIL |vector_arithmetic| |matrices|)
    (|norm_inf_nth_ineq_m| FORMULA-DECL NIL |norms| |matrices|)
    (N SKOLEM-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|convergence?| CONST-DECL "bool" |vector_sequences| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|convergence?| CONST-DECL "bool" |vector_sequences| NIL)
    (|zero_vec0| FORMULA-DECL NIL |vector_arithmetic| |matrices|)
    (|norm_inf| CONST-DECL "(norm?(m))" |norms| |matrices|)
    (|convergence_in_solution_set| FORMULA-DECL NIL |exist_solution_lp| NIL)
    (|mult| CONST-DECL "VectorN(m)" |matrix_vector_multiplication| |matrices|)
    (|i| SKOLEM-CONST-DECL "nat" |exist_solution_lp| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (V SKOLEM-CONST-DECL "{VV: vec_seq[n](n) |
   FORALL (i: nat):
     (sat_eq_constraint?[n](m, eq_constraints)(VV(i)) AND
       nn(VV(i)) <= nn(v))
      AND sat_ineq_constraint?[n](n, ineq_constraints)(VV(i))}"
     |exist_solution_lp| NIL)
    (|vec_seq| TYPE-EQ-DECL NIL |domain_vec2real_def| NIL)
    (|Vector| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (- CONST-DECL "VectorN(max(length(v1), length(v2)))" |matrices| |matrices|)
    (|Matrix| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (|mult| DEF-DECL "Vector" |matrix_vector_multiplication| |matrices|)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|MatrixMN| TYPE-EQ-DECL NIL |matrices| |matrices|)
    (A SKOLEM-CONST-DECL "MatrixMN(m, n)" |exist_solution_lp| NIL)
    (L SKOLEM-CONST-DECL "VectorN(n)" |exist_solution_lp| NIL)
    (|b| SKOLEM-CONST-DECL "VectorN(m)" |exist_solution_lp| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |exist_solution_lp| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|extreme_value| FORMULA-DECL NIL |extreme_value_theorem| NIL))
   NIL)
  (|existance_np_1-2| |nil| 3742915083
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (LEMMA "extreme_value")
        (("" (EXPAND "norm_program?")
          (("" (SKEEP)
            ((""
              (INST -1
               "{vv:VectorN(n)| (sat_eq_constraint?(m, eq_constraints)(vv) AND nn(vv)<=nn(v)) AND sat_ineq_constraint?(m,ineq_constraints)(vv)}"
               "LAMBDA( u:VectorN(n)): nn(u)")
              (("1" (ASSERT)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE -2)
                      (("1" (SKEEP)
                        (("1" (HIDE -2)
                          (("1" (INST 1 "pmin")
                            (("1" (EXPAND "is_glob_minimizer?")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "pmin")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "feasible?")
                                      (("1" (POSTPONE) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (POSTPONE) NIL NIL))
                  NIL))
                NIL)
               ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)
               ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL)
               ("6" (POSTPONE) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|existance_np_1-1| |nil| 3742914693
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (LEMMA "extreme_value")
        (("" (EXPAND "norm_program?")
          (("" (SKEEP)
            ((""
              (INST -1
               "{vv:VectorN(n)| sat_eq_constraint?(m, eq_constraints)(vv) AND nn(vv)<=nn(v)}"
               "LAMBDA( u:VectorN(n)): nn(u)")
              (("1" (ASSERT)
                (("1" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE -2)
                      (("1" (SKEEP)
                        (("1" (HIDE -2)
                          (("1" (INST 1 "pmin")
                            (("1" (EXPAND "is_glob_minimizer?")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "pmin")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "feasible?")
                                      (("1" (EXPAND "sat_ineq_constraint?")
                                        (("1" (POSTPONE) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (POSTPONE) NIL NIL))
                  NIL))
                NIL)
               ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)
               ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

