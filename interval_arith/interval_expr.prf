(|interval_expr|
 (|r2E_TCC1| 0
  (|r2E_TCC1-1| |nil| 3576786010 ("" (SUBTYPE-TCC) NIL NIL) (NIL NIL NIL) NIL
   (|r2E| SUBTYPE "[|interval_expr.r|]"
    "(interval.Includes?(interval_expr.r))")))
 (I2E_TCC1 0
  (I2E_TCC1-1 |nil| 3576786010 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (I2E SUBTYPE "interval_expr.X"
    "(interval.Includes?(interval.midpoint(interval_expr.X)))")))
 (|PreTrue_TCC1| 0
  (|PreTrue_TCC1-1| |nil| 3577184980 ("" (SUBTYPE-TCC) NIL NIL) (NIL) NIL
   (|PreTrue| SUBTYPE "LAMBDA (X: interval.Interval): booleans.TRUE"
    "(interval.Precondition?)")))
 (|real_bool_expr| 0
  (|real_bool_expr-1| |nil| 3577460822 ("" (GRIND) NIL NIL) (NIL NIL) SHOSTAK))
 (|eval_TCC1| 0
  (|eval_TCC1-1| |nil| 3546625295
   ("" (LEMMA "well_founded_restrict[IntervalExpr,RealExpr]")
    (("" (INST?) (("" (EXPAND "well_founded?") (("" (PROPAX) NIL NIL)) NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   NIL
   (|eval| WELL-FOUNDED
    "restrict[[IntervalExpr_adt.IntervalExpr, IntervalExpr_adt.IntervalExpr], [RealExpr, RealExpr], bool].restrict(IntervalExpr_adt.<<)"
    "NIL")))
 (|eval_TCC2| 0
  (|eval_TCC2-1| |nil| 3546625295 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC3| 0
  (|eval_TCC3-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC4| 0
  (|eval_TCC4-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC5| 0
  (|eval_TCC5-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|eval_TCC6| 0
  (|eval_TCC6-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC7| 0
  (|eval_TCC7-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|eval_TCC8| 0
  (|eval_TCC8-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC9| 0
  (|eval_TCC9-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC10| 0
  (|eval_TCC10-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC11| 0
  (|eval_TCC11-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC12| 0
  (|eval_TCC12-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC13| 0
  (|eval_TCC13-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC14| 0
  (|eval_TCC14-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC15| 0
  (|eval_TCC15-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|eval_TCC16| 0
  (|eval_TCC16-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC17| 0
  (|eval_TCC17-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|eval_TCC18| 0
  (|eval_TCC18-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC19| 0
  (|eval_TCC19-1| |nil| 3546625295 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|eval| SUBTYPE "IntervalExpr_adt.opn(interval_expr.expr)"
    "{i: integers.int | booleans.OR(interval_expr.eval(IntervalExpr_adt.op(interval_expr.expr), interval_expr.vs, interval_expr.n) /= 0, reals.>=(i, 0))}")))
 (|eval_TCC20| 0
  (|eval_TCC20-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC21| 0
  (|eval_TCC21-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC22| 0
  (|eval_TCC22-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC23| 0
  (|eval_TCC23-1| |nil| 3546625295 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|eval| SUBTYPE
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "nznum")))
 (|eval_TCC24| 0
  (|eval_TCC24-1| |nil| 3546625295 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC25| 0
  (|eval_TCC25-1| |nil| 3546710894 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC26| 0
  (|eval_TCC26-1| |nil| 3546710894 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|eval_TCC27| 0
  (|eval_TCC27-1| |nil| 3568989877 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC28| 0
  (|eval_TCC28-1| |nil| 3580034334 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC29| 0
  (|eval_TCC29-1| |nil| 3580034334 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC30| 0
  (|eval_TCC30-1| |nil| 3580034334 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC31| 0
  (|eval_TCC31-1| |nil| 3580034334 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|eval_TCC32| 0
  (|eval_TCC32-1| |nil| 3679234752 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC33| 0
  (|eval_TCC33-1| |nil| 3679234752 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op2(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC34| 0
  (|eval_TCC34-1| |nil| 3679234752 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op3(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC35| 0
  (|eval_TCC35-1| |nil| 3684336541 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.op4(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|eval_TCC36| 0
  (|eval_TCC36-1| |nil| 3684336541 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL (|eval| SUBTYPE "interval_expr.expr" "(IntervalExpr_adt.letin?)")))
 (|eval_TCC37| 0
  (|eval_TCC37-1| |nil| 3684336541 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.rin(interval_expr.expr), interval_expr.vs WITH [`n := interval_expr.rlet], (number_fields.+)(interval_expr.n, 1))"
    "NIL")))
 (|eval_TCC38| 0
  (|eval_TCC38-1| |nil| 3684336541 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL (|eval| SUBTYPE "interval_expr.expr" "(IntervalExpr_adt.letin?)")))
 (|eval_TCC39| 0
  (|eval_TCC39-1| |nil| 3684336541 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|eval| TERMINATION
    "interval_expr.eval(IntervalExpr_adt.rlet(interval_expr.expr), interval_expr.vs, interval_expr.n)"
    "NIL")))
 (|Eval_TCC1| 0
  (|Eval_TCC1-1| |nil| 3546624714 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   NIL
   (|Eval| SUBTYPE "IntervalExpr_adt.varidx(interval_expr.expr)"
    "below[length[Interval](box)]")))
 (|Eval_TCC2| 0
  (|Eval_TCC2-1| |nil| 3546624714 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|Eval| TERMINATION
    "interval_expr.Eval(IntervalExpr_adt.op1(interval_expr.expr), interval_expr.box)"
    "NIL")))
 (|Eval_TCC3| 0
  (|Eval_TCC3-1| |nil| 3580034334 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|Eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr | booleans.OR(IntervalExpr_adt.fun4?(x), IntervalExpr_adt.fun2?(x))}")))
 (|Eval_TCC4| 0
  (|Eval_TCC4-1| |nil| 3684336541 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|Eval| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr | booleans.OR(IntervalExpr_adt.fun4?(x), IntervalExpr_adt.fun2?(x))}")))
 (|Eval_TCC5| 0
  (|Eval_TCC5-1| |nil| 3684336541 ("" (TERMINATION-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL)
   NIL
   (|Eval| TERMINATION
    "interval_expr.Eval(IntervalExpr_adt.rin(interval_expr.expr), list_props[Interval].append(interval_expr.box, (: interval_expr.rlet :)))"
    "NIL")))
 (|well_typed?_TCC1| 0
  (|well_typed?_TCC1-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|well_typed?_TCC2| 0
  (|well_typed?_TCC2-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|well_typed?_TCC3| 0
  (|well_typed?_TCC3-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|well_typed?_TCC4| 0
  (|well_typed?_TCC4-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|well_typed?_TCC5| 0
  (|well_typed?_TCC5-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|well_typed?_TCC6| 0
  (|well_typed?_TCC6-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|well_typed?_TCC7| 0
  (|well_typed?_TCC7-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|well_typed?_TCC8| 0
  (|well_typed?_TCC8-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|well_typed?_TCC9| 0
  (|well_typed?_TCC9-1| |nil| 3576776063 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.bincludes?(x) OR IntervalExpr_adt.fun?(x) OR IntervalExpr_adt.pow?(x) OR IntervalExpr_adt.sq?(x) OR IntervalExpr_adt.neg?(x) OR IntervalExpr_adt.abs?(x)}")))
 (|well_typed?_TCC10| 0
  (|well_typed?_TCC10-1| |nil| 3683827037 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|well_typed?_TCC11| 0
  (|well_typed?_TCC11-1| |nil| 3684336541 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr | booleans.OR(IntervalExpr_adt.fun4?(x), IntervalExpr_adt.fun2?(x))}")))
 (|well_typed?_TCC12| 0
  (|well_typed?_TCC12-1| |nil| 3684336541 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr |      IntervalExpr_adt.brel?(x) OR IntervalExpr_adt.fun4?(x) OR IntervalExpr_adt.fun2?(x) OR IntervalExpr_adt.div?(x) OR IntervalExpr_adt.mult?(x) OR IntervalExpr_adt.sub?(x) OR IntervalExpr_adt.add?(x)}")))
 (|well_typed?_TCC13| 0
  (|well_typed?_TCC13-1| |nil| 3684336541 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL
   (|well_typed?| SUBTYPE "interval_expr.expr"
    "{x: IntervalExpr_adt.IntervalExpr | booleans.OR(IntervalExpr_adt.fun4?(x), IntervalExpr_adt.fun2?(x))}")))
 (|Proper_well_typed| 0
  (|Proper_well_typed-2| |nil| 3580040755
   (""
    (DEFTACTIC BINOP
     (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (REPLACES -) (FLATTEN)
      (SKEEP) (INSTEEP) (INSTEEP) (EXPAND "well_typed?" 1) (EXPAND "Eval" -3)
      (BRANCH (CASE "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))")
       ((THEN (FLATTEN) (ASSERT))
        (THEN (HIDE-ALL-BUT (-3 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
    ((""
      (DEFTACTIC UNOP
       (THEN (SKOLEM 1 "r1" :SKOLEM-TYPEPREDS? T) (REPLACES -1) (FLATTEN)
        (SKEEP) (INSTEEP -) (INSTEEP -) (EXPAND "well_typed?" 1)
        (EXPAND "Eval" -2)
        (BRANCH (CASE "Proper?(Eval(r1, box))")
         ((THEN (FLATTEN) (ASSERT))
          (THEN (HIDE-ALL-BUT (-2 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
      (("" (INDUCT "expr")
        (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (SKEEP)
          (("2" (HIDE -1)
            (("2" (EXPAND "well_typed?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (HIDE -1)
            (("3" (SKEEP)
              (("3" (EXPAND "well_typed?")
                (("3" (EXPAND "Proper?")
                  (("3" (EXPAND "Eval" -1)
                    (("3" (ASSERT) (("3" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (BINOP) NIL NIL) ("5" (UNOP) NIL NIL)
         ("6" (UNOP) (("6" (GRIND) NIL NIL)) NIL) ("7" (BINOP) NIL NIL)
         ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
         ("10" (SKOLEM 1 (_ "n")) (("10" (UNOP) NIL NIL)) NIL)
         ("11" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("11" (REPLACES -)
            (("11" (FLATTEN)
              (("11" (SKEEP)
                (("11" (INSTEEP)
                  (("11" (INSTEEP)
                    (("11" (EXPAND "well_typed?" 1)
                      (("11" (EXPAND "Eval" -3)
                        (("11"
                          (CASE
                              "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box)) AND Zeroless?(Eval(r2,box))")
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (HIDE-ALL-BUT (-3 1))
                            (("2" (LEMMA "Proper_NonEmpty")
                              (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("12" (SKOLEM 1 ("Pre" "f" "F" _))
          (("12" (SKOLEM 1 "r1" :SKOLEM-TYPEPREDS? T)
            (("12" (REPLACES -1)
              (("12" (FLATTEN)
                (("12" (SKEEP)
                  (("12" (INSTEEP)
                    (("12" (EXPAND "well_typed?" 1)
                      (("12" (EXPAND "Eval" -2)
                        (("12"
                          (CASE
                              "Proper?(Eval(r1, box)) AND Pre(Eval(r1, box))")
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (HIDE-ALL-BUT (-2 1))
                            (("2" (LEMMA "Proper_NonEmpty")
                              (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("13" (SKOLEM 1 ("Pre" "pre2" "f" "F" _ _))
          (("13" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("13" (REPLACES -1)
              (("13" (REPLACES -1)
                (("13" (FLATTEN)
                  (("13" (SKEEP)
                    (("13" (INSTEEP)
                      (("13" (INSTEEP)
                        (("13" (EXPAND "well_typed?" 1)
                          (("13" (EXPAND "Eval" -3)
                            (("13"
                              (CASE "Proper?(Eval(r1, box)) AND
          Proper?(Eval(r2, box)) AND
           Pre(Eval(r1, box)) AND pre2(Eval(r1, box), Eval(r2, box))")
                              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (HIDE-ALL-BUT (-3 1))
                                (("2" (LEMMA "Proper_NonEmpty")
                                  (("2" (GROUND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("14" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("14" (REPLACES -)
            (("14" (FLATTEN)
              (("14" (SKEEP)
                (("14" (INSTEEP)
                  (("14" (EXPAND "well_typed?" 1)
                    (("14" (EXPAND "Eval" -3)
                      (("14" (CASE-REPLACE "Proper?(Eval(r1, box))")
                        (("1" (ASSERT)
                          (("1" (INST? -3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                         ("2" (HIDE-ALL-BUT (-3 1))
                          (("2" (LEMMA "Proper_NonEmpty")
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("15" (ASSERT) NIL NIL) ("16" (ASSERT) NIL NIL)
         ("17" (ASSERT) NIL NIL) ("18" (ASSERT) NIL NIL)
         ("19" (ASSERT) NIL NIL) ("20" (ASSERT) NIL NIL)
         ("21" (ASSERT) NIL NIL) ("22" (ASSERT) NIL NIL)
         ("23" (ASSERT) NIL NIL)
         ("24" (SKOLEM 1 ("Pre" "pre2" "pre3" "pre4" "f" "F" _ _ _ _))
          (("24" (SKOLEM 1 ("r1" "r2" "r3" "r4") :SKOLEM-TYPEPREDS? T)
            (("24" (REPLACES -1)
              (("24" (REPLACES -1)
                (("24" (REPLACES -1)
                  (("24" (REPLACES -1)
                    (("24" (FLATTEN)
                      (("24" (SKEEP)
                        (("24" (INSTEEP)
                          (("24" (INSTEEP)
                            (("24" (INSTEEP)
                              (("24" (INSTEEP)
                                (("24" (EXPAND "well_typed?" 1)
                                  (("24" (EXPAND "Eval" -5)
                                    (("24" (INVOKE (CASE "%1") (! -5 1))
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT (-5 1))
                                        (("2" (LEMMA "Proper_NonEmpty")
                                          (("2" (GROUND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL)
  (|Proper_well_typed-1| |nil| 3580040577
   (""
    (DEFTACTIC BINOP
     (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (REPLACES -) (FLATTEN)
      (SKEEP) (INSTEEP -) (INSTEEP -) (EXPAND "well_typed?" 1)
      (EXPAND "Eval" -3)
      (BRANCH (CASE "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))")
       ((THEN (FLATTEN) (ASSERT))
        (THEN (HIDE-ALL-BUT (-3 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
    ((""
      (DEFTACTIC UNOP
       (THEN (SKOLEM 1 "r1" :SKOLEM-TYPEPREDS? T) (REPLACES -1) (FLATTEN)
        (SKEEP) (INSTEEP -) (INSTEEP -) (EXPAND "well_typed?" 1)
        (EXPAND "Eval" -2)
        (BRANCH (CASE "Proper?(Eval(r1, box))")
         ((THEN (FLATTEN) (ASSERT))
          (THEN (HIDE-ALL-BUT (-2 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
      (("" (INDUCT "expr")
        (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (SKEEP)
          (("2" (HIDE -1)
            (("2" (EXPAND "well_typed?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (HIDE -1)
            (("3" (SKEEP)
              (("3" (EXPAND "well_typed?")
                (("3" (EXPAND "Proper?")
                  (("3" (EXPAND "Eval" -1)
                    (("3" (ASSERT) (("3" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (BINOP) NIL NIL) ("5" (UNOP) NIL NIL)
         ("6" (UNOP) (("6" (GRIND) NIL NIL)) NIL) ("7" (BINOP) NIL NIL)
         ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
         ("10" (SKOLEM 1 (_ "n")) (("10" (UNOP) NIL NIL)) NIL)
         ("11" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("11" (REPLACES -)
            (("11" (FLATTEN)
              (("11" (SKEEP)
                (("11" (INSTEEP)
                  (("11" (INSTEEP)
                    (("11" (EXPAND "well_typed?" 1)
                      (("11" (EXPAND "Eval" -3)
                        (("11"
                          (CASE
                              "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box)) AND Zeroless?(Eval(r2,box))")
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (HIDE-ALL-BUT (-3 1))
                            (("2" (LEMMA "Proper_NonEmpty")
                              (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("12" (SKOLEM 1 ("Pre" "f" "F" _))
          (("12" (SKOLEM 1 "r1" :SKOLEM-TYPEPREDS? T)
            (("12" (REPLACES -1)
              (("12" (FLATTEN)
                (("12" (SKEEP)
                  (("12" (INSTEEP)
                    (("12" (EXPAND "well_typed?" 1)
                      (("12" (EXPAND "Eval" -2)
                        (("12"
                          (CASE
                              "Proper?(Eval(r1, box)) AND Pre(Eval(r1, box))")
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (HIDE-ALL-BUT (-2 1))
                            (("2" (LEMMA "Proper_NonEmpty")
                              (("2" (GROUND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("13" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("13" (REPLACES -)
            (("13" (FLATTEN) (("13" (SKEEP) (("13" (POSTPONE) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("14" (ASSERT) NIL NIL) ("15" (ASSERT) NIL NIL)
         ("16" (ASSERT) NIL NIL) ("17" (ASSERT) NIL NIL)
         ("18" (ASSERT) NIL NIL) ("19" (ASSERT) NIL NIL)
         ("20" (ASSERT) NIL NIL) ("21" (ASSERT) NIL NIL)
         ("22" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL)
  (|Proper_well_typed-4| |nil| 3576784677
   (""
    (DEFTACTIC BINOP
     (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (REPLACES -) (FLATTEN)
      (EXPAND "well_typed?" 1) (EXPAND "Eval" -3)
      (BRANCH (CASE "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))")
       ((THEN (FLATTEN) (ASSERT))
        (THEN (HIDE-ALL-BUT (-3 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
    ((""
      (DEFTACTIC UNOP
       (THEN (SKOLEM 1 "r1" :SKOLEM-TYPEPREDS? T) (REPLACES -1) (FLATTEN)
        (EXPAND "well_typed?" 1) (EXPAND "Eval" -2)
        (BRANCH (CASE "Proper?(Eval(r1, box))")
         ((THEN (FLATTEN) (ASSERT))
          (THEN (HIDE-ALL-BUT (-2 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
      (("" (SKEEP :BUT "expr")
        (("" (INDUCT "expr")
          (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (SKEEP)
            (("2" (HIDE -1)
              (("2" (EXPAND "well_typed?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
            NIL)
           ("3" (SKEEP)
            (("3" (HIDE -1)
              (("3" (EXPAND "well_typed?")
                (("3" (EXPAND "Proper?")
                  (("3" (EXPAND "Eval" -1)
                    (("3" (ASSERT) (("3" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("4" (BINOP) NIL NIL) ("5" (UNOP) NIL NIL)
           ("6" (UNOP) (("6" (GRIND) NIL NIL)) NIL) ("7" (BINOP) NIL NIL)
           ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
           ("10" (SKOLEM 1 (_ "n")) (("10" (UNOP) NIL NIL)) NIL)
           ("11" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("11" (REPLACES -)
              (("11" (FLATTEN)
                (("11" (EXPAND "well_typed?" 1)
                  (("11" (EXPAND "Eval" -3)
                    (("11"
                      (CASE
                          "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box)) AND Zeroless?(Eval(r2,box))")
                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (HIDE-ALL-BUT (-3 1))
                        (("2" (LEMMA "Proper_NonEmpty")
                          (("2" (GROUND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("12" (SKOLEM 1 ("Pre" "f" "F" _))
            (("12" (SKOLEM 1 "r1" :SKOLEM-TYPEPREDS? T)
              (("12" (REPLACES -1)
                (("12" (FLATTEN)
                  (("12" (EXPAND "well_typed?" 1)
                    (("12" (EXPAND "Eval" -2)
                      (("12"
                        (CASE "Proper?(Eval(r1, box)) AND Pre(Eval(r1, box))")
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (HIDE-ALL-BUT (-2 1))
                          (("2" (LEMMA "Proper_NonEmpty")
                            (("2" (GROUND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("13" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("13" (REPLACES -)
              (("13" (FLATTEN) (("13" (POSTPONE) NIL NIL)) NIL)) NIL))
            NIL)
           ("14" (ASSERT) NIL NIL) ("15" (ASSERT) NIL NIL)
           ("16" (ASSERT) NIL NIL) ("17" (ASSERT) NIL NIL)
           ("18" (ASSERT) NIL NIL) ("19" (ASSERT) NIL NIL)
           ("20" (ASSERT) NIL NIL) ("21" (ASSERT) NIL NIL)
           ("22" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|Eval_inclusion| 0
  (|Eval_inclusion-1| |nil| 3580041393
   (""
    (DEFTACTIC BINOP
     (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (FLATTEN)
      (REPLACES (-1 -2)) (SKEEP) (INSTEEP) (INSTEEP) (EXPAND "well_typed?" -3)
      (FLATTEN) (ASSERT) (EXPAND "eval" 1) (EXPAND "Eval" 1)
      (LEMMA "Member_Proper") (COPY -1) (INST? -1 :WHERE -3)
      (INST? -2 :WHERE -4) (ASSERT)
      (LET ((LM
             (FORMAT NIL "~a_inclusion" (OPERATOR (EXTRA-GET-EXPR '(! 1 R))))))
        (REWRITE LM))))
    ((""
      (DEFTACTIC UNOP
       (THEN (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T) (FLATTEN) (REPLACES -1)
        (SKEEP) (INSTEEP) (INSTEEP) (EXPAND "well_typed?" -2) (FLATTEN)
        (ASSERT) (EXPAND "eval" 1) (EXPAND "Eval" 1) (LEMMA "Member_Proper")
        (INST? -1 :WHERE -2) (ASSERT)
        (LET ((LM
               (FORMAT NIL "~a_inclusion"
                       (OPERATOR (EXTRA-GET-EXPR '(! 1 R))))))
          (REWRITE LM))))
      (("" (INDUCT "expr")
        (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (SKEEP :PREDS? T)
          (("2" (HIDE -2)
            (("2" (SKEEP)
              (("2" (EXPAND* "Eval" "eval")
                (("2" (EXPAND "Includes?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (HIDE -1)
            (("3" (SKEEP)
              (("3" (EXPAND* "Eval" "eval" "well_typed?")
                (("3" (ASSERT)
                  (("3" (TYPEPRED "vs")
                    (("3" (EXPAND "vars_in_box?") (("3" (INST? -1) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (BINOP) NIL NIL) ("5" (UNOP) NIL NIL) ("6" (UNOP) NIL NIL)
         ("7" (BINOP) NIL NIL) ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
         ("10" (SKOLEM 1 (_ "n")) (("10" (UNOP) NIL NIL)) NIL)
         ("11" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("11" (FLATTEN)
            (("11" (REPLACES (-1 -2))
              (("11" (SKEEP)
                (("11" (INSTEEP)
                  (("11" (INSTEEP)
                    (("11" (EXPAND "well_typed?" -3)
                      (("11" (FLATTEN)
                        (("11" (ASSERT)
                          (("11" (EXPAND "eval" 1)
                            (("11" (EXPAND "Eval" 1)
                              (("11" (LEMMA "Member_Proper")
                                (("11" (COPY -1)
                                  (("11" (INST? -1 :WHERE -3)
                                    (("11" (INST? -2 :WHERE -4)
                                      (("11" (ASSERT)
                                        (("11" (LIFT-IF)
                                          (("11" (SPLIT 1)
                                            (("1" (FLATTEN)
                                              (("1" (REPLACES -1)
                                                (("1" (HIDE-ALL-BUT (-2 -4 -7))
                                                  (("1" (GRIND :EXCLUDE "Eval")
                                                    NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (FLATTEN)
                                              (("2" (REWRITE "Div_inclusion")
                                                NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("12" (SKOLEM 1 ("Pre" "f" "F" _))
          (("12" (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T)
            (("12" (FLATTEN)
              (("12" (REPLACES -1)
                (("12" (SKEEP)
                  (("12" (INSTEEP)
                    (("12" (EXPAND "well_typed?" -2)
                      (("12" (FLATTEN)
                        (("12" (ASSERT)
                          (("12" (LEMMA "Member_Proper")
                            (("12" (INST? -1 :WHERE -2)
                              (("12" (ASSERT)
                                (("12" (EXPAND "eval" 1)
                                  (("12" (EXPAND "Eval" 1)
                                    (("12" (TYPEPRED "F")
                                      (("12" (EXPAND "Inclusion?")
                                        (("12" (INST? -1)
                                          (("12" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("13" (SKOLEM 1 ("Pre1" "Pre2" "f" "F" _ _))
          (("13" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("13" (FLATTEN)
              (("13" (REPLACES -1)
                (("13" (REPLACES -1)
                  (("13" (SKEEP)
                    (("13" (INSTEEP)
                      (("13" (INSTEEP)
                        (("13" (EXPAND "well_typed?" -3)
                          (("13" (FLATTEN)
                            (("13" (ASSERT)
                              (("13" (LEMMA "Member_Proper")
                                (("13" (INST? -1 :WHERE -2)
                                  (("13" (LEMMA "Member_Proper")
                                    (("13" (INST? -1 :WHERE -4)
                                      (("13" (ASSERT)
                                        (("13" (EXPAND "eval" 1)
                                          (("13" (EXPAND "Eval" 1)
                                            (("13" (TYPEPRED "F")
                                              (("13" (EXPAND "Inclusion2?")
                                                (("13" (INST? -1)
                                                  (("13" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("14" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("14" (FLATTEN)
            (("14" (REPLACES -)
              (("14" (SKEEP)
                (("14" (INSTEEP -)
                  (("14" (EXPAND "well_typed?" -3)
                    (("14" (FLATTEN)
                      (("14" (ASSERT)
                        (("14" (EXPAND "eval" 1)
                          (("14" (EXPAND "Eval" 1)
                            (("14" (INST? - :WHERE -4)
                              (("14" (ASSERT)
                                (("14" (REWRITE "length_append")
                                  (("14" (CASE-REPLACE "Proper?(Eval(r1,box))")
                                    (("1" (INST? -)
                                      (("1" (HIDE 2)
                                        (("1" (EXPAND "vars_in_box?")
                                          (("1" (SKEEP)
                                            (("1"
                                              (CASE-REPLACE "i=length(box)")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (REWRITE
                                                   "nth_append[Interval]")
                                                  (("1" (EXPAND "nth")
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2"
                                                  (REWRITE
                                                   "nth_append[Interval]")
                                                  (("1" (TYPEPRED "i")
                                                    (("1"
                                                      (REWRITE "length_append")
                                                      (("1" (ASSERT)
                                                        (("1" (TYPEPRED "vs")
                                                          (("1"
                                                            (EXPAND
                                                             "vars_in_box?")
                                                            (("1" (INSTEEP) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (TYPEPRED "i")
                                                    (("2"
                                                      (REWRITE "length_append")
                                                      NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (HIDE-ALL-BUT (-1 1))
                                        (("2" (GRIND :EXCLUDE "Eval") NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("15" (ASSERT) NIL NIL) ("16" (ASSERT) NIL NIL)
         ("17" (ASSERT) NIL NIL) ("18" (ASSERT) NIL NIL)
         ("19" (ASSERT) NIL NIL) ("20" (ASSERT) NIL NIL)
         ("21" (ASSERT) NIL NIL) ("22" (ASSERT) NIL NIL)
         ("23" (ASSERT) NIL NIL)
         ("24" (SKOLEM 1 ("Pre1" "Pre2" "Pre3" "Pre4" "f" "F" _ _ _ _))
          (("24" (SKOLEM 1 ("r1" "r2" "r3" "r4") :SKOLEM-TYPEPREDS? T)
            (("24" (FLATTEN)
              (("24" (REPLACES -1)
                (("24" (REPLACES -1)
                  (("24" (REPLACES -1)
                    (("24" (REPLACES -1)
                      (("24" (SKEEP)
                        (("24" (INSTEEP)
                          (("24" (INSTEEP)
                            (("24" (INSTEEP)
                              (("24" (INSTEEP)
                                (("24" (EXPAND "well_typed?" -5)
                                  (("24" (FLATTEN)
                                    (("24" (ASSERT)
                                      (("24" (LEMMA "Member_Proper")
                                        (("24" (INST? -1 :WHERE -2)
                                          (("24" (LEMMA "Member_Proper")
                                            (("24"
                                              (INST? -1 :WHERE -4 :COPY? T)
                                              (("24"
                                                (INST? -1 :WHERE -6 :COPY? T)
                                                (("24" (INST? -1 :WHERE -8)
                                                  (("24" (ASSERT)
                                                    (("24" (EXPAND "eval" 1)
                                                      (("24" (EXPAND "Eval" 1)
                                                        (("24" (TYPEPRED "F")
                                                          (("24"
                                                            (EXPAND
                                                             "Inclusion4?")
                                                            (("24" (INST? -1)
                                                              (("24" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL)
  (|Eval_inclusion-4| |nil| 3576777542
   ("" (SKEEP)
    ((""
      (DEFTACTIC BINOP
       (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (FLATTEN)
        (REPLACES (-1 -2)) (EXPAND "well_typed?" -3) (FLATTEN) (ASSERT)
        (EXPAND "eval" 1) (EXPAND "Eval" 1) (LEMMA "Member_Proper") (COPY -1)
        (INST? -1 :WHERE -3) (INST? -2 :WHERE -4) (ASSERT)
        (LET ((LM
               (FORMAT NIL "~a_inclusion"
                       (OPERATOR (EXTRA-GET-EXPR '(! 1 R))))))
          (REWRITE LM))))
      ((""
        (DEFTACTIC UNOP
         (THEN (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T) (FLATTEN) (REPLACES -1)
          (EXPAND "well_typed?" -2) (FLATTEN) (ASSERT) (EXPAND "eval" 1)
          (EXPAND "Eval" 1) (LEMMA "Member_Proper") (INST? -1 :WHERE -2)
          (ASSERT)
          (LET ((LM
                 (FORMAT NIL "~a_inclusion"
                         (OPERATOR (EXTRA-GET-EXPR '(! 1 R))))))
            (REWRITE LM))))
        (("" (INDUCT "expr")
          (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (SKEEP :PREDS? T)
            (("2" (HIDE -2)
              (("2" (EXPAND* "Eval" "eval")
                (("2" (EXPAND "Includes?") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("3" (SKEEP)
            (("3" (HIDE -1)
              (("3" (EXPAND* "Eval" "eval" "well_typed?")
                (("3" (ASSERT)
                  (("3" (TYPEPRED "vs")
                    (("3" (EXPAND "vars_in_box?") (("3" (INST? -1) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("4" (BINOP) NIL NIL) ("5" (UNOP) NIL NIL) ("6" (UNOP) NIL NIL)
           ("7" (BINOP) NIL NIL) ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
           ("10" (SKOLEM 1 (_ "n")) (("10" (UNOP) NIL NIL)) NIL)
           ("11" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("11" (FLATTEN)
              (("11" (REPLACES (-1 -2))
                (("11" (EXPAND "well_typed?" -3)
                  (("11" (FLATTEN)
                    (("11" (ASSERT)
                      (("11" (EXPAND "eval" 1)
                        (("11" (EXPAND "Eval" 1)
                          (("11" (LEMMA "Member_Proper")
                            (("11" (COPY -1)
                              (("11" (INST? -1 :WHERE -3)
                                (("11" (INST? -2 :WHERE -4)
                                  (("11" (ASSERT)
                                    (("11" (LIFT-IF)
                                      (("11" (SPLIT 1)
                                        (("1" (FLATTEN)
                                          (("1" (REPLACES -1)
                                            (("1" (HIDE-ALL-BUT (-2 -4 -7))
                                              (("1" (GRIND :EXCLUDE "Eval") NIL
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (REWRITE "Div_inclusion") NIL
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("12" (SKOLEM 1 ("Pre" "f" "F" _))
            (("12" (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T)
              (("12" (FLATTEN)
                (("12" (REPLACES -1)
                  (("12" (EXPAND "well_typed?" -2)
                    (("12" (FLATTEN)
                      (("12" (ASSERT)
                        (("12" (LEMMA "Member_Proper")
                          (("12" (INST? -1 :WHERE -2)
                            (("12" (ASSERT)
                              (("12" (EXPAND "eval" 1)
                                (("12" (EXPAND "Eval" 1)
                                  (("12" (TYPEPRED "F")
                                    (("12" (EXPAND "Inclusion?")
                                      (("12" (INST? -1)
                                        (("12" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("13" (ASSERT) NIL NIL) ("14" (ASSERT) NIL NIL)
           ("15" (ASSERT) NIL NIL) ("16" (ASSERT) NIL NIL)
           ("17" (ASSERT) NIL NIL) ("18" (ASSERT) NIL NIL)
           ("19" (ASSERT) NIL NIL) ("20" (ASSERT) NIL NIL)
           ("21" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL))
 (|Eval_inclusion_Proper| 0
  (|Eval_inclusion_Proper-1| |nil| 3576776063
   ("" (SKEEP*)
    (("" (BETA)
      (("" (FLATTEN)
        (("" (LEMMA "Proper_well_typed")
          (("" (INST?)
            (("" (ASSERT)
              (("" (LEMMA "Eval_inclusion")
                (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL))
 (|well_typed_Proper| 0
  (|well_typed_Proper-1| |nil| 3576777667
   ("" (SKEEP)
    (("" (LEMMA "Eval_inclusion")
      (("" (INST? -1)
        (("" (INST -1 "midvars(pox)")
          (("" (ASSERT)
            (("" (LEMMA "Member_Proper")
              (("" (INST? -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|Eval_fundamental_aux| 0
  (|Eval_fundamental_aux-3| "test" 3580046533
   (""
    (DEFTACTIC BINOP
     (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (FLATTEN)
      (REPLACES (-1 -2)) (SKEEP) (INSTEEP) (INSTEEP) (ASSERT)
      (EXPAND "well_typed?" -4) (LABEL "PP" -5) (FLATTEN) (ASSERT)
      (EXPAND "Eval" ("PP" 1))
      (BRANCH (CASE "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))")
       ((THEN (FLATTEN) (ASSERT) (LEMMA "Incl_Proper") (COPY -1)
         (INST? -1 :WHERE -5) (INST? -2 :WHERE -6) (ASSERT)
         (LET ((LM
                (FORMAT NIL "~a_fundamental"
                        (OPERATOR (EXTRA-GET-EXPR '(! 1 R))))))
           (REWRITE LM)))
        (THEN (HIDE-ALL-BUT ("PP" 1)) (LEMMA "Proper_NonEmpty") (GROUND))))))
    ((""
      (DEFTACTIC UNOP
       (THEN (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T) (FLATTEN) (REPLACES -1)
        (SKEEP) (INSTEEP) (ASSERT) (EXPAND "well_typed?" -3) (LABEL "PP" -4)
        (ASSERT) (EXPAND "Eval" ("PP" 1))
        (BRANCH (CASE "Proper?(Eval(r, box))")
         ((THEN (ASSERT) (LEMMA "Incl_Proper") (INST? -1 :WHERE -3) (ASSERT)
           (LET ((LM
                  (FORMAT NIL "~a_fundamental"
                          (OPERATOR (EXTRA-GET-EXPR '(! 1 R))))))
             (REWRITE LM)))
          (THEN (HIDE-ALL-BUT ("PP" 1)) (ASSERT)
           (REWRITE "Proper_NonEmpty"))))))
      (("" (INDUCT "expr")
        (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (SKEEP)
          (("2" (HIDE -1) (("2" (EXPAND "Eval") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("3" (SKEEP)
          (("3" (HIDE -1)
            (("3" (SKEEP)
              (("3" (EXPAND "well_typed?")
                (("3" (EXPAND "Inclusion?")
                  (("3" (FLATTEN)
                    (("3" (EXPAND "Eval")
                      (("3" (ASSERT) (("3" (INST? -) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("4" (BINOP) NIL NIL) ("5" (UNOP) NIL NIL)
         ("6" (UNOP) (("6" (GRIND) NIL NIL)) NIL) ("7" (BINOP) NIL NIL)
         ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
         ("10" (SKOLEM 1 (_ "n")) (("10" (UNOP) NIL NIL)) NIL)
         ("11" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("11" (FLATTEN)
            (("11" (REPLACES (-1 -2))
              (("11" (SKEEP)
                (("11" (INSTEEP)
                  (("11" (INSTEEP)
                    (("11" (ASSERT)
                      (("11" (EXPAND "well_typed?" -4)
                        (("11" (LABEL "PP" -5)
                          (("11" (FLATTEN)
                            (("11" (ASSERT)
                              (("11" (EXPAND "Eval" ("PP" 1))
                                (("11"
                                  (CASE
                                      "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))")
                                  (("1" (FLATTEN)
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "Incl_Proper")
                                        (("1" (COPY -1)
                                          (("1" (INST? -1 :WHERE -5)
                                            (("1" (INST? -2 :WHERE -6)
                                              (("1" (ASSERT)
                                                (("1" (LIFT-IF 1)
                                                  (("1" (SPLIT 1)
                                                    (("1" (FLATTEN)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (REWRITE
                                                           "Div_fundamental")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (REWRITE
                                                           "Proper_NonEmpty")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT ("PP" 1))
                                    (("2" (LEMMA "Proper_NonEmpty")
                                      (("2" (GROUND) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("12" (SKOLEM 1 ("Pre" "f" "F" _))
          (("12" (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T)
            (("12" (FLATTEN)
              (("12" (REPLACES -1)
                (("12" (SKEEP)
                  (("12" (INSTEEP)
                    (("12" (ASSERT)
                      (("12" (EXPAND "well_typed?" -3)
                        (("12" (LABEL "PP" -4)
                          (("12" (FLATTEN)
                            (("12" (ASSERT)
                              (("12" (EXPAND "Eval" ("PP" 1))
                                (("12" (CASE "Proper?(Eval(r, box))")
                                  (("1" (ASSERT)
                                    (("1" (LEMMA "Incl_Proper")
                                      (("1" (INST? -1 :WHERE -3)
                                        (("1" (ASSERT)
                                          (("1" (LIFT-IF 1)
                                            (("1" (SPLIT)
                                              (("1" (FLATTEN)
                                                (("1" (ASSERT)
                                                  (("1" (TYPEPRED "F")
                                                    (("1"
                                                      (EXPAND "Fundamental?")
                                                      (("1" (INST? -)
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2"
                                                  (REWRITE "Proper_NonEmpty")
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE-ALL-BUT ("PP" 1))
                                    (("2" (ASSERT)
                                      (("2" (REWRITE "Proper_NonEmpty") NIL
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("13" (SKOLEM 1 ("Pre1" "Pre2" "f" "F" _ _))
          (("13" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("13" (FLATTEN)
              (("13" (REPLACES -1)
                (("13" (REPLACES -1)
                  (("13" (SKEEP)
                    (("13" (INSTEEP)
                      (("13" (INSTEEP)
                        (("13" (ASSERT)
                          (("13" (EXPAND "well_typed?" -4)
                            (("13" (LABEL "PP" -5)
                              (("13" (FLATTEN)
                                (("13" (ASSERT)
                                  (("13" (EXPAND "Eval" ("PP" 1))
                                    (("13"
                                      (CASE
                                          "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))")
                                      (("1" (FLATTEN)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "Incl_Proper")
                                            (("1" (INST? -1 :WHERE -4 :COPY? T)
                                              (("1" (INST? -1 :WHERE -6)
                                                (("1" (ASSERT)
                                                  (("1" (LIFT-IF 1)
                                                    (("1" (SPLIT)
                                                      (("1" (FLATTEN)
                                                        (("1" (ASSERT)
                                                          (("1" (TYPEPRED "F")
                                                            (("1"
                                                              (EXPAND
                                                               "Fundamental2?")
                                                              (("1" (INST? -)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2"
                                                          (REWRITE
                                                           "Proper_NonEmpty")
                                                          NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT ("PP" 1))
                                        (("2" (REWRITE "Proper_NonEmpty")
                                          (("2" (GROUND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("14" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
          (("14" (FLATTEN)
            (("14" (REPLACES (-1 -2))
              (("14" (SKEEP)
                (("14" (INSTEEP)
                  (("14" (ASSERT)
                    (("14" (EXPAND "well_typed?" -4)
                      (("14" (FLATTEN)
                        (("14" (ASSERT)
                          (("14" (LABEL "PP" -6)
                            (("14" (EXPAND "Eval" ("PP" 1))
                              (("14"
                                (CASE
                                    "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, append(box, (: Eval(r1, box) :))))")
                                (("1" (FLATTEN)
                                  (("1" (ASSERT)
                                    (("1" (LEMMA "Incl_Proper")
                                      (("1" (COPY -1)
                                        (("1" (INST? -1 :WHERE -5)
                                          (("1" (COPY -7)
                                            (("1" (EXPAND "Inclusion?" -1)
                                              (("1" (FLATTEN)
                                                (("1"
                                                  (INST -8
                                                   "append(box, (: Eval(r1, box) :))"
                                                   "append(pox, (: Eval(r1, pox) :))")
                                                  (("1"
                                                    (CASE
                                                        "length(append(box, (: Eval(r1, box) :))) = length(append(pox, (: Eval(r1, pox) :)))")
                                                    (("1" (INST? -5 :WHERE -9)
                                                      (("1" (ASSERT)
                                                        (("1" (ASSERT)
                                                          (("1" (HIDE 2)
                                                            (("1"
                                                              (EXPAND
                                                               "Inclusion?" 1)
                                                              (("1" (HIDE -5)
                                                                (("1"
                                                                  (SKEEP
                                                                   :PREDS? T)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "nth_append")
                                                                    (("1"
                                                                      (REWRITE
                                                                       "nth_append")
                                                                      (("1"
                                                                        (CASE-REPLACE
                                                                         "i<length(box)")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (INST?
                                                                             -)
                                                                            NIL
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (CASE
                                                                                "i=length(box)")
                                                                            (("1"
                                                                              (REPLACE
                                                                               -1)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -4)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "nth"
                                                                                     2)
                                                                                    (("1"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE
                                                                               3)
                                                                              (("2"
                                                                                (REWRITE
                                                                                 "length_append")
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (REWRITE
                                                                         "length_append")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (REWRITE
                                                                       "length_append")
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE 2)
                                                      (("2"
                                                        (REWRITE
                                                         "length_append")
                                                        (("2"
                                                          (REWRITE
                                                           "length_append")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (HIDE "PP" 2)
                                                    (("2"
                                                      (REWRITE "proper_append")
                                                      (("2" (HIDE 2)
                                                        (("2"
                                                          (EXPAND "ProperBox?"
                                                                  1)
                                                          (("2"
                                                            (EXPAND "every")
                                                            (("2"
                                                              (EXPAND "every")
                                                              (("2" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT ("PP" 1))
                                  (("2" (LEMMA "Proper_NonEmpty")
                                    (("2" (GROUND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("15" (ASSERT) NIL NIL) ("16" (ASSERT) NIL NIL)
         ("17" (ASSERT) NIL NIL) ("18" (ASSERT) NIL NIL)
         ("19" (ASSERT) NIL NIL) ("20" (ASSERT) NIL NIL)
         ("21" (ASSERT) NIL NIL) ("22" (ASSERT) NIL NIL)
         ("23" (ASSERT) NIL NIL)
         ("24" (SKOLEM 1 ("Pre1" "Pre2" "Pre3" "Pre4" "f" "F" _ _ _ _))
          (("24" (SKOLEM 1 ("r1" "r2" "r3" "r4") :SKOLEM-TYPEPREDS? T)
            (("24" (FLATTEN)
              (("24" (REPLACES -1)
                (("24" (REPLACES -1)
                  (("24" (REPLACES -1)
                    (("24" (REPLACES -1)
                      (("24" (SKEEP)
                        (("24" (INSTEEP)
                          (("24" (INSTEEP)
                            (("24" (INSTEEP)
                              (("24" (INSTEEP)
                                (("24" (ASSERT)
                                  (("24" (EXPAND "well_typed?" -6)
                                    (("24" (LABEL "PP" -7)
                                      (("24" (FLATTEN)
                                        (("24" (ASSERT)
                                          (("24" (EXPAND "Eval" ("PP" 1))
                                            (("24"
                                              (CASE
                                                  "Proper?(Eval(r1, box)) AND Proper?(Eval(r2, box))
          AND Proper?(Eval(r3, box)) AND Proper?(Eval(r4, box))")
                                              (("1" (FLATTEN)
                                                (("1" (ASSERT)
                                                  (("1" (LEMMA "Incl_Proper")
                                                    (("1"
                                                      (INST? -1 :WHERE -6
                                                       :COPY? T)
                                                      (("1"
                                                        (INST? -1 :WHERE -8
                                                         :COPY? T)
                                                        (("1"
                                                          (INST? -1 :WHERE -10
                                                           :COPY? T)
                                                          (("1"
                                                            (INST? -1 :WHERE
                                                             -12)
                                                            (("1" (ASSERT)
                                                              (("1" (LIFT-IF 1)
                                                                (("1" (SPLIT)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (TYPEPRED
                                                                         "F")
                                                                        (("1"
                                                                          (EXPAND
                                                                           "Fundamental4?")
                                                                          (("1"
                                                                            (INST?
                                                                             -)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (REWRITE
                                                                       "Proper_NonEmpty")
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT ("PP" 1))
                                                (("2"
                                                  (REWRITE "Proper_NonEmpty")
                                                  (("2" (GROUND) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL))
 (|well_typed_Inclusion_aux| 0
  (|well_typed_Inclusion_aux-2| |nil| 3580050685
   (""
    (DEFTACTIC SKEEPREDS2
     (THEN (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T) (FLATTEN)
      (REPLACES (-1 -2)) (SKEEP) (INSTEEP) (INSTEEP)
      (EXPAND "well_typed?" (-4 1)) (FLATTEN) (ASSERT)))
    ((""
      (DEFTACTIC SKEEPREDS1
       (THEN (SKOLEM 1 "r" :SKOLEM-TYPEPREDS? T) (FLATTEN) (REPLACES -1)
        (SKEEP) (INSTEEP) (EXPAND "well_typed?" (-3 1)) (ASSERT)))
      (("" (LEMMA "Inclusion_Proper")
        (("" (INDUCT "expr")
          (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (SKEEP)
            (("2" (HIDE -1)
              (("2" (EXPAND "well_typed?" 1) (("2" (PROPAX) NIL NIL)) NIL))
              NIL))
            NIL)
           ("3" (SKEEP)
            (("3" (HIDE -1)
              (("3" (SKEEP)
                (("3" (INSTEEP)
                  (("3" (EXPAND "well_typed?")
                    (("3" (EXPAND "Inclusion?")
                      (("3" (FLATTEN) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("4" (SKEEPREDS2) NIL NIL) ("5" (SKEEPREDS1) NIL NIL)
           ("6" (SKEEPREDS1) NIL NIL) ("7" (SKEEPREDS2) NIL NIL)
           ("8" (SKEEPREDS2) NIL NIL) ("9" (SKEEPREDS1) NIL NIL)
           ("10" (SKOLEM 1 (_ "n")) (("10" (SKEEPREDS1) NIL NIL)) NIL)
           ("11" (SKEEPREDS2)
            (("11" (INSTEEP)
              (("11" (ASSERT)
                (("11" (LEMMA "Eval_fundamental_aux")
                  (("11" (INST -1 "pox" "box" "r2")
                    (("11" (ASSERT)
                      (("11" (LEMMA "well_typed_Proper")
                        (("11" (INST? - :WHERE -4)
                          (("11" (ASSERT)
                            (("11" (HIDE-ALL-BUT (-1 -2 -8 1))
                              (("11" (GRIND :EXCLUDE "Eval") NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("12" (SKOLEM 1 ("Pre" "f" "F" _))
            (("12" (SKEEPREDS1)
              (("12" (INSTEEP)
                (("12" (ASSERT)
                  (("12" (LEMMA "Eval_fundamental_aux")
                    (("12" (INST -1 "pox" "box" "r")
                      (("12" (ASSERT)
                        (("12" (FLATTEN)
                          (("12" (ASSERT)
                            (("12" (LEMMA "well_typed_Proper")
                              (("12" (INST? -1)
                                (("12" (ASSERT)
                                  (("12" (TYPEPRED "Pre")
                                    (("12" (EXPAND "Precondition?")
                                      (("12" (INST? -1)
                                        (("12" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("13" (SKOLEM 1 ("Pre1" "Pre2" "f" "F" _ _))
            (("13" (SKEEPREDS2)
              (("13" (INSTEEP)
                (("13" (ASSERT)
                  (("13" (LEMMA "Eval_fundamental_aux")
                    (("13" (INST-CP -1 "pox" "box" "r1")
                      (("13" (INST -1 "pox" "box" "r2")
                        (("13" (ASSERT)
                          (("13" (LEMMA "well_typed_Proper")
                            (("13" (INST? -1 :WHERE -4 :COPY? T)
                              (("13" (INST? -1 :WHERE -6)
                                (("13" (ASSERT)
                                  (("13" (TYPEPRED "Pre1")
                                    (("13" (TYPEPRED "Pre2")
                                      (("13" (EXPAND "Precondition?")
                                        (("13" (EXPAND "Precondition2?")
                                          (("13" (INST? -2 :WHERE -6)
                                            (("13" (ASSERT)
                                              (("13" (INST? -1 :WHERE -6)
                                                (("13" (INST? -1 :WHERE -5)
                                                  (("13" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("14" (SKOLEM 1 ("r1" "r2") :SKOLEM-TYPEPREDS? T)
            (("14" (FLATTEN)
              (("14" (REPLACES (-1 -2))
                (("14" (SKEEP)
                  (("14" (INSTEEP)
                    (("14" (ASSERT)
                      (("14" (EXPAND "well_typed?" -4)
                        (("14" (FLATTEN)
                          (("14" (ASSERT)
                            (("14" (EXPAND "well_typed?" 1)
                              (("14"
                                (INST -2 "append(box, (: Eval(r1, box) :))"
                                 "append(pox, (: Eval(r1, pox) :))")
                                (("1" (ASSERT)
                                  (("1" (HIDE 2)
                                    (("1" (EXPAND "Inclusion?" 1)
                                      (("1" (REWRITE "length_append")
                                        (("1" (REWRITE "length_append")
                                          (("1" (ASSERT)
                                            (("1" (INSTEEP)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "Inclusion?")
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT)
                                                      (("1" (SKEEP :PREDS? T)
                                                        (("1"
                                                          (REWRITE
                                                           "length_append")
                                                          (("1"
                                                            (REWRITE
                                                             "nth_append")
                                                            (("1"
                                                              (REWRITE
                                                               "nth_append")
                                                              (("1"
                                                                (CASE
                                                                    "i< length(pox)")
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (INSTEEP)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  (("2"
                                                                    (CASE-REPLACE
                                                                     "i=length(box)")
                                                                    (("1"
                                                                      (REPLACE
                                                                       -4)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (HIDE
                                                                           1)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "nth")
                                                                            (("1"
                                                                              (LEMMA
                                                                               "Eval_fundamental_aux")
                                                                              (("1"
                                                                                (INST?)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "well_typed_Proper")
                                                                                    (("1"
                                                                                      (INST?)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (REWRITE "proper_append")
                                    (("2" (HIDE 2)
                                      (("2" (EXPAND "ProperBox?" 1)
                                        (("2" (EXPAND "every" 1)
                                          (("2" (EXPAND "every" 1)
                                            (("2" (LEMMA "well_typed_Proper")
                                              (("2" (INST?)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("15" (ASSERT) NIL NIL) ("16" (ASSERT) NIL NIL)
           ("17" (ASSERT) NIL NIL) ("18" (ASSERT) NIL NIL)
           ("19" (ASSERT) NIL NIL) ("20" (ASSERT) NIL NIL)
           ("21" (ASSERT) NIL NIL) ("22" (ASSERT) NIL NIL)
           ("23" (ASSERT) NIL NIL)
           ("24" (SKOLEM 1 ("Pre1" "Pre2" "Pre3" "Pre4" "f" "F" _ _ _ _))
            (("24" (SKOLEM 1 ("r1" "r2" "r3" "r4") :SKOLEM-TYPEPREDS? T)
              (("24" (FLATTEN)
                (("24" (REPLACES (-1 -2 -3 -4))
                  (("24" (SKEEP)
                    (("24" (INSTEEP)
                      (("24" (INSTEEP)
                        (("24" (INSTEEP)
                          (("24" (INSTEEP)
                            (("24" (EXPAND "well_typed?" (-6 1))
                              (("24" (FLATTEN)
                                (("24" (ASSERT)
                                  (("24" (INSTEEP)
                                    (("24" (ASSERT)
                                      (("24" (LEMMA "Eval_fundamental_aux")
                                        (("24" (INST-CP -1 "pox" "box" "r1")
                                          (("24" (INST-CP -1 "pox" "box" "r2")
                                            (("24"
                                              (INST-CP -1 "pox" "box" "r3")
                                              (("24" (INST -1 "pox" "box" "r4")
                                                (("24" (ASSERT)
                                                  (("24"
                                                    (LEMMA "well_typed_Proper")
                                                    (("24"
                                                      (INST? -1 :WHERE -6
                                                       :COPY? T)
                                                      (("24"
                                                        (INST? -1 :WHERE -8
                                                         :COPY? T)
                                                        (("24"
                                                          (INST? -1 :WHERE -10
                                                           :COPY? T)
                                                          (("24"
                                                            (INST? -1 :WHERE
                                                             -12)
                                                            (("24" (ASSERT)
                                                              (("24"
                                                                (TYPEPRED
                                                                 "Pre1")
                                                                (("24"
                                                                  (TYPEPRED
                                                                   "Pre2")
                                                                  (("24"
                                                                    (TYPEPRED
                                                                     "Pre3")
                                                                    (("24"
                                                                      (TYPEPRED
                                                                       "Pre4")
                                                                      (("24"
                                                                        (EXPAND
                                                                         "Precondition?")
                                                                        (("24"
                                                                          (EXPAND
                                                                           "Precondition2?")
                                                                          (("24"
                                                                            (EXPAND
                                                                             "Precondition3?")
                                                                            (("24"
                                                                              (EXPAND
                                                                               "Precondition4?")
                                                                              (("24"
                                                                                (INST?
                                                                                 -4
                                                                                 :WHERE
                                                                                 -12)
                                                                                (("24"
                                                                                  (INST?
                                                                                   -3
                                                                                   :WHERE
                                                                                   1)
                                                                                  (("24"
                                                                                    (INST?
                                                                                     -3)
                                                                                    (("24"
                                                                                      (ASSERT)
                                                                                      (("24"
                                                                                        (INST?
                                                                                         -2
                                                                                         :WHERE
                                                                                         1)
                                                                                        (("24"
                                                                                          (INST?
                                                                                           -2)
                                                                                          (("24"
                                                                                            (ASSERT)
                                                                                            (("24"
                                                                                              (INST?
                                                                                               -1
                                                                                               :WHERE
                                                                                               1)
                                                                                              (("24"
                                                                                                (INST?
                                                                                                 -1)
                                                                                                (("24"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL))
 (|well_typed_Inclusion| 0
  (|well_typed_Inclusion-2| |nil| 3580050420
   ("" (SKEEP*)
    (("" (LEMMA "well_typed_Inclusion_aux")
      (("" (INSTEEP) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|Proper_Inclusion| 0
  (|Proper_Inclusion-1| |nil| 3576849784
   ("" (SKEEP*)
    (("" (LEMMA "Proper_well_typed")
      (("" (INST?)
        (("" (ASSERT)
          (("" (LEMMA "well_typed_Inclusion")
            (("" (INST?)
              (("" (ASSERT)
                (("" (INST?)
                  (("" (ASSERT)
                    (("" (LEMMA "well_typed_Proper")
                      (("" (INST? :WHERE -2) (("" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|Eval_fundamental| 0
  (|Eval_fundamental-1| |nil| 3549124802
   ("" (SKEEP*)
    (("" (LEMMA "well_typed_Inclusion")
      (("" (INST?)
        (("" (ASSERT)
          (("" (INST? -1)
            (("" (ASSERT)
              (("" (LEMMA "Eval_fundamental_aux")
                (("" (INST? -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "well_typed_Proper")
                      (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (LEMMA "Inclusion_Proper")
                    (("2" (INST? -) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|Eval_fundamental_proper| 0
  (|Eval_fundamental_proper-1| |nil| 3576785019
   ("" (SKEEP*)
    (("" (BETA)
      (("" (FLATTEN)
        (("" (LEMMA "Proper_well_typed")
          (("" (INST?)
            (("" (ASSERT)
              (("" (LEMMA "Eval_fundamental")
                (("" (INST?)
                  (("" (ASSERT) (("" (INST? -) (("" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|split_TCC1| 0
  (|split_TCC1-1| |nil| 3546789664 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL (|split| SUBTYPE "interval_expr.i" "below[length[Interval](lrb`1)]")))
 (|split_TCC2| 0
  (|split_TCC2-1| |nil| 3546789664 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL)
   NIL (|split| SUBTYPE "interval_expr.i" "below[length[Interval](lrb`2)]")))
 (|split_TCC3| 0
  (|split_TCC3-1| |nil| 3546789664 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL (|split| SUBTYPE "interval_expr.i" "below[length[Interval](lrb`1)]")))
 (|split_TCC4| 0
  (|split_TCC4-1| |nil| 3546789664 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL (|split| SUBTYPE "interval_expr.i" "below[length[Interval](lrb`2)]")))
 (|split_TCC5| 0
  (|split_TCC5-1| |nil| 3546789664 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|split| SUBTYPE "(list_adt[Interval].null, list_adt[Interval].null)"
    "{lrb: [box.Box, box.Box] | booleans.AND(list_props[Interval].length(lrb`1) = list_props[Interval].length(interval_expr.box), booleans.AND(list_props[Interval].length(lrb`2) = list_props[Interval].length(interval_expr.box), FORALL (i: naturalnumbers.below(list_props[Interval].length(interval_expr.box))): IF i = interval_expr.v THEN booleans.AND(list_props[Interval].nth(lrb`1, i) = interval.HalfLeft(list_props[Interval].nth(interval_expr.box, i)), list_props[Interval].nth(lrb`2, i) = interval.HalfRight(list_props[Interval].nth(interval_expr.box, i))) ELSE booleans.AND(list_props[Interval].nth(lrb`1, i) = list_props[Interval].nth(interval_expr.box, i), list_props[Interval].nth(lrb`2, i) = list_props[Interval].nth(interval_expr.box, i)) ENDIF))}")))
 (|split_TCC6| 0
  (|split_TCC6-1| |nil| 3546789664 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|split| SUBTYPE "interval_expr.box" "(list_adt[Interval].cons?)")))
 (|split_TCC7| 0
  (|split_TCC7-1| |nil| 3546789664 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|split| SUBTYPE
    "(list_adt[Interval].cons(interval.HalfLeft(list_adt[Interval].car(interval_expr.box)), list_adt[Interval].cdr(interval_expr.box)), list_adt[Interval].cons(interval.HalfRight(list_adt[Interval].car(interval_expr.box)), list_adt[Interval].cdr(interval_expr.box)))"
    "{lrb: [box.Box, box.Box] | booleans.AND(list_props[Interval].length(lrb`1) = list_props[Interval].length(interval_expr.box), booleans.AND(list_props[Interval].length(lrb`2) = list_props[Interval].length(interval_expr.box), FORALL (i: naturalnumbers.below(list_props[Interval].length(interval_expr.box))): IF i = interval_expr.v THEN booleans.AND(list_props[Interval].nth(lrb`1, i) = interval.HalfLeft(list_props[Interval].nth(interval_expr.box, i)), list_props[Interval].nth(lrb`2, i) = interval.HalfRight(list_props[Interval].nth(interval_expr.box, i))) ELSE booleans.AND(list_props[Interval].nth(lrb`1, i) = list_props[Interval].nth(interval_expr.box, i), list_props[Interval].nth(lrb`2, i) = list_props[Interval].nth(interval_expr.box, i)) ENDIF))}")))
 (|split_TCC8| 0
  (|split_TCC8-1| |nil| 3546789664 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|split| SUBTYPE "interval_expr.box" "(list_adt[Interval].cons?)")))
 (|split_TCC9| 0
  (|split_TCC9-2| |nil| 3546791205
   ("" (SKEEP :PREDS? T)
    (("" (SKEEP 3)
      (("" (NAME-REPLACE "V" "v1(v - 1, cdr(box))" :HIDE? T)
        (("1" (TYPEPRED "V")
          (("1" (SPLIT)
            (("1" (HIDE -3) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (HIDE -3) (("2" (GRIND) NIL NIL)) NIL)
             ("3" (SKEEP)
              (("3" (CASE-REPLACE "i=0")
                (("1" (ASSERT)
                  (("1" (EXPAND "nth" +) (("1" (PROPAX) NIL NIL)) NIL)) NIL)
                 ("2" (INST -3 "i-1")
                  (("1" (ASSERT)
                    (("1" (SPLIT 2)
                      (("1" (FLATTEN)
                        (("1" (ASSERT)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "nth" 1) (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (ASSERT)
                          (("2" (EXPAND "nth" 2)
                            (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE 3)
                    (("2" (TYPEPRED "i")
                      (("2" (ASSERT)
                        (("2" (EXPAND "length" -1) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 4) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   NIL
   (|split| SUBTYPE
    "(list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.lb), list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.rb))"
    "{lrb: [box.Box, box.Box] | booleans.AND(list_props[Interval].length(lrb`1) = list_props[Interval].length(interval_expr.box), booleans.AND(list_props[Interval].length(lrb`2) = list_props[Interval].length(interval_expr.box), FORALL (i: naturalnumbers.below(list_props[Interval].length(interval_expr.box))): IF i = interval_expr.v THEN booleans.AND(list_props[Interval].nth(lrb`1, i) = interval.HalfLeft(list_props[Interval].nth(interval_expr.box, i)), list_props[Interval].nth(lrb`2, i) = interval.HalfRight(list_props[Interval].nth(interval_expr.box, i))) ELSE booleans.AND(list_props[Interval].nth(lrb`1, i) = list_props[Interval].nth(interval_expr.box, i), list_props[Interval].nth(lrb`2, i) = list_props[Interval].nth(interval_expr.box, i)) ENDIF))}"))
  (|split_TCC9-1| |nil| 3546789664 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|split| SUBTYPE
    "(list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.lb), list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.rb))"
    "{lrb: [box.Box, box.Box] | booleans.AND(list_props[Interval].length(lrb`1) = list_props[Interval].length(interval_expr.box), booleans.AND(list_props[Interval].length(lrb`2) = list_props[Interval].length(interval_expr.box), FORALL (i: naturalnumbers.below(list_props[Interval].length(interval_expr.box))): IF i = interval_expr.v THEN booleans.AND(list_props[Interval].nth(lrb`1, i) = interval.HalfLeft(list_props[Interval].nth(interval_expr.box, i)), list_props[Interval].nth(lrb`2, i) = interval.HalfRight(list_props[Interval].nth(interval_expr.box, i))) ELSE booleans.AND(list_props[Interval].nth(lrb`1, i) = list_props[Interval].nth(interval_expr.box, i), list_props[Interval].nth(lrb`2, i) = list_props[Interval].nth(interval_expr.box, i)) ENDIF))}")))
 (|split_TCC10| 0
  (|split_TCC10-1| |nil| 3546789664 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|split| SUBTYPE "(number_fields.-)(interval_expr.v, 1)" "nat")))
 (|split_TCC11| 0
  (|split_TCC11-1| |nil| 3546789664 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|split| SUBTYPE "interval_expr.box" "(list_adt[Interval].cons?)")))
 (|split_TCC12| 0
  (|split_TCC12-1| |nil| 3546789664 ("" (GRIND) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|split| TERMINATION
    "interval_expr.split((number_fields.-)(interval_expr.v, 1), list_adt[Interval].cdr(interval_expr.box))"
    "NIL")))
 (|split_eq_TCC1| 0
  (|split_eq_TCC1-1| |nil| 3546811001 ("" (RECURSIVE-JUDGEMENT-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL)
   NIL
   (|split_eq_| SUBTYPE "(list_adt[Interval].null, list_adt[Interval].null)"
    "{lrb: [box.Box, box.Box] | booleans.AND(lrb`1 = interval_expr.box, lrb`2 = interval_expr.box)}")))
 (|split_eq_TCC2| 0
  (|split_eq_TCC2-1| |nil| 3546811001 ("" (RECURSIVE-JUDGEMENT-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|split_eq_| SUBTYPE
    "(list_adt[Interval].cons(interval.HalfLeft(list_adt[Interval].car(interval_expr.box)), list_adt[Interval].cdr(interval_expr.box)), list_adt[Interval].cons(interval.HalfRight(list_adt[Interval].car(interval_expr.box)), list_adt[Interval].cdr(interval_expr.box)))"
    "{lrb: [box.Box, box.Box] | booleans.AND(lrb`1 = interval_expr.box, lrb`2 = interval_expr.box)}")))
 (|split_eq_TCC3| 0
  (|split_eq_TCC3-1| |nil| 3546811001 ("" (RECURSIVE-JUDGEMENT-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL)
   NIL
   (|split_eq_| SUBTYPE "list_adt[Interval].cdr(interval_expr.box)"
    "{box: box.Box | reals.<=(list_props[Interval].length(box), (number_fields.-)(interval_expr.v, 1))}")))
 (|split_eq_TCC4| 0
  (|split_eq_TCC4-4| "" 3803696702
   ("" (SKEEP)
    (("" (SKEEP 3)
      (("" (TYPEPRED "v1(v - 1, cdr(box))")
        (("1" (REPLACES (-3 -2))
          (("1" (ASSERT)
            (("1" (CASE "cons[Interval](car[Interval](box), cdr(box)) = box")
              (("1" (ASSERT) NIL NIL)
               ("2" (HIDE 4)
                (("2" (LEMMA "list_cons_eta[Interval]")
                  (("2" (INST -1 "box") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK
   (|split_eq_| SUBTYPE
    "(list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.lb), list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.rb))"
    "{lrb: [box.Box, box.Box] | booleans.AND(lrb`1 = interval_expr.box, lrb`2 = interval_expr.box)}"))
  (|split_eq_TCC4-3| "" 3790350980
   ("" (SKEEP)
    (("" (SKEEP 3)
      (("" (TYPEPRED "v1(v - 1, cdr(box))")
        (("1" (REPLACES (-1 -2))
          (("1" (REPLACES (-1 -2))
            (("1" (CASE "cons[Interval](car[Interval](box), cdr(box)) = box")
              (("1" (ASSERT) NIL NIL)
               ("2" (HIDE 4)
                (("2" (LEMMA "list_cons_eta[Interval]")
                  (("2" (INST -1 "box") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK
   (|split_eq_| SUBTYPE
    "(list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.lb), list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.rb))"
    "{lrb: [box.Box, box.Box] | booleans.AND(lrb`1 = interval_expr.box, lrb`2 = interval_expr.box)}"))
  (|split_eq_TCC4-2| |nil| 3546811387
   ("" (SKEEP)
    (("" (SKEEP 3)
      (("" (TYPEPRED "v1(v - 1, cdr(box))")
        (("1" (REPLACES (-1 -2))
          (("1" (REPLACES (-1 -2))
            (("1" (CASE "cons[Interval](car[Interval](box), cdr(box)) = box")
              (("1" (ASSERT) NIL NIL)
               ("2" (HIDE 4)
                (("2" (LEMMA "list_cons_eta[Interval]")
                  (("2" (INST -1 "box") NIL NIL)) NIL))
                NIL)
               ("3" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL) NIL
   (|split_eq_| SUBTYPE
    "(list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.lb), list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.rb))"
    "{lrb: [box.Box, box.Box] | booleans.AND(lrb`1 = interval_expr.box, lrb`2 = interval_expr.box)}"))
  (|split_eq_TCC4-1| |nil| 3546811001 ("" (RECURSIVE-JUDGEMENT-TCC) NIL NIL)
   (NIL NIL) NIL
   (|split_eq_| SUBTYPE
    "(list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.lb), list_adt[Interval].cons(list_adt[Interval].car(interval_expr.box), interval_expr.rb))"
    "{lrb: [box.Box, box.Box] | booleans.AND(lrb`1 = interval_expr.box, lrb`2 = interval_expr.box)}")))
 (|split_vars_in_box| 0
  (|split_vars_in_box-1| |nil| 3546805651
   ("" (SKEEP :PREDS? T)
    (("" (CASE "v < length(box)")
      (("1" (BETA)
        (("1" (FLATTEN)
          (("1" (EXPAND "vars_in_box?")
            (("1" (SKOLEM 1 "i1")
              (("1" (SKOLEM 2 "i2")
                (("1" (TYPEPRED "split(v, box)")
                  (("1" (CASE-REPLACE "i1=v")
                    (("1" (CASE-REPLACE "i2=v")
                      (("1" (INST -5 "v")
                        (("1" (FLATTEN)
                          (("1" (REPLACES (-5 -6))
                            (("1" (INST -6 "v")
                              (("1" (LEMMA "Halves_inclusion")
                                (("1" (INST? -) (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (INST -4 "i2")
                        (("1" (ASSERT)
                          (("1" (FLATTEN)
                            (("1" (REPLACES -5) (("1" (INST -6 "i2") NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL)
                     ("2" (INST -3 "i1")
                      (("1" (ASSERT)
                        (("1" (FLATTEN)
                          (("1" (REPLACES -3) (("1" (INST -5 "i1") NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (LEMMA "split_eq")
        (("2" (INST -1 "v" "box")
          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|split_Inclusion| 0
  (|split_Inclusion-2| |nil| 3576783085
   ("" (SKEEP)
    (("" (SKOLETIN*)
      (("" (EXPAND "Inclusion?")
        (("" (TYPEPRED "split(v,pox)")
          (("" (ASSERT)
            (("" (REPLACES (-4 -5) :DIR RL)
              (("" (SPLIT)
                (("1" (SKEEP)
                  (("1" (INST - "i")
                    (("1" (SPLIT -)
                      (("1" (FLATTEN)
                        (("1" (LEMMA "Halves_Incl")
                          (("1" (INST?)
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "pox")
                                (("1" (EXPAND "ProperBox?")
                                  (("1" (REWRITE "every_nth")
                                    (("1" (INST - "i") NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (REPLACES -1) (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKEEP)
                  (("2" (INST - "i")
                    (("2" (SPLIT -)
                      (("1" (FLATTEN)
                        (("1" (LEMMA "Halves_Incl")
                          (("1" (INST?)
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "pox")
                                (("1" (EXPAND "ProperBox?")
                                  (("1" (REWRITE "every_nth")
                                    (("1" (INST - "i") NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (REPLACES -2) (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   NIL)
  (|split_Inclusion-1| |nil| 3549125269
   ("" (SKEEP)
    (("" (SKOLETIN* 1)
      (("" (EXPAND "Inclusion?")
        (("" (TYPEPRED "split(v,box)")
          (("" (ASSERT)
            (("" (REPLACES (-4 -5) :DIR RL)
              (("" (SPLIT)
                (("1" (SKEEP 1)
                  (("1" (INST -3 "i")
                    (("1" (SPLIT -3)
                      (("1" (FLATTEN)
                        (("1" (LEMMA "Halves_Incl")
                          (("1" (INST?)
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "box")
                                (("1" (EXPAND "ProperBox?")
                                  (("1" (FLATTEN)
                                    (("1" (REWRITE "every_nth")
                                      (("1" (INST -2 "i") NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (REPLACES -1) (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKEEP 1)
                  (("2" (INST -3 "i")
                    (("2" (SPLIT -3)
                      (("1" (FLATTEN)
                        (("1" (LEMMA "Halves_Incl")
                          (("1" (INST?)
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "box")
                                (("1" (EXPAND "ProperBox?")
                                  (("1" (FLATTEN)
                                    (("1" (REWRITE "every_nth")
                                      (("1" (INST -2 "i") NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (REPLACES -2) (("2" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|split_Proper| 0
  (|split_Proper-1| |nil| 3546795902
   ("" (SKEEP)
    (("" (TYPEPRED "pox")
      (("" (EXPAND "ProperBox?")
        (("" (REWRITE "every_nth")
          (("" (REWRITE "every_nth")
            (("" (REWRITE "every_nth")
              (("" (TYPEPRED "split(v,pox)")
                (("" (GROUND)
                  (("1" (SKEEP)
                    (("1" (INST - "i")
                      (("1" (INST - "i")
                        (("1" (SPLIT -)
                          (("1" (FLATTEN)
                            (("1" (REPLACES (-1 -3))
                              (("1" (REWRITE "Proper_HalfRight") NIL NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKEEP)
                    (("2" (INST - "i")
                      (("2" (INST - "i")
                        (("2" (SPLIT -)
                          (("1" (FLATTEN)
                            (("1" (REPLACES (-1 -2))
                              (("1" (REWRITE "Proper_HalfLeft") NIL NIL)) NIL))
                            NIL)
                           ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|split_Proper| SUBTYPE
    "interval_expr.split(interval_expr.v, interval_expr.pox)"
    "[ProperBox, ProperBox]")))
 (|length_split_1| 0
  (|length_split_1-1| |nil| 3577554456
   ("" (SKEEP) (("" (TYPEPRED "split(v, pox)") (("" (PROPAX) NIL NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|length_split_2| 0
  (|length_split_2-1| |nil| 3577554519
   ("" (SKEEP) (("" (TYPEPRED "split(v, pox)") (("" (PROPAX) NIL NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|eval_vs_idempotence| 0
  (|eval_vs_idempotence-1| |nil| 3645972757
   (""
    (DEFTACTIC UNOP
     (THEN (SKOLEM 1 "e") (FLATTEN) (HIDE -2)
      (SPREAD (SPLIT -1)
       ((THEN (SKEEP) (INST? -1 :WHERE 1) (INST -1 "n") (EXPAND "eval" 1)
         (SPREAD (SPLIT -1)
          ((ASSERT) (THEN (SKEEP) (INST? -2 :WHERE 1) (ASSERT) (GRIND)))))
        (THEN (TYPEPRED "e") (PROPAX))))))
    ((""
      (DEFTACTIC BINOP
       (THEN (SKOLEM 1 ("e1" "e2")) (FLATTEN) (HIDE -3)
        (SPREAD (SPLIT -1)
         ((SPREAD (SPLIT -2)
           ((THEN (SKEEP*) (EXPAND "eval" 1) (INST? -1 :WHERE 1)
             (INST? -2 :WHERE 1)
             (SPREAD (SPLIT -1)
              ((SPREAD (SPLIT -2)
                ((ASSERT)
                 (THEN (HIDE-ALL-BUT (1 -2)) (SKEEP) (INST? -2 :WHERE 1)
                  (ASSERT) (GRIND))))
               (THEN (HIDE-ALL-BUT (1 -2)) (SKEEP) (INST? -2 :WHERE 1) (ASSERT)
                (GRIND)))))
            (THEN (TYPEPRED "e2") (PROPAX))))
          (THEN (TYPEPRED "e1") (PROPAX))))))
      (("" (INDUCT "expr")
        (("1" (TYPEPRED "expr!1") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL) ("4" (BINOP) NIL NIL)
         ("5" (UNOP) NIL NIL) ("6" (UNOP) NIL NIL) ("7" (BINOP) NIL NIL)
         ("8" (BINOP) NIL NIL) ("9" (UNOP) NIL NIL)
         ("10" (SKOLEM 1 ("e" "power"))
          (("10" (FLATTEN)
            (("10" (HIDE -2)
              (("10" (SPLIT -1)
                (("1" (SKEEP)
                  (("1" (INST? -1 :WHERE 1)
                    (("1" (INST -1 "n")
                      (("1" (EXPAND "eval" 1)
                        (("1" (SPLIT -1)
                          (("1" (ASSERT) NIL NIL)
                           ("2" (SKEEP)
                            (("2" (INST? -2 :WHERE 1)
                              (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "e") (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("11" (BINOP)
          (("11" (REPLACE -1 :DIR RL)
            (("11" (REPLACE -2 :DIR RL) (("11" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL)
         ("12" (SKOLEM 1 ("pre" "f" "F" "e"))
          (("12" (FLATTEN)
            (("12" (HIDE -2)
              (("12" (SPLIT -1)
                (("1" (SKEEP)
                  (("1" (INST? -1 :WHERE 1)
                    (("1" (INST -1 "n")
                      (("1" (EXPAND "eval" 1)
                        (("1" (SPLIT -1)
                          (("1" (ASSERT) NIL NIL)
                           ("2" (SKEEP)
                            (("2" (INST? -2 :WHERE 1)
                              (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "e") (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("13" (SKOLEM 1 ("pre1" "pre2" "f" "F" "e1" "e2"))
          (("13" (FLATTEN)
            (("13" (HIDE -3)
              (("13" (SPLIT -1)
                (("1" (SPLIT -2)
                  (("1" (SKEEP)
                    (("1" (EXPAND "eval" 1)
                      (("1" (INST? -1 :WHERE 1)
                        (("1" (INST? -2 :WHERE 1)
                          (("1" (SPLIT -1)
                            (("1" (SPLIT -2)
                              (("1" (ASSERT) NIL NIL)
                               ("2" (SKEEP)
                                (("2" (INST? -3 :WHERE 1)
                                  (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (INST? -3 :WHERE 1)
                                (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "e2") (("2" (PROPAX) NIL NIL)) NIL))
                  NIL)
                 ("2" (TYPEPRED "e1") (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("14" (SKOLEM 1 ("e1" "e2"))
          (("14" (FLATTEN)
            (("14" (HIDE -3)
              (("14" (SPLIT -1)
                (("1" (SPLIT -2)
                  (("1" (SKEEP*)
                    (("1" (EXPAND "eval" 1)
                      (("1" (CASE "i=n")
                        (("1" (REPLACE -1 :HIDE? T)
                          (("1" (ASSERT)
                            (("1"
                              (CASE
                                  "vs WITH [(n) := x, (n) := eval(e1, vs WITH [(n) := x], n)] = vs WITH [(n) := eval(e1, vs WITH [(n) := x], n)]")
                              (("1" (REPLACE -1 :HIDE? T)
                                (("1" (INST? -1 :WHERE 1)
                                  (("1" (INST? -2 :WHERE 1)
                                    (("1" (SPLIT -1)
                                      (("1" (SPLIT -2)
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (HIDE-ALL-BUT (1 -2))
                                          (("2" (SKEEP)
                                            (("2" (INST? -2 :WHERE 1)
                                              (("2" (ASSERT)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT (1 -2))
                                        (("2" (SKEEP)
                                          (("2" (INST? -2 :WHERE 1)
                                            (("2" (ASSERT)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (INST? -1 :WHERE 2)
                          (("2" (INST? -2 :WHERE 2)
                            (("2" (SPLIT -1)
                              (("1" (SPLIT -2)
                                (("1" (REPLACE -1 :DIR RL)
                                  (("1" (REVEAL -2)
                                    (("1"
                                      (INST -1 "i"
                                       "vs WITH [(n) := eval(e1, vs, n)]" "x"
                                       "n+1")
                                      (("1" (SPLIT -1)
                                        (("1" (ASSERT)
                                          (("1"
                                            (CASE
                                                "vs WITH [(i) := x, (n) := eval(e1, vs, n)] = vs WITH [(n) := eval(e1, vs, n), (i) := x]")
                                            (("1" (REPLACE -1 :HIDE? T)
                                              (("1" (PROPAX) NIL NIL)) NIL)
                                             ("2" (GRIND) NIL NIL))
                                            NIL))
                                          NIL)
                                         ("2" (HIDE-ALL-BUT (1 -3))
                                          (("2" (SKEEP)
                                            (("2" (INST? -2 :WHERE 1)
                                              (("2" (ASSERT)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE-ALL-BUT (1 -2))
                                  (("2" (SKEEP)
                                    (("2" (INST? -2 :WHERE 1)
                                      (("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE-ALL-BUT (1 -2))
                                (("2" (SKEEP)
                                  (("2" (INST? -2 :WHERE 1)
                                    (("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (TYPEPRED "e2") (("2" (PROPAX) NIL NIL)) NIL))
                  NIL)
                 ("2" (TYPEPRED "e1") (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("15" (ASSERT) NIL NIL) ("16" (ASSERT) NIL NIL)
         ("17" (ASSERT) NIL NIL) ("18" (ASSERT) NIL NIL)
         ("19" (ASSERT) NIL NIL) ("20" (ASSERT) NIL NIL)
         ("21" (ASSERT) NIL NIL) ("22" (ASSERT) NIL NIL)
         ("23" (ASSERT) NIL NIL)
         ("24"
          (SKOLEM 1 ("pre1" "pre2" "pre3" "pre4" "f" "F" "e1" "e2" "e3" "e4"))
          (("24" (FLATTEN)
            (("24" (HIDE -5)
              (("24" (SPLIT -1)
                (("1" (SPLIT -2)
                  (("1" (SPLIT -3)
                    (("1" (SPLIT -4)
                      (("1" (SKEEP)
                        (("1" (EXPAND "eval" 1)
                          (("1" (INST? -1 :WHERE 1)
                            (("1" (INST? -2 :WHERE 1)
                              (("1" (INST? -3 :WHERE 1)
                                (("1" (INST? -4 :WHERE 1)
                                  (("1" (SPLIT -1)
                                    (("1" (SPLIT -2)
                                      (("1" (SPLIT -3)
                                        (("1" (SPLIT -4)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (SKEEP)
                                            (("2" (INST? -5 :WHERE 1)
                                              (("2" (ASSERT)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (SKEEP)
                                          (("2" (INST? -5 :WHERE 1)
                                            (("2" (ASSERT)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKEEP)
                                        (("2" (INST? -5 :WHERE 1)
                                          (("2" (ASSERT)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (SKEEP)
                                      (("2" (INST? -5 :WHERE 1)
                                        (("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "e4") (("2" (PROPAX) NIL NIL)) NIL))
                      NIL)
                     ("2" (TYPEPRED "e3") (("2" (PROPAX) NIL NIL)) NIL))
                    NIL)
                   ("2" (TYPEPRED "e2") (("2" (PROPAX) NIL NIL)) NIL))
                  NIL)
                 ("2" (TYPEPRED "e1") (("2" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ge_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)
    (VARIDX ADT-CONSTRUCTOR-DECL "[nat -> (varidx?)]" |IntervalExpr_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lt_realorder| NAME-JUDGEMENT "RealOrder" |real_orders| |reals|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|IntervalExpr_induction| FORMULA-DECL NIL |IntervalExpr_adt| NIL)
    (|eval| DEF-DECL "real" |interval_expr| NIL)
    (|RealExpr| TYPE-EQ-DECL NIL |IntervalExpr_adt| NIL)
    (|varidx| ADT-ACCESSOR-DECL "[(varidx?) -> nat]" |IntervalExpr_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |IntervalExpr_adt| NIL)
    (|upfrom| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Env| TYPE-EQ-DECL NIL |box| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|fun4?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|letin?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]"
     |IntervalExpr_adt| NIL)
    (|fun2?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|fun?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|div?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|pow?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|sq?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|mult?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|sub?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|neg?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|abs?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|add?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]" |IntervalExpr_adt|
     NIL)
    (|varidx?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]"
     |IntervalExpr_adt| NIL)
    (|const?| ADT-RECOGNIZER-DECL "[IntervalExpr -> boolean]"
     |IntervalExpr_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|IntervalExpr| TYPE-DECL NIL |IntervalExpr_adt| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL)))

