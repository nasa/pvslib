(|standard_form_extras|
 (|cons_max_length| 0
  (|cons_max_length-1| |nil| 3809866434
   ("" (SKEEP) (("" (EXPAND "max_length" 1 1) (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL))
   SHOSTAK))
 (|cutting_null| 0
  (|cutting_null-1| |nil| 3810372223
   (""
    (CASE
        "FORALL (N:nat, l:list[nat]): N = length(l) IMPLIES (cutting(l) = null IFF every(LAMBDA (n: nat): n = 0)(l))")
    (("1" (SKEEP) (("1" (INST -1 "length(m`alpha)" "m`alpha") NIL NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "N")
        (("1" (SKEEP)
          (("1" (EXPAND "length")
            (("1" (LIFT-IF -1)
              (("1" (SPLIT -1)
                (("1" (EXPAND "cutting")
                  (("1" (ASSERT)
                    (("1" (EXPAND "every") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "cutting" +)
              (("2"
                (CASE
                    "FORALL (ll:(cons?[nat])): last(ll) = nth(ll, length(ll)-1)")
                (("1" (EXPAND "length" -3)
                  (("1" (ASSERT)
                    (("1" (LIFT-IF -3)
                      (("1" (SPLIT -3)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (ASSERT)
                          (("2" (FLATTEN)
                            (("2" (ASSERT)
                              (("2" (INST -2 "l")
                                (("2" (REPLACE -2 2)
                                  (("2" (CASE "nth(l, length(l) - 1) = 0")
                                    (("1" (ASSERT)
                                      (("1" (INST -4 "rdc(l)")
                                        (("1" (EXPAND "rdc" -4 1)
                                          (("1" (REWRITE "length_reverse" -4)
                                            (("1" (CASE "NOT j+1 = length(l)")
                                              (("1" (EXPAND "length" 1)
                                                (("1" (PROPAX) NIL NIL)) NIL)
                                               ("2"
                                                (REWRITE "length_reverse" -1
                                                 :DIR RL)
                                                (("2" (EXPAND "length" -1)
                                                  (("2" (ASSERT)
                                                    (("2" (LIFT-IF -1)
                                                      (("2" (SPLIT -1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (CASE
                                                                  "NOT ((cutting(rdc(l)) = null) = (every(LAMBDA (n: nat): n = 0)(rdc(l))))")
                                                              (("1" (IFF 1)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2"
                                                                (REPLACE -1 3)
                                                                (("2"
                                                                  (REWRITE
                                                                   "every_nth"
                                                                   3)
                                                                  (("2"
                                                                    (REWRITE
                                                                     "every_nth"
                                                                     3)
                                                                    (("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (SPLIT
                                                                         3)
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (SKEEP)
                                                                            (("1"
                                                                              (CASE
                                                                                  "i = length(l)-1")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL)
                                                                               ("2"
                                                                                (INST
                                                                                 -1
                                                                                 "i")
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "rdc"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (REWRITE
                                                                                     "nth_reverse")
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "nth_reverse[nat]")
                                                                                      (("1"
                                                                                        (INST
                                                                                         -1
                                                                                         "l"
                                                                                         "length(l)-1 -i")
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             "length_reverse"
                                                                                             -1
                                                                                             :DIR
                                                                                             RL)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "nth"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (LIFT-IF
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (SPLIT
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (FLATTEN)
                                                                                                      (("1"
                                                                                                        (MOVE-TERMS
                                                                                                         -1
                                                                                                         L
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -1
                                                                                                           1
                                                                                                           :DIR
                                                                                                           RL)
                                                                                                          (("1"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             1
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (PROPAX)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (TYPEPRED
                                                                                                         "i")
                                                                                                        (("2"
                                                                                                          (REWRITE
                                                                                                           "length_reverse"
                                                                                                           -1
                                                                                                           :DIR
                                                                                                           RL)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (TYPEPRED
                                                                                       "i")
                                                                                      (("2"
                                                                                        (REWRITE
                                                                                         "length_reverse"
                                                                                         -1
                                                                                         :DIR
                                                                                         RL)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               2)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (TYPEPRED
                                                                                   "i")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "rdc")
                                                                                    (("2"
                                                                                      (REWRITE
                                                                                       "length_reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (REWRITE
                                                                                         "length_reverse"
                                                                                         -1
                                                                                         :DIR
                                                                                         RL)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               2)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (SKEEP)
                                                                            (("2"
                                                                              (TYPEPRED
                                                                               "i")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "rdc"
                                                                                 -1)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "rdc"
                                                                                   1)
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "nth_reverse"
                                                                                     1)
                                                                                    (("1"
                                                                                      (REWRITE
                                                                                       "length_reverse"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (INST
                                                                                         -2
                                                                                         "i")
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "nth_reverse[nat]")
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "l"
                                                                                             "length(l)-1-i")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "length"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "nth"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (LIFT-IF
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (SPLIT
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (EXPAND
                                                                                                             "nth"
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (FLATTEN)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "nth"
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               1)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (REWRITE
                                                                                           "length_reverse"
                                                                                           1
                                                                                           :DIR
                                                                                           RL)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "length"
                                                                                             1)
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (REWRITE
                                                                                       "length_reverse"
                                                                                       -1)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (CASE "NOT j+1 = length(l)")
                                              (("1" (EXPAND "length" 1)
                                                (("1" (PROPAX) NIL NIL)) NIL)
                                               ("2"
                                                (REWRITE "length_reverse" -1
                                                 :DIR RL)
                                                (("2" (EXPAND "length" -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (CASE "NOT j+1 = length(l)")
                                        (("1" (EXPAND "length" 1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (REWRITE "every_nth" -5)
                                          (("2" (INST -5 "length(l) -1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (ASSERT)
                                      (("3" (CASE "NOT j+1 = length(l)")
                                        (("1" (EXPAND "length" 1)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (INDUCT "ll")
                    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
                     ("3" (HIDE -)
                      (("3" (SKEEP)
                        (("3" (CASE "null?(cons2_var)")
                          (("1" (EXPAND "last" 1)
                            (("1" (EXPAND "length" +)
                              (("1" (EXPAND "length" +)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "nth" 1)
                                    (("1" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "last" 2)
                            (("2" (ASSERT)
                              (("2" (EXPAND "length" +)
                                (("2" (EXPAND "length" 2 1)
                                  (("2" (LIFT-IF 2)
                                    (("2" (SPLIT 2)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (EXPAND "nth" 2)
                                          (("2" (ASSERT)
                                            (("2" (LIFT-IF 2)
                                              (("2" (SPLIT 2)
                                                (("1" (FLATTEN)
                                                  (("1" (EXPAND "length" -1)
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("4" (SKEEP)
                      (("4" (EXPAND "length" 1) (("4" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("5" (SKEEP)
                      (("5" (EXPAND "length" 3) (("5" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("6" (SKEEP)
                      (("6" (EXPAND "length" 3)
                        (("6" (ASSERT)
                          (("6" (EXPAND "length" 2) (("6" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("3" (SKEEP)
                  (("3" (EXPAND "length" 1) (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length_null| FORMULA-DECL NIL |more_list_props| |structures|)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|every_nth| FORMULA-DECL NIL |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nth_reverse| FORMULA-DECL NIL |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_reverse| FORMULA-DECL NIL |list_props| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|rdc| CONST-DECL "list[T]" |more_list_props| |structures|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|last| DEF-DECL "real" |standard_form_poly| NIL)
    (|Polynomial| TYPE-EQ-DECL NIL |standard_form_poly| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cutting| DEF-DECL "list[nat]" |standard_form_mult_poly| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL))
   SHOSTAK))
 (|cutting_cons| 0
  (|cutting_cons-1| |nil| 3810378720
   (""
    (CASE "FORALL (n:nat, l: (cons?[nat])):
                                          (cons?(cutting(l)) and n=length(l)) IMPLIES cutting(l) = cons(car(l), cutting(cdr(l)))")
    (("1" (SKEEP)
      (("1" (INST?) (("1" (INST -1 "length(l)") (("1" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "n")
        (("1" (SKEEP)
          (("1" (TYPEPRED "l")
            (("1" (EXPAND "length") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "cutting" 1 1)
              (("2" (LIFT-IF 1)
                (("2" (SPLIT 1)
                  (("1" (FLATTEN)
                    (("1" (EXPAND "cutting" -3)
                      (("1" (ASSERT)
                        (("1" (CASE "j=0")
                          (("1" (REPLACE -1)
                            (("1" (EXPAND "cutting" -4)
                              (("1" (ASSERT)
                                (("1" (LIFT-IF -4)
                                  (("1" (SPLIT -4)
                                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (EXPAND "rdc" 1)
                                        (("2"
                                          (REWRITE "length_reverse" -5 :DIR RL)
                                          (("2" (EXPAND "length" -5)
                                            (("2" (ASSERT)
                                              (("2" (LIFT-IF -5)
                                                (("2" (SPLIT -5)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2"
                                                      (REWRITE "length_reverse"
                                                       -1 :DIR RL)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (EXPAND "length" -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "cutting" 2 2)
                            (("2" (LIFT-IF 2)
                              (("2" (SPLIT 2)
                                (("1" (FLATTEN)
                                  (("1" (EXPAND "length" -5)
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (LEMMA "standard_form_poly.last_cdr")
                                    (("2" (INST -1 "l")
                                      (("1" (REPLACE -1 :DIR RL)
                                        (("1" (ASSERT)
                                          (("1" (INST -3 "rdc(l)")
                                            (("1" (ASSERT)
                                              (("1" (SPLIT -3)
                                                (("1" (REPLACE -1)
                                                  (("1" (DECOMPOSE-EQUALITY 2)
                                                    (("1" (EXPAND "rdc")
                                                      (("1"
                                                        (LEMMA
                                                         "nth_reverse[nat]")
                                                        (("1"
                                                          (INST-CP -1 "l"
                                                           "length(l)-1")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND "nth" -2
                                                                      1)
                                                              (("1"
                                                                (INST -1
                                                                 "cdr(reverse(l))"
                                                                 "0")
                                                                (("1"
                                                                  (EXPAND "nth"
                                                                          -1 1)
                                                                  (("1"
                                                                    (REPLACE -1
                                                                             1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "nth" -2
                                                                       2)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -2
                                                                         :DIR
                                                                         RL)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -7 1
                                                                           :DIR
                                                                           RL)
                                                                          (("1"
                                                                            (REWRITE
                                                                             "length_reverse"
                                                                             -7
                                                                             :DIR
                                                                             RL)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "length"
                                                                               -7)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (LIFT-IF
                                                                                   -7)
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     -7)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (FLATTEN)
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (REWRITE
                                                                   "length_reverse"
                                                                   -6 :DIR RL)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "length"
                                                                     -6)
                                                                    (("2"
                                                                      (LIFT-IF
                                                                       -6)
                                                                      (("2"
                                                                        (SPLIT
                                                                         -6)
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("3"
                                                                  (REWRITE
                                                                   "every_reverse[number]")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    (("3"
                                                                      (TYPEPRED
                                                                       "l")
                                                                      (("3"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (CASE
                                                          "cdr[nat](rdc[nat](l)) = rdc[nat](cdr[nat](l))")
                                                      (("1" (REPLACE -1)
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (REWRITE
                                                         "list_extensionality"
                                                         1)
                                                        (("2"
                                                          (CASE
                                                              "length(cdr[nat](rdc[nat](l))) = length(rdc[nat](cdr[nat](l)))")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (SKEEP :PREDS? T)
                                                              (("1"
                                                                (HIDE
                                                                 (-3 -4 -5 2))
                                                                (("1"
                                                                  (EXPAND
                                                                   "rdc")
                                                                  (("1"
                                                                    (REWRITE
                                                                     "nth_reverse"
                                                                     1)
                                                                    (("1"
                                                                      (CASE
                                                                          "NOT nth(cdr[nat](reverse(cdr(reverse(l)))), n) = nth(
                                                                                                                                                            (reverse(cdr(reverse(l)))), n+1)")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "nth"
                                                                         1 2)
                                                                        (("1"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (REWRITE
                                                                         "nth_reverse"
                                                                         -1)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1)
                                                                          (("1"
                                                                            (CASE
                                                                                "not nth(cdr(reverse(cdr[nat](l))),
                                                                                                                                                                                          length(cdr(reverse(cdr[nat](l)))) - 1 - n) = nth((reverse(cdr[nat](l))),
                                                                                                                                                                                          length(cdr(reverse(cdr[nat](l)))) - 1 - n +1)")
                                                                            (("1"
                                                                              (EXPAND
                                                                               "nth"
                                                                               1
                                                                               2)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (LIFT-IF
                                                                                   1)
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     1)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (MOVE-TERMS
                                                                                         -1
                                                                                         L
                                                                                         2)
                                                                                        (("1"
                                                                                          (REPLACE
                                                                                           -1)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            (("1"
                                                                                              (REWRITE
                                                                                               "length_reverse"
                                                                                               -1
                                                                                               :DIR
                                                                                               RL)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (REPLACE
                                                                               -1)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (REWRITE
                                                                                   "nth_reverse"
                                                                                   1)
                                                                                  (("1"
                                                                                    (CASE
                                                                                        " NOT nth(cdr(reverse(l)), length[real](cdr(reverse(l))) - 2 - n) =  nth((reverse(l)), length[real]((reverse(l))) - 2 - n)")
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "length"
                                                                                       1
                                                                                       2)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (LIFT-IF
                                                                                           1)
                                                                                          (("1"
                                                                                            (SPLIT
                                                                                             1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (REWRITE
                                                                                                   "length_reverse"
                                                                                                   -7
                                                                                                   :DIR
                                                                                                   RL)
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "length"
                                                                                                     -7)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "nth"
                                                                                                 2
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (LIFT-IF
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (SPLIT
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (MOVE-TERMS
                                                                                                           -1
                                                                                                           L
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (MOVE-TERMS
                                                                                                             -1
                                                                                                             L
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (REPLACE
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "length_reverse"
                                                                                                                   -7
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "length"
                                                                                                                     -7)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (REWRITE
                                                                                                                         "length_reverse"
                                                                                                                         -1
                                                                                                                         :DIR
                                                                                                                         RL)
                                                                                                                        (("1"
                                                                                                                          (EXPAND
                                                                                                                           "length"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (REWRITE
                                                                                       "nth_reverse"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (REWRITE
                                                                                         "length_reverse"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (REPLACE
                                                                                             -1)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "nth"
                                                                                               1
                                                                                               1)
                                                                                              (("1"
                                                                                                (REWRITE
                                                                                                 "length_reverse"
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (REWRITE
                                                                                                   "length_reverse"
                                                                                                   1
                                                                                                   :DIR
                                                                                                   RL)
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "length"
                                                                                                     1
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (LIFT-IF
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (SPLIT
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (FLATTEN)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "length"
                                                                                                               -8)
                                                                                                              (("1"
                                                                                                                (REWRITE
                                                                                                                 "length_reverse"
                                                                                                                 -8
                                                                                                                 :DIR
                                                                                                                 RL)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "length"
                                                                                                                   -8)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (FLATTEN)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (REWRITE
                                                                                         "length_reverse"
                                                                                         1)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (REPLACE
                                                                                             -5)
                                                                                            (("2"
                                                                                              (REWRITE
                                                                                               "length_reverse"
                                                                                               -4)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "length"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (REWRITE
                                                                                                   "length_reverse"
                                                                                                   1
                                                                                                   :DIR
                                                                                                   RL)
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "length"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (LIFT-IF
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (SPLIT
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (FLATTEN)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 "length"
                                                                                                                 -8)
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "length_reverse"
                                                                                                                   -8
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (EXPAND
                                                                                                                     "length"
                                                                                                                     -8)
                                                                                                                    (("1"
                                                                                                                      (PROPAX)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("3"
                                                                                      (EXPAND
                                                                                       "length"
                                                                                       1)
                                                                                      (("3"
                                                                                        (ASSERT)
                                                                                        (("3"
                                                                                          (LIFT-IF
                                                                                           1)
                                                                                          (("3"
                                                                                            (SPLIT
                                                                                             1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (REWRITE
                                                                                                 "length_reverse"
                                                                                                 -7
                                                                                                 :DIR
                                                                                                 RL)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "length"
                                                                                                   -7)
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (REWRITE
                                                                                                 "length_reverse"
                                                                                                 -2
                                                                                                 :DIR
                                                                                                 RL)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "length"
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (LIFT-IF
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (REWRITE
                                                                                                               "length_reverse"
                                                                                                               -7
                                                                                                               :DIR
                                                                                                               RL)
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 "length"
                                                                                                                 -7)
                                                                                                                (("1"
                                                                                                                  (REWRITE
                                                                                                                   "length_reverse"
                                                                                                                   -7
                                                                                                                   :DIR
                                                                                                                   RL)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("4"
                                                                                      (REWRITE
                                                                                       "length_reverse"
                                                                                       -6
                                                                                       :DIR
                                                                                       RL)
                                                                                      (("4"
                                                                                        (EXPAND
                                                                                         "length"
                                                                                         -6)
                                                                                        (("4"
                                                                                          (ASSERT)
                                                                                          (("4"
                                                                                            (LIFT-IF
                                                                                             -6)
                                                                                            (("4"
                                                                                              (SPLIT
                                                                                               -6)
                                                                                              (("1"
                                                                                                (FLATTEN)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (FLATTEN)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (REWRITE
                                                                                                     "length_reverse"
                                                                                                     -5)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (REWRITE
                                                                                                         "length_reverse"
                                                                                                         2
                                                                                                         :DIR
                                                                                                         RL)
                                                                                                        (("2"
                                                                                                          (EXPAND
                                                                                                           "length"
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (REWRITE
                                                                                     "length_reverse"
                                                                                     -4)
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      (("2"
                                                                                        (REPLACE
                                                                                         -4)
                                                                                        (("2"
                                                                                          (SWAP-REL
                                                                                           1)
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "length_reverse"
                                                                                             1
                                                                                             :DIR
                                                                                             RL)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               1
                                                                                               1)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (LIFT-IF
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (FLATTEN)
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "length"
                                                                                                           -7)
                                                                                                          (("1"
                                                                                                            (REWRITE
                                                                                                             "length_reverse"
                                                                                                             -7
                                                                                                             :DIR
                                                                                                             RL)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "length"
                                                                                                               -7)
                                                                                                              (("1"
                                                                                                                (PROPAX)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("3"
                                                                              (ASSERT)
                                                                              (("3"
                                                                                (REPLACE
                                                                                 -3
                                                                                 -2)
                                                                                (("3"
                                                                                  (REWRITE
                                                                                   "length_reverse"
                                                                                   -2)
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    (("3"
                                                                                      (EXPAND
                                                                                       "length"
                                                                                       1
                                                                                       2)
                                                                                      (("3"
                                                                                        (ASSERT)
                                                                                        (("3"
                                                                                          (LIFT-IF
                                                                                           1)
                                                                                          (("3"
                                                                                            (SPLIT
                                                                                             1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   " length"
                                                                                                   -6)
                                                                                                  (("1"
                                                                                                    (REWRITE
                                                                                                     "length_reverse"
                                                                                                     -6
                                                                                                     :DIR
                                                                                                     RL)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "length"
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (PROPAX)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("4"
                                                                              (ASSERT)
                                                                              (("4"
                                                                                (REPLACE
                                                                                 -3)
                                                                                (("4"
                                                                                  (REWRITE
                                                                                   "length_reverse"
                                                                                   -2)
                                                                                  (("4"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (REWRITE
                                                                           "length_reverse"
                                                                           1
                                                                           :DIR
                                                                           RL)
                                                                          (("2"
                                                                            (EXPAND
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (LIFT-IF
                                                                                 1)
                                                                                (("2"
                                                                                  (SPLIT
                                                                                   1)
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (REWRITE
                                                                                         "length_reverse"
                                                                                         -6
                                                                                         :DIR
                                                                                         RL)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           -6)
                                                                                          (("1"
                                                                                            (LIFT-IF
                                                                                             -6)
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (SPLIT
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (FLATTEN)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (REWRITE
                                                                                                       "length_reverse"
                                                                                                       -1
                                                                                                       :DIR
                                                                                                       RL)
                                                                                                      (("2"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (FLATTEN)
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("3"
                                                                        (ASSERT)
                                                                        (("3"
                                                                          (REWRITE
                                                                           "length_reverse"
                                                                           -1
                                                                           :DIR
                                                                           RL)
                                                                          (("3"
                                                                            (ASSERT)
                                                                            (("3"
                                                                              (EXPAND
                                                                               "length"
                                                                               1)
                                                                              (("3"
                                                                                (LIFT-IF
                                                                                 1)
                                                                                (("3"
                                                                                  (SPLIT
                                                                                   1)
                                                                                  (("1"
                                                                                    (FLATTEN)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (REWRITE
                                                                                         "length_reverse"
                                                                                         -5
                                                                                         :DIR
                                                                                         RL)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "length"
                                                                                           -5)
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             "length_reverse"
                                                                                             -5
                                                                                             :DIR
                                                                                             RL)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (PROPAX)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("4"
                                                                        (TYPEPRED
                                                                         "l")
                                                                        (("4"
                                                                          (LEMMA
                                                                           "every_reverse[number]")
                                                                          (("4"
                                                                            (INST?)
                                                                            (("4"
                                                                              (ASSERT)
                                                                              (("4"
                                                                                (EXPAND
                                                                                 "every"
                                                                                 -1)
                                                                                (("4"
                                                                                  (REWRITE
                                                                                   "length_reverse"
                                                                                   -7
                                                                                   :DIR
                                                                                   RL)
                                                                                  (("4"
                                                                                    (EXPAND
                                                                                     "length"
                                                                                     -7)
                                                                                    (("4"
                                                                                      (LIFT-IF
                                                                                       -7)
                                                                                      (("4"
                                                                                        (SPLIT
                                                                                         -7)
                                                                                        (("1"
                                                                                          (FLATTEN)
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (FLATTEN)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (REPLACE
                                                                       -2)
                                                                      (("2"
                                                                        (REWRITE
                                                                         "length_reverse")
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (HIDE 2)
                                                            (("2" (HIDE 2)
                                                              (("2"
                                                                (HIDE (-1 -4))
                                                                (("2"
                                                                  (LEMMA
                                                                   "length_reverse[nat]")
                                                                  (("2"
                                                                    (INST -1
                                                                     "l")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "rdc")
                                                                      (("2"
                                                                        (EXPAND
                                                                         "length"
                                                                         -)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (LIFT-IF
                                                                             -1)
                                                                            (("2"
                                                                              (SPLIT
                                                                               -1)
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (FLATTEN)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  (("2"
                                                                                    (REWRITE
                                                                                     "length_reverse"
                                                                                     -1
                                                                                     :DIR
                                                                                     RL)
                                                                                    (("2"
                                                                                      (LABEL
                                                                                       "fresh"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (WITH-TCCS
                                                                                         (SWAP-REL
                                                                                          "fresh"))
                                                                                        (("2"
                                                                                          (UNLABEL
                                                                                           "fresh")
                                                                                          (("2"
                                                                                            (REWRITE
                                                                                             "length_reverse[nat]"
                                                                                             -1
                                                                                             :DIR
                                                                                             RL)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "length"
                                                                                               -)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (LIFT-IF
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (FLATTEN)
                                                                                                      NIL
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (FLATTEN)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (LIFT-IF
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (FLATTEN)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  (("2"
                                                                                                                    (REWRITE
                                                                                                                     "length_reverse[nat]"
                                                                                                                     -1
                                                                                                                     :DIR
                                                                                                                     RL)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (EXPAND "rdc" 1)
                                                  (("2"
                                                    (REWRITE "length_reverse"
                                                     -4 :DIR RL)
                                                    (("2" (EXPAND "length" -4)
                                                      (("2" (ASSERT)
                                                        (("2" (LIFT-IF -4)
                                                          (("2" (SPLIT -4)
                                                            (("1" (FLATTEN)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2" (FLATTEN)
                                                              (("2"
                                                                (REWRITE
                                                                 "length_reverse"
                                                                 -1 :DIR RL)
                                                                (("2"
                                                                  (EXPAND
                                                                   "length" -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "standard_form_poly.last_cdr")
                                                                      (("2"
                                                                        (LIFT-IF
                                                                         -2)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -2)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            NIL
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   3)
                                                                                  (("2"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (LEMMA "length_rdc[nat]")
                                              (("2" (INST -1 "l")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (EXPAND "length" 1 1)
                                        (("2" (ASSERT)
                                          (("2" (EXPAND "length " -4)
                                            (("2" (EXPAND "length" -4)
                                              (("2" (EXPAND "length" 1)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (LEMMA "standard_form_poly.last_cdr")
                      (("2" (INST -1 "l")
                        (("1" (REPLACE -1)
                          (("1" (EXPAND "cutting" 2)
                            (("1" (ASSERT)
                              (("1" (EXPAND "length" -4)
                                (("1" (EXPAND "length" -4)
                                  (("1" (LIFT-IF -4)
                                    (("1" (SPLIT -4)
                                      (("1" (FLATTEN)
                                        (("1" (LIFT-IF 2)
                                          (("1" (SPLIT 2)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT)
                                                (("1" (DECOMPOSE-EQUALITY 1)
                                                  (("1" (EXPAND "every" 1)
                                                    (("1" (ASSERT)
                                                      (("1" (EXPAND "every" 1)
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (DECOMPOSE-EQUALITY 3)
                                            (("2" (EXPAND "every" 1)
                                              (("2" (ASSERT)
                                                (("2" (TYPEPRED "cdr[nat](l)")
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (EXPAND "length")
                            (("2" (ASSERT)
                              (("2" (DECOMPOSE-EQUALITY 3)
                                (("1" (TYPEPRED "l")
                                  (("1" (CASE "NOT j=0")
                                    (("1" (ASSERT) NIL NIL)
                                     ("2" (REPLACE -1)
                                      (("2" (EXPAND "length" -6)
                                        (("2" (LIFT-IF -6)
                                          (("2" (SPLIT -6)
                                            (("1" (EXPAND "cutting" 1)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (EXPAND "every")
                                  (("2" (TYPEPRED "cutting(cdr[nat](l))")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length_reverse| FORMULA-DECL NIL |list_props| NIL)
    (|reverse| DEF-DECL "list[T]" |list_props| NIL)
    (|rdc| CONST-DECL "list[T]" |more_list_props| |structures|)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|Polynomial| TYPE-EQ-DECL NIL |standard_form_poly| NIL)
    (|length_rdc| FORMULA-DECL NIL |list_lemmas| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|odd_minus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|even_minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (|nth| DEF-DECL "T" |list_props| NIL)
    (|every_reverse| FORMULA-DECL NIL |list_lemmas| NIL)
    (|nth_reverse| FORMULA-DECL NIL |list_props| NIL)
    (|list_cons_extensionality| FORMULA-DECL NIL |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|last_cdr| FORMULA-DECL NIL |standard_form_poly| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cutting| DEF-DECL "list[nat]" |standard_form_mult_poly| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL))
   SHOSTAK))
 (|lft_ml_n| 0
  (|lft_ml_n-1| |nil| 3810396968
   ("" (SKEEP)
    (("" (LEMMA "max_length_is_nth")
      (("" (INST?)
        (("1" (SKEEP)
          (("1" (LEMMA "lft_length_nth")
            (("1" (INST?)
              (("1" (ASSERT) NIL NIL)
               ("2" (TYPEPRED "j")
                (("2" (LEMMA "Lft_length")
                  (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (LEMMA "Lft_length")
          (("2" (INST?)
            (("2" (EXPAND "length" -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|max_length_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|lft_length_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|lft_max_length_TCC1| 0
  (|lft_max_length_TCC1-1| |nil| 3809778143 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|lft_max_length| SUBTYPE
    "standard_form_mult_poly.max_length(standard_form_extras.p)"
    "{nn: naturalnumbers.nat | reals.>=(nn, standard_form_mult_poly.max_length(standard_form_extras.p))}")))
 (|lft_max_length| 0
  (|lft_max_length-1| |nil| 3809778149
   ("" (SKEEP)
    (("" (LEMMA "lft_length_nth")
      (("" (CASE "null?(p)")
        (("1" (EXPAND "max_length")
          (("1" (ASSERT)
            (("1" (EXPAND "lft" 1 1)
              (("1" (LIFT-IF 1)
                (("1" (SPLIT 1)
                  (("1" (PROPAX) NIL NIL)
                   ("2" (FLATTEN)
                    (("2" (EXPAND "length" 1) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (LEMMA "max_length_is_nth")
          (("2" (INST -1 "p")
            (("1" (SKEEP)
              (("1" (INST -2 "p" "max_length(p)" "j")
                (("1" (ASSERT)
                  (("1" (LEMMA "max_length_is_nth")
                    (("1" (LEMMA "lft_Unif")
                      (("1" (INST -1 "p")
                        (("1" (LEMMA "max_length_Unif")
                          (("1" (INST -1 "lft(p)(max_length(p))" "j")
                            (("1" (ASSERT) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (EXPAND "Unif?")
                                (("2" (LEMMA "Lft_length")
                                  (("2" (INST?)
                                    (("2" (EXPAND "length" -1)
                                      (("2" (LIFT-IF -1)
                                        (("2" (SPLIT -1)
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL)
             ("2" (CASE "length(p)>0")
              (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|lft_length_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lft_Unif| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length_Unif| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|UnifInd| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|permutations_max_length| 0
  (|permutations_max_length-1| |nil| 3810545320
   ("" (SKEEP)
    (("" (LEMMA "max_length_is_nth")
      (("" (INST -1 "p")
        (("1" (SKEEP)
          (("1" (LEMMA "permutations_preserve_contents")
            (("1" (INST -1 "p" "q" "_")
              (("1" (INST-CP -1 "j")
                (("1" (ASSERT)
                  (("1" (SKEEP)
                    (("1" (LEMMA "max_length_is_max")
                      (("1" (INST -1 "q" "j_1")
                        (("1" (LEMMA "permutations_is_commutative")
                          (("1" (INST?)
                            (("1" (FLATTEN)
                              (("1" (HIDE -2)
                                (("1" (ASSERT)
                                  (("1"
                                    (LEMMA "permutations_preserve_contents")
                                    (("1" (LEMMA "max_length_is_nth")
                                      (("1" (INST -1 "q")
                                        (("1" (SKOLEM -1 "k")
                                          (("1" (INST -2 "q" "p" "k")
                                            (("1" (ASSERT)
                                              (("1" (SKOLEM -2 "k_1")
                                                (("1"
                                                  (LEMMA "max_length_is_max")
                                                  (("1" (INST -1 "p" "k_1")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2"
                                                      (LEMMA
                                                       "same_occurrences_same_length")
                                                      (("2" (INST -1 "p" "q")
                                                        (("2"
                                                          (EXPAND
                                                           "permutations" -9)
                                                          (("2" (SPLIT -1)
                                                            (("1"
                                                              (EXPAND "length"
                                                                      -1)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2"
                                          (LEMMA
                                           "same_occurrences_same_length")
                                          (("2" (INST -1 "p" "q")
                                            (("2" (EXPAND "permutations" -8)
                                              (("2" (SPLIT -1)
                                                (("1" (EXPAND "length" -1)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (PROPAX) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "same_occurrences_same_length")
                          (("2" (INST -1 "p" "q")
                            (("2" (EXPAND "permutations" -5)
                              (("2" (SPLIT -1)
                                (("1" (EXPAND "length" -1)
                                  (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (LEMMA "same_occurrences_same_length")
          (("2" (INST -1 "p" "q")
            (("2" (EXPAND "permutations" -2)
              (("2" (SPLIT -1)
                (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (PROPAX) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|max_length_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length_is_max| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|permutations_is_commutative| FORMULA-DECL NIL |sorting_aux| |sorting|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|same_occurrences_same_length| FORMULA-DECL NIL |sorting_aux| |sorting|)
    (|permutations| CONST-DECL "bool" |sorting_aux| |sorting|)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|permutations_preserve_contents| FORMULA-DECL NIL |sorting_aux| |sorting|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|sortedsimplify_cons_TCC1| 0
  (|sortedsimplify_cons_TCC1-1| |nil| 3809855774
   ("" (LEMMA "leq_total_preorder") (("" (PROPAX) NIL NIL)) NIL)
   ((|leq_total_preorder| FORMULA-DECL NIL |standard_form_mult_poly| NIL)) NIL
   (|sortedsimplify_cons| SUBTYPE "standard_form_mult_poly.leq"
    "(total_preorder[monomial].total_preorder?)")))
 (|sortedsimplify_cons| 0
  (|sortedsimplify_cons-1| |nil| 3809855774
   (""
    (CASE
        "FORALL (n: nat, p: MultPoly): (n = length(p) and  is_sorted?(p) and cons?(p)) IMPLIES cons?(sortedsimplify(p))")
    (("1" (SKEEP)
      (("1" (INST -1 "length(p)" "p") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (LEMMA "leq_total_preorder")
        (("2" (INDUCT "n")
          (("1" (SKEEP)
            (("1" (ASSERT)
              (("1" (EXPAND "length") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (SKEEP)
            (("2" (SKEEP)
              (("2" (EXPAND "sortedsimplify" 1)
                (("2" (LIFT-IF 1)
                  (("2" (SPLIT 1)
                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (FLATTEN)
                      (("2" (SPLIT 2)
                        (("1" (FLATTEN) NIL NIL)
                         ("2" (ASSERT)
                          (("2" (FLATTEN)
                            (("2" (SPLIT 2)
                              (("1" (FLATTEN)
                                (("1"
                                  (INST -2 "cons(add_mono(car(p), car(cdr(p))),
                                       cdr(cdr(p)))")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "length" 4)
                                      (("1" (EXPAND "length" -2)
                                        (("1" (EXPAND "length" -2)
                                          (("1" (ASSERT)
                                            (("1" (CASE "null?(cdr(cdr(p)))")
                                              (("1" (EXPAND "is_sorted?")
                                                (("1" (SKEEP)
                                                  (("1" (TYPEPRED "k")
                                                    (("1" (EXPAND "length" -1)
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (EXPAND "length" -1)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND "length "
                                                                      -4)
                                                              (("1"
                                                                (EXPAND
                                                                 "length " -4)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2"
                                                (CASE
                                                    "is_sorted?(cdr(cdr(p)))")
                                                (("1" (LEMMA "add_mono_sorted")
                                                  (("1" (INST?)
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (EXPAND "add_mono" 1)
                                                        (("1"
                                                          (EXPAND "is_sorted?"
                                                                  -4)
                                                          (("1" (INST -4 "1")
                                                            (("1" (ASSERT)
                                                              (("1" (SPLIT -4)
                                                                (("1"
                                                                  (EXPAND "nth"
                                                                          -1)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "nth" -1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "nth"
                                                                       -1)
                                                                      (("1"
                                                                        (LEMMA
                                                                         "constant_doesnt_matter")
                                                                        (("1"
                                                                          (INST
                                                                           -1
                                                                           "car(cdr(p))"
                                                                           "(# C := car(cdr(p))`C + car(p)`C, alpha := car(p)`alpha #)"
                                                                           "car(cdr(cdr(p)))")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (EXPAND
                                                                   "length" 1)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "length"
                                                                     1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "length"
                                                                         1)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (LEMMA
                                                   "cdr_of_sorted_is_sorted")
                                                  (("2" (INST -1 "p")
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (LEMMA
                                                         "cdr_of_sorted_is_sorted")
                                                        (("2"
                                                          (INST -1 "cdr(p)")
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (SKEEP) NIL NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP)
      (("3" (LEMMA "leq_total_preorder") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   ((|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|cdr_of_sorted_is_sorted| FORMULA-DECL NIL |sorting| |sorting|)
    (|add_mono_sorted| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|constant_doesnt_matter| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|leq_total_preorder| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|total_preorder?| CONST-DECL "bool" |total_preorder| |sorting|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|leq| DEF-DECL "bool" |standard_form_mult_poly| NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|sortedsimplify| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|simplify_max_length| 0
  (|simplify_max_length-1| |nil| 3809784408
   (""
    (CASE
        "FORALL (p: MultPoly): is_sorted?(p) IMPLIES max_length(p) = max_length(sortedsimplify(p))")
    (("1" (SKEEP)
      (("1" (EXPAND "simplify")
        (("1" (LIFT-IF 1)
          (("1" (SPLIT 1)
            (("1" (FLATTEN) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
             ("2" (FLATTEN)
              (("2" (INST -1 "mv_sort(p)")
                (("2" (LEMMA "mv_sort_is_sorted")
                  (("2" (INST?)
                    (("2" (EXPAND "mv_is_sorted?")
                      (("2" (FLATTEN)
                        (("2" (ASSERT)
                          (("2" (LEMMA "mv_sort_max_length")
                            (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (SKEEP)
        (("2" (CASE "null?(p)")
          (("1" (EXPAND "sortedsimplify") (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (LEMMA "sortedsimplify_cons")
            (("2" (INST?)
              (("2" (ASSERT)
                (("2" (LEMMA "max_length_is_max")
                  (("2" (LEMMA "max_length_is_nth")
                    (("2" (INST-CP -1 "p")
                      (("2" (SKEEP)
                        (("2" (INST -1 "sortedsimplify(p)")
                          (("2" (SKOLEM -1 "k")
                            (("2" (LEMMA "simplify_alpha_reverse")
                              (("2" (INST -1 "p" "j")
                                (("2" (SKEEP)
                                  (("2" (INST-CP -4 "sortedsimplify(p)" "j_1")
                                    (("2" (LEMMA "simplify_alpha")
                                      (("2" (INST -1 "p" "k")
                                        (("2" (SKOLEM -1 "k_1")
                                          (("2" (INST -5 "p" "k_1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (LEMMA "leq_total_preorder") (("3" (PROPAX) NIL NIL)) NIL))
    NIL)
   ((|leq_total_preorder| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|max_length_is_max| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|simplify_alpha_reverse| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|simplify_alpha| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|max_length_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|sortedsimplify_cons| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|mv_sort_is_sorted| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_is_sorted?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|mv_sort_max_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_sort| CONST-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|simplify| CONST-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|total_preorder?| CONST-DECL "bool" |total_preorder| |sorting|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|leq| DEF-DECL "bool" |standard_form_mult_poly| NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|sortedsimplify| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|mv_standard_form_max_length| 0
  (|mv_standard_form_max_length-1| |nil| 3810309731
   ("" (LEMMA "standard_form_max_length")
    (("" (SKEEP) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|standard_form_max_length| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL))
   SHOSTAK))
 (|eval_vals_0_TCC1| 0
  (|eval_vals_0_TCC1-1| |nil| 3810369354 ("" (SUBTYPE-TCC) NIL NIL)
   ((AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|length_null| FORMULA-DECL NIL |more_list_props| |structures|))
   NIL
   (|eval_vals_0| SUBTYPE "standard_form_extras.vals"
    "{l: list_adt[real].list | reals.>=(list_props[real].length(l), list_props[nat].length(list_adt[nat].null))}")))
 (|eval_vals_0| 0
  (|eval_vals_0-1| |nil| 3810369365
   (""
    (CASE
        "FORALL (c: real, ind: list[nat], ( vals: list[real]| length(vals) = length(ind))):
        eval((# C := c, alpha := null[nat] #), ind)
            (vals)`C
         = c")
    (("1" (SKEEP) (("1" (EXPAND "full_eval") (("1" (INST?) NIL NIL)) NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "ind")
        (("1" (SKEEP) (("1" (EXPAND "eval") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
         ("2" (SKEEP)
          (("2" (SKEEP) (("2" (EXPAND "eval" 1) (("2" (INST?) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|list_length_n| DEF-DECL "list[nat]" |list_lemmas| NIL)
    (|full_eval| CONST-DECL "real" |eval_MultPoly| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|eval| DEF-DECL "monomial" |eval_MultPoly| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL))
   SHOSTAK))
 (|eval_is_map| 0
  (|eval_is_map-1| |nil| 3810486705 ("" (INDUCT-AND-SIMPLIFY "p") NIL NIL)
   ((|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|eval| DEF-DECL "MultPoly" |eval_MultPoly| NIL)
    (|eval| DEF-DECL "monomial" |eval_MultPoly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|sum_C_remove_TCC1| 0
  (|sum_C_remove_TCC1-1| |nil| 3810548162
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "length")
      (("" (LIFT-IF -2)
        (("" (SPLIT -2)
          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|length| DEF-DECL "nat" |list_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   NIL
   (|sum_C_remove| SUBTYPE "standard_form_extras.p"
    "(list_adt[monomial].cons?)")))
 (|sum_C_remove| 0
  (|sum_C_remove-1| |nil| 3810548174
   ("" (INDUCT "n")
    (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)
     ("3" (SKEEP)
      (("3" (SKEEP :PREDS? T)
        (("3" (CASE "j=0")
          (("1" (CASE "NOT i=0")
            (("1" (ASSERT) NIL NIL)
             ("2" (REPLACE -1)
              (("2" (EXPAND "remove" 1)
                (("2" (REWRITE "append_null_left")
                  (("2" (REPLACE -2)
                    (("2" (REPLACE -3)
                      (("2" (ASSERT)
                        (("2" (EXPAND "^" +)
                          (("2" (EXPAND "sum_C" 1)
                            (("2" (EXPAND "length" -3)
                              (("2" (LIFT-IF -3)
                                (("2" (ASSERT)
                                  (("2" (SPLIT -3)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (FLATTEN)
                                      (("2" (ASSERT)
                                        (("2" (EXPAND "length" -1)
                                          (("2" (LIFT-IF -1)
                                            (("2" (SPLIT -1)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "sum_C")
                                                  (("1" (EXPAND "nth")
                                                    (("1" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (CASE "i=0")
            (("1" (REPLACE -1)
              (("1" (EXPAND "sum_C" 2 1)
                (("1" (LIFT-IF 2)
                  (("1" (SPLIT 2)
                    (("1" (FLATTEN)
                      (("1" (EXPAND "length" -3) (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (EXPAND "remove" 2)
                        (("2" (REWRITE "append_null_left")
                          (("2" (EXPAND "nth" 2)
                            (("2"
                              (CASE
                                  "cdr(p) = p ^ (1, length[monomial](p) - 1)")
                              (("1" (ASSERT) NIL NIL)
                               ("2" (HIDE 3)
                                (("2" (LEMMA "list_extensionality[monomial]")
                                  (("2" (INST?)
                                    (("2" (FLATTEN)
                                      (("2" (HIDE -1)
                                        (("2" (ASSERT)
                                          (("2" (REWRITE "caret_length" 1)
                                            (("2" (EXPAND "length" 1 2)
                                              (("2" (SKEEP)
                                                (("2"
                                                  (LEMMA "caret_nth[monomial]")
                                                  (("2"
                                                    (INST -1 "p" "n+1"
                                                     "(1, length[monomial](p) - 1)")
                                                    (("2" (ASSERT)
                                                      (("2" (TYPEPRED "n")
                                                        (("2"
                                                          (EXPAND "length" -2
                                                                  1)
                                                          (("2"
                                                            (EXPAND "nth" -2 1)
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (EXPAND "nth" 3)
                (("2" (EXPAND "sum_C" 3 1)
                  (("2" (LIFT-IF 3)
                    (("2" (SPLIT 3)
                      (("1" (FLATTEN)
                        (("1" (EXPAND "length" -2) (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (INST -3 "cdr(p)" "i-1")
                          (("1" (REWRITE "remove_cdr" -3 :DIR RL)
                            (("1" (REPLACE -3 2)
                              (("1" (ASSERT)
                                (("1" (LEMMA "remove_length[monomial]")
                                  (("1" (INST -1 "p" "i")
                                    (("1" (EXPAND "sum_C" 2 2)
                                      (("1" (LIFT-IF 2)
                                        (("1" (SPLIT 2)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "length" -2 1)
                                              (("1" (LIFT-IF -2)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "remove" 2)
                                                (("2" (EXPAND "append" 2)
                                                  (("2" (LIFT-IF 2)
                                                    (("2" (SPLIT 2)
                                                      (("1" (FLATTEN)
                                                        (("1" (EXPAND "^" -1)
                                                          (("1" (ASSERT)
                                                            (("1" (LIFT-IF -1)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2" (ASSERT)
                                                          (("2" (EXPAND "^" 2)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (EXPAND "nth"
                                                                        2)
                                                                (("2" (PROPAX)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND " length" -1)
                            (("2" (LIFT-IF -1)
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (ASSERT)
      (("4" (SKEEP)
        (("4" (ASSERT)
          (("4" (SKEEP)
            (("4" (TYPEPRED "p")
              (("4" (EXPAND "length") (("4" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|append_null_left| FORMULA-DECL NIL |more_list_props| |structures|)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|remove_length| FORMULA-DECL NIL |perm_props| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|remove_cdr| FORMULA-DECL NIL |perm_props| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|caret_nth| FORMULA-DECL NIL |more_list_props| |structures|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|caret_length| FORMULA-DECL NIL |more_list_props| |structures|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|remove| CONST-DECL "list[T]" |perm_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|sum_C| DEF-DECL "real" |eval_MultPoly| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL))
   SHOSTAK))
 (|sum_C_perm| 0
  (|sum_C_perm-1| |nil| 3810546941
   ("" (LEMMA "same_occurrences_same_length")
    (("" (INDUCT "p")
      (("1" (SKEEP)
        (("1" (ASSERT)
          (("1" (INST -2 "null" "q")
            (("1" (EXPAND "permutations")
              (("1" (ASSERT)
                (("1" (SPLIT -2)
                  (("1" (EXPAND "length") (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (PROPAX) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (SKEEP)
          (("2" (LEMMA "remove_perm[monomial]")
            (("2" (INST -1 "cons(cons1_var, cons2_var)" "q")
              (("1" (ASSERT)
                (("1" (SKEEP)
                  (("1" (LEMMA "sum_C_remove")
                    (("1" (INST -1 "length(q)" "q" "i")
                      (("1" (REPLACE -1)
                        (("1" (EXPAND "sum_C" 1 1)
                          (("1" (INST -4 "remove(q, i)")
                            (("1" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (INST -3 "cons(cons1_var, cons2_var)" "q")
                  (("2" (SPLIT -3)
                    (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (EXPAND "permutations") (("2" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|permutations| CONST-DECL "bool" |sorting_aux| |sorting|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sum_C| DEF-DECL "real" |eval_MultPoly| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|length_null| FORMULA-DECL NIL |more_list_props| |structures|)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|remove| CONST-DECL "list[T]" |perm_props| NIL)
    (|sum_C_remove| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|remove_perm| FORMULA-DECL NIL |perm_props| NIL)
    (|same_occurrences_same_length| FORMULA-DECL NIL |sorting_aux| |sorting|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|mult_max_length| 0
  (|mult_max_length-1| |nil| 3811848893
   ("" (SKOLEM 1 ("r" "_"))
    (("" (INDUCT "p")
      (("1" (EXPAND "mult") (("1" (PROPAX) NIL NIL)) NIL)
       ("2" (SKEEP)
        (("2" (EXPAND "mult" 1)
          (("2" (EXPAND "max_length" 1)
            (("2" (EXPAND "mult" 1 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL))
   SHOSTAK))
 (|sorted_sans_add__max_length| 0
  (|sorted_sans_add__max_length-1| |nil| 3814223503
   (""
    (CASE " FORALL (A,n: nat, p: (mv_standard_sans_cut?(n)),
                                   q: (mv_standard_sans_cut?(n))):
                            ( length(p) + length(q) <= A) IMPLIES max_length(sorted_sans_add(n, p, q)) <=
                              max(max_length(p), max_length(q))")
    (("1" (SKEEP)
      (("1" (INST -1 "length(p) + length(q)" "n" "p" "q")
        (("1" (CASE "null?(q)")
          (("1" (CASE "null?(p)") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL))
            NIL)
           ("2" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "A")
        (("1" (SKEEP)
          (("1" (CASE "null?(q)")
            (("1" (CASE "null?(p)")
              (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "sorted_sans_add" 1 1)
              (("2" (LIFT-IF 1)
                (("2" (SPLIT 1)
                  (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (EXPAND "max_length" 1 2)
                    (("2" (ASSERT)
                      (("2" (HIDE -2)
                        (("2" (FLATTEN)
                          (("2" (LIFT-IF 2)
                            (("2" (SPLIT 2)
                              (("1" (FLATTEN)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "max_length" 1 1)
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (SPLIT 2)
                                  (("1" (FLATTEN)
                                    (("1" (INST -2 "n" "cdr(p)" "cdr(q)")
                                      (("1" (SPLIT 1)
                                        (("1" (FLATTEN)
                                          (("1" (HIDE -1)
                                            (("1" (REVEAL -)
                                              (("1" (HIDE -2)
                                                (("1" (EXPAND "length" -2)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (CASE
                                                          "max(max_length(cdr(p)), max_length(cdr(q))) <= max(max_length(p), max_length(q))")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2"
                                                        (EXPAND "max_length" 1
                                                                3)
                                                        (("2"
                                                          (EXPAND "max_length"
                                                                  1 4)
                                                          (("2"
                                                            (EXPAND "max" 1 2)
                                                            (("2" (LIFT-IF 1)
                                                              (("2" (SPLIT 1)
                                                                (("1" (FLATTEN)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (HIDE 2)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "max"
                                                                         1 1)
                                                                        (("1"
                                                                          (LIFT-IF
                                                                           1)
                                                                          (("1"
                                                                            (SPLIT
                                                                             1)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (FLATTEN)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "max" 1
                                                                       1)
                                                                      (("2"
                                                                        (LIFT-IF
                                                                         1)
                                                                        (("2"
                                                                          (SPLIT
                                                                           1)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "max"
                                                                                 1
                                                                                 1)
                                                                                (("1"
                                                                                  (LIFT-IF
                                                                                   1)
                                                                                  (("1"
                                                                                    (SPLIT
                                                                                     1)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (GRIND)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (GRIND)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (GRIND)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (HIDE 1)
                                            (("2" (SPLIT -2)
                                              (("1" (EXPAND "max_length" 1 1)
                                                (("1" (EXPAND "add_mono" 1 1)
                                                  (("1" (GRIND) NIL NIL)) NIL))
                                                NIL)
                                               ("2" (REVEAL -)
                                                (("2" (EXPAND "length" -2)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (LEMMA "mv_standard_sans_cdr")
                                        (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL)
                                       ("3" (LEMMA "mv_standard_sans_cdr")
                                        (("3" (INST?) (("3" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (SPLIT 2)
                                      (("1" (FLATTEN)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "max_length" 1 1)
                                            (("1" (ASSERT)
                                              (("1" (INST?)
                                                (("1" (SPLIT -2)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (CASE
                                                          "  max(max_length(cdr(p)), max_length(q)) <= max(max_length(p), max_length(q))")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (CASE
                                                              "NOT max_length(sorted_sans_add(n, cdr(p), q)) <= max_length(q)")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND "max" -2)
                                                              (("1"
                                                                (LIFT-IF -2)
                                                                (("1"
                                                                  (SPLIT -2)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (CASE
                                                                          "max_length(sorted_sans_add(n, cdr(p), q)) <=  max(max_length(p), max_length(q))")
                                                                      (("1"
                                                                        (CASE
                                                                            "length(car(p)`alpha) <=max(max_length(p), max_length(q))")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "max"
                                                                             2
                                                                             1)
                                                                            (("1"
                                                                              (LIFT-IF
                                                                               2)
                                                                              (("1"
                                                                                (SPLIT
                                                                                 2)
                                                                                (("1"
                                                                                  (FLATTEN)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (CASE
                                                                                  " max_length(p) <= max(max_length(p), max_length(q))")
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "max_length"
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2"
                                                              (EXPAND "max" 1
                                                                      1)
                                                              (("2" (LIFT-IF 1)
                                                                (("2" (SPLIT 1)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "max_length"
                                                                         2 1)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "max"
                                                                           2 1)
                                                                          (("2"
                                                                            (LIFT-IF
                                                                             2)
                                                                            (("2"
                                                                              (SPLIT
                                                                               2)
                                                                              (("1"
                                                                                (FLATTEN)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (FLATTEN)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT)
                                                        (("2"
                                                          (EXPAND "max" 1 1)
                                                          (("2" (LIFT-IF 1)
                                                            (("2" (SPLIT 1)
                                                              (("1" (FLATTEN)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2"
                                                                  (EXPAND
                                                                   "max_length"
                                                                   2 2)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT)
                                                    (("2" (REVEAL -)
                                                      (("2"
                                                        (EXPAND "length" -2 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (EXPAND "max_length" 2 1)
                                          (("2" (ASSERT)
                                            (("2" (INST?)
                                              (("2" (ASSERT)
                                                (("2" (REVEAL -)
                                                  (("2" (EXPAND "length" -2 2)
                                                    (("2" (ASSERT)
                                                      (("2" (EXPAND "max" 2 1)
                                                        (("2" (LIFT-IF 2)
                                                          (("2" (SPLIT 2)
                                                            (("1" (FLATTEN)
                                                              (("1"
                                                                (EXPAND
                                                                 "max_length" 1
                                                                 3)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (CASE
                                                                        "max_length(sorted_sans_add(n, p, cdr(q))) < max_length(cdr(q))")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "max"
                                                                         -5 1)
                                                                        (("2"
                                                                          (LIFT-IF
                                                                           -5)
                                                                          (("2"
                                                                            (SPLIT
                                                                             -5)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (FLATTEN)
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND
                                                                   "max_length"
                                                                   2 2)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|mv_standard_sans_cdr| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL))
   SHOSTAK))
 (|sorted_add_max_length| 0
  (|sorted_add_max_length-1| |nil| 3814224171
   ("" (LEMMA "sorted_sans_add__max_length")
    (("" (SKEEP)
      (("" (EXPAND "sorted_add" 1 1)
        (("" (INST?)
          (("" (ASSERT)
            ((""
              (CASE " max(max_length(lft(p)(max(max_length(p), max_length(q)))),
           max_length(lft(q)(max(max_length(p), max_length(q))))) <=max(max_length(p), max_length(q))")
              (("1" (ASSERT) NIL NIL)
               ("2" (HIDE 2 -1)
                (("2" (CASE "null?(p)")
                  (("1" (CASE "null?(q)")
                    (("1" (GRIND) NIL NIL)
                     ("2" (LEMMA "lft_n_max_length")
                      (("2" (INST -1 "q" "max(max_length(p), max_length(q))")
                        (("2" (ASSERT)
                          (("2" (REPLACE -1 2)
                            (("2" (EXPAND "lft" 2 1)
                              (("2" (EXPAND "length" 2 1)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "max_length" 2 1)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "max" 2 1)
                                        (("2" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (CASE "null?(q)")
                      (("1" (LEMMA "lft_n_max_length")
                        (("1" (INST?)
                          (("1" (ASSERT)
                            (("1" (REPLACE -1 2)
                              (("1" (EXPAND "lft" 2)
                                (("1" (EXPAND "length" 2 1)
                                  (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (LEMMA "lft_n_max_length")
                          (("2" (INST?)
                            (("2" (ASSERT)
                              (("2" (LEMMA "lft_n_max_length")
                                (("2"
                                  (INST -1 "q"
                                   "max(max_length(p), max_length(q))")
                                  (("2" (ASSERT)
                                    (("2" (REPLACE -1 3)
                                      (("2" (REPLACE -2 3)
                                        (("2" (HIDE -)
                                          (("2" (EXPAND "max" 3 1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|lft_n_max_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|int_max| APPLICATION-JUDGEMENT "{k: int | i <= k AND j <= k}" |real_defs|
     NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sorted_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sorted_sans_add__max_length| FORMULA-DECL NIL |standard_form_extras|
     NIL))
   SHOSTAK))
 (|sort_add_max_length| 0
  (|sort_add_max_length-1| |nil| 3814225226
   ("" (SKEEP)
    (("" (LEMMA "sorted_add_max_length")
      (("" (EXPAND "sort_add" 1 1)
        (("" (ASSERT)
          (("" (INST -1 "mv_standard_form(p)" "mv_standard_form(q)")
            (("1" (LIFT-IF 1)
              (("1" (SPLIT 1)
                (("1" (FLATTEN)
                  (("1" (EXPAND "mv_standard_form" -3)
                    (("1" (ASSERT)
                      (("1" (EXPAND "mv_standard_form" 1)
                        (("1" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (FLATTEN)
                    (("2" (SPLIT 2)
                      (("1" (FLATTEN)
                        (("1" (EXPAND "mv_standard_form" -2 1)
                          (("1" (ASSERT) NIL NIL)) NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT 2)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "mv_standard_form" -2 2)
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL)
                           ("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (LEMMA "standard_form_is_standard") (("2" (INST?) NIL NIL))
              NIL)
             ("3" (ASSERT)
              (("3" (LEMMA "standard_form_is_standard") (("3" (INST?) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sorted_add_max_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|standard_form_is_standard| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|mv_standard_form| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|sort_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|min_add_max_length| 0
  (|min_add_max_length-1| |nil| 3814225386
   ("" (LEMMA "sort_add_max_length")
    (("" (SKEEP)
      (("" (EXPAND "min_add" 1 1)
        (("" (LIFT-IF 1)
          (("" (SPLIT 1)
            (("1" (FLATTEN)
              (("1" (INST -2 "p" "q") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
             ("2" (FLATTEN)
              (("2" (ASSERT)
                (("2" (HIDE 1)
                  (("2" (LEMMA "lft_n_max_length")
                    (("2" (INST?)
                      (("2" (SPLIT -1)
                        (("1" (REPLACE -1 1)
                          (("1" (LEMMA "max_length_cut")
                            (("1" (INST -1 "sort_add(p,q)")
                              (("1" (ASSERT)
                                (("1" (INST -3 "p" "q")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "max_length" 2 2)
                          (("2" (ASSERT)
                            (("2" (EXPAND "lft" 2 1)
                              (("2" (ASSERT)
                                (("2" (EXPAND "length" 2 1)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "max_length" 2 1)
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mv_cut| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|sort_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|max_length_cut| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|lft_n_max_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|min_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sort_add_max_length| FORMULA-DECL NIL |standard_form_extras| NIL))
   SHOSTAK))
 (|add_max_length| 0
  (|add_max_length-1| |nil| 3811852700
   (""
    (CASE
        "FORALL (m,n: nat, p:(mv_standard_sans_cut?(n)), q:(mv_standard_sans_cut?(n))): m = length(p) + length(q) IMPLIES max_length(sorted_sans_add(n,p,q))<= max(max_length(p), max_length(q))")
    (("1" (SKEEP)
      (("1" (EXPAND "add")
        (("1" (LEMMA "allnonzero_max_length")
          (("1" (INST -1 "min_add(p,q)")
            (("1" (ASSERT)
              (("1"
                (CASE "NOT max_length(min_add(p, q)) <=
                max(max_length(p), max_length(q))")
                (("1" (HIDE (-1 2))
                  (("1" (LEMMA "min_add_max_length")
                    (("1" (HIDE -2)
                      (("1" (INST?)
                        (("1" (LEMMA "standard_form_max_length")
                          (("1" (INST-CP -1 "p")
                            (("1" (INST-CP -1 "q")
                              (("1" (ASSERT)
                                (("1" (HIDE -1)
                                  (("1" (EXPAND "max" -3 1)
                                    (("1" (LIFT-IF -3)
                                      (("1" (SPLIT -3)
                                        (("1" (ASSERT) NIL NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (PROPAX) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (ASSERT)
      (("2" (HIDE 2)
        (("2" (INDUCT "m" 1 "NAT_induction")
          (("2" (SKEEP)
            (("2" (CASE "j=0")
              (("1" (HIDE -2)
                (("1" (SKEEP)
                  (("1" (EXPAND "length" -2)
                    (("1" (LIFT-IF -2)
                      (("1" (ASSERT)
                        (("1" (SPLIT -2)
                          (("1" (FLATTEN)
                            (("1" (ASSERT)
                              (("1" (LIFT-IF -2)
                                (("1" (SPLIT -2)
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "sorted_sans_add")
                                      (("1" (EXPAND "max_length" 1 2)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (LIFT-IF -1)
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKEEP)
                (("2" (EXPAND "sorted_sans_add" +)
                  (("2" (LIFT-IF 2)
                    (("2" (SPLIT 2)
                      (("1" (FLATTEN)
                        (("1" (EXPAND "max_length" 1 2)
                          (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT 2)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "max_length" 1 3)
                              (("1" (ASSERT) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (SPLIT 2)
                              (("1" (FLATTEN)
                                (("1" (SPLIT 1)
                                  (("1" (FLATTEN)
                                    (("1"
                                      (INST -3 "length(cdr(p))+length(cdr(q))")
                                      (("1" (ASSERT)
                                        (("1" (SPLIT -3)
                                          (("1" (INST -1 "n" "cdr(p)" "cdr(q)")
                                            (("1" (ASSERT)
                                              (("1"
                                                (CASE
                                                    " max(max_length(cdr(p)), max_length(cdr(q))) <=  max(max_length(p), max_length(q))")
                                                (("1" (ASSERT) NIL NIL)
                                                 ("2" (HIDE 2)
                                                  (("2" (EXPAND "max" 1)
                                                    (("2" (LIFT-IF 1)
                                                      (("2" (SPLIT 1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (LIFT-IF 1)
                                                              (("1" (SPLIT 1)
                                                                (("1" (FLATTEN)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "max_length"
                                                                       1 2)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (FLATTEN)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "max_length"
                                                                       1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (LIFT-IF 2)
                                                            (("2" (SPLIT 2)
                                                              (("1" (FLATTEN)
                                                                (("1" (GRIND)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (EXPAND "length" -3)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (HIDE 1)
                                      (("2" (ASSERT)
                                        (("2" (EXPAND "length" -3)
                                          (("2" (ASSERT)
                                            (("2"
                                              (INST -2
                                               "length(cdr(p)) + length(cdr(q))")
                                              (("2" (ASSERT)
                                                (("2"
                                                  (INST -2 "n" "cdr(p)"
                                                   "cdr(q)")
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (EXPAND "max_length" 1 1)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (EXPAND "add_mono" 1
                                                                  1)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (EXPAND "max" 1
                                                                      1)
                                                              (("2" (LIFT-IF 1)
                                                                (("2" (SPLIT 1)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "max_length"
                                                                       1 3)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "max_length"
                                                                       2 1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (SPLIT 2)
                                  (("1" (FLATTEN)
                                    (("1" (INST -2 "j-1")
                                      (("1" (ASSERT)
                                        (("1" (INST -2 "n" "cdr(p)" "q")
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "length" -3 1)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "max_length" 1 2)
                                                  (("1"
                                                    (EXPAND "max_length" 1 1)
                                                    (("1" (EXPAND "max")
                                                      (("1" (GRIND :DEFS NIL)
                                                        NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (INST -1 "j-1")
                                      (("1" (ASSERT)
                                        (("1" (INST -1 " n" "p" "cdr(q)")
                                          (("1" (EXPAND "length" -2 2)
                                            (("1" (ASSERT)
                                              (("1" (EXPAND "max_length" 2 1)
                                                (("1" (EXPAND "max_length" 2 3)
                                                  (("1" (EXPAND "max")
                                                    (("1" (GRIND :DEFS NIL) NIL
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|min_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|min_add_max_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|standard_form_max_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|allnonzero_max_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL) NIL
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_max| APPLICATION-JUDGEMENT "{k: int | i <= k AND j <= k}" |real_defs|
     NIL)
    (|NAT_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL))
   SHOSTAK))
 (|mp_mult_max_length| 0
  (|mp_mult_max_length-1| |nil| 3861966855
   ("" (INDUCT "p")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "q=null")
          (("1" (GRIND) NIL NIL)
           ("2" (EXPAND "mp_mult" 2)
            (("2" (ASSERT)
              (("2" (LEMMA "add_max_length")
                (("2" (INST?)
                  (("2" (EXPAND "max_length" 2 2)
                    (("2" (INST -2 "q")
                      (("2" (LEMMA "mp_mono_mult_max")
                        (("2" (INST? -1)
                          (("2" (ASSERT)
                            (("2" (EXPAND "max" 2 1)
                              (("2" (LIFT-IF 2)
                                (("2" (SPLIT)
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "max" -2 1)
                                      (("1" (ASSERT)
                                        (("1" (EXPAND "max" -4)
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "max" -3)
                                              (("1" (LIFT-IF -3)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (EXPAND "max" (-1 -3))
                                      (("2" (ASSERT)
                                        (("2" (LIFT-IF)
                                          (("2" (EXPAND "max" 1 1)
                                            (("2" (LIFT-IF 1)
                                              (("2" (SPLIT 1)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT)
                                                    (("1" (SPLIT -2)
                                                      (("1" (FLATTEN)
                                                        (("1" (EXPAND "max" 2)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND "max" -4)
                                                              (("1"
                                                                (LIFT-IF -4)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2" (EXPAND "max" -3)
                                                          (("2" (LIFT-IF -3)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT)
                                                    (("2" (SPLIT -3)
                                                      (("1" (FLATTEN)
                                                        (("1" (EXPAND "max" 3)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (EXPAND "max" -4)
                                                              (("1" (LIFT-IF)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (FLATTEN)
                                                        (("2" (EXPAND "max" -3)
                                                          (("2" (LIFT-IF)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|mp_mono_mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|mp_mono_mult_max| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|add_max_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|mp_mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|null_allnonzero| 0
  (|null_allnonzero-1| |nil| 3810892729 ("" (INDUCT-AND-SIMPLIFY "p") NIL NIL)
   ((|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|allnonzero| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL))
   SHOSTAK))
 (|lft_constants_TCC1| 0
  (|lft_constants_TCC1-1| |nil| 3810894456
   ("" (SKEEP)
    (("" (LEMMA "Lft_length") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|lft_constants| SUBTYPE "standard_form_extras.i"
    "below[length[monomial](lft(p)(n))]")))
 (|lft_constants| 0
  (|lft_constants-1| |nil| 3810894523
   ("" (INDUCT "p")
    (("1" (SKEEP :PREDS? T)
      (("1" (EXPAND "length") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP :PREDS? T)
        (("2" (EXPAND "length" -1)
          (("2" (CASE "i=0")
            (("1" (REPLACE -1)
              (("1" (LEMMA "Lft_length")
                (("1" (INST?)
                  (("1" (EXPAND "length" -1)
                    (("1" (ASSERT)
                      (("1" (LIFT-IF -1)
                        (("1" (SPLIT -1)
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "nth" 2)
                              (("2" (EXPAND "lft" 2) (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "lft" 2)
              (("2" (ASSERT)
                (("2" (ASSERT)
                  (("2" (EXPAND "nth" +)
                    (("2" (ASSERT) (("2" (INST -3 "i-1" "n") NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP)
      (("3" (LEMMA "Lft_length") (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|mult_length_monom| 0
  (|mult_length_monom-1| |nil| 3814173305
   (""
    (CASE " FORALL (n:nat,m: monomial, r: real):
        length(m`alpha)=n IMPLIES (length(mult(r, m)`alpha) = length(m`alpha))")
    (("1" (SKEEP) (("1" (INST -1 "length(m`alpha)" "m" "r") NIL NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "n")
        (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "mult" 1 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|mult_length| 0
  (|mult_length-1| |nil| 3810895488
   ("" (SKOLEM 1 ("_" "r")) (("" (INDUCT-AND-SIMPLIFY "p") NIL NIL)) NIL)
   ((|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|scale_constants_TCC1| 0
  (|scale_constants_TCC1-1| |nil| 3810895272
   ("" (SKEEP) (("" (REWRITE "mult_length") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   ((|mult_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|scale_constants| SUBTYPE "standard_form_extras.i"
    "below[length[monomial](mult(r, p))]")))
 (|scale_constants| 0
  (|scale_constants-1| |nil| 3810895272
   ("" (INDUCT " p")
    (("1" (SKEEP :PREDS? T)
      (("1" (EXPAND "length") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "i=0")
          (("1" (REPLACE -1)
            (("1" (EXPAND "mult" +)
              (("1" (EXPAND "nth" 1)
                (("1" (EXPAND "mult") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL)
           ("2" (EXPAND "mult" +)
            (("2" (EXPAND "nth" 2) (("2" (ASSERT) (("2" (INST?) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP) (("3" (REWRITE "mult_length") (("3" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|mult_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|mult_map| 0
  (|mult_map-1| |nil| 3811867915 ("" (INDUCT-AND-SIMPLIFY "p") NIL NIL)
   ((|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|map| ADT-DEF-DECL "list[T1]" |list_adt_map| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|listn_0| NAME-JUDGEMENT "listn(0)" |standard_form_mult_poly| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|mult_mv_sans| 0
  (|mult_mv_sans-1| |nil| 3811867623
   ("" (SKEEP :PREDS? T)
    (("" (REWRITE "mult_map")
      (("" (EXPAND "mv_standard_sans_cut?")
        (("" (ASSERT)
          (("" (SPLIT -2)
            (("1" (EXPAND "map" 2 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (CASE "null?(p)")
              (("1" (EXPAND "map" 2 1) (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (EXPAND "map" 3 1)
                (("2" (ASSERT)
                  (("2" (FLATTEN)
                    (("2" (ASSERT)
                      (("2" (EXPAND "map" 3 2)
                        (("2" (LEMMA "map_length[monomial, monomial]")
                          (("2" (INST?)
                            (("2" (SPLIT 3)
                              (("1" (EXPAND "Unif?")
                                (("1" (EXPAND "map" 1 1)
                                  (("1" (SKEEP)
                                    (("1" (INST -2 "i" "j")
                                      (("1" (REWRITE "map_nth_rw")
                                        (("1" (REWRITE "map_nth_rw")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (ASSERT) NIL NIL)
                                       ("3" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (EXPAND "allnonzero?")
                                (("2" (EXPAND "map" 1 1)
                                  (("2" (SPLIT -4)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (SPLIT 2)
                                      (("1" (SKEEP)
                                        (("1" (REWRITE "map_nth_rw")
                                          (("1" (ASSERT)
                                            (("1" (INST 1 "i")
                                              (("1" (ASSERT)
                                                (("1" (GRIND-REALS) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (PROPAX) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (EXPAND "is_sorted?")
                                (("3" (SKEEP)
                                  (("3" (INST -6 "k")
                                    (("1" (ASSERT)
                                      (("1" (REWRITE "map_nth_rw")
                                        (("1" (REWRITE "map_nth_rw")
                                          (("1"
                                            (LEMMA "constant_doesnt_matter")
                                            (("1"
                                              (INST -1 "nth(p, k)"
                                               "(# C := nth(p, k)`C * r, alpha := nth(p,k)`alpha #)"
                                               " nth(p, 1 + k)")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (LEMMA
                                                   "constant_doesnt_matter_last")
                                                  (("1"
                                                    (INST -1
                                                     "(# C := nth(p, k)`C * r, alpha := nth(p, k)`alpha #)"
                                                     "
          nth(p, 1 + k)"
                                                     " (# C := nth(p, 1 + k)`C * r, alpha := nth(p, 1 + k)`alpha #)")
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("4" (EXPAND "simplified?")
                                (("4" (ASSERT)
                                  (("4" (EXPAND "map" 1 1)
                                    (("4" (SPLIT -6)
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (SPLIT -1)
                                            (("1" (SPLIT 2)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (SKEEP)
                                                (("2" (INST -2 "i" "j")
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (REWRITE "map_nth_rw")
                                                      (("2"
                                                        (REWRITE "map_nth_rw")
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (PROPAX) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mult_map| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|listn_0| NAME-JUDGEMENT "listn(0)" |standard_form_mult_poly| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|map_length| FORMULA-DECL NIL |more_map_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|i| SKOLEM-CONST-DECL
     "below(length(map[monomial, monomial](LAMBDA (m: monomial) -> monomial: (# C := m`C * r, alpha := m`alpha #))(p)))"
     |standard_form_extras| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|p| SKOLEM-CONST-DECL "(mv_standard_sans_cut?(n))" |standard_form_extras|
     NIL)
    (|n| SKOLEM-CONST-DECL "nat" |standard_form_extras| NIL)
    (|r| SKOLEM-CONST-DECL "nzreal" |standard_form_extras| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|j| SKOLEM-CONST-DECL
     "below(length(map[monomial, monomial](LAMBDA (m: monomial) -> monomial: (# C := m`C * r, alpha := m`alpha #))(p)))"
     |standard_form_extras| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|nonzero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|allnonzero?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|constant_doesnt_matter_last| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (|constant_doesnt_matter| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|k| SKOLEM-CONST-DECL
     "below[length[monomial](map[monomial, monomial](LAMBDA (m: monomial) -> monomial: (# C := m`C * r, alpha := m`alpha #))(p))]"
     |standard_form_extras| NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (|simplified?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|map| ADT-DEF-DECL "list[T1]" |list_adt_map| NIL))
   SHOSTAK))
 (|mult_mv_standard| 0
  (|mult_mv_standard-1| |nil| 3812101347
   ("" (SKEEP)
    (("" (REWRITE "mult_map")
      (("" (TYPEPRED "p")
        (("" (EXPAND "mv_standard_form?")
          (("" (SPLIT -1)
            (("1" (EXPAND "map" 1 1) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (FLATTEN)
              (("2" (ASSERT)
                (("2" (EXPAND "map" 2 1)
                  (("2" (SPLIT -1)
                    (("1" (FLATTEN)
                      (("1" (SPLIT 2)
                        (("1" (PROPAX) NIL NIL)
                         ("2"
                          (CASE
                              "null?(map[monomial,monomial](LAMBDA (m: monomial):
                       (# C := m`C * r, alpha := m`alpha #))
                    (p))")
                          (("1" (EXPAND "map" -1) (("1" (PROPAX) NIL NIL)) NIL)
                           ("2" (LEMMA "map_length[monomial, monomial]")
                            (("2" (INST?)
                              (("2" (LEMMA "map_nth_rw[monomial, monomial]")
                                (("2" (INST?)
                                  (("2" (SPLIT 2)
                                    (("1" (EXPAND "minlength?")
                                      (("1" (ASSERT)
                                        (("1" (SPLIT 1)
                                          (("1" (PROPAX) NIL NIL)
                                           ("2" (FLATTEN)
                                            (("2" (SPLIT 2)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (SPLIT -3)
                                                (("1" (SKEEP)
                                                  (("1" (INST -1 "i")
                                                    (("1" (INST -2 "i")
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (SPLIT -1)
                                                    (("1" (FLATTEN)
                                                      (("1"
                                                        (CASE
                                                            "NOT Unif?(map[monomial,monomial](LAMBDA (m: monomial): (# C := m`C * r, alpha := m`alpha #))
               (p))")
                                                        (("1" (HIDE (3))
                                                          (("1"
                                                            (EXPAND "Unif?")
                                                            (("1" (SKEEP)
                                                              (("1"
                                                                (INST-CP -3
                                                                 "i")
                                                                (("1"
                                                                  (INST -3 "j")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -3)
                                                                    (("1"
                                                                      (REPLACE
                                                                       -4)
                                                                      (("1"
                                                                        (INST
                                                                         -1 "i"
                                                                         "j")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT)
                                                          (("2" (SKEEP -3)
                                                            (("2" (INST -4 "j")
                                                              (("2"
                                                                (INST 3 "j")
                                                                (("2"
                                                                  (REPLACE -4)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (EXPAND "allnonzero?")
                                      (("2" (ASSERT)
                                        (("2" (SPLIT 1)
                                          (("1" (SPLIT -5)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2" (SKEEP)
                                              (("2" (INST -2 "i")
                                                (("2" (REPLACE -2)
                                                  (("2" (INST 1 "i")
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (PROPAX) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("3" (EXPAND "is_sorted?")
                                      (("3" (SKEEP)
                                        (("3" (INST -6 "k")
                                          (("1" (ASSERT)
                                            (("1"
                                              (LEMMA "constant_doesnt_matter")
                                              (("1" (INST-CP -3 "k")
                                                (("1" (INST -3 "k+1")
                                                  (("1" (REPLACES -3)
                                                    (("1" (REPLACES -3)
                                                      (("1"
                                                        (INST -1 "nth(p, k)"
                                                         "(# C := nth(p, k)`C * r, alpha := nth(p, k)`alpha #)"
                                                         " nth(p, 1 + k)")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (LEMMA
                                                             "constant_doesnt_matter_last")
                                                            (("1"
                                                              (INST -1
                                                               "(# C := nth(p, k)`C * r, alpha := nth(p, k)`alpha #)"
                                                               " 
          nth(p, 1 + k)"
                                                               " (# C := nth(p, 1 + k)`C * r, alpha := nth(p, 1 + k)`alpha #)")
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("4" (EXPAND "simplified?")
                                      (("4" (ASSERT)
                                        (("4" (SPLIT -6)
                                          (("1" (ASSERT) NIL NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT)
                                              (("2" (SPLIT -1)
                                                (("1" (SPLIT 2)
                                                  (("1" (PROPAX) NIL NIL)
                                                   ("2" (SKEEP)
                                                    (("2" (ASSERT)
                                                      (("2" (INST-CP -3 "i")
                                                        (("2" (INST -3 "j")
                                                          (("2" (REPLACE -3)
                                                            (("2" (REPLACE -4)
                                                              (("2"
                                                                (INST -2 "i"
                                                                 "j")
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (PROPAX) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (PROPAX) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|map| ADT-DEF-DECL "list[T1]" |list_adt_map| NIL)
    (|map_length| FORMULA-DECL NIL |more_map_props| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|listn_0| NAME-JUDGEMENT "listn(0)" |standard_form_mult_poly| NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|allnonzero?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|constant_doesnt_matter_last| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|constant_doesnt_matter| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|r| SKOLEM-CONST-DECL "nzreal" |standard_form_extras| NIL)
    (|p| SKOLEM-CONST-DECL "(mv_standard_form?)" |standard_form_extras| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|k| SKOLEM-CONST-DECL
     "below[length[monomial](map[monomial, monomial](LAMBDA (m: monomial) -> monomial: (# C := m`C * r, alpha := m`alpha #))(p))]"
     |standard_form_extras| NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (|simplified?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|mult_map| FORMULA-DECL NIL |standard_form_extras| NIL))
   SHOSTAK))
 (|max_length_different_lft_nth_TCC1| 0
  (|max_length_different_lft_nth_TCC1-1| |nil| 3812114899
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL))
   NIL
   (|max_length_different_lft_nth| SUBTYPE
    "real_defs.max(standard_form_mult_poly.max_length(standard_form_extras.p), standard_form_mult_poly.max_length(standard_form_extras.q))"
    "{nn: naturalnumbers.nat | reals.>=(nn, standard_form_mult_poly.max_length(standard_form_extras.p))}")))
 (|max_length_different_lft_nth_TCC2| 0
  (|max_length_different_lft_nth_TCC2-1| |nil| 3812114899
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (REWRITE "Lft_length" :DIR RL) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL))
   NIL
   (|max_length_different_lft_nth| SUBTYPE "standard_form_extras.i"
    "below[length[monomial](lft(p)(max(max_length(p), max_length(q))))]")))
 (|max_length_different_lft_nth_TCC3| 0
  (|max_length_different_lft_nth_TCC3-1| |nil| 3812114899
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL))
   NIL
   (|max_length_different_lft_nth| SUBTYPE
    "real_defs.max(standard_form_mult_poly.max_length(standard_form_extras.p), standard_form_mult_poly.max_length(standard_form_extras.q))"
    "{nn: naturalnumbers.nat | reals.>=(nn, standard_form_mult_poly.max_length(standard_form_extras.q))}")))
 (|max_length_different_lft_nth_TCC4| 0
  (|max_length_different_lft_nth_TCC4-1| |nil| 3812114899
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (REWRITE "Lft_length" :DIR RL) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL))
   NIL
   (|max_length_different_lft_nth| SUBTYPE "standard_form_extras.i"
    "below[length[monomial](lft(q)(max(max_length(p), max_length(q))))]")))
 (|max_length_different_lft_nth| 0
  (|max_length_different_lft_nth-1| |nil| 3812114900
   (""
    (CASE "FORALL (p, q: (minlength?)):
               length(p) = length(q) AND max_length(p) > max_length(q) IMPLIES
                EXISTS (i: below(length(p))):
                  nth(lft(p)(max(max_length(p), max_length(q))), i)`alpha /=
                   nth(lft(q)(max(max_length(p), max_length(q))), i)`alpha")
    (("1" (SKEEP)
      (("1" (CASE "max_length(p)> max_length(q)")
        (("1" (INST -2 "p" "q") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (INST -1 "q" "p")
          (("2" (ASSERT)
            (("2" (SKEEP)
              (("2" (ASSERT)
                (("2" (INST 4 "i")
                  (("2" (ASSERT)
                    (("2" (FLATTEN)
                      (("2"
                        (CASE
                            "max(max_length(q), max_length(p)) = max(max_length(p), max_length(q))")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (HIDE-ALL-BUT 1)
                          (("2" (EXPAND "max") (("2" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (SKEEP :PREDS? T)
        (("2" (EXPAND "minlength?" -1)
          (("2" (ASSERT)
            (("2" (SPLIT -1)
              (("1" (CASE "NOT null?(q)")
                (("1" (ASSERT)
                  (("1" (EXPAND "length" -3) (("1" (ASSERT) NIL NIL)) NIL))
                  NIL)
                 ("2" (EXPAND "max_length" -5) (("2" (ASSERT) NIL NIL)) NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (CASE "null?(q)")
                  (("1" (EXPAND "length" -4) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (SPLIT -1)
                    (("1" (LEMMA " max_length_is_nth")
                      (("1" (INST -1 "p")
                        (("1" (SKEEP)
                          (("1" (INST -2 "j") (("1" (ASSERT) NIL NIL)) NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (ASSERT)
                        (("2" (SPLIT -1)
                          (("1" (FLATTEN)
                            (("1" (SKEEP -2)
                              (("1" (EXPAND "Unif?")
                                (("1" (LEMMA "max_length_is_nth")
                                  (("1" (INST -1 "p")
                                    (("1" (SKEEP -1)
                                      (("1" (INST -2 "j!1" "j")
                                        (("1" (INST 5 "j")
                                          (("1" (REWRITE "lft_is_alt" 5)
                                            (("1" (EXPAND "lft_alt" 5)
                                              (("1" (REWRITE "map_nth_rw" 5)
                                                (("1" (EXPAND "lft_one")
                                                  (("1" (EXPAND "max")
                                                    (("1"
                                                      (REPLACE -2 -7 :DIR RL)
                                                      (("1" (REPLACE -1 -7)
                                                        (("1" (ASSERT)
                                                          (("1" (EXPAND "^" -7)
                                                            (("1"
                                                              (REWRITE
                                                               "append_null_right")
                                                              (("1"
                                                                (REWRITE
                                                                 "lft_is_alt")
                                                                (("1"
                                                                  (EXPAND
                                                                   "lft_alt")
                                                                  (("1"
                                                                    (REWRITE
                                                                     "map_nth_rw"
                                                                     -7)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "lft_one")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "minlength?")
                                                                        (("1"
                                                                          (REPLACE
                                                                           -7
                                                                           1)
                                                                          (("1"
                                                                            (REWRITE
                                                                             "last_is_nth")
                                                                            (("1"
                                                                              (REWRITE
                                                                               "nth_append")
                                                                              (("1"
                                                                                (SPLIT
                                                                                 -4)
                                                                                (("1"
                                                                                  (INST
                                                                                   -1
                                                                                   "j")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "length"
                                                                                     1
                                                                                     3)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (REWRITE
                                                                                         "length_append"
                                                                                         1)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (REWRITE
                                                                                             "length_appendn")
                                                                                            (("1"
                                                                                              (REWRITE
                                                                                               "nth_appendn")
                                                                                              (("1"
                                                                                                (LEMMA
                                                                                                 "max_length_is_nth")
                                                                                                (("1"
                                                                                                  (TYPEPRED
                                                                                                   "rem(1)(max_length(p) - 1 - length(nth(q, j)`alpha))")
                                                                                                  (("1"
                                                                                                    (CASE
                                                                                                        "NOT rem(1)(max_length(p) - 1 - length(nth(q, j)`alpha)) = 0")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (REPLACE
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (EXPAND
                                                                                                         "nth"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (TYPEPRED
                                                                                                 "q")
                                                                                                (("2"
                                                                                                  (REWRITE
                                                                                                   "every_nth"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (SKEEP)
                                                                                                    (("2"
                                                                                                      (LEMMA
                                                                                                       "max_length_is_max")
                                                                                                      (("2"
                                                                                                        (INST
                                                                                                         -1
                                                                                                         "q "
                                                                                                         "i")
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (REWRITE
                                                                                               "every_nth"
                                                                                               1)
                                                                                              (("2"
                                                                                                (SKEEP)
                                                                                                (("2"
                                                                                                  (LEMMA
                                                                                                   "max_length_is_max")
                                                                                                  (("2"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "q "
                                                                                                     "i")
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (SKEEP)
                                                                                          (("2"
                                                                                            (LEMMA
                                                                                             "max_length_is_max")
                                                                                            (("2"
                                                                                              (REWRITE
                                                                                               "every_nth"
                                                                                               1)
                                                                                              (("2"
                                                                                                (SKEEP)
                                                                                                (("2"
                                                                                                  (LEMMA
                                                                                                   "max_length_is_max")
                                                                                                  (("2"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "q "
                                                                                                     "i!1")
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (COPY
                                                                                         -1)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "Unif?"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (LEMMA
                                                                                             "max_length_is_nth")
                                                                                            (("1"
                                                                                              (INST
                                                                                               -1
                                                                                               "q")
                                                                                              (("1"
                                                                                                (SKEEP
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -2
                                                                                                   "j!2"
                                                                                                   "j")
                                                                                                  (("1"
                                                                                                    (REPLACE
                                                                                                     -2
                                                                                                     2
                                                                                                     :DIR
                                                                                                     RL)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (REWRITE
                                                                                                         "length_append")
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -2
                                                                                                           2
                                                                                                           :DIR
                                                                                                           RL)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -1
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (REWRITE
                                                                                                                 "length_appendn")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (REWRITE
                                                                                                                     "nth_appendn")
                                                                                                                    (("1"
                                                                                                                      (TYPEPRED
                                                                                                                       " rem(1)(max_length(p) - 1 - max_length(q))")
                                                                                                                      (("1"
                                                                                                                        (CASE
                                                                                                                            "not rem(1)(max_length(p) - 1 - max_length(q)) = 0")
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (REPLACE
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (EXPAND
                                                                                                                             "nth"
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (PROPAX)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (REWRITE
                                                                                                           "every_nth"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (SKEEP)
                                                                                                            (("2"
                                                                                                              (LEMMA
                                                                                                               "max_length_is_max")
                                                                                                              (("2"
                                                                                                                (INST
                                                                                                                 -1
                                                                                                                 "q"
                                                                                                                 "i")
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (REWRITE
                                                                                   "length_append"
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (EXPAND "max")
                                                                (("2"
                                                                  (REWRITE
                                                                   "every_nth"
                                                                   1)
                                                                  (("2" (SKEEP)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "max_length_is_max")
                                                                      (("2"
                                                                        (INST
                                                                         -1 "p"
                                                                         "i")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP)
      (("3" (SKEEP :PREDS? T)
        (("3" (REWRITE "Lft_length" :DIR RL) (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL)
     ("4" (SKEEP)
      (("4" (SKEEP) (("4" (EXPAND "max") (("4" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL)
     ("5" (SKEEP)
      (("5" (SKEEP)
        (("5" (REWRITE "Lft_length" :DIR RL) (("5" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL)
     ("6" (SKEEP)
      (("6" (SKEEP) (("6" (EXPAND "max") (("6" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|Lft_length| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|lft_alt| CONST-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|append_null_right| FORMULA-DECL NIL |more_list_props| |structures|)
    (|nth_append| FORMULA-DECL NIL |more_list_props| |structures|)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nth_appendn| FORMULA-DECL NIL |more_list_props| |structures|)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|mod| NONEMPTY-TYPE-EQ-DECL NIL |euclidean_division| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|rem| CONST-DECL "{r: mod(b) | EXISTS q: x = b * q + r}"
     |modulo_arithmetic| NIL)
    (|every_nth| FORMULA-DECL NIL |list_props| NIL)
    (|max_length_is_max| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length_appendn| FORMULA-DECL NIL |more_list_props| |structures|)
    (|length_append| FORMULA-DECL NIL |list_props| NIL)
    (|last_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (|lft_one| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|lft_is_alt| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|max_length_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL))
   SHOSTAK))
 (|lft_max_on_minlength| 0
  (|lft_max_on_minlength-1| |nil| 3812119622
   ("" (SKEEP :PREDS? T)
    (("" (LEMMA "list_extensionality[monomial]")
      (("" (REWRITE "lft_is_alt")
        (("" (INST?)
          (("" (FLATTEN)
            (("" (HIDE -1)
              (("" (ASSERT)
                (("" (EXPAND "lft_alt" 1 1)
                  (("" (REWRITE "map_length")
                    (("1" (SKEEP)
                      (("1" (EXPAND "lft_alt")
                        (("1" (REWRITE "map_nth_rw" 1)
                          (("1" (HIDE 2)
                            (("1" (EXPAND "lft_one")
                              (("1" (ASSERT)
                                (("1" (EXPAND "minlength?")
                                  (("1" (SPLIT -1)
                                    (("1" (ASSERT)
                                      (("1" (TYPEPRED "n")
                                        (("1" (EXPAND "lft_alt")
                                          (("1" (REWRITE "map_length")
                                            (("1" (ASSERT)
                                              (("1" (EXPAND "length")
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (SPLIT -1)
                                        (("1" (LEMMA "max_length_is_nth")
                                          (("1" (INST?)
                                            (("1" (SKEEP)
                                              (("1" (INST-CP -2 "j")
                                                (("1" (INST -2 "n")
                                                  (("1" (EXPAND "length")
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (REPLACE -1 :DIR RL)
                                                        (("1" (EXPAND "^" 2)
                                                          (("1"
                                                            (REWRITE
                                                             "append_null_right")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (DECOMPOSE-EQUALITY
                                                                 2)
                                                                (("1"
                                                                  (REWRITE
                                                                   "every_nth"
                                                                   1)
                                                                  (("1" (SKEEP)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "max_length_is_max")
                                                                      (("1"
                                                                        (INST
                                                                         -1 "p"
                                                                         "i")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (REWRITE
                                                               "every_nth" 1)
                                                              (("2" (SKEEP)
                                                                (("2"
                                                                  (LEMMA
                                                                   "max_length_is_max")
                                                                  (("2" (INST?)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT)
                                            (("2" (SPLIT -1)
                                              (("1" (FLATTEN)
                                                (("1" (EXPAND "Unif?" -1)
                                                  (("1"
                                                    (LEMMA "max_length_is_nth")
                                                    (("1" (INST -1 "p")
                                                      (("1" (SKEEP -1)
                                                        (("1" (INST -2 "j" "n")
                                                          (("1"
                                                            (REPLACE -1 :DIR
                                                                     RL)
                                                            (("1" (REPLACE -2)
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND "^"
                                                                          3)
                                                                  (("1"
                                                                    (REWRITE
                                                                     "append_null_right")
                                                                    (("1"
                                                                      (DECOMPOSE-EQUALITY
                                                                       3)
                                                                      (("1"
                                                                        (REWRITE
                                                                         "every_nth"
                                                                         1)
                                                                        (("1"
                                                                          (SKEEP)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "max_length_is_max")
                                                                            (("1"
                                                                              (INST?)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (REWRITE
                                                                       "every_nth"
                                                                       1)
                                                                      (("2"
                                                                        (SKEEP)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "max_length_is_max")
                                                                          (("2"
                                                                            (INST?)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (PROPAX) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (REWRITE "every_nth" 1)
                      (("2" (SKEEP)
                        (("2" (LEMMA "max_length_is_max")
                          (("2" (INST?)
                            (("1" (ASSERT) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (EXPAND "lft_alt" 4)
                                (("2" (EXPAND "map" 4) (("2" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_extensionality| FORMULA-DECL NIL |more_list_props| |structures|)
    (|lft_alt| CONST-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|map_nth_rw| FORMULA-DECL NIL |more_map_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|max_length_is_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|every_nth| FORMULA-DECL NIL |list_props| NIL)
    (|max_length_is_max| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|append_null_right| FORMULA-DECL NIL |more_list_props| |structures|)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|lft_one| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|map_length| FORMULA-DECL NIL |more_map_props| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|lft_is_alt| FORMULA-DECL NIL |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|sorted_sans_add_never_zero| 0
  (|sorted_sans_add_never_zero-1| |nil| 3814286610
   ("" (SKEEP)
    (("" (LEMMA "sorted_sans_add_nz")
      (("" (INST?)
        (("" (SKEEP)
          (("" (EXPAND "allnonzero?" -1)
            (("" (SPLIT -1)
              (("1" (TYPEPRED "i")
                (("1" (EXPAND "length" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
               ("2" (FLATTEN)
                (("2" (SPLIT -1)
                  (("1" (PROPAX) NIL NIL) ("2" (INST 1 "i") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|sorted_sans_add_nz| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|allnonzero?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|sorted_sans_add_zero_TCC1| 0
  (|sorted_sans_add_zero_TCC1-1| |nil| 3811870405 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL))
   NIL
   (|sorted_sans_add_zero| SUBTYPE "standard_form_extras.i"
    "below[length[monomial](q)]")))
 (|sorted_sans_add_zero| 0
  (|sorted_sans_add_zero-1| |nil| 3811870538
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (SPLIT 1)
        (("1" (FLATTEN)
          (("1" (EXPAND "every")
            (("1" (ASSERT)
              (("1" (EXPAND "sorted_sans_add")
                (("1" (EXPAND "length")
                  (("1" (LIFT-IF -2)
                    (("1" (SPLIT -2)
                      (("1" (ASSERT)
                        (("1" (LIFT-IF -2)
                          (("1" (SPLIT -2)
                            (("1" (ASSERT) (("1" (SKEEP :PREDS? T) NIL NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (ASSERT)
                                (("2" (ASSERT)
                                  (("2" (EXPAND "every")
                                    (("2" (LIFT-IF -2)
                                      (("2" (SPLIT -2)
                                        (("1"
                                          (EXPAND "mv_standard_sans_cut?" -5)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "allnonzero?")
                                              (("1" (ASSERT)
                                                (("1" (SPLIT -7)
                                                  (("1" (PROPAX) NIL NIL)
                                                   ("2" (INST 1 "0")
                                                    (("1" (ASSERT)
                                                      (("1" (EXPAND "nth" 1)
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (ASSERT)
                                                      (("2" (EXPAND "length" 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT)
                                            (("2"
                                              (EXPAND "mv_standard_sans_cut?"
                                                      -6)
                                              (("2" (FLATTEN)
                                                (("2" (EXPAND "allnonzero?")
                                                  (("2" (SPLIT -8)
                                                    (("1" (PROPAX) NIL NIL)
                                                     ("2" (INST 1 "0")
                                                      (("1" (EXPAND "nth" 1)
                                                        (("1" (PROPAX) NIL
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "length" 1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (CASE "null?(p) AND null?(q)")
            (("1" (FLATTEN)
              (("1" (EXPAND "sorted_sans_add")
                (("1" (ASSERT)
                  (("1" (EXPAND "every") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                NIL))
              NIL)
             ("2" (EXPAND "length" -)
              (("2" (LIFT-IF -3)
                (("2" (SPLIT -3)
                  (("1" (ASSERT) NIL NIL)
                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "cons?(p) AND cons?(q)")
          (("1" (FLATTEN)
            (("1" (INST -3 "nn" "cdr(p)" "cdr(q)")
              (("1" (SPLIT -3)
                (("1" (EXPAND "sorted_sans_add" +)
                  (("1" (ASSERT)
                    (("1" (CASE "car(p)`alpha = car(q)`alpha")
                      (("1" (ASSERT)
                        (("1" (EXPAND "every" 1)
                          (("1" (SPLIT 1)
                            (("1" (FLATTEN)
                              (("1" (SPLIT -1)
                                (("1" (FLATTEN)
                                  (("1" (ASSERT)
                                    (("1" (SPLIT -4)
                                      (("1" (FLATTEN)
                                        (("1" (SPLIT 1)
                                          (("1" (EXPAND "length" 1)
                                            (("1" (PROPAX) NIL NIL)) NIL)
                                           ("2" (SKEEP)
                                            (("2" (CASE "i=0")
                                              (("1" (DECOMPOSE-EQUALITY 1)
                                                (("1" (EXPAND "nth" 1)
                                                  (("1" (ASSERT)
                                                    (("1" (EXPAND "mult" 1 1)
                                                      (("1" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (EXPAND "nth" 1)
                                                  (("2" (EXPAND "mult" 1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (INST -2 "i-1")
                                                (("1" (EXPAND "nth" 2)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (TYPEPRED "i")
                                                    (("2" (EXPAND "length" -1)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (EXPAND "every" 1)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "add_mono" -1)
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (SPLIT -5)
                                (("1" (ASSERT)
                                  (("1" (SPLIT 1)
                                    (("1" (FLATTEN)
                                      (("1" (LIFT-IF 1)
                                        (("1" (SPLIT 1)
                                          (("1" (PROPAX) NIL NIL)
                                           ("2" (FLATTEN)
                                            (("2" (ASSERT)
                                              (("2" (EXPAND "every" -2)
                                                (("2" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (EXPAND "add_mono" 2)
                                        (("2" (ASSERT)
                                          (("2" (INST -3 "0")
                                            (("2" (EXPAND "nth" -3)
                                              (("2" (EXPAND "mult" -3)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (HIDE 2)
                                  (("2" (EXPAND "length" -1)
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL)
                                 ("3" (ASSERT)
                                  (("3" (HIDE 2)
                                    (("3" (SKEEP)
                                      (("3" (INST -2 "i+1")
                                        (("1" (EXPAND "nth" -2)
                                          (("1" (PROPAX) NIL NIL)) NIL)
                                         ("2" (ASSERT)
                                          (("2" (TYPEPRED "i")
                                            (("2" (EXPAND "length" 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (SPLIT 2)
                          (("1" (FLATTEN)
                            (("1" (SPLIT -1)
                              (("1" (FLATTEN)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "mv_standard_sans_cut?" -8)
                                    (("1" (FLATTEN)
                                      (("1" (EXPAND "allnonzero?" -10)
                                        (("1" (ASSERT)
                                          (("1" (SPLIT -10)
                                            (("1" (PROPAX) NIL NIL)
                                             ("2" (INST 1 "0")
                                              (("2" (EXPAND "nth" 1)
                                                (("2" (EXPAND "every" -2)
                                                  (("2" (FLATTEN) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (EXPAND "mv_standard_sans_cut?" -8)
                                  (("2" (FLATTEN)
                                    (("2" (EXPAND "allnonzero?" -10)
                                      (("2" (SPLIT -10)
                                        (("1" (PROPAX) NIL NIL)
                                         ("2" (INST 1 "0")
                                          (("1" (EXPAND "nth" 1)
                                            (("1" (EXPAND "every" -1)
                                              (("1" (FLATTEN) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (EXPAND "length" 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (HIDE 1)
                              (("2" (INST -2 "0")
                                (("2" (EXPAND "nth" -2)
                                  (("2" (EXPAND "mult" -2)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "length" -3) (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (LEMMA " mv_standard_sans_cdr")
                  (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("4" (LEMMA " mv_standard_sans_cdr")
                  (("4" (INST?) (("4" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT)
            (("2" (HIDE -1)
              (("2" (EXPAND "length" -1)
                (("2" (LIFT-IF -1)
                  (("2" (SPLIT -1)
                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (FLATTEN)
                      (("2" (ASSERT)
                        (("2" (SPLIT 3)
                          (("1" (FLATTEN)
                            (("1" (SPLIT 1)
                              (("1" (EXPAND "sorted_sans_add" -1 1)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "every" -1)
                                    (("1" (FLATTEN)
                                      (("1" (ASSERT)
                                        (("1"
                                          (EXPAND "mv_standard_sans_cut?" -4)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "allnonzero?" -6)
                                              (("1" (SPLIT -6)
                                                (("1" (PROPAX) NIL NIL)
                                                 ("2" (INST 1 "0")
                                                  (("2" (EXPAND "nth" 1)
                                                    (("2" (PROPAX) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT)
                                (("2" (EXPAND "sorted_sans_add" -1)
                                  (("2" (EXPAND "every" -1)
                                    (("2" (FLATTEN)
                                      (("2" (EXPAND "mv_standard_sans_cut?" -4)
                                        (("2" (FLATTEN)
                                          (("2" (EXPAND "allnonzero?" -6)
                                            (("2" (SPLIT -6)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (INST 1 "0")
                                                (("2" (EXPAND "nth" 1)
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (FLATTEN)
                            (("2" (EXPAND "length" -1) (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP*) (("3" (TYPEPRED "i") (("3" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|mv_standard_sans_cdr| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|allnonzero?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL))
   SHOSTAK))
 (|sorted_sans_nth| 0
  (|sorted_sans_nth-1| |nil| 3814440184
   (""
    (CASE "FORALL (A,n: nat, p: (mv_standard_sans_cut?(n)),
                     q: (mv_standard_sans_cut?(n))):
               length(p)+length(q) <= A IMPLIES( FORALL (i: below(length(sorted_sans_add(n, p, q)))):
                 (EXISTS (j: below(length(p))):
                    nth(sorted_sans_add(n, p, q), i)`alpha = nth(p, j)`alpha)
                  OR
                  (EXISTS (j: below(length(q))):
                     nth(sorted_sans_add(n, p, q), i)`alpha = nth(q, j)`alpha))")
    (("1" (SKEEP)
      (("1" (ASSERT)
        (("1" (INST -1 "length(p) + length(q)" "n" "p" "q")
          (("1" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "A")
        (("1" (SKEEP)
          (("1" (CASE "null?(p) AND null?(q)")
            (("1" (SKEEP)
              (("1" (TYPEPRED "i")
                (("1" (HIDE 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (SKEEP)
              (("2" (TYPEPRED "i")
                (("2" (NAME "ssa" "sorted_sans_add(n,p,q)")
                  (("2" (REPLACE -1)
                    (("2" (EXPAND "sorted_sans_add" -1)
                      (("2" (CASE "null?(p)")
                        (("1" (ASSERT)
                          (("1" (CASE "null?(q)")
                            (("1" (HIDE -5)
                              (("1" (HIDE 2 3) (("1" (GRIND) NIL NIL)) NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (INST 3 "i") (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (CASE " null?(q)")
                            (("1" (ASSERT)
                              (("1" (INST 2 "i") (("1" (ASSERT) NIL NIL)) NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (CASE "car(p)`alpha=car(q)`alpha")
                                (("1" (ASSERT)
                                  (("1" (CASE "car(p)`C+car(q)`C = 0 ")
                                    (("1" (ASSERT)
                                      (("1" (INST -5 "n" "cdr(p)" "cdr(q)")
                                        (("1" (EXPAND "length" -6)
                                          (("1" (ASSERT)
                                            (("1" (REPLACE -3 3 RL)
                                              (("1" (REPLACE -3 4 RL)
                                                (("1" (INST -5 "i")
                                                  (("1" (SPLIT -5)
                                                    (("1" (SKEEP)
                                                      (("1" (INST 3 "j+1")
                                                        (("1"
                                                          (EXPAND "nth" 3 2)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT)
                                                          (("2" (TYPEPRED "j")
                                                            (("2"
                                                              (EXPAND "length"
                                                                      1)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (SKEEP)
                                                      (("2" (INST 4 "j+1")
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND "nth" 4 2)
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "length" 1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (INST -4 "n" "cdr(p)" "cdr(q)")
                                        (("2" (ASSERT)
                                          (("2" (EXPAND "length" -5)
                                            (("2" (ASSERT)
                                              (("2" (CASE "i=0")
                                                (("1" (REPLACE -3 4 RL)
                                                  (("1" (REPLACE -3 5 RL)
                                                    (("1" (EXPAND "nth" 4 1)
                                                      (("1" (EXPAND "nth" 5 1)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND "add_mono"
                                                                    +)
                                                            (("1" (INST 4 "0")
                                                              (("1"
                                                                (EXPAND "nth"
                                                                        4)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2"
                                                                (EXPAND
                                                                 "length" 1)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (INST -4 "i-1")
                                                  (("1" (SPLIT -4)
                                                    (("1" (SKEEP)
                                                      (("1" (INST 5 "j+1")
                                                        (("1" (REPLACE -3 5 RL)
                                                          (("1"
                                                            (EXPAND "nth" 5)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (EXPAND "length" 1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (SKEEP)
                                                      (("2" (INST 6 "j+1")
                                                        (("1" (EXPAND "nth" 6)
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (REPLACE -3 6 RL)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (EXPAND "length" 1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (ASSERT)
                                                    (("2" (TYPEPRED "i")
                                                      (("2"
                                                        (EXPAND
                                                         "sorted_sans_add" -1)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND "length"
                                                                    -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT)
                                  (("2" (CASE "leq(car(p),car(q))")
                                    (("1" (ASSERT)
                                      (("1" (CASE "i=0")
                                        (("1" (REPLACE -3 4 RL)
                                          (("1" (INST 4 "0")
                                            (("1" (EXPAND "nth" 4)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (EXPAND "length" 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (INST -4 "n" "cdr(p)" "q")
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "length" -5 1)
                                              (("2" (ASSERT)
                                                (("2" (REPLACE -2 + RL)
                                                  (("2" (INST -4 "i-1")
                                                    (("1" (EXPAND "nth" 5 1)
                                                      (("1" (EXPAND "nth" 6 1)
                                                        (("1" (SPLIT -4)
                                                          (("1" (SKEEP)
                                                            (("1"
                                                              (INST 5 "j+1")
                                                              (("1"
                                                                (EXPAND "nth" 5
                                                                        2)
                                                                (("1" (PROPAX)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (EXPAND
                                                                   "length" 1
                                                                   1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (PROPAX) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (REPLACE -2 -3 RL)
                                                      (("2"
                                                        (EXPAND "length" -3)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT)
                                      (("2" (CASE "i=0")
                                        (("1" (REPLACE -2 + RL)
                                          (("1" (INST 6 "0")
                                            (("1" (EXPAND "nth" 6)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (EXPAND "length" 1)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REPLACE -1 + RL)
                                          (("2" (REPLACE -1 -2 RL)
                                            (("2" (INST -3 "n" "p" "cdr(q)")
                                              (("2" (EXPAND "length" -4 2)
                                                (("2" (ASSERT)
                                                  (("2" (EXPAND "nth" 6 1)
                                                    (("2" (EXPAND "nth" 7 1)
                                                      (("2" (ASSERT)
                                                        (("2" (INST -3 "i-1")
                                                          (("1" (SPLIT -3)
                                                            (("1" (PROPAX) NIL
                                                              NIL)
                                                             ("2" (SKEEP)
                                                              (("2"
                                                                (INST 7 "j+1")
                                                                (("1"
                                                                  (EXPAND "nth"
                                                                          7 2)
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "length" 1
                                                                     1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (EXPAND "length"
                                                                    -2)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|leq| DEF-DECL "bool" |standard_form_mult_poly| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL))
   SHOSTAK))
 (|sorted_sans_add_Unif| 0
  (|sorted_sans_add_Unif-1| |nil| 3814239508
   ("" (SKEEP)
    (("" (EXPAND "Unif?" 1)
      (("" (TYPEPRED "p" "q")
        (("" (FLATTEN)
          (("" (LEMMA "sorted_sans_nth")
            (("" (INST -1 "n" "p" "q" "_")
              (("" (SKEEP)
                (("" (INST-CP -1 "i")
                  (("" (INST -1 "j")
                    (("" (EXPAND "mv_standard_sans_cut?" -)
                      (("" (CASE "null?(p)")
                        (("1" (ASSERT)
                          (("1" (CASE "null?(q)")
                            (("1" (ASSERT)
                              (("1" (TYPEPRED "i")
                                (("1" (HIDE -4 -5 -6 -7 -8)
                                  (("1" (HIDE 2) (("1" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (EXPAND "sorted_sans_add" 3)
                              (("2" (ASSERT)
                                (("2" (FLATTEN)
                                  (("2" (EXPAND "Unif?" -5)
                                    (("2" (INST -5 "i" "j") NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT)
                          (("2" (CASE "null?(q)")
                            (("1" (EXPAND "sorted_sans_add")
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (EXPAND "Unif?" -4)
                                    (("1" (INST -4 "i" "j") NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (FLATTEN)
                                (("2" (HIDE -5 -6 -7 -10 -11 -12)
                                  (("2" (EXPAND "Unif?")
                                    (("2" (SPLIT -1)
                                      (("1" (SPLIT -2)
                                        (("1" (SKEEP*)
                                          (("1" (INST-CP -3 "j!1" "j_1")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (SKEEP*)
                                          (("2" (INST -5 "0" "j!1")
                                            (("2" (INST -3 "0" "j_1")
                                              (("2" (EXPAND "nth" -3 1)
                                                (("2" (EXPAND "nth" -5 1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKEEP*)
                                        (("2" (SPLIT -2)
                                          (("1" (SKEEP)
                                            (("1" (INST -3 "0" "j!1")
                                              (("1" (INST -5 "0" "j_1")
                                                (("1" (EXPAND "nth" -3 1)
                                                  (("1" (EXPAND "nth" -5 1)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKEEP*)
                                            (("2" (INST -5 "j!1" "j_1")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|sorted_sans_nth| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|sorted_sans_add_sort| 0
  (|sorted_sans_add_sort-1| |nil| 3814450703
   (""
    (CASE "FORALL (A, n: nat, p: (mv_standard_sans_cut?(n)),
              q: (mv_standard_sans_cut?(n))):
        length(p) + length(q) <= A IMPLIES is_sorted?(sorted_sans_add(n, p, q))")
    (("1" (SKEEP)
      (("1" (INST -1 "length(p) + length(q)" "n" "p" "q")
        (("1" (ASSERT) NIL NIL)) NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "A")
        (("1" (SKEEP)
          (("1" (CASE "null?(p) AND null?(q)")
            (("1" (EXPAND "sorted_sans_add" 1)
              (("1" (ASSERT)
                (("1" (FLATTEN)
                  (("1" (ASSERT)
                    (("1" (TYPEPRED "q")
                      (("1" (EXPAND "is_sorted?" 1) (("1" (SKEEP) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (CASE "null?(p)")
              (("1" (EXPAND "sorted_sans_add" 1)
                (("1" (ASSERT)
                  (("1" (TYPEPRED "q")
                    (("1" (EXPAND "mv_standard_sans_cut?" -1)
                      (("1" (ASSERT)
                        (("1" (HIDE -3)
                          (("1" (EXPAND "is_sorted?" 1)
                            (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (CASE "null?(q)")
                (("1" (EXPAND "sorted_sans_add" 2)
                  (("1" (ASSERT)
                    (("1" (TYPEPRED "p")
                      (("1" (EXPAND "mv_standard_sans_cut?" -1)
                        (("1" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "sorted_sans_add" 3)
                    (("2" (ASSERT)
                      (("2" (SPLIT 3)
                        (("1" (FLATTEN)
                          (("1" (INST -2 "n" "cdr(p)" "cdr(q)")
                            (("1" (EXPAND "length" -3)
                              (("1" (ASSERT)
                                (("1" (SPLIT 1)
                                  (("1" (FLATTEN) NIL NIL)
                                   ("2" (FLATTEN)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "is_sorted?" 2 1)
                                        (("2" (SKEEP)
                                          (("2" (CASE "NOT k=0")
                                            (("1" (EXPAND "is_sorted?" -3)
                                              (("1" (INST -3 "k-1")
                                                (("1" (ASSERT)
                                                  (("1" (EXPAND "nth" 3)
                                                    (("1" (ASSERT)
                                                      (("1"
                                                        (EXPAND "length" -1)
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (EXPAND "length" -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (ASSERT)
                                              (("2" (EXPAND "nth" 2 2)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (LEMMA "sorted_sans_nth")
                                                    (("2"
                                                      (INST -1 "n" "cdr(p)"
                                                       "cdr(q)" "0")
                                                      (("1" (SPLIT -1)
                                                        (("1" (REPLACE -2)
                                                          (("1" (SKEEP)
                                                            (("1"
                                                              (EXPAND "nth" 2)
                                                              (("1"
                                                                (EXPAND "nth"
                                                                        -1 1)
                                                                (("1"
                                                                  (LEMMA
                                                                   "is_sorted_nth")
                                                                  (("1"
                                                                    (INST -1
                                                                     "p")
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       " p")
                                                                      (("1"
                                                                        (EXPAND
                                                                         "mv_standard_sans_cut?"
                                                                         -1)
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (INST
                                                                               -6
                                                                               "0"
                                                                               "j!1+1")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "constant_doesnt_matter")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "car(p)"
                                                                                     "add_mono(car(p),car(q))"
                                                                                     "nth(p,j!1+1)")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "nth"
                                                                                         -7
                                                                                         1)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "add_mono")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "nth"
                                                                                               -1
                                                                                               1)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "nth"
                                                                                                   -7)
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (LEMMA
                                                                                                       "constant_doesnt_matter_last")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -1
                                                                                                         "(# C := car(p)`C + car(q)`C, alpha := car(p)`alpha #)"
                                                                                                         "nth(cdr(p),j!1)"
                                                                                                         "car(sorted_sans_add(n,cdr(p),cdr(q)))")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (EXPAND
                                                                                       "length"
                                                                                       1)
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 1)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 1)
                                                                                (("3"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (SKEEP -1)
                                                          (("2"
                                                            (EXPAND "nth" 2 1)
                                                            (("2" (ASSERT)
                                                              (("2"
                                                                (EXPAND "nth" 2
                                                                        1)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (LEMMA
                                                                     "is_sorted_nth")
                                                                    (("2"
                                                                      (INST -1
                                                                       "q")
                                                                      (("2"
                                                                        (TYPEPRED
                                                                         "q")
                                                                        (("2"
                                                                          (EXPAND
                                                                           "mv_standard_sans_cut?"
                                                                           -1)
                                                                          (("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (INST
                                                                                 -6
                                                                                 "0"
                                                                                 "j!1+1")
                                                                                (("1"
                                                                                  (HIDE
                                                                                   -7)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "nth"
                                                                                       -6)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "constant_doesnt_matter_last")
                                                                                          (("1"
                                                                                            (LEMMA
                                                                                             "constant_doesnt_matter")
                                                                                            (("1"
                                                                                              (INST
                                                                                               -1
                                                                                               "car(q)"
                                                                                               "add_mono(car(p),car(q))"
                                                                                               "nth(cdr(q),j!1)")
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "add_mono"
                                                                                                   -1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -2
                                                                                                       "add_mono(car(p),car(q))"
                                                                                                       "nth(cdr(q),j!1)"
                                                                                                       "car(sorted_sans_add(n,cdr(p),cdr(q)))")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "nth"
                                                                                                           -8
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("3"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   1)
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (GRIND) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (SPLIT 2)
                                (("1" (FLATTEN)
                                  (("1" (REVEAL -)
                                    (("1" (LEMMA " mv_standard_sans_cdr")
                                      (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (LEMMA " mv_standard_sans_cdr")
                                    (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("3" (LEMMA " mv_standard_sans_cdr")
                              (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (SPLIT 2)
                            (("1" (FLATTEN)
                              (("1" (EXPAND "is_sorted?" 1 1)
                                (("1" (SKEEP)
                                  (("1" (CASE "NOT k=0")
                                    (("1" (EXPAND "nth" 2)
                                      (("1" (ASSERT)
                                        (("1" (INST -3 "n" "cdr(p)" "q")
                                          (("1" (EXPAND "length" -4 1)
                                            (("1" (ASSERT)
                                              (("1" (EXPAND "is_sorted?" -3)
                                                (("1" (INST -3 "k-1")
                                                  (("1" (ASSERT)
                                                    (("1" (EXPAND "length" -2)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (EXPAND "nth" 1)
                                      (("2" (ASSERT)
                                        (("2" (LEMMA "sorted_sans_nth")
                                          (("2" (INST -1 "n" "cdr(p)" "q" "k")
                                            (("2" (SPLIT -1)
                                              (("1" (SKEEP)
                                                (("1" (LEMMA "is_sorted_nth")
                                                  (("1" (INST -1 "p")
                                                    (("1" (FLATTEN)
                                                      (("1" (HIDE -2)
                                                        (("1" (TYPEPRED " p")
                                                          (("1"
                                                            (EXPAND
                                                             "mv_standard_sans_cut?"
                                                             -1)
                                                            (("1" (FLATTEN)
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (INST -6 "0"
                                                                   "j!1+1")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "nth"
                                                                       -6)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (LEMMA
                                                                           "constant_doesnt_matter_last")
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "car(p)"
                                                                             "nth(cdr(p),j!1)"
                                                                             "nth(sorted_sans_add(n,cdr(p),q),k)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "length"
                                                                     1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("3"
                                                                    (EXPAND
                                                                     "length"
                                                                     1)
                                                                    (("3"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKEEP)
                                                (("2" (LEMMA "is_sorted_nth")
                                                  (("2" (INST -1 "q")
                                                    (("2" (TYPEPRED "q")
                                                      (("2"
                                                        (EXPAND
                                                         "mv_standard_sans_cut?"
                                                         -1)
                                                        (("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST -6 "0"
                                                               "j!1")
                                                              (("2" (ASSERT)
                                                                (("2"
                                                                  (CASE
                                                                      "j!1=0")
                                                                  (("1"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "nth"
                                                                         -8 2)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "constant_doesnt_matter_last")
                                                                            (("1"
                                                                              (INST
                                                                               -1
                                                                               "car(p)"
                                                                               "car(q)"
                                                                               "nth(sorted_sans_add(n,cdr(p),q),k)")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (ASSERT)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "nth" -6
                                                                       1)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "constant_doesnt_matter_last")
                                                                        (("2"
                                                                          (INST
                                                                           -1
                                                                           "car(q)"
                                                                           "nth(q,j!1)"
                                                                           "nth(sorted_sans_add(n,cdr(p),q),k)")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "leq_transitive")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "transitive?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "car(p)"
                                                                                   "car(q)"
                                                                                   "nth(sorted_sans_add(n,cdr(p),q),k)")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (EXPAND "is_sorted?" 2)
                                (("2" (SKEEP)
                                  (("2" (CASE "NOT k=0")
                                    (("1" (EXPAND "nth" 3)
                                      (("1" (ASSERT)
                                        (("1" (INST -2 "n" "p" "cdr(q)")
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "length" -3 2)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "length" -1 1)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (EXPAND "is_sorted?" -2)
                                                      (("1" (INST -2 "k-1")
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (EXPAND "nth" 2)
                                      (("2" (ASSERT)
                                        (("2" (LEMMA "sorted_sans_nth")
                                          (("2" (INST -1 "n" "p" "cdr(q)" "k")
                                            (("2" (SPLIT -1)
                                              (("1" (SKEEP)
                                                (("1" (TYPEPRED "p")
                                                  (("1"
                                                    (EXPAND
                                                     "mv_standard_sans_cut?"
                                                     -1)
                                                    (("1" (FLATTEN)
                                                      (("1"
                                                        (LEMMA "is_sorted_nth")
                                                        (("1" (INST -1 "p")
                                                          (("1" (ASSERT)
                                                            (("1"
                                                              (CASE "j!1=0")
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (EXPAND "nth"
                                                                          -8)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "constant_doesnt_matter_last")
                                                                      (("1"
                                                                        (INST
                                                                         -1
                                                                         "car(q)"
                                                                         "car(p)"
                                                                         " car(sorted_sans_add(n, p, cdr(q)))")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (EXPAND
                                                                             "nth"
                                                                             2
                                                                             1)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (HIDE
                                                                                 3)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "almost_total_order")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "car(q)"
                                                                                     "car(p)")
                                                                                    (("1"
                                                                                      (LEMMA
                                                                                       "leq_dichotomous")
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "dichotomous?"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (INST
                                                                                           -1
                                                                                           "car(q)"
                                                                                           "car(p)")
                                                                                          (("1"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (INST -1 "0"
                                                                 "j!1")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "nth" -1
                                                                     1)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "constant_doesnt_matter_last")
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "car(p)"
                                                                         "nth(p,j!1) "
                                                                         "nth(sorted_sans_add(n, p, cdr(q)), k)")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (LEMMA
                                                                             "constant_doesnt_matter_last")
                                                                            (("2"
                                                                              (LEMMA
                                                                               "leq_dichotomous")
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "dichotomous?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (INST
                                                                                   -1
                                                                                   "car(p)"
                                                                                   "car(q)")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "leq_transitive")
                                                                                      (("2"
                                                                                        (EXPAND
                                                                                         "transitive?"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (INST
                                                                                           -1
                                                                                           "car(q)"
                                                                                           "car(p)"
                                                                                           "nth(p,j!1)")
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (LEMMA
                                                                                               "constant_doesnt_matter_last")
                                                                                              (("2"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "car(q)"
                                                                                                 "nth(p,j!1)"
                                                                                                 "nth(sorted_sans_add(n, p, cdr(q)), k)")
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKEEP)
                                                (("2" (LEMMA "is_sorted_nth")
                                                  (("2" (INST -1 "q")
                                                    (("2" (TYPEPRED "q")
                                                      (("2"
                                                        (EXPAND
                                                         "mv_standard_sans_cut?"
                                                         -1)
                                                        (("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST -6 "0"
                                                               "j!1+1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND "nth"
                                                                          -6)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "constant_doesnt_matter_last")
                                                                      (("1"
                                                                        (INST
                                                                         -1
                                                                         "car(q)"
                                                                         "nth(cdr(q),j!1)"
                                                                         " nth(sorted_sans_add(n, p, cdr(q)), k)")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (EXPAND
                                                                 "length" 1)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("3"
                                                                (EXPAND
                                                                 "length" 1)
                                                                (("3" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (SKEEP)
            (("3" (LEMMA "leq_total_preorder") (("3" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (LEMMA "leq_total_preorder") (("3" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|leq_total_preorder| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|almost_total_order| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|leq_dichotomous| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|dichotomous?| CONST-DECL "bool" |orders| NIL)
    (|leq_transitive| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|mv_standard_sans_cdr| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|is_sorted_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|constant_doesnt_matter| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|constant_doesnt_matter_last| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (|sorted_sans_nth| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|total_preorder?| CONST-DECL "bool" |total_preorder| |sorting|)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|leq| DEF-DECL "bool" |standard_form_mult_poly| NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|sorted_add_sorted| 0
  (|sorted_add_sorted-1| |nil| 3814458230
   ("" (LEMMA "sorted_sans_add_sort")
    (("" (SKEEP) (("" (EXPAND "sorted_add" 1) (("" (INST?) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|sorted_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sorted_sans_add_sort| FORMULA-DECL NIL |standard_form_extras| NIL))
   SHOSTAK))
 (|sorted_sans_add_simp| 0
  (|sorted_sans_add_simp-1| |nil| 3814383300
   (""
    (CASE "FORALL(A:nat,n: nat, p: (mv_standard_sans_cut?(n)),
                     q: (mv_standard_sans_cut?(n))):
               length(p) + length(q) <= A IMPLIES simplified?(sorted_sans_add(n, p, q))")
    (("1" (SKEEP)
      (("1" (INST -1 "length(p) + length(q)" "n" "p" "q")
        (("1" (ASSERT) NIL NIL)) NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "A")
        (("1" (SKEEP)
          (("1" (CASE "null?(p) AND null?(q)")
            (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
             ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "sorted_sans_add" 1 1)
              (("2" (SPLIT 1)
                (("1" (FLATTEN)
                  (("1" (TYPEPRED "q")
                    (("1" (EXPAND "mv_standard_sans_cut?" -1)
                      (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (SPLIT 2)
                    (("1" (FLATTEN)
                      (("1" (TYPEPRED "p")
                        (("1" (EXPAND "mv_standard_sans_cut?" -1)
                          (("1" (ASSERT) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (SPLIT 2)
                        (("1" (FLATTEN)
                          (("1" (SPLIT 1)
                            (("1" (FLATTEN)
                              (("1" (INST -3 "n" "cdr(p)" "cdr(q)")
                                (("1" (EXPAND "length" -4)
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (INST -2 "n" "cdr(p)" "cdr(q)")
                                (("2" (ASSERT)
                                  (("2" (EXPAND "length" -3)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "simplified?")
                                        (("2" (SPLIT 2)
                                          (("1" (PROPAX) NIL NIL)
                                           ("2" (FLATTEN)
                                            (("2" (SPLIT 2)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2"
                                                (CASE
                                                    "sorted_sans_add(n, cdr(p), cdr(q)) = null")
                                                (("1" (REPLACE -1)
                                                  (("1" (SKEEP 1)
                                                    (("1" (EXPAND "length" 2 1)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (ASSERT)
                                                  (("2" (SPLIT -2)
                                                    (("1" (SKEEP 2)
                                                      (("1"
                                                        (TYPEPRED "i" "j!1")
                                                        (("1"
                                                          (EXPAND "length" -1)
                                                          (("1"
                                                            (EXPAND "length "
                                                                    -2)
                                                            (("1"
                                                              (REPLACE -3 -1)
                                                              (("1"
                                                                (REPLACE -3 -2)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (CASE
                                                                        "i=0")
                                                                    (("1"
                                                                      (CASE
                                                                          "NOT j!1=1")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (EXPAND
                                                                         "nth"
                                                                         -6)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (EXPAND
                                                                             "add_mono")
                                                                            (("2"
                                                                              (LEMMA
                                                                               "sorted_sans_nth")
                                                                              (("2"
                                                                                (INST
                                                                                 -1
                                                                                 "n"
                                                                                 "cdr(p)"
                                                                                 "cdr(q)"
                                                                                 "j!1-1")
                                                                                (("2"
                                                                                  (SPLIT
                                                                                   -1)
                                                                                  (("1"
                                                                                    (SKEEP)
                                                                                    (("1"
                                                                                      (TYPEPRED
                                                                                       "p")
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "mv_standard_sans_cut?"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (FLATTEN)
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "simplified?"
                                                                                             -5)
                                                                                            (("1"
                                                                                              (SPLIT
                                                                                               -5)
                                                                                              (("1"
                                                                                                (GRIND)
                                                                                                NIL
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (FLATTEN)
                                                                                                (("2"
                                                                                                  (SPLIT
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "0"
                                                                                                     "j!2+1")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "nth"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (EXPAND
                                                                                                             "nth"
                                                                                                             1
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (TYPEPRED
                                                                                                       "j!2")
                                                                                                      (("2"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("3"
                                                                                                      (TYPEPRED
                                                                                                       "p")
                                                                                                      (("3"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (PROPAX)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (SKEEP)
                                                                                      (("2"
                                                                                        (TYPEPRED
                                                                                         "q")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "mv_standard_sans_cut?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (FLATTEN)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "simplified?"
                                                                                               -5)
                                                                                              (("2"
                                                                                                (SPLIT
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (FLATTEN)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "j!2+1"
                                                                                                       "0")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "nth"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("3"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (CASE
                                                                            "j!1=0")
                                                                        (("1"
                                                                          (CASE
                                                                              "NOT i=1")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL)
                                                                           ("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (EXPAND
                                                                               "nth"
                                                                               -6)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (LEMMA
                                                                                   "sorted_sans_nth")
                                                                                  (("2"
                                                                                    (INST
                                                                                     -1
                                                                                     "n"
                                                                                     "cdr(p)"
                                                                                     "cdr(q)"
                                                                                     "_")
                                                                                    (("2"
                                                                                      (INST
                                                                                       -1
                                                                                       "i-1")
                                                                                      (("2"
                                                                                        (SPLIT
                                                                                         -1)
                                                                                        (("1"
                                                                                          (SKEEP)
                                                                                          (("1"
                                                                                            (TYPEPRED
                                                                                             "p")
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "mv_standard_sans_cut?"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (FLATTEN)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "simplified?"
                                                                                                   -5)
                                                                                                  (("1"
                                                                                                    (SPLIT
                                                                                                     -5)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (GRIND)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -1
                                                                                                           "j!2+1"
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "nth"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "add_mono")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             1
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("3"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (SKEEP)
                                                                                          (("2"
                                                                                            (TYPEPRED
                                                                                             "q")
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "mv_standard_sans_cut?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (FLATTEN)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "simplified?"
                                                                                                   -5)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     -5)
                                                                                                    (("1"
                                                                                                      (GRIND)
                                                                                                      NIL
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -1
                                                                                                           "0"
                                                                                                           "j!2+1")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "nth"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (EXPAND
                                                                                                                 "add_mono")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("3"
                                                                                                            (EXPAND
                                                                                                             "length"
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (FLATTEN)
                                                      (("2" (SKEEP)
                                                        (("2"
                                                          (CASE
                                                              "i/=0 AND j!1/=0")
                                                          (("1" (SPLIT -2)
                                                            (("1"
                                                              (INST -1 "i-1"
                                                               "j!1-1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (EXPAND "nth"
                                                                          -3)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (LIFT-IF
                                                                       -3)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (TYPEPRED
                                                                     "j!1")
                                                                    (("2"
                                                                      (EXPAND
                                                                       "length"
                                                                       -1 1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("3" (FLATTEN)
                                                                (("3" (ASSERT)
                                                                  (("3"
                                                                    (TYPEPRED
                                                                     "i")
                                                                    (("3"
                                                                      (EXPAND
                                                                       "length"
                                                                       -1)
                                                                      (("3"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2" (SPLIT 1)
                                                              (("1"
                                                                (CASE
                                                                    "NOT i=0")
                                                                (("1" (ASSERT)
                                                                  NIL NIL)
                                                                 ("2"
                                                                  (CASE
                                                                      "j!1=0")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (EXPAND
                                                                     "nth" -3
                                                                     1)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "add_mono"
                                                                         -3)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "nth"
                                                                           -3
                                                                           1)
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "sorted_sans_nth")
                                                                              (("2"
                                                                                (INST
                                                                                 -1
                                                                                 "n"
                                                                                 "cdr(p)"
                                                                                 "cdr(q)"
                                                                                 "j!1-1")
                                                                                (("2"
                                                                                  (SPLIT
                                                                                   -1)
                                                                                  (("1"
                                                                                    (SKEEP)
                                                                                    (("1"
                                                                                      (TYPEPRED
                                                                                       "p")
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "mv_standard_sans_cut?"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (FLATTEN)
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "simplified?"
                                                                                             -5)
                                                                                            (("1"
                                                                                              (SPLIT
                                                                                               -5)
                                                                                              (("1"
                                                                                                (GRIND)
                                                                                                NIL
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (FLATTEN)
                                                                                                (("2"
                                                                                                  (SPLIT
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -1
                                                                                                     "0"
                                                                                                     "j!2+1")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "nth"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (EXPAND
                                                                                                       "length"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("3"
                                                                                                      (EXPAND
                                                                                                       "length"
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (ASSERT)
                                                                                                        NIL
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (PROPAX)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (SKEEP
                                                                                       -1)
                                                                                      (("2"
                                                                                        (TYPEPRED
                                                                                         "q")
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "mv_standard_sans_cut?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (FLATTEN)
                                                                                            (("2"
                                                                                              (EXPAND
                                                                                               "simplified?"
                                                                                               -5)
                                                                                              (("2"
                                                                                                (SPLIT
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (GRIND)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (FLATTEN)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (INST
                                                                                                       -1
                                                                                                       "0"
                                                                                                       "j!2+1")
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "nth"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("3"
                                                                                                        (EXPAND
                                                                                                         "length"
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (CASE
                                                                      "NOT j!1=0")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (CASE
                                                                        "i=0")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (EXPAND
                                                                       "nth"
                                                                       -3)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (LEMMA
                                                                           "sorted_sans_nth")
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "n"
                                                                             "cdr(p)"
                                                                             "cdr(q)"
                                                                             "i-1")
                                                                            (("2"
                                                                              (SPLIT
                                                                               -1)
                                                                              (("1"
                                                                                (SKEEP)
                                                                                (("1"
                                                                                  (TYPEPRED
                                                                                   "p")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "mv_standard_sans_cut?"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (FLATTEN)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "simplified?"
                                                                                         -5)
                                                                                        (("1"
                                                                                          (SPLIT
                                                                                           -5)
                                                                                          (("1"
                                                                                            (GRIND)
                                                                                            NIL
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (FLATTEN)
                                                                                            (("2"
                                                                                              (SPLIT
                                                                                               -1)
                                                                                              (("1"
                                                                                                (INST
                                                                                                 -1
                                                                                                 "j!2+1"
                                                                                                 "0")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "nth"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "add_mono")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (EXPAND
                                                                                                   "length"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("3"
                                                                                                  (EXPAND
                                                                                                   "length"
                                                                                                   1)
                                                                                                  (("3"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (PROPAX)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (SKEEP)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "q")
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "mv_standard_sans_cut?"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (EXPAND
                                                                                           "simplified?"
                                                                                           -5)
                                                                                          (("2"
                                                                                            (SPLIT
                                                                                             -5)
                                                                                            (("1"
                                                                                              (GRIND)
                                                                                              NIL
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (SPLIT
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -1
                                                                                                   "0"
                                                                                                   "j!2+1")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "nth"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (ASSERT)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "add_mono"
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (EXPAND
                                                                                                     "length"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("3"
                                                                                                    (EXPAND
                                                                                                     "length"
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (SPLIT 2)
                            (("1" (FLATTEN)
                              (("1" (EXPAND "simplified?" 1)
                                (("1" (SPLIT 1)
                                  (("1" (PROPAX) NIL NIL)
                                   ("2" (FLATTEN)
                                    (("2" (SPLIT 2)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (SKEEP)
                                        (("2" (CASE "i=0")
                                          (("1" (ASSERT)
                                            (("1" (EXPAND "nth" -2)
                                              (("1" (ASSERT)
                                                (("1" (LEMMA "sorted_sans_nth")
                                                  (("1"
                                                    (INST -1 "n" "cdr(p)" "q"
                                                     "_")
                                                    (("1" (INST -1 "j!1-1")
                                                      (("1" (SPLIT -1)
                                                        (("1" (SKEEP)
                                                          (("1" (TYPEPRED "p")
                                                            (("1"
                                                              (EXPAND
                                                               "mv_standard_sans_cut?"
                                                               -1)
                                                              (("1" (FLATTEN)
                                                                (("1"
                                                                  (EXPAND
                                                                   "simplified?"
                                                                   -5)
                                                                  (("1"
                                                                    (SPLIT -5)
                                                                    (("1"
                                                                      (GRIND)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (SPLIT
                                                                         -1)
                                                                        (("1"
                                                                          (INST
                                                                           -1
                                                                           "j!2+1"
                                                                           "0")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "nth"
                                                                               1)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (EXPAND
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("3"
                                                                            (EXPAND
                                                                             "length"
                                                                             1)
                                                                            (("3"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (PROPAX)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (SKEEP)
                                                          (("2" (TYPEPRED "q")
                                                            (("2"
                                                              (EXPAND
                                                               "mv_standard_sans_cut?"
                                                               -1)
                                                              (("2" (FLATTEN)
                                                                (("2"
                                                                  (EXPAND
                                                                   "is_sorted?"
                                                                   -4)
                                                                  (("2"
                                                                    (REPLACE -6
                                                                             -8)
                                                                    (("2"
                                                                      (LEMMA
                                                                       "constant_doesnt_matter")
                                                                      (("2"
                                                                        (INST
                                                                         -1
                                                                         "car(p)"
                                                                         "nth(q,j!2)"
                                                                         "car(q)")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (LEMMA
                                                                             "almost_total_order")
                                                                            (("2"
                                                                              (INST
                                                                               -1
                                                                               "nth(q,j!2)"
                                                                               "car(q)")
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (TYPEPRED
                                                                                   "q")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "mv_standard_sans_cut?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (LEMMA
                                                                                       "is_sorted_nth")
                                                                                      (("2"
                                                                                        (INST
                                                                                         -1
                                                                                         "q")
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (INST
                                                                                             -1
                                                                                             "0"
                                                                                             "j!2")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              (("2"
                                                                                                (EXPAND
                                                                                                 "nth"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "nth"
                                                                                                     -10)
                                                                                                    (("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (CASE "j!1=0")
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "nth" -2)
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (LEMMA "sorted_sans_nth")
                                                      (("1"
                                                        (INST -1 "n" "cdr(p)"
                                                         "q" "i-1")
                                                        (("1" (SPLIT -1)
                                                          (("1" (SKEEP)
                                                            (("1"
                                                              (REPLACE -1 -3)
                                                              (("1"
                                                                (TYPEPRED "p")
                                                                (("1"
                                                                  (EXPAND
                                                                   "mv_standard_sans_cut?"
                                                                   -1)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "simplified?"
                                                                       -5)
                                                                      (("1"
                                                                        (SPLIT
                                                                         -5)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (SPLIT
                                                                             -1)
                                                                            (("1"
                                                                              (INST
                                                                               -1
                                                                               "j!2+1"
                                                                               "0")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "nth"
                                                                                   1)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 1)
                                                                                (("3"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (ASSERT)
                                                            (("2" (SKEEP)
                                                              (("2"
                                                                (REPLACE -1 -3)
                                                                (("2"
                                                                  (LEMMA
                                                                   "almost_total_order")
                                                                  (("2"
                                                                    (INST -1
                                                                     "nth(q,j!2)"
                                                                     "car(q)")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (LEMMA
                                                                         "constant_doesnt_matter")
                                                                        (("2"
                                                                          (INST
                                                                           -1
                                                                           "car(p)"
                                                                           "nth(q,j!2)"
                                                                           "car(q)")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            (("2"
                                                                              (LEMMA
                                                                               "is_sorted_nth")
                                                                              (("2"
                                                                                (INST
                                                                                 -1
                                                                                 "q")
                                                                                (("2"
                                                                                  (TYPEPRED
                                                                                   "q")
                                                                                  (("2"
                                                                                    (EXPAND
                                                                                     "mv_standard_sans_cut?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (FLATTEN)
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (INST
                                                                                           -6
                                                                                           "0"
                                                                                           "j!2")
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (SPLIT
                                                                                               -6)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "nth"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "nth"
                                                                                                   -10)
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "nth" -1)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (INST -3 "n" "cdr(p)" "q")
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (EXPAND "length" -4 1)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND
                                                             "simplified?" -3)
                                                            (("2" (SPLIT -3)
                                                              (("1" (SPLIT -1)
                                                                (("1"
                                                                  (TYPEPRED
                                                                   "i")
                                                                  (("1" (GRIND)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (TYPEPRED
                                                                   "i")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "length"
                                                                     -1)
                                                                    (("2"
                                                                      (REPLACE
                                                                       -2 -1)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (TYPEPRED
                                                                           "j!1")
                                                                          (("2"
                                                                            (EXPAND
                                                                             "length"
                                                                             -1)
                                                                            (("2"
                                                                              (REPLACE
                                                                               -3
                                                                               -1)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2"
                                                                  (SPLIT -1)
                                                                  (("1"
                                                                    (INST -1
                                                                     "i-1"
                                                                     "j!1-1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (EXPAND "simplified?" 2)
                                (("2" (SPLIT 2)
                                  (("1" (PROPAX) NIL NIL)
                                   ("2" (FLATTEN)
                                    (("2" (SPLIT 2)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (SKEEP)
                                        (("2" (CASE "i=0")
                                          (("1" (CASE "j!1=0")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (EXPAND "nth" -2)
                                              (("2" (ASSERT)
                                                (("2" (LEMMA "sorted_sans_nth")
                                                  (("2"
                                                    (INST -1 "n" "p" "cdr(q)"
                                                     "j!1-1")
                                                    (("2" (SPLIT -1)
                                                      (("1" (SKEEP)
                                                        (("1" (REPLACE -1 -3)
                                                          (("1"
                                                            (LEMMA
                                                             "is_sorted_nth")
                                                            (("1" (INST -1 "p")
                                                              (("1"
                                                                (TYPEPRED "p")
                                                                (("1"
                                                                  (EXPAND
                                                                   "mv_standard_sans_cut?"
                                                                   -1)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (INST
                                                                         -6 "0"
                                                                         "j!2")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -6)
                                                                            (("1"
                                                                              (EXPAND
                                                                               "nth"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (LEMMA
                                                                                   "constant_doesnt_matter_last")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -1
                                                                                     "car(p)"
                                                                                     "nth(p,j!2)"
                                                                                     "car(q)")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "nth"
                                                                                 -9)
                                                                                (("2"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (ASSERT)
                                                        (("2" (SKEEP)
                                                          (("2" (REPLACE -1)
                                                            (("2"
                                                              (TYPEPRED "q")
                                                              (("2"
                                                                (EXPAND
                                                                 "mv_standard_sans_cut?"
                                                                 -1)
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (EXPAND
                                                                     "simplified?"
                                                                     -5)
                                                                    (("2"
                                                                      (SPLIT
                                                                       -5)
                                                                      (("1"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "0"
                                                                             "j!2+1")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "nth"
                                                                                 1
                                                                                 1)
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "nth"
                                                                                     1
                                                                                     1)
                                                                                    (("1"
                                                                                      (PROPAX)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (EXPAND
                                                                               "length"
                                                                               1)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL)
                                                                             ("3"
                                                                              (EXPAND
                                                                               "length"
                                                                               1)
                                                                              (("3"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (PROPAX)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (CASE "j!1=0")
                                              (("1" (EXPAND "nth" -2)
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (LEMMA "sorted_sans_nth")
                                                    (("1"
                                                      (INST -1 "n" "p" "cdr(q)"
                                                       "i-1")
                                                      (("1" (SPLIT -1)
                                                        (("1" (SKEEP)
                                                          (("1" (REPLACE -1 -3)
                                                            (("1"
                                                              (LEMMA
                                                               "is_sorted_nth")
                                                              (("1"
                                                                (TYPEPRED "p")
                                                                (("1"
                                                                  (EXPAND
                                                                   "mv_standard_sans_cut? "
                                                                   -1)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (INST
                                                                         -6
                                                                         "p")
                                                                        (("1"
                                                                          (FLATTEN)
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (INST
                                                                               -6
                                                                               "0"
                                                                               "j!2")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SPLIT
                                                                                   -6)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "nth"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (LEMMA
                                                                                           "constant_doesnt_matter_last")
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "car(p)"
                                                                                             "nth(p,j!2)"
                                                                                             "car(q)")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "nth"
                                                                                       -9)
                                                                                      (("2"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (ASSERT)
                                                          (("2" (SKEEP)
                                                            (("2" (REPLACE -1)
                                                              (("2"
                                                                (TYPEPRED "q")
                                                                (("2"
                                                                  (EXPAND
                                                                   "mv_standard_sans_cut? "
                                                                   -1)
                                                                  (("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "simplified?"
                                                                       -5)
                                                                      (("2"
                                                                        (SPLIT
                                                                         -5)
                                                                        (("1"
                                                                          (GRIND)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (SPLIT
                                                                             -1)
                                                                            (("1"
                                                                              (INST
                                                                               -1
                                                                               "j!2+1"
                                                                               "0")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "nth"
                                                                                   1)
                                                                                  (("1"
                                                                                    (PROPAX)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (EXPAND
                                                                                 "length"
                                                                                 1)
                                                                                (("3"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (EXPAND "nth" -1)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (INST -2 "n" "p" "cdr(q)")
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (EXPAND "length" -3 2)
                                                        (("2" (ASSERT)
                                                          (("2"
                                                            (EXPAND
                                                             "simplified?" -2)
                                                            (("2" (SPLIT -2)
                                                              (("1" (SPLIT -1)
                                                                (("1"
                                                                  (EXPAND
                                                                   "length" 4)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "length"
                                                                     4)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (TYPEPRED "i"
                                                                   "j!1")
                                                                  (("2"
                                                                    (EXPAND
                                                                     "length"
                                                                     -1)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "length"
                                                                       -2)
                                                                      (("2"
                                                                        (REPLACE
                                                                         -3)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2"
                                                                  (SPLIT -1)
                                                                  (("1"
                                                                    (INST -1
                                                                     "i-1"
                                                                     "j!1-1")
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|constant_doesnt_matter_last| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (|is_sorted?| CONST-DECL "bool" |sorting| |sorting|)
    (|constant_doesnt_matter| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|is_sorted_nth| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|almost_total_order| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|odd_plus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sorted_sans_nth| FORMULA-DECL NIL |standard_form_extras| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|add_mono| CONST-DECL "monomial" |standard_form_mult_poly| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length_null| FORMULA-DECL NIL |more_list_props| |structures|)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|simplified?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|sorted_sans_add| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|add_nonzero| 0
  (|add_nonzero-1| |nil| 3814382178
   ("" (SKEEP)
    (("" (EXPAND "add" 1)
      (("" (EXPAND "min_add" 1)
        (("" (SPLIT 1)
          (("1" (FLATTEN)
            (("1" (EXPAND "sort_add" 1)
              (("1" (LEMMA "sorted_sans_add_nz")
                (("1" (SPLIT 1)
                  (("1" (FLATTEN)
                    (("1" (EXPAND "sorted_add" 1) (("1" (INST?) NIL NIL)) NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (FLATTEN)
                      (("2" (SPLIT 2)
                        (("1" (FLATTEN)
                          (("1" (EXPAND "sorted_add" 2) (("1" (INST?) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (SPLIT 2)
                            (("1" (FLATTEN)
                              (("1" (EXPAND "sorted_add" 2)
                                (("1" (INST?) NIL NIL)) NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (EXPAND "sorted_add" 2)
                                (("2" (INST?) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (LEMMA "sorted_sans_add_nz")
              (("2" (LEMMA "lft_cut_allnonzero")
                (("2" (INST?)
                  (("2" (ASSERT)
                    (("2" (EXPAND "sort_add" 1)
                      (("2" (SPLIT 1)
                        (("1" (FLATTEN)
                          (("1" (EXPAND "sorted_add" 1) (("1" (INST?) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (SPLIT 2)
                            (("1" (FLATTEN)
                              (("1" (EXPAND "sorted_add" 2)
                                (("1" (INST?) NIL NIL)) NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (SPLIT 2)
                                (("1" (FLATTEN)
                                  (("1" (EXPAND "sorted_add" 2)
                                    (("1" (INST?) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (EXPAND "sorted_add" 2)
                                    (("2" (INST?) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sort_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sorted_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|mv_standard_form| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|sorted_sans_add_nz| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|allnonzero?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|mv_cut| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|lft_cut_allnonzero| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|min_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|add_simplified| 0
  (|add_simplified-1| |nil| 3814449230
   ("" (SKEEP)
    (("" (EXPAND "add" 1)
      (("" (EXPAND "min_add")
        (("" (LEMMA "sorted_sans_add_simp")
          (("" (SPLIT 1)
            (("1" (FLATTEN)
              (("1" (EXPAND "sort_add" 1)
                (("1" (SPLIT 1)
                  (("1" (FLATTEN)
                    (("1" (EXPAND "sorted_add" 1) (("1" (INST?) NIL NIL)) NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (FLATTEN)
                      (("2" (SPLIT 2)
                        (("1" (EXPAND "sorted_add" 1)
                          (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (SPLIT 2)
                            (("1" (FLATTEN)
                              (("1" (EXPAND "sorted_add" 2)
                                (("1" (INST?) NIL NIL)) NIL))
                              NIL)
                             ("2" (FLATTEN)
                              (("2" (EXPAND "sorted_add" 2)
                                (("2" (INST?) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (LEMMA "lft_cut_alpha_mv_cut")
                    (("2" (INST?)
                      (("2" (HIDE -1)
                        (("2" (LEMMA "sorted_sans_add_Unif")
                          (("2" (LEMMA "sorted_sans_add_simp")
                            (("2" (EXPAND "sort_add" 1)
                              (("2" (LIFT-IF 1)
                                (("2" (SPLIT 1)
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "sorted_add" 1)
                                      (("1" (INST?)
                                        (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                          NIL)
                                         ("2" (HIDE 2)
                                          (("2" (LEMMA "lft_standard_is_sans")
                                            (("2" (INST?) NIL NIL)) NIL))
                                          NIL)
                                         ("3" (ASSERT) NIL NIL)
                                         ("4" (LEMMA "lft_standard_is_sans")
                                          (("4" (INST?) NIL NIL)) NIL)
                                         ("5" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (SPLIT 2)
                                      (("1" (FLATTEN)
                                        (("1" (EXPAND "sorted_add" 2)
                                          (("1" (INST?)
                                            (("1" (INST?)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (HIDE 3)
                                              (("2"
                                                (LEMMA "lft_standard_is_sans")
                                                (("2" (INST?)
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (LEMMA
                                                       "standard_form_is_standard")
                                                      (("2" (INST?) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (ASSERT) NIL NIL)
                                             ("4"
                                              (LEMMA
                                               "standard_form_is_standard")
                                              (("4"
                                                (LEMMA "lft_standard_is_sans")
                                                (("4" (INST? -1) NIL NIL))
                                                NIL))
                                              NIL)
                                             ("5" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (SPLIT 2)
                                          (("1" (FLATTEN)
                                            (("1" (EXPAND "sorted_add" 2)
                                              (("1" (INST?)
                                                (("1" (INST?)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (HIDE 3)
                                                  (("2"
                                                    (LEMMA
                                                     "lft_standard_is_sans")
                                                    (("2" (INST?) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (ASSERT) NIL NIL)
                                                 ("4"
                                                  (LEMMA
                                                   "lft_standard_is_sans")
                                                  (("4" (INST?)
                                                    (("4" (ASSERT)
                                                      (("4"
                                                        (LEMMA
                                                         "standard_form_is_standard")
                                                        (("4" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("5" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (FLATTEN)
                                            (("2" (EXPAND "sorted_add" 2)
                                              (("2" (INST?)
                                                (("1" (INST?)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2"
                                                  (LEMMA
                                                   "lft_standard_is_sans")
                                                  (("2" (INST?)
                                                    (("2" (ASSERT)
                                                      (("2"
                                                        (LEMMA
                                                         "standard_form_is_standard")
                                                        (("2" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (ASSERT) NIL NIL)
                                                 ("4"
                                                  (LEMMA
                                                   "standard_form_is_standard")
                                                  (("4"
                                                    (LEMMA
                                                     "lft_standard_is_sans")
                                                    (("4" (INST? -1)
                                                      (("4" (ASSERT)
                                                        (("4" (INST -1 "p") NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("5" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sorted_sans_add_simp| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|simplified?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|Unif?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|mv_cut| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|sorted_sans_add_Unif| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|lft_standard_is_sans| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|standard_form_is_standard| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (|lft_cut_alpha_mv_cut| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|sorted_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|mv_standard_form| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|sort_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|min_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|add_minlength| 0
  (|add_minlength-1| |nil| 3814450025
   ("" (SKEEP)
    (("" (EXPAND "add" 1)
      (("" (EXPAND "min_add" 1)
        (("" (ASSERT)
          (("" (SPLIT 1)
            (("1" (PROPAX) NIL NIL)
             ("2" (FLATTEN)
              (("2" (ASSERT)
                (("2" (LEMMA "lft_mv_cut")
                  (("2" (INST?)
                    (("1" (ASSERT) NIL NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "minlength?" 2) (("2" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|lft_mv_cut| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|minlength?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|sort_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|min_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|add_sorted| 0
  (|add_sorted-1| |nil| 3814450350
   ("" (LEMMA "sorted_sans_add_sort")
    (("" (SKEEP)
      (("" (EXPAND "add" 1)
        (("" (EXPAND "min_add" 1)
          (("" (SPLIT 1)
            (("1" (FLATTEN)
              (("1" (EXPAND "sort_add" 1)
                (("1" (SPLIT 1)
                  (("1" (FLATTEN)
                    (("1" (EXPAND "sorted_add" 1) (("1" (INST?) NIL NIL)) NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (SPLIT 2)
                      (("1" (ASSERT)
                        (("1" (FLATTEN)
                          (("1" (EXPAND "sorted_add" 2) (("1" (INST?) NIL NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (FLATTEN)
                        (("2" (SPLIT 2)
                          (("1" (FLATTEN)
                            (("1" (EXPAND "sorted_add" 2)
                              (("1" (INST?) NIL NIL)) NIL))
                            NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN)
                              (("2" (EXPAND "sorted_add" 2)
                                (("2" (INST?) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT)
              (("2" (FLATTEN)
                (("2" (LEMMA "sorted_mv_lift")
                  (("2" (LEMMA "sorted_sans_add_Unif")
                    (("2" (INST? -2)
                      (("2" (ASSERT)
                        (("2" (HIDE 3)
                          (("2" (EXPAND "sort_add" 1)
                            (("2" (LIFT-IF 1)
                              (("2" (SPLIT 1)
                                (("1" (FLATTEN)
                                  (("1" (EXPAND "sorted_add")
                                    (("1" (INST?)
                                      (("1" (ASSERT) (("1" (INST?) NIL NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (LEMMA "lft_standard_is_sans")
                                          (("2" (INST? -1) NIL NIL)) NIL))
                                        NIL)
                                       ("3" (ASSERT) NIL NIL)
                                       ("4" (LEMMA "lft_standard_is_sans")
                                        (("4" (INST? -1) NIL NIL)) NIL)
                                       ("5" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (SPLIT 2)
                                    (("1" (FLATTEN)
                                      (("1" (EXPAND "sorted_add" 2)
                                        (("1" (INST?)
                                          (("1" (INST?)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (HIDE 3)
                                            (("2"
                                              (LEMMA "lft_standard_is_sans")
                                              (("2" (INST?)
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (LEMMA
                                                     "standard_form_is_standard")
                                                    (("2" (INST?) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (ASSERT) NIL NIL)
                                           ("4" (HIDE 3)
                                            (("4"
                                              (LEMMA "lft_standard_is_sans")
                                              (("4" (INST?) NIL NIL)) NIL))
                                            NIL)
                                           ("5" (ASSERT) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (FLATTEN)
                                      (("2" (SPLIT 2)
                                        (("1" (FLATTEN)
                                          (("1" (EXPAND "sorted_add" 2)
                                            (("1" (INST?)
                                              (("1" (INST?)
                                                (("1" (ASSERT) NIL NIL)) NIL)
                                               ("2" (HIDE 3)
                                                (("2"
                                                  (LEMMA
                                                   "lft_standard_is_sans")
                                                  (("2" (INST?) NIL NIL)) NIL))
                                                NIL)
                                               ("3" (ASSERT) NIL NIL)
                                               ("4" (HIDE 3)
                                                (("4"
                                                  (LEMMA
                                                   "lft_standard_is_sans")
                                                  (("4" (INST?)
                                                    (("4" (ASSERT)
                                                      (("4"
                                                        (LEMMA
                                                         "standard_form_is_standard")
                                                        (("4" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("5" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (FLATTEN)
                                          (("2" (EXPAND "sorted_add" 2)
                                            (("2" (INST?)
                                              (("1" (ASSERT)
                                                (("1" (INST?) NIL NIL)) NIL)
                                               ("2" (ASSERT)
                                                (("2" (HIDE 3)
                                                  (("2"
                                                    (LEMMA
                                                     "lft_standard_is_sans")
                                                    (("2" (INST?)
                                                      (("2"
                                                        (LEMMA
                                                         "standard_form_is_standard")
                                                        (("2" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (HIDE 2)
                                                (("3" (HIDE 2)
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("4" (HIDE 3)
                                                (("4"
                                                  (LEMMA
                                                   "lft_standard_is_sans")
                                                  (("4" (INST?)
                                                    (("4" (ASSERT)
                                                      (("4"
                                                        (LEMMA
                                                         "standard_form_is_standard")
                                                        (("4" (ASSERT)
                                                          (("4" (INST?) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("5" (ASSERT) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|min_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sorted_mv_lift| FORMULA-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_cut| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|standard_form_is_standard| FORMULA-DECL NIL |standard_form_mult_poly|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|lft_standard_is_sans| FORMULA-DECL NIL |arithmetic_MultPoly| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|sorted_sans_add_Unif| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|sorted_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|max| CONST-DECL "{p: real | p >= m AND p >= n}" |real_defs| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|mv_standard_sans_cut?| CONST-DECL "bool" |arithmetic_MultPoly| NIL)
    (|lft| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|mv_standard_form| DEF-DECL "MultPoly" |standard_form_mult_poly| NIL)
    (|sort_add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|add| CONST-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|sorted_sans_add_sort| FORMULA-DECL NIL |standard_form_extras| NIL))
   SHOSTAK))
 (|add_standard_form| 0
  (|add_standard_form-1| |nil| 3813934717
   ("" (LEMMA "add_nonzero")
    (("" (LEMMA "add_simplified")
      (("" (LEMMA "add_minlength")
        (("" (LEMMA "add_sorted")
          (("" (SKEEP)
            (("" (INST?)
              (("" (INST?)
                (("" (INST?)
                  (("" (INST?)
                    (("" (EXPAND "mv_standard_form?" 1)
                      (("" (ASSERT)
                        (("" (SPLIT 1)
                          (("1" (PROPAX) NIL NIL)
                           ("2" (FLATTEN)
                            (("2" (ASSERT)
                              (("2" (SPLIT 2)
                                (("1" (PROPAX) NIL NIL)
                                 ("2" (ASSERT)
                                  (("2" (LEMMA "add_minlength")
                                    (("2" (POSTPONE) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|add_simplified| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|add_sorted| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL)
    (|add_minlength| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|add_nonzero| FORMULA-DECL NIL |standard_form_extras| NIL))
   SHOSTAK))
 (|mult_standard_form| 0
  (|mult_standard_form-1| |nil| 3861966095
   ("" (SKEEP)
    (("" (EXPAND "mp_mult")
      (("" (SPLIT)
        (("1" (FLATTEN) (("1" (GRIND) NIL NIL)) NIL)
         ("2" (FLATTEN)
          (("2" (LEMMA "add_standard_form") (("2" (INST? -1) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mp_mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|mp_mono_mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|add_standard_form| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|mv_standard_form?| CONST-DECL "bool" |standard_form_mult_poly| NIL))
   SHOSTAK))
 (|scal_full_eval_monom_TCC1| 0
  (|scal_full_eval_monom_TCC1-1| |nil| 3814171304 ("" (SUBTYPE-TCC) NIL NIL)
   ((|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)) NIL
   (|scal_full_eval_monom| SUBTYPE "standard_form_extras.vals"
    "{l: list_adt[real].list | reals.>=(list_props[real].length(l), list_props[nat].length(arithmetic_MultPoly.mult(standard_form_extras.r, standard_form_extras.m)`alpha))}")))
 (|scal_full_eval_monom| 0
  (|scal_full_eval_monom-1| |nil| 3814171428
   (""
    (CASE "FORALL (n:nat,r: real, m: monomial,
                     vals: list[real] | length(vals) >= length(m`alpha)):
               length(m`alpha)=n IMPLIES full_eval(mult(r, m))(vals) = r * full_eval(m)(vals)")
    (("1" (SKEEP) (("1" (INST -1 "length(m`alpha)" "r" "m" "vals") NIL NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "n" 1)
        (("1" (SKEEP)
          (("1" (EXPAND "length " -1)
            (("1" (LIFT-IF -1)
              (("1" (SPLIT -1)
                (("1" (EXPAND "full_eval" 1 1)
                  (("1" (EXPAND "mult" 1 1)
                    (("1" (LEMMA "alpha_null_eval")
                      (("1" (INST?)
                        (("1" (ASSERT)
                          (("1" (REPLACE -1)
                            (("1" (LEMMA "alpha_null_eval")
                              (("1" (EXPAND "full_eval" 1 1)
                                (("1"
                                  (INST -1 "m" "vals"
                                   "list_length_n[nat](length(vals))")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (LEMMA "list_length_n[nat]")
                                    (("2" (INST -1 "length(vals)")
                                      (("2" (ASSERT) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "list_length_n[nat]")
                          (("2" (INST -1 "length(vals)")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (SKEEP)
            (("2" (EXPAND "mult" 1 1)
              (("2" (LEMMA "eval_vals")
                (("2" (INST -1 "length(m`alpha)" "m" "vals")
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "eval_vals")
                      (("1"
                        (INST -1 "length(m`alpha)"
                         "(# C := m`C * r, alpha := m`alpha #)" "vals")
                        (("1" (REPLACE -1 1)
                          (("1" (ASSERT)
                            (("1" (EXPAND "hat" 1) (("1" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2 -1 -2)
                          (("2" (EXPAND "length" 1)
                            (("2" (LIFT-IF 1)
                              (("2" (SPLIT 1)
                                (("1" (FLATTEN)
                                  (("1" (EXPAND "length" -2)
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (HIDE -1 2)
                    (("2" (EXPAND "length" 1)
                      (("2" (LIFT-IF 1)
                        (("2" (SPLIT 1)
                          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                           ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (SKEEP)
            (("3" (ASSERT)
              (("3" (TYPEPRED "vals")
                (("3" (HIDE -1)
                  (("3" (LEMMA "mult_length_monom")
                    (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (LEMMA "mult_length_monom")
          (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|mult_length_monom| FORMULA-DECL NIL |standard_form_extras| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|hat| CONST-DECL "{mm: monomial | length(mm`alpha) = length(m`alpha) - 1}"
     |eval_properties| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|eval_vals| FORMULA-DECL NIL |eval_properties| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|alpha_null_eval| FORMULA-DECL NIL |eval_properties| NIL)
    (|list_length_n| FORMULA-DECL NIL |list_lemmas| NIL)
    (|list_length_n| DEF-DECL "list[nat]" |list_lemmas| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|full_eval| CONST-DECL "real" |eval_MultPoly| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL))
   SHOSTAK))
 (|scale_full_eval_TCC1| 0
  (|scale_full_eval_TCC1-1| |nil| 3810892729
   ("" (SKEEP)
    (("" (LEMMA "mult_length")
      (("" (INST?)
        (("" (ASSERT)
          (("" (LEMMA "mult_max_length")
            (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mult_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|mult_max_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|scale_full_eval| SUBTYPE "standard_form_extras.vals"
    "{l: list_adt[real].list | reals.>=(list_props[real].length(l), standard_form_mult_poly.max_length(arithmetic_MultPoly.mult(standard_form_extras.r, standard_form_extras.p)))}")))
 (|scale_full_eval| 0
  (|scale_full_eval-1| |nil| 3814005374
   ("" (INDUCT "p")
    (("1" (SKEEP)
      (("1" (EXPAND "mult" 1 1)
        (("1" (ASSERT)
          (("1" (EXPAND "full_eval" 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "mult" 1 1)
          (("2" (LEMMA "full_eval_recurs")
            (("2"
              (INST -1 "cons(mult(r, cons1_var), mult(r, cons2_var))" "vals")
              (("2" (ASSERT)
                (("2" (REPLACE -1 1)
                  (("2" (LEMMA "scal_full_eval_monom")
                    (("2" (INST?)
                      (("1" (REPLACE -1 1)
                        (("1" (ASSERT)
                          (("1" (INST -3 "r" "vals")
                            (("1" (REPLACE -3 1)
                              (("1" (ASSERT)
                                (("1" (LEMMA "full_eval_recurs")
                                  (("1"
                                    (INST -1 "cons(cons1_var,cons2_var)"
                                     "vals")
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -1 1)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2)
                              (("2" (TYPEPRED "vals")
                                (("2" (TYPEPRED "vals")
                                  (("2" (EXPAND "max_length" -2)
                                    (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (TYPEPRED "vals")
                          (("2" (EXPAND "max_length" -2)
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (LEMMA "mult_max_length")
          (("3" (INST?) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|mult_max_length| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|mult| CONST-DECL "monomial" |arithmetic_MultPoly| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nonneg_rat_max| APPLICATION-JUDGEMENT
     "{s: nonneg_rat | s >= q AND s >= r}" |real_defs| NIL)
    (|nat_max| APPLICATION-JUDGEMENT "{k: nat | i <= k AND j <= k}" |real_defs|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|scal_full_eval_monom| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|full_eval_recurs| FORMULA-DECL NIL |eval_properties| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|full_eval| DEF-DECL "real" |eval_MultPoly| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|mult| DEF-DECL "MultPoly" |arithmetic_MultPoly| NIL))
   SHOSTAK))
 (|vals_pad_TCC1| 0
  (|vals_pad_TCC1-1| |nil| 3810892729
   ("" (SKEEP)
    (("" (LEMMA "length_append[real]")
      (("" (INST -1 "vals" " ^[real]((: 1 :), n)")
        (("" (REPLACE -1)
          (("" (LEMMA "length_appendn[real]")
            (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|length_append| FORMULA-DECL NIL |list_props| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|length_singleton| FORMULA-DECL NIL |more_list_props| |structures|)
    (|length_appendn| FORMULA-DECL NIL |more_list_props| |structures|)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL
   (|vals_pad| SUBTYPE
    "list_props[real].append(standard_form_extras.vals, more_list_props[real].^((: 1 :), standard_form_extras.n))"
    "{l: list_adt[real].list | list_props[real].length(l) = (number_fields.+)(standard_form_extras.n, list_props[real].length(standard_form_extras.vals))}")))
 (|vals_pad_cdr_TCC1| 0
  (|vals_pad_cdr_TCC1-1| |nil| 3814175403
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (TYPEPRED "vals_pad(vals,n)")
        (("" (ASSERT)
          (("" (HIDE -1) (("" (EXPAND "length" -) (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|vals_pad| CONST-DECL "{l: list[real] | length(l) = length(vals) + n}"
     |standard_form_extras| NIL))
   NIL
   (|vals_pad_cdr| SUBTYPE
    "standard_form_extras.vals_pad(standard_form_extras.vals, standard_form_extras.n)"
    "(list_adt[real].cons?)")))
 (|vals_pad_cdr| 0
  (|vals_pad_cdr-1| |nil| 3814175493
   ("" (SKEEP)
    (("" (EXPAND "vals_pad" 1)
      (("" (EXPAND "append" 1 1)
        (("" (LIFT-IF 1)
          (("" (SPLIT 1)
            (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|vals_pad| CONST-DECL "{l: list[real] | length(l) = length(vals) + n}"
     |standard_form_extras| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL))
   SHOSTAK))
 (|vals_extend_monom_TCC1| 0
  (|vals_extend_monom_TCC1-1| |nil| 3814174758
   ("" (SKEEP)
    (("" (TYPEPRED "vals_pad(vals,n)")
      (("" (HIDE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|vals_pad| CONST-DECL "{l: list[real] | length(l) = length(vals) + n}"
     |standard_form_extras| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL))
   NIL
   (|vals_extend_monom| SUBTYPE
    "standard_form_extras.vals_pad(standard_form_extras.vals, standard_form_extras.n)"
    "{l: list_adt[real].list | reals.>=(list_props[real].length(l), list_props[nat].length(standard_form_extras.m`alpha))}")))
 (|vals_extend_monom| 0
  (|vals_extend_monom-1| |nil| 3814174850
   (""
    (CASE "FORALL (A:nat,m: monomial,
              (vals: list[real] | length(vals) >= length(m`alpha)),
              n: nat):
       length(m`alpha)=A IMPLIES( full_eval(m)(vals_pad(vals, n)) = full_eval(m)(vals))")
    (("1" (SKEEP) (("1" (INST -1 "length(m`alpha)" "m" "vals" "n") NIL NIL))
      NIL)
     ("2" (ASSERT)
      (("2" (HIDE 2)
        (("2" (INDUCT "A")
          (("1" (SKEEP)
            (("1" (EXPAND "length" -1)
              (("1" (LIFT-IF -1)
                (("1" (SPLIT -1)
                  (("1" (EXPAND "full_eval" 1)
                    (("1" (LEMMA "alpha_null_eval")
                      (("1" (INST -1 "m" "_" "_")
                        (("1"
                          (INST -1 "vals" " list_length_n[nat](length(vals))")
                          (("1" (ASSERT)
                            (("1" (REPLACE -1)
                              (("1" (LEMMA "alpha_null_eval")
                                (("1"
                                  (INST -1 "m" "(vals_pad(vals, n))"
                                   " list_length_n[nat](length(vals_pad(vals, n)))")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (HIDE 2)
                                    (("2" (ASSERT)
                                      (("2" (LEMMA "list_length_n[nat]")
                                        (("2"
                                          (INST -1
                                           "length[real](vals_pad(vals, n))")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (LEMMA "list_length_n[nat]")
                            (("2" (INST -1 "length(vals)")
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKEEP)
            (("2" (SKEEP)
              (("2" (LEMMA "eval_vals")
                (("2" (INST -1 "length(m`alpha)" "m" "vals")
                  (("1" (REPLACE -1 1)
                    (("1" (LEMMA "eval_vals")
                      (("1" (INST -1 "length(m`alpha)" "m" "vals_pad(vals, n)")
                        (("1" (REPLACE -1 1)
                          (("1" (ASSERT)
                            (("1" (EXPAND "vals_pad" 1 2)
                              (("1" (EXPAND "append" 1 1)
                                (("1" (ASSERT)
                                  (("1" (INST -3 "hat(m)" "cdr(vals)" "n")
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -3 1 RL)
                                        (("1" (LEMMA "vals_pad_cdr")
                                          (("1" (INST?)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "length" 1 1) (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "length" 1 1) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (SKEEP)
              (("3" (TYPEPRED "vals_pad(vals,n)") (("3" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (TYPEPRED "vals_pad(vals,n)") (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|alpha_null_eval| FORMULA-DECL NIL |eval_properties| NIL)
    (|list_length_n| DEF-DECL "list[nat]" |list_lemmas| NIL)
    (|list_length_n| FORMULA-DECL NIL |list_lemmas| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|vals_pad_cdr| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|hat| CONST-DECL "{mm: monomial | length(mm`alpha) = length(m`alpha) - 1}"
     |eval_properties| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|eval_vals| FORMULA-DECL NIL |eval_properties| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|full_eval| CONST-DECL "real" |eval_MultPoly| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|vals_pad| CONST-DECL "{l: list[real] | length(l) = length(vals) + n}"
     |standard_form_extras| NIL))
   SHOSTAK))
 (|vals_extend_TCC1| 0
  (|vals_extend_TCC1-1| |nil| 3810892729
   ("" (SKEEP)
    (("" (TYPEPRED "vals_pad(vals,n)")
      (("" (HIDE -1) (("" (TYPEPRED "vals") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|vals_pad| CONST-DECL "{l: list[real] | length(l) = length(vals) + n}"
     |standard_form_extras| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL))
   NIL
   (|vals_extend| SUBTYPE
    "standard_form_extras.vals_pad(standard_form_extras.vals, standard_form_extras.n)"
    "{l: list_adt[real].list | reals.>=(list_props[real].length(l), standard_form_mult_poly.max_length(standard_form_extras.p))}")))
 (|vals_extend| 0
  (|vals_extend-1| |nil| 3813943658
   (""
    (CASE "FORALL (m:nat,p: MultPoly,
                     (vals: list[real] | length(vals) >= max_length(p)), n: nat):
               length(p)=m IMPLIES( full_eval(p)(vals_pad(vals, n)) = full_eval(p)(vals))")
    (("1" (SKEEP) (("1" (INST -1 "length(p)" "p" "vals" "n") NIL NIL)) NIL)
     ("2" (ASSERT)
      (("2" (HIDE 2)
        (("2" (INDUCT "m")
          (("1" (SKEEP)
            (("1" (GRIND)
              (("1" (EXPAND "length" -1)
                (("1" (LIFT-IF -1)
                  (("1" (SPLIT -1)
                    (("1" (EXPAND "full_eval" 1 1) (("1" (ASSERT) NIL NIL))
                      NIL)
                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKEEP)
            (("2" (SKEEP)
              (("2" (LEMMA "full_eval_recurs")
                (("2" (INST-CP -1 "p" "vals")
                  (("2" (ASSERT)
                    (("2" (SPLIT -2)
                      (("1" (ASSERT)
                        (("1" (EXPAND "length" -4) (("1" (ASSERT) NIL NIL))
                          NIL))
                        NIL)
                       ("2" (REPLACE -1 1)
                        (("2" (INST -2 "p" "vals_pad(vals,n)")
                          (("2" (ASSERT)
                            (("2" (SPLIT -2)
                              (("1" (EXPAND "length" -4)
                                (("1" (ASSERT) NIL NIL)) NIL)
                               ("2" (REPLACE -1 1)
                                (("2" (ASSERT)
                                  (("2" (INST -3 "cdr(p)" "vals" "n")
                                    (("2" (SPLIT -3)
                                      (("1" (REPLACE -1 1)
                                        (("1" (ASSERT)
                                          (("1" (LEMMA "vals_extend_monom")
                                            (("1" (INST?) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (ASSERT)
                                        (("2" (HIDE 2)
                                          (("2" (EXPAND "length" -3)
                                            (("2" (LIFT-IF -3)
                                              (("2" (SPLIT -3)
                                                (("1" (FLATTEN)
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (FLATTEN)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (SKEEP)
              (("3" (TYPEPRED "vals_pad(vals,n)")
                (("3" (TYPEPRED "vals")
                  (("3" (HIDE -1 -3) (("3" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (TYPEPRED "vals_pad(vals,n)") (("3" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|vals_extend_monom| FORMULA-DECL NIL |standard_form_extras| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|full_eval_recurs| FORMULA-DECL NIL |eval_properties| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|monomial| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (|MultPoly| TYPE-EQ-DECL NIL |standard_form_mult_poly| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|max_length| DEF-DECL "nat" |standard_form_mult_poly| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|full_eval| DEF-DECL "real" |eval_MultPoly| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|vals_pad| CONST-DECL "{l: list[real] | length(l) = length(vals) + n}"
     |standard_form_extras| NIL))
   SHOSTAK)))

