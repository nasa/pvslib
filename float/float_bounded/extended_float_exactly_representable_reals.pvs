extended_float_exactly_representable_reals
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY
EXPORTING ALL BUT ^ WITH ALL
BEGIN

  IMPORTING extended_float[radix,precision,dExp]

  IMPORTING float_bounded_axiomatic@ieee754_domain[radix,precision,emax]

  er_rat_to_er_int__exponent(s: sign, e: exponent, m: significand): int
  = e - precision + 1

  er_rat_to_er_int__exponent__le_max_exp
  : LEMMA FORALL(s: sign, e: exponent, m: significand)
    : er_rat_to_er_int__exponent(s,e,m) <= max_exp

  er_rat_to_er_int__exponent__ge_min_exp
  : LEMMA FORALL(s: sign, e: exponent, m: significand)
    : min_exp <= er_rat_to_er_int__exponent(s,e,m) 

  IMPORTING reals@sigma_nat
  IMPORTING sigma[nat] AS sigma_on_nat

  ;^(r: real, i:{i:int | r /= 0 OR i >= 0}): MACRO real
    = exponentiation.^(r,i)

  % significand seeing as a natural number is expressed in big-ending format:
  % most-significative digit is at the less-significative position (index 0)
  er_rat_to_er_int__significand(s: sign, e: exponent, m: significand): int
  = (-1)^s * sigma[nat]
    	     (0,precision-1,LAMBDA(i:nat): IF i < precision THEN m(i) * radix^(precision-1-i) ELSE 0 ENDIF)

  er_rat_to_er_int__significand__abs_lt_radix_pow_prec
  : LEMMA
    FORALL(s: sign, e: exponent, m: significand)
    : abs(er_rat_to_er_int__significand(s,e,m)) < radix^precision

  er_rat_to_er_int_value
  : LEMMA
    FORALL(s: sign, e: exponent, m: significand)
    : LET signific: int = er_rat_to_er_int__significand(s,e,m),
    	  exponent: int = er_rat_to_er_int__exponent(s,e,m)
      IN value(s,e,m) = signific * radix^exponent

  %

  er_ub_correspondent:      LEMMA      er_ub = max_pos_value

  er_lb_correspondent:      COROLLARY  er_lb = -max_pos_value

  er_min_pos_correspondent: LEMMA      er_min_pos = min_pos_value

  er_max_neg_correspondent: COROLLARY  er_max_neg = -min_pos_value

  min_pos_value_is_er: COROLLARY
  		       exactly_representable?(min_pos_value)

  %

  er_rat_er_int : THEOREM FORALL (x: er_real) : exactly_representable_as_pair_of_integers?(x)

  er_rat_er_int_j: JUDGEMENT er_real SUBTYPE_OF xef_real

  er_bounded : COROLLARY FORALL (x: er_real)
  : EXISTS (f: (Fbounded?(given_format)) | Fexp(f) <= max_exp): FtoR(f) = x

  er_canonic : COROLLARY FORALL (x: er_real)
  : EXISTS (f: unb_canonic_float | Fexp(f) <= max_exp): FtoR(f) = x

END extended_float_exactly_representable_reals
