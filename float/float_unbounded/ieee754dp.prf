(|ieee754dp|
 (|precomputed_rep_int_limit| 0
  (|precomputed_rep_int_limit-1| |nil| 3859888211 ("" (EVAL-FORMULA) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|IMP_float_TCC1| 0
  (|IMP_float_TCC1-1| |nil| 3859888211 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL (|IMP_float| SUBTYPE "ieee754dp.ieee754radix" "above(1)")))
 (|IMP_float_props_rounding_TCC1| 0
  (|IMP_float_props_rounding_TCC1-1| |nil| 3859888211
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|IMP_float_props_rounding| SUBTYPE "ieee754dp.ieee754radix" "above(1)")))
 (|IMP_float_props_rounding_TCC2| 0
  (|IMP_float_props_rounding_TCC2-1| |nil| 3859888211
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|IMP_float_props_rounding| SUBTYPE "ieee754dp.ieee754dp_prec" "above(1)")))
 (|IMP_float_props_rounding_TCC3| 0
  (|IMP_float_props_rounding_TCC3-1| |nil| 3859888211
   ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|IMP_float_props_rounding| SUBTYPE "ieee754dp.ieee754dp_dexp"
    "{d: integers.posnat | reals.>(d, 103)}")))
 (|double_precision_format_TCC1| 0
  (|double_precision_format_TCC1-1| |nil| 3766231621 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL
   (|double_precision_format| SUBTYPE "ieee754dp.ieee754dp_prec" "above(1)")))
 (|dp_closest?_j| 0
  (|dp_closest?_j-2| |nil| 3766233846
   ("" (SPLIT 1)
    (("1" (SKEEP) (("1" (EXPAND "dp_closest?") (("1" (PROPAX) NIL NIL)) NIL))
      NIL)
     ("2" (EXPAND "dp_closest?")
      (("2" (USE "EvenClosest_rounded_mode")
        (("2"
          (CASE
              "EvenClosest?(double_precision_format) = LAMBDA (x1, (f1: (Fbounded?(double_precision_format)))): EvenClosest?(double_precision_format)(x1, f1)")
          (("1" (ASSERT) NIL NIL) ("2" (APPLY-EXTENSIONALITY) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|EvenClosest_rounded_mode| FORMULA-DECL NIL |float| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL))
   NIL
   (|dp_closest?_j| SUBTYPE "ieee754dp.dp_closest?"
    "{round: float[2].RestrictedRounding(ieee754dp.double_precision_format, float[2].EvenClosest?) | float[2].rounded_mode?(ieee754dp.double_precision_format)(round)}"))
  (|dp_closest?_j-1| |nil| 3766231621 ("" (JUDGEMENT-TCC) NIL NIL) NIL NIL
   (|dp_closest?_j| SUBTYPE "ieee754dp.dp_closest?"
    "{round: float[2].RestrictedRounding(ieee754dp.double_precision_format, float[2].EvenClosest?) | float[2].rounded_mode?(ieee754dp.double_precision_format)(round)}")))
 (|dp_closest?_closestroundingpred_j| 0
  (|dp_closest?_closestroundingpred_j-1| |nil| 3766231621
   ("" (JUDGEMENT-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|FtoR| CONST-DECL "real" |float| NIL)
    (|Closest?| CONST-DECL "bool" |float| NIL)
    (|even?| CONST-DECL "bool" |integers| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL)
    (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL))
   NIL
   (|dp_closest?_closestroundingpred_j| SUBTYPE "ieee754dp.dp_closest?"
    "ClosestRoundingPred[2](ieee754dp.double_precision_format)")))
 (|RtoD_TCC1| 0
  (|RtoD_TCC1-1| |nil| 3667932138
   ("" (SKEEP)
    (("" (USE "RND_EClosest_isEclosest")
      (("" (EXPAND "closest_double?")
        (("" (EXPAND "dp_closest?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|RND_EClosest_isEclosest| FORMULA-DECL NIL |float| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL))
   SHOSTAK
   (|RtoD| SUBTYPE
    "float[2].RND_EClosest(ieee754dp.double_precision_format)(ieee754dp.x1)"
    "{f: ieee754dp.unb_double | ieee754dp.closest_double?(ieee754dp.x1)(f)}")))
 (|RtoD_closest_double| 0
  (|RtoD_closest_double-1| |nil| 3793989041
   ("" (EXPAND "RtoD")
    (("" (SKEEP)
      (("" (USE "RND_EClosest_isEclosest")
        (("" (EXPAND "closest_double?")
          (("" (EXPAND "dp_closest?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|RND_EClosest_isEclosest| FORMULA-DECL NIL |float| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL))
   NIL))
 (|rtod_canonicroundfun_exactrepconservation_j| 0
  (|rtod_canonicroundfun_exactrepconservation_j-2| |nil| 3766146541
   ("" (SPLIT 1)
    (("1" (SKEEP)
      (("1" (TYPEPRED "RtoD(x)")
        (("1" (EXPAND "closest_double?") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL)
     ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL)
     ("3" (USE "ClosestRtoF_exact_rep_conv[2]")
      (("3" (ASSERT)
        (("3" (SKEEP)
          (("3" (ASSERT)
            (("3" (TYPEPRED "RtoD(r)")
              (("3" (EXPAND "closest_double?")
                (("3" (ASSERT)
                  (("3" (EXPAND "dp_closest?")
                    (("3" (ASSERT)
                      (("3" (EXPAND "EvenClosest?") (("3" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ClosestRtoF_exact_rep_conv| FORMULA-DECL NIL |float| NIL)
    (|Closest?| CONST-DECL "bool" |float| NIL)
    (RNDF TYPE-EQ-DECL NIL |float| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|Rounding| TYPE-EQ-DECL NIL |float| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (|dp_closest?_closestroundingpred_j| NAME-JUDGEMENT
     "ClosestRoundingPred[2](double_precision_format)" |ieee754dp| NIL)
    (|dp_closest?_j| NAME-JUDGEMENT
     "{round: RestrictedRounding[2](double_precision_format, EvenClosest?) | rounded_mode?(double_precision_format)(round)}"
     |ieee754dp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL))
   NIL
   (|rtod_canonicroundfun_exactrepconservation_j| SUBTYPE "ieee754dp.RtoD"
    "{RtoF: float[2].CanonicRoundingFun(ieee754dp.double_precision_format, ieee754dp.dp_closest?) | float[2].exact_rep_conservation(ieee754dp.double_precision_format, ieee754dp.dp_closest?)(RtoF)}"))
  (|rtod_canonicroundfun_exactrepconservation_j-1| |nil| 3766146475
   ("" (JUDGEMENT-TCC) NIL NIL) NIL NIL
   (|rtod_canonicroundfun_exactrepconservation_j| SUBTYPE "ieee754dp.RtoD"
    "{RtoF: float[2].CanonicRoundingFun(ieee754dp.double_precision_format, ieee754dp.dp_closest?) | float[2].exact_rep_conservation(ieee754dp.double_precision_format, ieee754dp.dp_closest?)(RtoF)}")))
 (|rtod_monotonic| 0
  (|rtod_monotonic-1| |nil| 3765014623
   ("" (SKEEP)
    (("" (TYPEPRED "RtoD(x1)")
      (("" (EXPAND "closest_double?")
        (("" (EXPAND "dp_closest?")
          (("" (USE "EvenClosest_monotone")
            (("" (EXPAND "monotone?")
              (("" (INST -1 "x1" "x2" "RtoD(x1)" "RtoD(x2)")
                (("" (SPLIT -1)
                  (("1" (EXPAND "DtoR") (("1" (PROPAX) NIL NIL)) NIL)
                   ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (TYPEPRED "RtoD(x2)")
                    (("4" (EXPAND "closest_double?")
                      (("4" (EXPAND "dp_closest?") (("4" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|monotone?| CONST-DECL "bool" |float| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|EvenClosest_monotone| FORMULA-DECL NIL |float| NIL))
   SHOSTAK))
 (|neq_lt_rew| 0
  (|neq_lt_rew-1| |nil| 3793989351 ("" (GRIND) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}"
     |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|vNum| CONST-DECL "posnat" |float| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|Fnormal?| CONST-DECL "bool" |float| NIL)
    (|Fsubnormal?| CONST-DECL "bool" |float| NIL)
    (|even_minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|Fminus| CONST-DECL "float" |float| NIL)
    (|Flt?| CONST-DECL "bool" |float| NIL)
    (|Fle?| CONST-DECL "bool" |float| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL))
   SHOSTAK))
 (|noteq_rew_rl1| 0
  (|noteq_rew_rl1-1| |nil| 3683491511 ("" (GRIND) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|vNum| CONST-DECL "posnat" |float| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|Fnormal?| CONST-DECL "bool" |float| NIL)
    (|Fsubnormal?| CONST-DECL "bool" |float| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}"
     |real_defs| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|Fminus| CONST-DECL "float" |float| NIL)
    (|Flt?| CONST-DECL "bool" |float| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL))
   SHOSTAK))
 (|noteq_rew_rl2| 0
  (|noteq_rew_rl2-1| |nil| 3683491521
   ("" (SKEEP)
    (("" (REPLACE -2) (("" (EXPAND ">") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)
   ((|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|Fminus| CONST-DECL "float" |float| NIL)
    (|Flt?| CONST-DECL "bool" |float| NIL)
    (|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL)
    (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|noteq_rew| 0
  (|noteq_rew-1| |nil| 3682009054
   ("" (SKEEP)
    (("" (IFF)
      (("" (SPLIT 1)
        (("1" (FLATTEN)
          (("1" (EXPAND ">")
            (("1" (EXPAND "<")
              (("1" (USE "FltCorrect")
                (("1" (REPLACE -1 :HIDE? T)
                  (("1" (USE "FltCorrect")
                    (("1" (REPLACE -1 :HIDE? T)
                      (("1" (ASSERT)
                        (("1" (CASE "FtoR(X)=FtoR(Y)")
                          (("1" (HIDE-ALL-BUT (-1 1))
                            (("1" (USE "FcanonicUnique")
                              (("1" (INST -1 "double_precision_format")
                                (("1" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|posnat_expt| APPLICATION-JUDGEMENT "posnat" |exponentiation| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL)
    (|rat_times_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|rat_minus_rat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (|Fminus| CONST-DECL "float" |float| NIL)
    (|Flt?| CONST-DECL "bool" |float| NIL)
    (|expt| DEF-DECL "real" |exponentiation| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|FtoR| CONST-DECL "real" |float| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|FcanonicUnique| FORMULA-DECL NIL |float| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|FltCorrect| FORMULA-DECL NIL |float| NIL))
   SHOSTAK))
 (|neq_rew| 0
  (|neq_rew-1| |nil| 3682009780 ("" (EXPAND "/=") (("" (PROPAX) NIL NIL)) NIL)
   ((/= CONST-DECL "boolean" |notequal| NIL)) SHOSTAK))
 (|leq_def| 0
  (|leq_def-1| |nil| 3747856125
   ("" (SKEEP)
    (("" (LEMMA "Fle_definition")
      (("" (INST -1 "double_precision_format" "X" "Y") (("" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   ((|Fle_definition| FORMULA-DECL NIL |float| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK))
 (|Dulp_def| 0
  (|Dulp_def-1| |nil| 3671547731
   ("" (SKEEP)
    (("" (EXPAND "Dulp") (("" (USE "FulpCanonic") (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|Dulp| CONST-DECL "posreal" |ieee754dp| NIL)
    (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|FulpCanonic| FORMULA-DECL NIL |float| NIL))
   SHOSTAK))
 (|DtoR_round| 0
  (|DtoR_round-2| |nil| 3698671510
   ("" (SKEEP)
    (("" (EXPAND "DtoR")
      (("" (EXPAND "Dulp")
        (("" (USE "ClosestUlp")
          (("" (ASSERT)
            (("" (SPLIT -1)
              (("1" (INVOKE (TYPEPRED "%3") (? 1 "Closest?%1(%2,%3)"))
                (("1" (EXPAND "closest_double?")
                  (("1" (EXPAND "dp_closest?")
                    (("1" (EXPAND "EvenClosest?") (("1" (FLATTEN) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (INVOKE (TYPEPRED "%3") (? 1 "Fbounded?%1(%2)(%3)"))
                (("2" (EXPAND "Fcanonic?")
                  (("2" (EXPAND "Fnormal?")
                    (("2" (EXPAND "Fsubnormal?") (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (|ClosestUlp| FORMULA-DECL NIL |float| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Fsubnormal?| CONST-DECL "bool" |float| NIL)
    (|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}"
     |real_defs| NIL)
    (|Fnormal?| CONST-DECL "bool" |float| NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|Dulp| CONST-DECL "posreal" |ieee754dp| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL)
  (|DtoR_round-1| |nil| 3675274831
   ("" (SKEEP)
    (("" (EXPAND "DtoR")
      (("" (EXPAND "Dulp")
        (("" (USE "ClosestUlp")
          (("" (ASSERT)
            (("" (SPLIT -1)
              (("1" (INVOKE (TYPEPRED "%3") (? 1 "Closest?(%1)(%2,%3)"))
                (("1" (EXPAND "closest_double?")
                  (("1" (EXPAND "dp_closest?")
                    (("1" (EXPAND "EvenClosest?") (("1" (FLATTEN) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (INVOKE (TYPEPRED "%3") (? 1 "Fbounded?%1(%2)(%3)"))
                (("2" (EXPAND "Fcanonic?")
                  (("2" (EXPAND "Fnormal?")
                    (("2" (EXPAND "Fsubnormal?") (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ClosestUlp| FORMULA-DECL NIL |float| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (|Fsubnormal?| CONST-DECL "bool" |float| NIL)
    (|Fnormal?| CONST-DECL "bool" |float| NIL))
   SHOSTAK))
 (|DtoR_RtoD| 0
  (|DtoR_RtoD-1| |nil| 3675275376
   (""
    (CASE
        "FORALL(x,y,z: real): abs(x-y) <= z IMPLIES EXISTS(v:real): v >= -z AND v <= z AND x = y + v")
    (("1" (SKEEP)
      (("1" (USE "DtoR_round")
        (("1" (INST? -2 :WHERE -1)
          (("1" (ASSERT)
            (("1" (SKEEP -2) (("1" (INST 1 "v") (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (HIDE 2)
      (("2" (SKEEP) (("2" (INST 1 "x-y") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posreal| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|Dulp| CONST-DECL "posreal" |ieee754dp| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|posreal_div_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|minus_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|DtoR_round| FORMULA-DECL NIL |ieee754dp| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL))
   SHOSTAK))
 (|DtoR_RtoD_int_exactly_representable| 0
  (|DtoR_RtoD_int_exactly_representable-2| |nil| 3747820460
   ("" (SKEEP)
    (("" (LEMMA "Closest_int_exact_rep")
      (("" (INST -1 "double_precision_format" "dp_closest?" "RtoD" "i")
        (("1" (EXPAND "exactly_representable")
          (("1" (EXPAND "DtoR") (("1" (PROPAX) NIL NIL)) NIL)) NIL)
         ("2" (EXPAND "double_precision_format")
          (("2" (EXPAND "vNum")
            (("2" (ASSERT) (("2" (TYPEPRED "i") (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("3" (HIDE 2)
          (("3" (SPLIT 1)
            (("1" (SKEEP)
              (("1" (TYPEPRED "RtoD(x)")
                (("1" (EXPAND "closest_double?") (("1" (PROPAX) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (SKEEP)
              (("2" (TYPEPRED "RtoD(r)")
                (("2" (EXPAND "closest_double?")
                  (("2" (EXPAND "dp_closest?")
                    (("2" (EXPAND "EvenClosest?") (("2" (FLATTEN) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|int_abs_is_nonneg| APPLICATION-JUDGEMENT "{j: nonneg_int | j >= i}"
     |real_defs| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|Closest?| CONST-DECL "bool" |float| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|vNum| CONST-DECL "posnat" |float| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) NIL
    (^ CONST-DECL "real" |exponentiation| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|Rounding| TYPE-EQ-DECL NIL |float| NIL)
    (RNDF TYPE-EQ-DECL NIL |float| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (|exactly_representable| CONST-DECL "bool" |float| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|precomputed_rep_int_limit| FORMULA-DECL NIL |ieee754dp| NIL)
    (|posint_exp| APPLICATION-JUDGEMENT "posint" |exponentiation| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (|Closest_int_exact_rep| FORMULA-DECL NIL |float| NIL))
   NIL)
  (|DtoR_RtoD_int_exactly_representable-1| |nil| 3747819874
   ("" (SKEEP)
    (("" (LEMMA "Closest_int_exact_rep")
      (("" (INST -1 "double_precision_format" "sp_closest?" "RtoD" "i")
        (("1" (EXPAND "exactly_representable")
          (("1" (EXPAND "DtoR") (("1" (PROPAX) NIL)))))
         ("2" (EXPAND "double_precision_format")
          (("2" (ASSERT) (("2" (EXPAND "vNum") (("2" (ASSERT) NIL)))))))
         ("3" (HIDE 2)
          (("3" (SKEEP)
            (("3" (TYPEPRED "RtoD(r)")
              (("3" (EXPAND "closest_double?")
                (("3" (EXPAND "sp_closest?")
                  (("3" (EXPAND "EvenClosest?")
                    (("3" (FLATTEN) NIL))))))))))))))))))
    NIL)
   NIL NIL))
 (|RtoD_DtoR| 0
  (|RtoD_DtoR-1| |nil| 3747817992
   ("" (SKEEP)
    (("" (EXPAND "RtoD")
      (("" (LEMMA "ClosestRNDF_FtoR_inverse")
        ((""
          (INST -1 "double_precision_format"
           "EvenClosest?(double_precision_format)"
           " RND_EClosest(double_precision_format)")
          (("1" (EXPAND "FtoR_inverse")
            (("1" (EXPAND "DtoR") (("1" (INST?) NIL NIL)) NIL)) NIL)
           ("2" (SKEEP)
            (("2" (EXPAND "EvenClosest?") (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|Rounding| TYPE-EQ-DECL NIL |float| NIL)
    (|ClosestRoundingPred| TYPE-EQ-DECL NIL |float| NIL)
    (RNDF TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|CanonicRoundingFun| TYPE-EQ-DECL NIL |float| NIL)
    (|RND_EClosest| CONST-DECL "(Fcanonic?(b))" |float| NIL)
    (|Closest?| CONST-DECL "bool" |float| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|rndeclosest_j| APPLICATION-JUDGEMENT
     "CanonicRoundingFun[radix](b, EvenClosest?(b))" |ieee754dp| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|FtoR_inverse| CONST-DECL "bool" |float| NIL)
    (|ClosestRNDF_FtoR_inverse| FORMULA-DECL NIL |float| NIL))
   SHOSTAK))
 (|DtoR_ext| 0
  (|DtoR_ext-1| |nil| 3793989419
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (FLATTEN)
        (("1" (USE "FcanonicUnique")
          (("1" (INST -1 "double_precision_format")
            (("1" (EXPAND "DtoR") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|FcanonicUnique| FORMULA-DECL NIL |float| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL))
   NIL))
 (|DtoR_strictly_increasing| 0
  (|DtoR_strictly_increasing-1| |nil| 3747667960
   ("" (SKEEP)
    (("" (EXPAND "<" 1)
      (("" (EXPAND "DtoR") (("" (REWRITE "FltCorrect") NIL NIL)) NIL)) NIL))
    NIL)
   ((|FltCorrect| FORMULA-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL))
   SHOSTAK))
 (|DtoR_inc| 0
  (|DtoR_inc-1| |nil| 3675328982
   ("" (SKEEP)
    (("" (EXPAND "<=" 1)
      (("" (USE "FleCorrect")
        (("" (ASSERT)
          (("" (EXPAND "DtoR") (("" (EXPAND "<=") (("" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((<= CONST-DECL "bool" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|FleCorrect| FORMULA-DECL NIL |float| NIL))
   SHOSTAK))
 (|RtoD_inc| 0
  (|RtoD_inc-2| "" 3790103575
   ("" (SKEEP)
    (("" (CASE "x1=x2")
      (("1" (REPLACE -1 :HIDE? T)
        (("1" (EXPAND "<=")
          (("1" (USE "FleCorrect") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL)
       ("2" (EXPAND "RtoD")
        (("2" (USE "RND_EClosest_isEclosest")
          (("2" (USE "EvenClosest_Monotone")
            (("2" (EXPAND "Monotone?")
              (("2"
                (INST -1 "x1" "x2" "RND_EClosest(double_precision_format)(x1)"
                 "RND_EClosest(double_precision_format)(x2)")
                (("2" (ASSERT)
                  (("2" (SPLIT -1)
                    (("1" (EXPAND "<=" 2)
                      (("1" (USE "FleCorrect") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (USE "RND_EClosest_isEclosest") NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|FleCorrect| FORMULA-DECL NIL |float| NIL)
    (|RND_EClosest_isEclosest| FORMULA-DECL NIL |float| NIL)
    (|Monotone?| CONST-DECL "bool" |float| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|RND_EClosest| CONST-DECL "(Fcanonic?(b))" |float| NIL)
    (|EvenClosest_Monotone| FORMULA-DECL NIL |float| NIL))
   SHOSTAK)
  (|RtoD_inc-1| |nil| 3675330582
   ("" (SKEEP)
    (("" (CASE "x1=x2")
      (("1" (REPLACE -1 :HIDE? T)
        (("1" (EXPAND "<=")
          (("1" (USE "FleCorrect") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL)
       ("2" (EXPAND "RtoD")
        (("2" (USE "RND_EClosest_isEclosest")
          (("2" (USE "EvenClosest_Monotone")
            (("2" (EXPAND "Monotone?")
              (("2"
                (INST -1 "x1" "x2" "RND_EClosest(double_precision_format)(x1)"
                 "RND_EClosest(double_precision_format)(x2)")
                (("1" (ASSERT)
                  (("1" (SPLIT -1)
                    (("1" (EXPAND "<=" 2)
                      (("1" (USE "FleCorrect") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL)
                     ("2" (USE "RND_EClosest_isEclosest") NIL NIL))
                    NIL))
                  NIL)
                 ("2" (TYPEPRED "RND_EClosest[2](double_precision_format)(x2)")
                  (("2" (EXPAND "Fcanonic?")
                    (("2" (EXPAND "Fnormal?")
                      (("2" (EXPAND "Fsubnormal?") (("2" (GROUND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|float| TYPE-EQ-DECL NIL |float| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|FleCorrect| FORMULA-DECL NIL |float| NIL)
    (|RND_EClosest_isEclosest| FORMULA-DECL NIL |float| NIL)
    (|Monotone?| CONST-DECL "bool" |float| NIL)
    (|RND_EClosest| CONST-DECL "(Fcanonic?(b))" |float| NIL)
    (|EvenClosest_Monotone| FORMULA-DECL NIL |float| NIL))
   SHOSTAK))
 (|RtoD_opp| 0
  (|RtoD_opp-2| "" 3675336247
   ("" (SKEEP)
    (("" (USE "FcanonicUnique")
      (("" (INST -1 "double_precision_format")
        (("" (ASSERT)
          (("" (SPLIT -1)
            (("1" (HIDE 2)
              (("1" (CASE "closest_double?(-x)(RtoD(-x))")
                (("1" (CASE "closest_double?(-x)(Fopp(RtoD(x)))")
                  (("1" (USE "EvenClosest_Unique")
                    (("1" (INST -1 "double_precision_format")
                      (("1" (EXPAND "Unique?")
                        (("1" (INST? -1 :WHERE 1)
                          (("1" (INST -1 "-x")
                            (("1" (ASSERT)
                              (("1" (EXPAND "closest_double?")
                                (("1" (EXPAND "dp_closest?")
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "closest_double?")
                    (("2" (EXPAND "dp_closest?")
                      (("2" (HIDE 2)
                        (("2" (USE "EvenClosestFopp")
                          (("2" (ASSERT)
                            (("2" (TYPEPRED "RtoD(x)")
                              (("2" (EXPAND "closest_double?")
                                (("2" (EXPAND "dp_closest?")
                                  (("2" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (USE "FcanonicOpp")
                    (("3" (ASSERT)
                      (("3" (USE "FcanonicBounded") (("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (TYPEPRED "RtoD(-x)") (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (USE "FcanonicOpp") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|FcanonicUnique| FORMULA-DECL NIL |float| NIL)
    (|Fopp| CONST-DECL "float" |float| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL)
    (|Unique?| CONST-DECL "bool" |float| NIL)
    (|EvenClosest_Unique| FORMULA-DECL NIL |float| NIL)
    (|EvenClosestFopp| FORMULA-DECL NIL |float| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|FcanonicBounded| FORMULA-DECL NIL |float| NIL)
    (|FcanonicOpp| FORMULA-DECL NIL |float| NIL))
   SHOSTAK)
  (|RtoD_opp-1| |nil| 3675331460
   ("" (SKEEP)
    (("" (CASE "closest_double?(x)(RtoD(x))")
      (("1" (CASE "closest_double?(-x)(RtoD(-x))")
        (("1" (CASE "closest_double?(-x)(Fopp(RtoD(x)))")
          (("1" (HIDE -3)
            (("1" (EXPAND "closest_double?")
              (("1" (EXPAND "EvenClosest?")
                (("1" (FLATTEN)
                  (("1" (SPLIT -2)
                    (("1" (SPLIT -4)
                      (("1" (POSTPONE) NIL NIL)
                       ("2" (INST -1 "Fopp(RtoD(x))")
                        (("2" (ASSERT)
                          (("2" (USE "FcanonicUnique")
                            (("2" (ASSERT)
                              (("2" (USE "FcanonicOpp")
                                (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (INST -1 "RtoD(-x)")
                      (("2" (ASSERT)
                        (("2" (USE "FcanonicUnique")
                          (("2" (ASSERT)
                            (("2" (USE "FcanonicOpp") (("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL))
          NIL)
         ("2" (POSTPONE) NIL NIL))
        NIL)
       ("2" (POSTPONE) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|unique_zero_RtoD_TCC1| 0
  (|unique_zero_RtoD_TCC1-2| |nil| 3766233885
   ("" (SKEEP)
    (("" (TYPEPRED "RtoD(x)")
      (("" (EXPAND "closest_double?")
        (("" (EXPAND "dp_closest?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|dp_closest?| CONST-DECL "bool" |ieee754dp| NIL))
   NIL
   (|unique_zero_RtoD| SUBTYPE "ieee754dp.RtoD"
    "RNDF[2](ieee754dp.double_precision_format, float[2].EvenClosest?(ieee754dp.double_precision_format))"))
  (|unique_zero_RtoD_TCC1-1| |nil| 3766231621 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL
   (|unique_zero_RtoD| SUBTYPE "ieee754dp.RtoD"
    "RNDF[2](ieee754dp.double_precision_format, float[2].EvenClosest?(ieee754dp.double_precision_format))")))
 (|unique_zero_RtoD| 0
  (|unique_zero_RtoD-1| |nil| 3699218117
   ("" (USE "unique_zero_closest_rounding") NIL NIL)
   ((|unique_zero_closest_rounding| FORMULA-DECL NIL |float_props_rounding|
     NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|Rounding| TYPE-EQ-DECL NIL |float| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (RNDF TYPE-EQ-DECL NIL |float| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|CanonicRoundingFun| TYPE-EQ-DECL NIL |float| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL))
   SHOSTAK))
 (|dp_rep_exp_bound| 0
  (|dp_rep_exp_bound-1| |nil| 3699218203
   ("" (SKEEP)
    (("" (LEMMA "rep_exp_bound")
      ((""
        (INST -1 "double_precision_format"
         "EvenClosest?(double_precision_format)" "RtoD" "exp" "x" "err" "f")
        (("1" (ASSERT)
          (("1" (TYPEPRED "f")
            (("1" (EXPAND "DtoR") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (EXPAND "double_precision_format")
          (("2" (TYPEPRED "exp") (("2" (PROPAX) NIL NIL)) NIL)) NIL)
         ("3" (SPLIT 1)
          (("1" (SKEEP)
            (("1" (EXPAND "RtoD")
              (("1" (USE "RND_EClosest_isEclosest") NIL NIL)) NIL))
            NIL)
           ("2" (HIDE-ALL-BUT 1) (("2" (USE "unique_zero_RtoD") NIL NIL)) NIL))
          NIL)
         ("4" (EXPAND "EvenClosest?") (("4" (SKEEP) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|rep_exp_bound| FORMULA-DECL NIL |float_props_rounding| NIL)
    (|RND_EClosest_isEclosest| FORMULA-DECL NIL |float| NIL)
    (|unique_zero_RtoD| FORMULA-DECL NIL |ieee754dp| NIL)
    (|posrat_exp| APPLICATION-JUDGEMENT "posrat" |exponentiation| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|DtoR| CONST-DECL "real" |ieee754dp| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (^ CONST-DECL "real" |exponentiation| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|abs| CONST-DECL "{n: nonneg_real | n >= m AND n >= -m}" |real_defs| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|CanonicRoundingFun| TYPE-EQ-DECL NIL |float| NIL)
    (|ClosestRoundingPred| TYPE-EQ-DECL NIL |float| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Fcanonic?| CONST-DECL "bool" |float| NIL)
    (|unb_double| NONEMPTY-TYPE-EQ-DECL NIL |ieee754dp| NIL)
    (|closest_double?| CONST-DECL "bool" |ieee754dp| NIL)
    (|RtoD| CONST-DECL "{f: unb_double | closest_double?(x1)(f)}" |ieee754dp|
     NIL)
    (|Rounding| TYPE-EQ-DECL NIL |float| NIL)
    (RNDF TYPE-EQ-DECL NIL |float| NIL)
    (|unique_zero| CONST-DECL "bool" |float_props_rounding| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|float| TYPE-EQ-DECL NIL |float| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|above| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Format| TYPE-EQ-DECL NIL |float| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|Fbounded?| CONST-DECL "bool" |float| NIL)
    (|double_precision_format| CONST-DECL "Format" |ieee754dp| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|EvenClosest?| CONST-DECL "bool" |float| NIL)
    (|Closest?| CONST-DECL "bool" |float| NIL)
    (|rtod_canonicroundfun_exactrepconservation_j| NAME-JUDGEMENT
     "{RtoF: CanonicRoundingFun(double_precision_format, dp_closest?) | exact_rep_conservation[2](double_precision_format, dp_closest?)(RtoF)}"
     |ieee754dp| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL)))

