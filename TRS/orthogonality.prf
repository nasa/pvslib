(|orthogonality| (|IMP_orthogonality_basis_TCC1| 0 (|IMP_orthogonality_basis_TCC1-1| |nil| 3673546671 ("" (REWRITE VAR_COUNTABLE) NIL NIL) ((|var_countable| FORMULA-DECL NIL |orthogonality| NIL)) NIL (|IMP_orthogonality_basis| ASSUMING "orthogonality_basis[orthogonality.variable, orthogonality.symbol, orthogonality.arity].orthogonality_basis" "var_countable: ASSUMPTION countability[term_adt[orthogonality_basis.variable, orthogonality_basis.symbol, orthogonality_basis.arity].term].is_countably_infinite(variables_term[orthogonality_basis.variable, orthogonality_basis.symbol, orthogonality_basis.arity].V)"))) (|sub_pos_TCC1| 0 (|sub_pos_TCC1-1| |nil| 3501314307 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|sub_pos| SUBTYPE "0" "below[fsp`length]"))) (|sub_pos_TCC2| 0 (|sub_pos_TCC2-1| |nil| 3501314307 ("" (SKOSIMP*) (("" (TYPEPRED "fsp!1") (("" (REWRITE "rest_of_PP_is_PP") NIL NIL)) NIL)) NIL) ((PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL)) NIL (|sub_pos| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp)" "PP[variable, symbol, arity]"))) (|sub_pos_TCC3| 0 (|sub_pos_TCC3-1| |nil| 3501314307 ("" (TERMINATION-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (<= CONST-DECL "bool" |positions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sub_pos| TERMINATION "orthogonality.sub_pos(seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp), orthogonality.p)" "NIL"))) (|sub_pos_TCC4| 0 (|sub_pos_TCC4-1| |nil| 3501314307 ("" (SKOSIMP*) (("" (TYPEPRED "fsp!1") (("" (REWRITE "rest_of_PP_is_PP") NIL NIL)) NIL)) NIL) ((PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL)) NIL (|sub_pos| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp)" "PP[variable, symbol, arity]"))) (|sub_pos_TCC5| 0 (|sub_pos_TCC5-1| |nil| 3501314307 ("" (TERMINATION-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (<= CONST-DECL "bool" |positions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sub_pos| TERMINATION "orthogonality.sub_pos(seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp), orthogonality.p)" "NIL"))) (|Pos_Over_TCC1| 0 (|Pos_Over_TCC1-1| |nil| 3501314307 ("" (SKEEP) (("" (REWRITE REST_OF_PP_IS_PP) NIL NIL)) NIL) ((|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL)) NIL (|Pos_Over| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1)" "PP[variable, symbol, arity]"))) (|Pos_Over_TCC2| 0 (|Pos_Over_TCC2-1| |nil| 3501314307 ("" (SKEEP) (("" (EXPAND* REST ^ MIN EMPTY_SEQ) (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) NIL (|Pos_Over| TERMINATION "orthogonality.Pos_Over(seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1), orthogonality.fsp2)" "NIL"))) (|Pos_Over_TCC3| 0 (|Pos_Over_TCC3-1| |nil| 3501314307 ("" (SKOSIMP*) (("" (TYPEPRED "fsp1!1") (("" (REWRITE "rest_of_PP_is_PP") NIL NIL)) NIL)) NIL) ((PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL)) NIL (|Pos_Over| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1)" "PP[variable, symbol, arity]"))) (|Pos_Over_TCC4| 0 (|Pos_Over_TCC4-1| |nil| 3501314307 ("" (TERMINATION-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (/= CONST-DECL "boolean" |notequal| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (<= CONST-DECL "bool" |positions| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|Pos_Over| TERMINATION "orthogonality.Pos_Over(seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1), orthogonality.fsp2)" "NIL"))) (|Pos_Under_TCC1| 0 (|Pos_Under_TCC1-1| |nil| 3501581101 ("" (SUBTYPE-TCC) NIL NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL)) NIL (|Pos_Under| SUBTYPE "0" "below[fsp2`length]"))) (|Pos_Under_TCC2| 0 (|Pos_Under_TCC2-1| |nil| 3521391411 ("" (SKEEP) (("" (REWRITE REST_OF_PP_IS_PP) NIL NIL)) NIL) ((|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL)) NIL (|Pos_Under| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp2)" "PP[variable, symbol, arity]"))) (|Pos_Under_TCC3| 0 (|Pos_Under_TCC3-1| |nil| 3521391411 ("" (SKEEP) (("" (EXPAND* REST ^ MIN EMPTY_SEQ) (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL)) NIL (|Pos_Under| TERMINATION "orthogonality.Pos_Under(orthogonality.fsp1, seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp2))" "NIL"))) (|Pos_Equal_TCC1| 0 (|Pos_Equal_TCC1-1| |nil| 3501581101 ("" (SKOSIMP*) (("" (TYPEPRED "fsp1!1") (("" (REWRITE "rest_of_PP_is_PP") NIL NIL)) NIL)) NIL) ((PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL)) NIL (|Pos_Equal| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1)" "PP[variable, symbol, arity]"))) (|Pos_Equal_TCC2| 0 (|Pos_Equal_TCC2-1| |nil| 3501581101 ("" (SKOSIMP*) (("" (REWRITE "length_rest") NIL NIL)) NIL) ((|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL)) NIL (|Pos_Equal| TERMINATION "orthogonality.Pos_Equal(seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1), orthogonality.fsp2)" "NIL"))) (|Pos_Equal_TCC3| 0 (|Pos_Equal_TCC3-1| |nil| 3501581101 ("" (SKOSIMP*) (("" (TYPEPRED "fsp1!1") (("" (REWRITE "rest_of_PP_is_PP") NIL NIL)) NIL)) NIL) ((PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL)) NIL (|Pos_Equal| SUBTYPE "seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1)" "PP[variable, symbol, arity]"))) (|Pos_Equal_TCC4| 0 (|Pos_Equal_TCC4-1| |nil| 3501581101 ("" (SKOSIMP*) (("" (REWRITE "length_rest") NIL NIL)) NIL) ((|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL)) NIL (|Pos_Equal| TERMINATION "orthogonality.Pos_Equal(seq_extras[position[variable, symbol, arity]].rest(orthogonality.fsp1), orthogonality.fsp2)" "NIL"))) (|sub_pos_element| 0 (|sub_pos_element-2| "" 3885002608 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2) (("1" (HIDE 2) (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "p1" "p2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (EXPAND "member_seq" -3) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (PROP) (("1" (EXPAND "sub_pos" -1) (("1" (EXPAND* "add_first" "insert?") (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sub_pos" 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (EXPAND* "add_first" "insert?" "finseq_appl") (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (INST 2 "i!2+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "sub_pos" -1) (("3" (EXPAND* "add_first" "insert?" "finseq_appl") (("3" (LIFT-IF) (("3" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND <=) (("2" (INST 1 "p2") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (REPLACE -1 -4 RL) (("3" (LEMMA "equal_prefix[posnat]") (("3" (INST -1 "p1" "p2" "empty_seq") (("3" (REWRITE "seq_o_empty") (("3" (ASSERT) (("3" (REWRITE "empty_0" 3) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "member_seq" 1) (("4" (EXPAND "finseq_appl") (("4" (INST 1 0) (("1" (EXPAND* "sub_pos" "add_first" "insert?" "finseq_appl") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND <=) (("1" (INST 1 "p2") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA "equal_prefix[posnat]") (("2" (INST -1 "p1" "p2" "empty_seq") (("2" (REWRITE "seq_o_empty") (("2" (ASSERT) (("2" (REWRITE "empty_0" 4) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "sub_pos" "add_first" "insert?") (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND <=) (("2" (INST 1 "p2") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (LEMMA "equal_prefix[posnat]") (("3" (INST -1 "p1" "p2" "empty_seq") (("3" (REWRITE "seq_o_empty") (("3" (ASSERT) (("3" (REWRITE "empty_0" 4) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "sub_pos" -1) (("1" (LIFT-IF) (("1" (EXPAND* "add_first" "insert?") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sub_pos" 1) (("2" (LIFT-IF) (("2" (EXPAND* "add_first" "insert?" "finseq_appl") (("2" (PROP) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (INST 2 "i!2+1") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND* "member_seq" "finseq_appl") (("3" (INST 1 "i!1-1") (("1" (EXPAND "rest" 1) (("1" (EXPAND* "^") NIL NIL)) NIL) ("2" (EXPAND* "rest" "^" "min" "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 1) (("4" (EXPAND* "rest" "^" "min") (("4" (EXPAND* "member_seq" "finseq_appl") (("4" (INST 1 "i!1-1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_element-1| |nil| 3520006367 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2) (("1" (HIDE 2) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 P1 P2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (EXPAND MEMBER_SEQ -3) (("2" (EXPAND FINSEQ_APPL) (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (PROP) (("1" (EXPAND SUB_POS -1) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SUB_POS 1) (("2" (LIFT-IF) (("2" (PROP) (("2" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST 2 "i!2+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND SUB_POS -1) (("3" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("3" (LIFT-IF) (("3" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND <=) (("2" (INST 1 P2) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (REPLACE -1 -4 RL) (("3" (LEMMA EQUAL_PREFIX[POSNAT]) (("3" (INST -1 P1 P2 EMPTY_SEQ) (("3" (REWRITE SEQ_O_EMPTY) (("3" (ASSERT) (("3" (REWRITE EMPTY_0 3) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND MEMBER_SEQ 1) (("4" (EXPAND FINSEQ_APPL) (("4" (INST 1 0) (("1" (EXPAND* SUB_POS ADD_FIRST INSERT? FINSEQ_APPL) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND <=) (("1" (INST 1 P2) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (LEMMA EQUAL_PREFIX[POSNAT]) (("2" (INST -1 P1 P2 EMPTY_SEQ) (("2" (REWRITE SEQ_O_EMPTY) (("2" (ASSERT) (("2" (REWRITE EMPTY_0 4) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SUB_POS ADD_FIRST INSERT?) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND <=) (("2" (INST 1 P2) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (LEMMA EQUAL_PREFIX[POSNAT]) (("3" (INST -1 P1 P2 EMPTY_SEQ) (("3" (REWRITE SEQ_O_EMPTY) (("3" (ASSERT) (("3" (REWRITE EMPTY_0 4) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (PROP) (("1" (EXPAND SUB_POS -1) (("1" (LIFT-IF) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SUB_POS 1) (("2" (LIFT-IF) (("2" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("2" (PROP) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST 2 "i!2+1") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("3" (INST 1 "i!1-1") (("1" (EXPAND REST 1) (("1" (EXPAND* ^) NIL NIL)) NIL) ("2" (EXPAND* REST ^ MIN EMPTY_SEQ) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 1) (("4" (EXPAND* REST ^ MIN) (("4" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("4" (INST 1 "i!1-1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (<= CONST-DECL "bool" |positions| NIL) (|equal_prefix| FORMULA-DECL NIL |seq_extras| |structures|) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|p1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|i!1| SKOLEM-CONST-DECL "below[x`length]" |orthogonality| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|parallel_pos_are_dif| 0 (|parallel_pos_are_dif-2| "" 3885002728 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND "finseq_appl") (("" (EXPAND "PP?") (("" (EXPAND "finseq_appl") (("" (PROP) (("1" (TYPEPRED "i") (("1" (TYPEPRED "j") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (INST -1 "i" "j") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <=) (("2" (INST 2 "empty_seq") (("2" (REWRITE "seq_o_empty") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|parallel_pos_are_dif-1| |nil| 3510930419 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND FINSEQ_APPL) (("" (EXPAND PP?) (("" (EXPAND FINSEQ_APPL) (("" (PROP) (("1" (TYPEPRED I) (("1" (TYPEPRED J) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (INST -1 I J) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <=) (("2" (INST 2 EMPTY_SEQ) (("2" (REWRITE SEQ_O_EMPTY) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((PP? CONST-DECL "bool" |positions| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (< CONST-DECL "bool" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (<= CONST-DECL "bool" |positions| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|same_pos_in_Pos_Equal| 0 (|same_pos_in_Pos_Equal-2| "" 3885002974 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2 -4 -6 1) (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2" "p") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "Pos_Equal" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "member_seq" (-2 1)) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (INST 1 "i!1+1") (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member_seq" -3) (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND "finseq_appl") (("1" (EXPAND "Pos_Equal") (("1" (ASSERT) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "member_seq" 3) (("1" (EXPAND "finseq_appl") (("1" (INST 3 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "rest" 2) (("2" (EXPAND* "^" "min") (("2" (EXPAND "member_seq" 2) (("2" (INST 2 "i!1-1") (("1" (LIFT-IF) (("1" (EXPAND "finseq_appl") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|same_pos_in_Pos_Equal-1| |nil| 3512894597 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2 -4 -6 1) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2 P) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND POS_EQUAL 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND MEMBER_SEQ (-2 1)) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST 1 I!1+1) (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER_SEQ -3) (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND FINSEQ_APPL) (("1" (EXPAND POS_EQUAL) (("1" (ASSERT) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND MEMBER_SEQ 3) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 3 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND REST 2) (("2" (EXPAND* ^ MIN) (("2" (EXPAND MEMBER_SEQ 2) (("2" (INST 2 I!1-1) (("1" (LIFT-IF) (("1" (EXPAND FINSEQ_APPL) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|i!1| SKOLEM-CONST-DECL "below[x`length]" |orthogonality| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|fsp2| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Over_is_sub_seq| 0 (|Pos_Over_is_sub_seq-2| "" 3885003614 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2) (("1" (EXPAND "Pos_Over") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (EXPAND "subseq") (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (EXPAND "Pos_Over" 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "subseq" 1) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "member_seq") (("1" (INST 1 0) (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "subseq_rest[position]") (("2" (INST -1 "Pos_Over(rest(x), fsp2)" "x") (("2" (ASSERT) (("2" (EXPAND "subseq" -1) (("2" (INST -1 "i!1 - 1") (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "add_first" 1) (("2" (EXPAND* "insert?" "finseq_appl") (("2" (EXPAND "subseq" 1) (("2" (SKOSIMP) (("2" (EXPAND "finseq_appl") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "member_seq") (("1" (INST 1 0) (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "subseq_rest[position]") (("2" (INST -1 "Pos_Over(rest(x), fsp2)" "x") (("2" (ASSERT) (("2" (EXPAND "subseq" -1) (("2" (INST -1 "i!1 - 1") (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REWRITE "subseq_rest" 3) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Over_is_sub_seq-1| |nil| 3512913456 ("" (MEASURE-INDUCT "fsp1`length" FSP1) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2) (("1" (EXPAND POS_OVER) (("1" (ASSERT) (("1" (EXPAND EMPTY_SEQ) (("1" (EXPAND SUBSEQ) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (EXPAND POS_OVER 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND SUBSEQ 1) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND MEMBER_SEQ) (("1" (INST 1 0) (("1" (EXPAND FINSEQ_APPL) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SUBSEQ_REST[POSITION]) (("2" (INST -1 "Pos_Over(rest(x), fsp2)" X) (("2" (ASSERT) (("2" (EXPAND SUBSEQ -1) (("2" (INST -1 "i!1 - 1") (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND ADD_FIRST 1) (("2" (EXPAND* INSERT? FINSEQ_APPL) (("2" (EXPAND SUBSEQ 1) (("2" (SKOSIMP) (("2" (EXPAND FINSEQ_APPL) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND MEMBER_SEQ) (("1" (INST 1 0) (("1" (EXPAND FINSEQ_APPL) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SUBSEQ_REST[POSITION]) (("2" (INST -1 "Pos_Over(rest(x), fsp2)" X) (("2" (ASSERT) (("2" (EXPAND SUBSEQ -1) (("2" (INST -1 "i!1 - 1") (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REWRITE SUBSEQ_REST 3) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|subseq_rest| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Equal_is_sub_seq| 0 (|Pos_Equal_is_sub_seq-2| "" 3885003661 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2) (("1" (EXPAND "Pos_Equal") (("1" (EXPAND "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "subseq") (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (EXPAND "Pos_Equal" 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "subseq" 1) (("1" (SKOSIMP) (("1" (EXPAND "finseq_appl") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "member_seq" 1) (("1" (EXPAND "finseq_appl") (("1" (INST 1 0) NIL NIL)) NIL)) NIL) ("2" (LEMMA "subseq_rest[position]") (("2" (INST -1 "Pos_Equal(rest(x), fsp2)" "x") (("2" (ASSERT) (("2" (EXPAND "subseq" -1) (("2" (EXPAND "finseq_appl") (("2" (INST -1 "i!1-1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "subseq_rest" 2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Equal_is_sub_seq-1| |nil| 3512917234 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE -2) (("1" (EXPAND POS_EQUAL) (("1" (EXPAND EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND SUBSEQ) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (EXPAND POS_EQUAL 2) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND SUBSEQ 1) (("1" (SKOSIMP) (("1" (EXPAND FINSEQ_APPL) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND MEMBER_SEQ 1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 0) NIL NIL)) NIL)) NIL) ("2" (LEMMA SUBSEQ_REST[POSITION]) (("2" (INST -1 "Pos_Equal(rest(x), fsp2)" X) (("2" (ASSERT) (("2" (EXPAND SUBSEQ -1) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 "i!1-1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE SUBSEQ_REST 2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subseq_rest| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|sub_pos_is_sub_seq| 0 (|sub_pos_is_sub_seq-2| "" 3885003706 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND "sub_pos") (("1" (EXPAND "empty_seq") (("1" (ASSERT) (("1" (EXPAND "subseq") (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "p") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (EXPAND "sub_pos" 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "subseq" 2) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (INST 1 0) NIL NIL)) NIL) ("2" (LEMMA "subseq_rest[position]") (("2" (INST -1 "sub_pos(rest(x), p)" "x") (("2" (ASSERT) (("2" (EXPAND "subseq" -1) (("2" (EXPAND "finseq_appl") (("2" (INST -1 "i!1-1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "subseq_rest" 2) NIL NIL) ("3" (REWRITE "subseq_rest" 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_is_sub_seq-1| |nil| 3523638341 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND SUB_POS) (("1" (EXPAND EMPTY_SEQ) (("1" (ASSERT) (("1" (EXPAND SUBSEQ) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 P) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (EXPAND SUB_POS 2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND SUBSEQ 2) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (INST 1 0) NIL NIL)) NIL) ("2" (LEMMA SUBSEQ_REST[POSITION]) (("2" (INST -1 "sub_pos(rest(x), p)" X) (("2" (ASSERT) (("2" (EXPAND SUBSEQ -1) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 "i!1-1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE SUBSEQ_REST 2) NIL NIL) ("3" (REWRITE SUBSEQ_REST 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|subseq_rest| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Under_is_sub_seq| 0 (|Pos_Under_is_sub_seq-2| "" 3885003811 ("" (MEASURE-INDUCT "fsp2`length" "fsp2") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND "Pos_Under" 1) (("1" (EXPAND "empty_seq") (("1" (ASSERT) (("1" (EXPAND "subseq") (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp1") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (EXPAND "Pos_Under" 2) (("2" (EXPAND O) (("2" (EXPAND "subseq" 2) (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (LIFT-IF) (("2" (PROP) (("1" (LEMMA "sub_pos_is_sub_seq") (("1" (INST -1 "fsp1" "x`seq(0)") (("1" (ASSERT) (("1" (EXPAND "subseq" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 "i") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "subseq" -1) (("2" (EXPAND "finseq_appl") (("2" (INST -1 "i - sub_pos(fsp1, x`seq(0))`length") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Under_is_sub_seq-1| |nil| 3512918956 ("" (MEASURE-INDUCT "fsp2`length" "fsp2") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND POS_UNDER 1) (("1" (EXPAND EMPTY_SEQ) (("1" (ASSERT) (("1" (EXPAND SUBSEQ) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP1) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (EXPAND POS_UNDER 2) (("2" (EXPAND O) (("2" (EXPAND SUBSEQ 2) (("2" (EXPAND FINSEQ_APPL) (("2" (SKEEP) (("2" (LIFT-IF) (("2" (PROP) (("1" (LEMMA SUB_POS_IS_SUB_SEQ) (("1" (INST -1 FSP1 "x`seq(0)") (("1" (ASSERT) (("1" (EXPAND SUBSEQ -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 I) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SUBSEQ -1) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 "i - sub_pos(fsp1, x`seq(0))`length") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|sub_pos_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|fsp1| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|i| SKOLEM-CONST-DECL "below[Pos_Under(fsp1, rest(x))`length + sub_pos(fsp1, x`seq(0))`length]" |orthogonality| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Under| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Over_is_PP| 0 (|Pos_Over_is_PP-2| "" 3885004091 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (EXPAND "Pos_Over" 1) (("1" (EXPAND "empty_seq") (("1" (EXPAND "PP?" 1 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (EXPAND "Pos_Over" 2) (("2" (PROP) (("1" (REWRITE "add_first_parallel_pos_to_pp_is_pp") (("1" (SKEEP) (("1" (EXPAND "finseq_appl") (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "rest(x)" "fsp2") (("1" (REWRITE "rest_of_pp_is_pp") (("1" (ASSERT) (("1" (EXPAND* "subseq" "finseq_appl") (("1" (INST -1 "i") (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (EXPAND "rest" -2 2) (("1" (EXPAND "rest" -1) (("1" (EXPAND* "^" "min") (("1" (EXPAND "empty_seq" -1) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "PP?" -5) (("1" (ASSERT) (("1" (INST -5 "1+i!1" 0) (("1" (EXPAND "finseq_appl") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "add_first_parallel_pos_to_pp_is_pp" 1) (("2" (SKEEP) (("2" (EXPAND "finseq_appl") (("2" (LEMMA "pos_over_is_sub_seq") (("2" (INST -1 "rest(x)" "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (EXPAND* "subseq" "member_seq" "finseq_appl") (("2" (INST -1 "i") (("2" (SKOSIMP) (("2" (TYPEPRED "i!1") (("2" (EXPAND "rest" -2 2) (("2" (EXPAND "rest" -1) (("2" (EXPAND* "^" "min") (("2" (EXPAND "empty_seq" -1) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND "PP?" -5) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) (("2" (INST -5 "1+i!1" 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Over_is_PP-1| |nil| 3543069642 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (EXPAND POS_OVER 1) (("1" (EXPAND EMPTY_SEQ) (("1" (EXPAND PP? 1 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (EXPAND POS_OVER 2) (("2" (PROP) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP) (("1" (SKEEP) (("1" (EXPAND FINSEQ_APPL) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 "rest(x)" FSP2) (("1" (REWRITE REST_OF_PP_IS_PP) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (INST -1 I) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (EXPAND REST -2 2) (("1" (EXPAND REST -1) (("1" (EXPAND* ^ MIN) (("1" (EXPAND EMPTY_SEQ -1) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND PP? -5) (("1" (ASSERT) (("1" (INST -5 "1+i!1" 0) (("1" (EXPAND FINSEQ_APPL) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP 1) (("2" (SKEEP) (("2" (EXPAND FINSEQ_APPL) (("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 "rest(x)" FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("2" (INST -1 I) (("2" (SKOSIMP) (("2" (TYPEPRED I!1) (("2" (EXPAND REST -2 2) (("2" (EXPAND REST -1) (("2" (EXPAND* ^ MIN) (("2" (EXPAND EMPTY_SEQ -1) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND PP? -5) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -5 1+I!1 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|add_first_parallel_pos_to_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Over_is_SPP_TCC1| 0 (|Pos_Over_is_SPP_TCC1-1| |nil| 3526896502 ("" (SUBTYPE-TCC) NIL NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (SP? CONST-DECL "bool" |positions| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|Pos_Over_is_SPP| SUBTYPE "orthogonality.fsp1" "PP[variable, symbol, arity]"))) (|Pos_Over_is_SPP_TCC2| 0 (|Pos_Over_is_SPP_TCC2-1| |nil| 3526896502 ("" (SUBTYPE-TCC) NIL NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (SP? CONST-DECL "bool" |positions| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|Pos_Over_is_SPP| SUBTYPE "orthogonality.fsp2" "PP[variable, symbol, arity]"))) (|Pos_Over_is_SPP| 0 (|Pos_Over_is_SPP-2| "" 3885004650 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("1" (SKEEP) (("1" (SKEEP) (("1" (EXPAND "SPP?") (("1" (FLATTEN) (("1" (REWRITE "pos_over_is_pp") (("1" (CASE "x`length = 0") (("1" (EXPAND "Pos_Over" 1) (("1" (ASSERT) (("1" (EXPAND "SP?" 1) (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (EXPAND "empty_seq" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2" "s") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (REWRITE "rest_of_sp_is_sp") (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND "Pos_Over" 2) (("2" (REWRITE "add_first_parallel_pos_to_sp_is_sp") (("1" (PROP) NIL NIL) ("2" (HIDE 3) (("2" (EXPAND "SP?" -4) (("2" (INST -4 0) (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (EXPAND "SPP?" -2) (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND "SPP?" -1) (("3" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Over_is_SPP-1| |nil| 3512923080 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("1" (SKEEP) (("1" (SKEEP) (("1" (EXPAND SPP?) (("1" (FLATTEN) (("1" (REWRITE POS_OVER_IS_PP) (("1" (CASE "x`length = 0") (("1" (EXPAND POS_OVER 1) (("1" (ASSERT) (("1" (EXPAND SP? 1) (("1" (SKEEP) (("1" (TYPEPRED I) (("1" (EXPAND EMPTY_SEQ -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2 S) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (REWRITE REST_OF_SP_IS_SP) (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND POS_OVER 2) (("2" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (PROP) NIL NIL) ("2" (HIDE 3) (("2" (EXPAND SP? -4) (("2" (INST -4 0) (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (EXPAND SPP? -2) (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND SPP? -1) (("3" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ((|Pos_Over_is_PP| FORMULA-DECL NIL |orthogonality| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|rest_of_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (SP? CONST-DECL "bool" |positions| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|pos_up_in_Pos_Over| 0 (|pos_up_in_Pos_Over-2| "" 3885004787 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE-ALL-BUT (-1 -5)) (("1" (EXPAND* "member_seq") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2" "p1" "p2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "Pos_Over" 3) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "member_seq" (-2 1)) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (INST 1 "i!1+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "add_first" 1) (("2" (EXPAND "insert?") (("2" (EXPAND "member_seq" (-2 1)) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (INST 1 "i!1+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member_seq" -3) (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND "Pos_Over") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "member_seq" 1) (("1" (EXPAND "finseq_appl") (("1" (INST 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "add_first" 1) (("2" (EXPAND "insert?") (("2" (EXPAND "member_seq" 1) (("2" (EXPAND "finseq_appl") (("2" (INST 1 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "finseq_appl") (("3" (LEMMA "sub_pos_element") (("3" (INST -1 "fsp2" "p1" "p2") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "rest" "^" "min" "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND "member_seq" 2) (("2" (EXPAND "finseq_appl") (("2" (INST 2 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|pos_up_in_Pos_Over-1| |nil| 3520001568 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length = 0") (("1" (HIDE-ALL-BUT (-1 -5)) (("1" (EXPAND* MEMBER_SEQ) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2 P1 P2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND POS_OVER 3) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND MEMBER_SEQ (-2 1)) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST 1 "i!1+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND ADD_FIRST 1) (("2" (EXPAND INSERT?) (("2" (EXPAND MEMBER_SEQ (-2 1)) (("2" (EXPAND FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST 1 "i!1+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER_SEQ -3) (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND POS_OVER) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND MEMBER_SEQ 1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND ADD_FIRST 1) (("2" (EXPAND INSERT?) (("2" (EXPAND MEMBER_SEQ 1) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 1 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND FINSEQ_APPL) (("3" (LEMMA SUB_POS_ELEMENT) (("3" (INST -1 FSP2 P1 P2) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* REST ^ MIN EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (EXPAND MEMBER_SEQ 2) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 2 I!1-1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|sub_pos_element| FORMULA-DECL NIL |orthogonality| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|fsp2| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|parallel_pos_in_Pos_Over| 0 (|parallel_pos_in_Pos_Over-2| "" 3885004858 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND "member_seq" -4) (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2" "p") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "Pos_Over" 2) (("1" (LIFT-IF) (("1" (EXPAND "add_first" 2 2) (("1" (EXPAND* "insert?" "finseq_appl") (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "member_seq" (-2 1)) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (INST 1 "i!1+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member_seq" (-2 1)) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (INST 1 "i!1+1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member_seq" -3) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND "Pos_Over") (("1" (EXPAND "add_first" 3 2) (("1" (EXPAND "insert?") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "member_seq" 3) (("1" (EXPAND "finseq_appl") (("1" (INST 3 0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "rest" "^" "min" "empty_seq") (("2" (ASSERT) (("2" (EXPAND "member_seq" 2) (("2" (EXPAND "finseq_appl") (("2" (INST 2 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|parallel_pos_in_Pos_Over-1| |nil| 3520093699 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND MEMBER_SEQ -4) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2 P) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND POS_OVER 2) (("1" (LIFT-IF) (("1" (EXPAND ADD_FIRST 2 2) (("1" (EXPAND* INSERT? FINSEQ_APPL) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND MEMBER_SEQ (-2 1)) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST 1 I!1+1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER_SEQ (-2 1)) (("2" (EXPAND FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST 1 I!1+1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER_SEQ -3) (("2" (EXPAND FINSEQ_APPL) (("2" (SKOSIMP) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND POS_OVER) (("1" (EXPAND ADD_FIRST 3 2) (("1" (EXPAND INSERT?) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND MEMBER_SEQ 3) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 3 0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* REST ^ MIN EMPTY_SEQ) (("2" (ASSERT) (("2" (EXPAND MEMBER_SEQ 2) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 2 I!1-1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|sub_pos_in_Pos_Under_aux| 0 (|sub_pos_in_Pos_Under_aux-2| "" 3885004916 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND "member_seq" -3) (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "p1" "p2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "sub_pos" 3) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "member_seq" (-2 2)) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (INST 2 "i!1+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member_seq" -2) (("2" (SKOSIMP) (("2" (EXPAND "finseq_appl") (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND "sub_pos") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "member_seq" 4) (("1" (EXPAND "finseq_appl") (("1" (INST 4 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "rest" "^" "min" "empty_seq") (("2" (ASSERT) (("2" (EXPAND "member_seq" 2) (("2" (EXPAND "finseq_appl") (("2" (INST 2 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_in_Pos_Under_aux-1| |nil| 3523713933 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND MEMBER_SEQ -3) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 P1 P2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND SUB_POS 3) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND MEMBER_SEQ (-2 2)) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST 2 I!1+1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER_SEQ -2) (("2" (SKOSIMP) (("2" (EXPAND FINSEQ_APPL) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND SUB_POS) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND MEMBER_SEQ 4) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 4 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* REST ^ MIN EMPTY_SEQ) (("2" (ASSERT) (("2" (EXPAND MEMBER_SEQ 2) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 2 I!1-1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|p1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (<= CONST-DECL "bool" |positions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|sub_pos_in_Pos_Under| 0 (|sub_pos_in_Pos_Under-2| "" 3885005086 ("" (MEASURE-INDUCT "fsp2`length" "fsp2") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE-ALL-BUT (-1 -6)) (("1" (EXPAND "member_seq") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp1" "p1" "p2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (PROP) (("1" (EXPAND "Pos_Under" 3) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (REWRITE "member_seq_in_seq2set" 3) (("1" (REWRITE "seq2set_comp") (("1" (FLATTEN) (("1" (REWRITE "member_seq_in_seq2set" -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member_seq" -4) (("2" (SKOSIMP) (("2" (EXPAND "finseq_appl") (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND "Pos_Under" 4) (("1" (REWRITE "member_seq_in_seq2set" 4) (("1" (REWRITE "seq2set_comp") (("1" (FLATTEN) (("1" (HIDE 5) (("1" (LEMMA "member_seq_in_seq2set[position]") (("1" (INST -1 "sub_pos(fsp1, x`seq(0))" "p1") (("1" (ASSERT) (("1" (REWRITE "sub_pos_in_pos_under_aux") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "rest" "^" "min" "empty_seq") (("2" (ASSERT) (("2" (EXPAND "member_seq" 2) (("2" (EXPAND "finseq_appl") (("2" (INST 2 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_in_Pos_Under-1| |nil| 3512224851 ("" (MEASURE-INDUCT "fsp2`length" "fsp2") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE-ALL-BUT (-1 -6)) (("1" (EXPAND MEMBER_SEQ) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP1 P1 P2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (PROP) (("1" (EXPAND POS_UNDER 3) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET 3) (("1" (REWRITE SEQ2SET_COMP) (("1" (FLATTEN) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND MEMBER_SEQ -4) (("2" (SKOSIMP) (("2" (EXPAND FINSEQ_APPL) (("2" (CASE "i!1=0") (("1" (REPLACES -1) (("1" (EXPAND POS_UNDER 4) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET 4) (("1" (REWRITE SEQ2SET_COMP) (("1" (FLATTEN) (("1" (HIDE 5) (("1" (LEMMA MEMBER_SEQ_IN_SEQ2SET[POSITION]) (("1" (INST -1 "sub_pos(fsp1, x`seq(0))" P1) (("1" (ASSERT) (("1" (REWRITE SUB_POS_IN_POS_UNDER_AUX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* REST ^ MIN EMPTY_SEQ) (("2" (ASSERT) (("2" (EXPAND MEMBER_SEQ 2) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 2 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|sub_pos_in_Pos_Under_aux| FORMULA-DECL NIL |orthogonality| NIL) (|seq2set_comp| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|member_seq_in_seq2set| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Under| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (<= CONST-DECL "bool" |positions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|sub_pos_is_under| 0 (|sub_pos_is_under-2| "" 3885005274 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND "sub_pos" -3) (("1" (EXPAND "empty_seq") (("1" (ASSERT) (("1" (EXPAND "member_seq") (("1" (SKOSIMP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "p" "p1") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (PROP) (("1" (EXPAND "sub_pos" -2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "member_seq" -2) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 4 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sub_pos" -3) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND* "add_first" "insert?") (("2" (EXPAND "member_seq" -2) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 3 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_is_under-1| |nil| 3541265611 ("" (MEASURE-INDUCT "fsp`length" FSP) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND SUB_POS -3) (("1" (EXPAND EMPTY_SEQ) (("1" (ASSERT) (("1" (EXPAND MEMBER_SEQ) (("1" (SKOSIMP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 P P1) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (PROP) (("1" (EXPAND SUB_POS -2) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND MEMBER_SEQ -2) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 4 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SUB_POS -3) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND* ADD_FIRST INSERT?) (("2" (EXPAND MEMBER_SEQ -2) (("2" (EXPAND FINSEQ_APPL) (("2" (SKOSIMP) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 3 "i!1-1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|i!1| SKOLEM-CONST-DECL "below[1 + length(sub_pos(rest(x), p))]" |orthogonality| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|p| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|i!1| SKOLEM-CONST-DECL "below[1 + length(sub_pos(rest(x), p))]" |orthogonality| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (/= CONST-DECL "boolean" |notequal| NIL) (<= CONST-DECL "bool" |positions| NIL) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|sub_pos_is_PP| 0 (|sub_pos_is_PP-2| "" 3885005466 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (EXPAND "sub_pos" 1) (("1" (EXPAND "PP?" 1) (("1" (EXPAND "finseq_appl") (("1" (EXPAND "empty_seq" 1 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "p") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (EXPAND "sub_pos" 2) (("2" (ASSERT) (("2" (PROP) (("2" (REWRITE "add_first_parallel_pos_to_pp_is_pp") (("2" (SKEEP) (("2" (EXPAND "finseq_appl") (("2" (LEMMA "sub_pos_is_sub_seq") (("2" (INST -1 "rest(x)" "p") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (EXPAND* "subseq" "member_seq" "finseq_appl") (("2" (INST -1 "i") (("2" (SKOSIMP) (("2" (TYPEPRED "i!1") (("2" (EXPAND "rest" -2 2) (("2" (EXPAND "rest" -1) (("2" (EXPAND* "^" "min") (("2" (EXPAND "empty_seq" -1) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND "PP?" -5) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) (("2" (INST -5 "1+i!1" 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_is_PP-1| |nil| 3542122742 ("" (MEASURE-INDUCT "fsp`length" FSP) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (EXPAND SUB_POS 1) (("1" (EXPAND PP? 1) (("1" (EXPAND FINSEQ_APPL) (("1" (EXPAND EMPTY_SEQ 1 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 P) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (EXPAND SUB_POS 2) (("2" (ASSERT) (("2" (PROP) (("2" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP) (("2" (SKEEP) (("2" (EXPAND FINSEQ_APPL) (("2" (LEMMA SUB_POS_IS_SUB_SEQ) (("2" (INST -1 "rest(x)" P) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("2" (INST -1 I) (("2" (SKOSIMP) (("2" (TYPEPRED I!1) (("2" (EXPAND REST -2 2) (("2" (EXPAND REST -1) (("2" (EXPAND* ^ MIN) (("2" (EXPAND EMPTY_SEQ -1) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND PP? -5) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -5 1+I!1 0) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|add_first_parallel_pos_to_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|sub_pos_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|sub_pos_is_SPP_TCC1| 0 (|sub_pos_is_SPP_TCC1-1| |nil| 3541259986 ("" (SUBTYPE-TCC) NIL NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (SP? CONST-DECL "bool" |positions| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|sub_pos_is_SPP| SUBTYPE "orthogonality.fsp" "PP[variable, symbol, arity]"))) (|sub_pos_is_SPP| 0 (|sub_pos_is_SPP-2| "" 3885005600 ("" (MEASURE-INDUCT "fsp`length" "fsp") (("1" (SKEEP) (("1" (SKEEP) (("1" (EXPAND "SPP?") (("1" (FLATTEN) (("1" (SPLIT) (("1" (REWRITE "sub_pos_is_pp") NIL NIL) ("2" (CASE "x`length=0") (("1" (EXPAND* "SP?" "finseq_appl") (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (EXPAND "sub_pos" -1) (("1" (LIFT-IF) (("1" (EXPAND "empty_seq" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "p" "s") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (REWRITE "rest_of_sp_is_sp") (("2" (EXPAND "sub_pos" 2) (("2" (ASSERT) (("2" (PROP) (("2" (REWRITE "add_first_parallel_pos_to_sp_is_sp") (("2" (EXPAND "SP?" -5) (("2" (INST -5 0) (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "SPP?") (("2" (SKEEP) NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|sub_pos_is_SPP-1| |nil| 3541259987 ("" (MEASURE-INDUCT "fsp`length" FSP) (("1" (SKEEP) (("1" (SKEEP) (("1" (EXPAND SPP?) (("1" (FLATTEN) (("1" (SPLIT) (("1" (REWRITE SUB_POS_IS_PP) NIL NIL) ("2" (CASE "x`length=0") (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (SKEEP) (("1" (TYPEPRED I) (("1" (EXPAND SUB_POS -1) (("1" (LIFT-IF) (("1" (EXPAND EMPTY_SEQ -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 P S) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (REWRITE REST_OF_SP_IS_SP) (("2" (EXPAND SUB_POS 2) (("2" (ASSERT) (("2" (PROP) (("2" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("2" (EXPAND SP? -5) (("2" (INST -5 0) (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SPP?) (("2" (SKEEP) NIL NIL)) NIL)) NIL) ((|sub_pos_is_PP| FORMULA-DECL NIL |orthogonality| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|rest_of_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (SP? CONST-DECL "bool" |positions| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Under_character| 0 (|Pos_Under_character-2| "" 3885006271 ("" (EXPAND "finseq_appl") (("" (MEASURE-INDUCT "fsp2`length" "fsp2") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2 -3 -4 1) (("1" (EXPAND "Pos_Under") (("1" (ASSERT) (("1" (EXPAND "empty_seq") (("1" (EXPAND "member_seq") (("1" (SKOSIMP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (EXPAND "Pos_Under" -4) (("2" (ASSERT) (("2" (LEMMA "member_seq_in_seq2set[position]") (("2" (INST -1 "sub_pos(fsp1, x`seq(0)) o Pos_Under(fsp1, rest(x))" "p") (("2" (ASSERT) (("2" (REWRITE "seq2set_comp") (("2" (SPLIT) (("1" (INST 2 0) (("1" (REWRITE "member_seq_in_seq2set" 2) NIL NIL)) NIL) ("2" (INST -2 "fsp1" "p") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (REWRITE "member_seq_in_seq2set" -2) (("2" (SKOLEM -2 "j") (("2" (TYPEPRED "j") (("2" (EXPAND "rest" (-1 -3)) (("2" (EXPAND* "^" "min") (("2" (EXPAND "empty_seq" -1) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (INST 6 "1+j") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Under_character-1| |nil| 3568648165 ("" (EXPAND FINSEQ_APPL) (("" (MEASURE-INDUCT "fsp2`length" FSP2) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2 -3 -4 1) (("1" (EXPAND POS_UNDER) (("1" (ASSERT) (("1" (EXPAND EMPTY_SEQ) (("1" (EXPAND MEMBER_SEQ) (("1" (SKOSIMP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (EXPAND POS_UNDER -4) (("2" (ASSERT) (("2" (LEMMA MEMBER_SEQ_IN_SEQ2SET[POSITION]) (("2" (INST -1 "sub_pos(fsp1, x`seq(0)) o Pos_Under(fsp1, rest(x))" P) (("2" (ASSERT) (("2" (REWRITE SEQ2SET_COMP) (("2" (SPLIT) (("1" (INST 2 0) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET 2) NIL NIL)) NIL) ("2" (INST -2 FSP1 P) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (REWRITE MEMBER_SEQ_IN_SEQ2SET -2) (("2" (SKOLEM -2 J) (("2" (TYPEPRED J) (("2" (EXPAND REST (-1 -3)) (("2" (EXPAND* ^ MIN) (("2" (EXPAND EMPTY_SEQ -1) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("2" (INST 6 |1+J|) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Under| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|member_seq_in_seq2set| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|seq2set_comp| FORMULA-DECL NIL |predicate_fseq2set| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|union_positions| 0 (|union_positions-2| "" 3885006468 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY) (("" (IFF) (("" (PROP) (("1" (CASE "fsp1`length = 0") (("1" (EXPAND SEQ2SET -2) (("1" (SKOSIMP) (("1" (TYPEPRED "kk!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "seq2set_comp") (("2" (REWRITE "seq2set_comp") (("2" (FLATTEN) (("2" (CASE "PP?(add_first(x!1, fsp2))") (("1" (HIDE 3 4) (("1" (LEMMA "parallel_pos_in_pos_over") (("1" (INST -1 "fsp1" "fsp2" "x!1") (("1" (PROP) (("1" (REWRITE "member_seq_in_seq2set") NIL NIL) ("2" (REWRITE "member_seq_in_seq2set") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "add_first_parallel_pos_to_pp_is_pp") (("2" (HIDE 2) (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (EXPAND "parallel") (("2" (CASE "fsp2`seq(i) = x!1") (("1" (LEMMA "member_seq_in_seq2set[position]") (("1" (INST-CP -1 "fsp1" "x!1") (("1" (INST -1 "Pos_Equal(fsp1, fsp2)" "x!1") (("1" (ASSERT) (("1" (REWRITE "same_pos_in_pos_equal") (("1" (EXPAND "member_seq" 1) (("1" (EXPAND "finseq_appl") (("1" (INST 1 "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT) (("1" (HIDE 3 4) (("1" (LEMMA "sub_pos_in_pos_under") (("1" (INST -1 "fsp1" "fsp2" "x!1" "fsp2`seq(i)") (("1" (ASSERT) (("1" (REWRITE "member_seq_in_seq2set") (("1" (REWRITE "member_seq_in_seq2set") (("1" (REWRITE "member_seq_in_seq2set") (("1" (EXPAND "seq2set" 1) (("1" (EXPAND "finseq_appl") (("1" (INST 1 "i") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 4 5) (("2" (LEMMA "pos_up_in_pos_over") (("2" (EXPAND <=) (("2" (SKOLEM -2 "p2") (("2" (INST -1 "fsp1" "fsp2" "x!1" "p2") (("2" (ASSERT) (("2" (PROP) (("1" (REWRITE "member_seq_in_seq2set") NIL NIL) ("2" (REWRITE "empty_0" -1) (("2" (REPLACES -1) (("2" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("3" (REWRITE "member_seq_in_seq2set") NIL NIL) ("4" (EXPAND* "member_seq" "finseq_appl") (("4" (INST 1 "i") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "seq2set_comp") (("2" (REWRITE "seq2set_comp") (("2" (SPLIT) (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp1" "fsp2") (("1" (ASSERT) (("1" (EXPAND* "subseq" "finseq_appl") (("1" (EXPAND SEQ2SET -2) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (INST -1 "kk!1") (("1" (REWRITE "member_seq_in_seq2set") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_equal_is_sub_seq") (("2" (INST -1 "fsp1" "fsp2") (("2" (ASSERT) (("2" (EXPAND "seq2set" -2) (("2" (EXPAND* "subseq" "finseq_appl") (("2" (SKOSIMP) (("2" (INST -1 "kk!1") (("2" (REWRITE "member_seq_in_seq2set") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_under_is_sub_seq") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (EXPAND "seq2set" -2) (("3" (EXPAND* "subseq" "finseq_appl") (("3" (SKOSIMP) (("3" (INST -1 "kk!1") (("3" (REWRITE "member_seq_in_seq2set") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|union_positions-1| |nil| 3503131407 ("" (SKEEP) (("" (DECOMPOSE-EQUALITY) (("" (IFF) (("" (PROP) (("1" (CASE "fsp1`length = 0") (("1" (EXPAND SEQ2SET -2) (("1" (SKOSIMP) (("1" (TYPEPRED KK!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (REWRITE SEQ2SET_COMP) (("2" (REWRITE SEQ2SET_COMP) (("2" (FLATTEN) (("2" (CASE "PP?(add_first(x!1, fsp2))") (("1" (HIDE 3 4) (("1" (LEMMA PARALLEL_POS_IN_POS_OVER) (("1" (INST -1 FSP1 FSP2 X!1) (("1" (PROP) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET) NIL NIL) ("2" (REWRITE MEMBER_SEQ_IN_SEQ2SET) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP) (("2" (HIDE 2) (("2" (EXPAND FINSEQ_APPL) (("2" (SKEEP) (("2" (EXPAND PARALLEL) (("2" (CASE "fsp2`seq(i) = x!1") (("1" (LEMMA MEMBER_SEQ_IN_SEQ2SET[POSITION]) (("1" (INST-CP -1 FSP1 X!1) (("1" (INST -1 "Pos_Equal(fsp1, fsp2)" X!1) (("1" (ASSERT) (("1" (REWRITE SAME_POS_IN_POS_EQUAL) (("1" (EXPAND MEMBER_SEQ 1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 I) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT) (("1" (HIDE 3 4) (("1" (LEMMA SUB_POS_IN_POS_UNDER) (("1" (INST -1 FSP1 FSP2 X!1 "fsp2`seq(i)") (("1" (ASSERT) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET) (("1" (EXPAND SEQ2SET 1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 I) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 4 5) (("2" (LEMMA POS_UP_IN_POS_OVER) (("2" (EXPAND <=) (("2" (SKOLEM -2 P2) (("2" (INST -1 FSP1 FSP2 X!1 P2) (("2" (ASSERT) (("2" (PROP) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET) NIL NIL) ("2" (REWRITE EMPTY_0 -1) (("2" (REPLACES -1) (("2" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("3" (REWRITE MEMBER_SEQ_IN_SEQ2SET) NIL NIL) ("4" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("4" (INST 1 I) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE SEQ2SET_COMP) (("2" (REWRITE SEQ2SET_COMP) (("2" (SPLIT) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1 FSP2) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (EXPAND SEQ2SET -2) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST -1 KK!1) (("1" (REWRITE MEMBER_SEQ_IN_SEQ2SET) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("2" (INST -1 FSP1 FSP2) (("2" (ASSERT) (("2" (EXPAND SEQ2SET -2) (("2" (EXPAND* SUBSEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST -1 KK!1) (("2" (REWRITE MEMBER_SEQ_IN_SEQ2SET) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_UNDER_IS_SUB_SEQ) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (EXPAND SEQ2SET -2) (("3" (EXPAND* SUBSEQ FINSEQ_APPL) (("3" (SKOSIMP) (("3" (INST -1 KK!1) (("3" (REWRITE MEMBER_SEQ_IN_SEQ2SET) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|Pos_Under| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|seq2set_comp| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|add_first_parallel_pos_to_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (|sub_pos_in_Pos_Under| FORMULA-DECL NIL |orthogonality| NIL) (|pos_up_in_Pos_Over| FORMULA-DECL NIL |orthogonality| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (TRUE CONST-DECL "bool" |booleans| NIL) (<= CONST-DECL "bool" |positions| NIL) (|same_pos_in_Pos_Equal| FORMULA-DECL NIL |orthogonality| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member_seq_in_seq2set| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|parallel_pos_in_Pos_Over| FORMULA-DECL NIL |orthogonality| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Pos_Under_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL)) SHOSTAK)) (|Pos_Over_character| 0 (|Pos_Over_character-2| "" 3885006596 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (EXPAND "Pos_Over" -1) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND "empty_seq" -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 2) (("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (CASE "i=0") (("1" (REPLACES -1) (("1" (EXPAND "Pos_Over" 2) (("1" (EXPAND "add_first" 2 3) (("1" (EXPAND "insert?") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "Pos_Over" 3) (("1" (ASSERT) (("1" (EXPAND "add_first" 3) (("1" (EXPAND "insert?") (("1" (LEMMA "sub_pos_is_under") (("1" (INST -1 "fsp2" "x`seq(0)" "sub_pos(fsp2, x`seq(0))`seq(0)") (("1" (PROP) (("1" (LEMMA "sub_pos_is_sub_seq") (("1" (INST -1 "fsp2" "x`seq(0)") (("1" (ASSERT) (("1" (EXPAND* "subseq" "finseq_appl") (("1" (INST -1 0) (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (INST 4 "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 1 0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "Pos_Over" 5) (("2" (ASSERT) (("2" (INST -1 0) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 6 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "Pos_Over" (3 4)) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) (("1" (EXPAND "add_first" 1 2) (("1" (EXPAND "add_first" 4) (("1" (EXPAND "insert?") (("1" (EXPAND "finseq_appl") (("1" (INST -2 "i-1") (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 5 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "add_first" 1 2) (("2" (EXPAND "add_first" 4) (("2" (EXPAND* "insert?" "finseq_appl") (("2" (INST -2 "i-1") (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 5 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (INST -1 "i") (("3" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 7 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Over_character-1| |nil| 3564423476 ("" (MEASURE-INDUCT "fsp1`length" FSP1) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (SKEEP) (("1" (TYPEPRED I) (("1" (EXPAND POS_OVER -1) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (EXPAND EMPTY_SEQ -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 2) (("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (CASE I=0) (("1" (REPLACES -1) (("1" (EXPAND POS_OVER 2) (("1" (EXPAND ADD_FIRST 2 3) (("1" (EXPAND INSERT?) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND POS_OVER 3) (("1" (ASSERT) (("1" (EXPAND ADD_FIRST 3) (("1" (EXPAND INSERT?) (("1" (LEMMA SUB_POS_IS_UNDER) (("1" (INST -1 FSP2 "x`seq(0)" "sub_pos(fsp2, x`seq(0))`seq(0)") (("1" (PROP) (("1" (LEMMA SUB_POS_IS_SUB_SEQ) (("1" (INST -1 FSP2 "x`seq(0)") (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (INST -1 0) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST 4 I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 1 0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND POS_OVER 5) (("2" (ASSERT) (("2" (INST -1 0) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 6 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND POS_OVER (3 4)) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) (("1" (EXPAND ADD_FIRST 1 2) (("1" (EXPAND ADD_FIRST 4) (("1" (EXPAND INSERT?) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -2 I-1) (("1" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 5 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND ADD_FIRST 1 2) (("2" (EXPAND ADD_FIRST 4) (("2" (EXPAND* INSERT? FINSEQ_APPL) (("2" (INST -2 I-1) (("2" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 5 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (INST -1 I) (("3" (SPLIT) (("1" (PROPAX) NIL NIL) ("2" (SKOSIMP) (("2" (INST 7 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|sub_pos_is_under| FORMULA-DECL NIL |orthogonality| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|sub_pos_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|sub_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (/= CONST-DECL "boolean" |notequal| NIL) (<= CONST-DECL "bool" |positions| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Equal_character| 0 (|Pos_Equal_character-2| "" 3885006711 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (EXPAND "Pos_Equal" -1) (("1" (EXPAND "empty_seq") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 2) (("2" (EXPAND "Pos_Equal" 2) (("2" (ASSERT) (("2" (CASE "member_seq(x`seq(0), fsp2)") (("1" (COPY -1) (("1" (EXPAND "member_seq" -2) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (CASE "i=0") (("1" (INST 2 "i!1") (("1" (ASSERT) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") NIL NIL)) NIL)) NIL) ("2" (TYPEPRED "i") (("2" (EXPAND "Pos_Equal" -1) (("2" (ASSERT) (("2" (EXPAND* "add_first" "insert?") (("2" (INST -4 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -4 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (INST -4 "i-1") (("2" (SKOSIMP) (("2" (EXPAND "finseq_appl") (("2" (INST 3 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) (("2" (TYPEPRED "i") (("2" (EXPAND "Pos_Equal" -1) (("2" (INST -2 "i") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Equal_character-1| |nil| 3572636765 ("" (MEASURE-INDUCT "fsp1`length" FSP1) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (SKEEP) (("1" (TYPEPRED I) (("1" (EXPAND POS_EQUAL -1) (("1" (EXPAND EMPTY_SEQ) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP 2) (("2" (EXPAND POS_EQUAL 2) (("2" (ASSERT) (("2" (CASE "member_seq(x`seq(0), fsp2)") (("1" (COPY -1) (("1" (EXPAND MEMBER_SEQ -2) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (CASE "i=0") (("1" (INST 2 I!1) (("1" (ASSERT) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) NIL NIL)) NIL)) NIL) ("2" (TYPEPRED I) (("2" (EXPAND POS_EQUAL -1) (("2" (ASSERT) (("2" (EXPAND* ADD_FIRST INSERT?) (("2" (INST -4 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -4 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (INST -4 I-1) (("2" (SKOSIMP) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 3 J!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) (("2" (TYPEPRED I) (("2" (EXPAND POS_EQUAL -1) (("2" (INST -2 I) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|fsp2| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|i| SKOLEM-CONST-DECL "below[Pos_Equal(x, fsp2)`length]" |orthogonality| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Equal_is_PP| 0 (|Pos_Equal_is_PP-2| "" 3885008382 ("" (MEASURE-INDUCT "fsp1`length" "fsp1") (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND* "Pos_Equal" "empty_seq") (("1" (EXPAND "PP?" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "Pos_Equal" 2) (("2" (ASSERT) (("2" (PROP) (("1" (REWRITE "add_first_parallel_pos_to_pp_is_pp") (("1" (HIDE 2) (("1" (SKEEP) (("1" (EXPAND "finseq_appl") (("1" (LEMMA "Pos_Equal_is_sub_seq") (("1" (INST -1 "rest(x)" "fsp2") (("1" (REWRITE "rest_of_pp_is_pp") (("1" (ASSERT) (("1" (EXPAND* "subseq" "finseq_appl") (("1" (INST -1 "i") (("1" (EXPAND "member_seq" -1) (("1" (SKOSIMP) (("1" (EXPAND "finseq_appl") (("1" (TYPEPRED "i!1") (("1" (EXPAND "rest" -1) (("1" (EXPAND "rest" -2 2) (("1" (EXPAND* "^" "min") (("1" (EXPAND "empty_seq" -1) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "PP?" -5) (("1" (EXPAND "finseq_appl") (("1" (ASSERT) (("1" (INST -5 "1+i!1" 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -2 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "fsp2") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Equal_is_PP-1| |nil| 3573324669 ("" (MEASURE-INDUCT "fsp1`length" FSP1) (("" (SKEEP) (("" (SKEEP) (("" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND* POS_EQUAL EMPTY_SEQ) (("1" (EXPAND PP? 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND POS_EQUAL 2) (("2" (ASSERT) (("2" (PROP) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP) (("1" (HIDE 2) (("1" (SKEEP) (("1" (EXPAND FINSEQ_APPL) (("1" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("1" (INST -1 "rest(x)" FSP2) (("1" (REWRITE REST_OF_PP_IS_PP) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (INST -1 I) (("1" (EXPAND MEMBER_SEQ -1) (("1" (SKOSIMP) (("1" (EXPAND FINSEQ_APPL) (("1" (TYPEPRED I!1) (("1" (EXPAND REST -1) (("1" (EXPAND REST -2 2) (("1" (EXPAND* ^ MIN) (("1" (EXPAND EMPTY_SEQ -1) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND PP? -5) (("1" (EXPAND FINSEQ_APPL) (("1" (ASSERT) (("1" (INST -5 1+I!1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -2 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 FSP2) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_first_parallel_pos_to_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|Pos_Over_and_Pos_Equal_is_PP| 0 (|Pos_Over_and_Pos_Equal_is_PP-2| "" 3885009768 ("" (SKEEP) (("" (EXPAND "o") (("" (EXPAND "PP?" 1) (("" (EXPAND "finseq_appl") (("" (PROP) (("" (SKEEP 2) (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (ASSERT) (("" (PROP) (("1" (LEMMA "pos_over_is_pp") (("1" (INST -1 "fsp1" "fsp2") (("1" (ASSERT) (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 "i" "j") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_over_is_sub_seq") (("2" (INST-CP -1 "fsp2" "fsp1") (("2" (INST -1 "fsp1" "fsp2") (("2" (ASSERT) (("2" (LEMMA "pos_over_character") (("2" (INST-CP -1 "fsp2" "fsp1") (("2" (INST -1 "fsp1" "fsp2") (("2" (ASSERT) (("2" (EXPAND* "subseq" "finseq_appl") (("2" (INST -1 "i") (("2" (INST -3 "i") (("2" (INST -2 "j - Pos_Over(fsp1, fsp2)`length") (("2" (INST -4 "j - Pos_Over(fsp1, fsp2)`length") (("2" (ASSERT) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP*) (("2" (SPLIT -1) (("1" (HIDE -2) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 0 "i!2+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -2) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 "i!1+1" 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND "parallel" 4) (("2" (SPLIT) (("1" (REPLACES -4) (("1" (REPLACES -4) (("1" (EXPAND "PP?" -7) (("1" (PROP) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!1`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "o" -2) (("2" (DECOMPOSE-EQUALITY) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (INST -1 "i!1" "j!1") (("2" (PROP) (("1" (EXPAND "parallel") (("1" (FLATTEN) (("1" (EXPAND <= (-1 -2 1)) (("1" (SKOSIMP*) (("1" (REPLACES -1) (("1" (INST 1 "p1!1 o p1!2") (("1" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND <=) (("2" (SKOSIMP*) (("2" (REPLACES -2) (("2" (CASE "p1!1`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "o" -2) (("2" (DECOMPOSE-EQUALITY -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -4) (("2" (REPLACES -4) (("2" (CASE "i!2 = j!2") (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE " p1!1`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "o" -3) (("2" (DECOMPOSE-EQUALITY -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -8) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) (("2" (INST -8 "i!2" "j!2") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <= (-1 -3 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_equal_is_sub_seq") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (EXPAND* "subseq" "finseq_appl") (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -

                     Pos_Over(fsp2, fsp1)`length

                     + j") (("3" (LEMMA "pos_over_is_sub_seq") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (EXPAND* "subseq" "finseq_appl") (("3" (INST -1 "i") (("3" (EXPAND* "member_seq" "finseq_appl") (("3" (SKOSIMP*) (("3" (LEMMA "pos_over_character") (("3" (INST -1 "fsp1" "fsp2") (("3" (LEMMA "pos_equal_character") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -

                     Pos_Over(fsp2, fsp1)`length

                     + j") (("3" (INST -2 "i") (("3" (SPLIT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (ASSERT) (("1" (INST -1 0 "j!1+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (REPLACES -4) (("1" (REPLACES -4) (("1" (CASE "i!1=i!2") (("1" (REPLACES -1) (("1" (REPLACES -3) (("1" (CASE "j!2=j!1") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "j!2" "j!1") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (EXPAND "finseq_appl") (("2" (INST -6 "i!1" "i!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -4) (("2" (REPLACES -4) (("2" (CASE "i!2=i!1") (("1" (REPLACES -1) (("1" (REPLACES -3) (("1" (CASE "j!2=j!1") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "PP?" -6) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) (("2" (INST -6 "j!2" "j!1") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) (("2" (INST -6 "i!2" "i!1") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "pos_over_is_sub_seq") (("4" (INST-CP -1 "fsp2" "fsp1") (("4" (INST -1 "fsp1" "fsp2") (("4" (ASSERT) (("4" (EXPAND* "subseq" "finseq_appl") (("4" (INST -1 "j") (("4" (INST -2 "i - Pos_Over(fsp1, fsp2)`length") (("4" (EXPAND* "member_seq" "finseq_appl") (("4" (SKOSIMP*) (("4" (LEMMA "pos_over_character") (("4" (INST-CP -1 "fsp2" "fsp1") (("4" (INST -1 "fsp1" "fsp2") (("4" (ASSERT) (("4" (INST -1 "j") (("4" (INST -2 "i - Pos_Over(fsp1, fsp2)`length") (("4" (SPLIT -1) (("1" (HIDE -2) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 "i!2+1" 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 0 "i!1+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "i!2=j!2") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -3) (("1" (CASE "p1!3`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND "o" -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -8) (("2" (ASSERT) (("2" (INST -8 "i!2" "j!2") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <= (-1 -3 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1=j!1") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND "o" -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -7) (("2" (ASSERT) (("2" (INST -7 "i!1" "j!1") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (LEMMA "pos_over_is_pp") (("5" (INST -1 "fsp2" "fsp1") (("5" (ASSERT) (("5" (EXPAND "PP?" -1) (("5" (EXPAND "finseq_appl") (("5" (INST -1 "i - Pos_Over(fsp1, fsp2)`length" "j - Pos_Over(fsp1, fsp2)`length") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (LEMMA "pos_equal_is_sub_seq") (("6" (INST -1 "fsp1" "fsp2") (("6" (LEMMA "pos_over_is_sub_seq") (("6" (INST -1 "fsp2" "fsp1") (("6" (ASSERT) (("6" (EXPAND* "subseq" "finseq_appl") (("6" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("6" (INST -2 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + j") (("6" (EXPAND* "member_seq" "finseq_appl") (("6" (SKOSIMP*) (("6" (LEMMA "pos_equal_character") (("6" (LEMMA "pos_over_character") (("6" (INST -1 "fsp2" "fsp1") (("6" (INST -2 "fsp1" "fsp2") (("6" (ASSERT) (("6" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("6" (INST -2 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + j") (("6" (SKOSIMP) (("6" (SPLIT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 0 "i!2+1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "i!1=j!1") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (CASE "i!2=j!2") (("1" (REPLACES -1) (("1" (REPLACES -3) NIL NIL)) NIL) ("2" (EXPAND "PP?" -5) (("2" (ASSERT) (("2" (INST -5 "i!2" "j!2") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel" -5) (("2" (FLATTEN) (("2" (EXPAND <= 7) (("2" (REPLACE -3 -2 RL) (("2" (INST 7 "p1!2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "i!1" "j!1") (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1=j!1") (("1" (REPLACES -1) (("1" (CASE "i!2=j!2") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -1) (("1" (CASE "p1!1`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND "o" -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -5) (("2" (ASSERT) (("2" (INST -5 "i!2" "j!2") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "i!1" "j!1") (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (LEMMA "pos_over_is_sub_seq") (("7" (INST -1 "fsp1" "fsp2") (("7" (LEMMA "pos_equal_is_sub_seq") (("7" (INST -1 "fsp1" "fsp2") (("7" (ASSERT) (("7" (EXPAND* "subseq" "finseq_appl") (("7" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("7" (INST -2 "j") (("7" (EXPAND* "member_seq" "finseq_appl") (("7" (SKOSIMP*) (("7" (LEMMA "pos_over_character") (("7" (INST -1 "fsp1" "fsp2") (("7" (LEMMA "pos_equal_character") (("7" (INST -1 "fsp1" "fsp2") (("7" (ASSERT) (("7" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("7" (INST -2 "j") (("7" (SKOSIMP) (("7" (SPLIT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 "j!1+1" 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "i!1=i!2") (("1" (REPLACES -1) (("1" (CASE "j!1=j!2") (("1" (REPLACES -1) NIL NIL) ("2" (REPLACES -3) (("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "j!1" "j!2") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "i!1" "i!2") (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1=i!2") (("1" (CASE "j!1=j!2") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "PP?" -8) (("2" (ASSERT) (("2" (INST -8 "j!1" "j!2") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "i!1" "i!2") (("2" (EXPAND "finseq_appl") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (LEMMA "pos_over_is_sub_seq") (("8" (LEMMA "pos_equal_is_sub_seq") (("8" (INST -1 "fsp1" "fsp2") (("8" (INST -2 "fsp2" "fsp1") (("8" (ASSERT) (("8" (EXPAND* "subseq" "finseq_appl") (("8" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("8" (INST -2 "j - Pos_Over(fsp1, fsp2)`length") (("8" (EXPAND* "member_seq" "finseq_appl") (("8" (SKOSIMP*) (("8" (LEMMA "pos_over_character") (("8" (LEMMA "pos_equal_character") (("8" (INST -1 "fsp1" "fsp2") (("8" (INST -2 "fsp2" "fsp1") (("8" (ASSERT) (("8" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("8" (INST -2 "j - Pos_Over(fsp1, fsp2)`length") (("8" (SKOSIMP) (("8" (SPLIT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 "i!1+1" 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "i!1=j!2") (("1" (CASE "i!2=j!1") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "PP?" -7) (("2" (ASSERT) (("2" (INST -7 "i!2" "j!1") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -5) (("2" (ASSERT) (("2" (INST -5 "i!1" "j!2") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!2=j!1") (("1" (CASE "j!2=i!1") (("1" (ASSERT) NIL NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "j!2" "i!1") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "PP?" -6) (("2" (ASSERT) (("2" (INST -6 "i!2" "j!1") (("2" (EXPAND "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (LEMMA "pos_equal_is_pp") (("9" (INST -1 "fsp1" "fsp2") (("9" (ASSERT) (("9" (EXPAND "PP?" -1) (("9" (EXPAND "finseq_appl") (("9" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i" "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + j") (("9" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Over_and_Pos_Equal_is_PP-1| |nil| 3572441424 ("" (SKEEP) (("" (EXPAND O) (("" (EXPAND PP? 1) (("" (EXPAND FINSEQ_APPL) (("" (PROP) (("" (SKEEP 2) (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (LIFT-IF) (("" (ASSERT) (("" (PROP) (("1" (LEMMA POS_OVER_IS_PP) (("1" (INST -1 FSP1 FSP2) (("1" (ASSERT) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 I J) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST-CP -1 FSP2 FSP1) (("2" (INST -1 FSP1 FSP2) (("2" (ASSERT) (("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST-CP -1 FSP2 FSP1) (("2" (INST -1 FSP1 FSP2) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ FINSEQ_APPL) (("2" (INST -1 I) (("2" (INST -3 I) (("2" (INST -2 "j - Pos_Over(fsp1, fsp2)`length") (("2" (INST -4 "j - Pos_Over(fsp1, fsp2)`length") (("2" (ASSERT) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP*) (("2" (SPLIT -1) (("1" (HIDE -2) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 0 I!2+1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT -2) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 I!1+1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND PARALLEL 4) (("2" (SPLIT) (("1" (REPLACES -4) (("1" (REPLACES -4) (("1" (EXPAND PP? -7) (("1" (PROP) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!1`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND O -2) (("2" (DECOMPOSE-EQUALITY) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 I!1 J!1) (("2" (PROP) (("1" (EXPAND PARALLEL) (("1" (FLATTEN) (("1" (EXPAND <= (-1 -2 1)) (("1" (SKOSIMP*) (("1" (REPLACES -1) (("1" (INST 1 "p1!1 o p1!2") (("1" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND <=) (("2" (SKOSIMP*) (("2" (REPLACES -2) (("2" (CASE "p1!1`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND O -2) (("2" (DECOMPOSE-EQUALITY -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -4) (("2" (REPLACES -4) (("2" (CASE "i!2 = j!2") (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE " p1!1`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND O -3) (("2" (DECOMPOSE-EQUALITY -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -8) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -8 I!2 J!2) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -3 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -
                     Pos_Over(fsp2, fsp1)`length
                     + j") (("3" (LEMMA POS_OVER_IS_SUB_SEQ) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ FINSEQ_APPL) (("3" (INST -1 I) (("3" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("3" (SKOSIMP*) (("3" (LEMMA POS_OVER_CHARACTER) (("3" (INST -1 FSP1 FSP2) (("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -
                     Pos_Over(fsp2, fsp1)`length
                     + j") (("3" (INST -2 I) (("3" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (ASSERT) (("1" (INST -1 0 J!1+1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (REPLACES -4) (("1" (REPLACES -4) (("1" (CASE I!1=I!2) (("1" (REPLACES -1) (("1" (REPLACES -3) (("1" (CASE J!2=J!1) (("1" (ASSERT) NIL NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 J!2 J!1) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -6 I!1 I!2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -4) (("2" (REPLACES -4) (("2" (CASE I!2=I!1) (("1" (REPLACES -1) (("1" (REPLACES -3) (("1" (CASE J!2=J!1) (("1" (ASSERT) NIL NIL) ("2" (EXPAND PP? -6) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -6 J!2 J!1) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -6 I!2 I!1) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA POS_OVER_IS_SUB_SEQ) (("4" (INST-CP -1 FSP2 FSP1) (("4" (INST -1 FSP1 FSP2) (("4" (ASSERT) (("4" (EXPAND* SUBSEQ FINSEQ_APPL) (("4" (INST -1 J) (("4" (INST -2 "i - Pos_Over(fsp1, fsp2)`length") (("4" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("4" (SKOSIMP*) (("4" (LEMMA POS_OVER_CHARACTER) (("4" (INST-CP -1 FSP2 FSP1) (("4" (INST -1 FSP1 FSP2) (("4" (ASSERT) (("4" (INST -1 J) (("4" (INST -2 "i - Pos_Over(fsp1, fsp2)`length") (("4" (SPLIT -1) (("1" (HIDE -2) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 I!2+1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 0 I!1+1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE "i!2=j!2") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -3) (("1" (CASE "p1!3`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -8) (("2" (ASSERT) (("2" (INST -8 I!2 J!2) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -3 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1=j!1") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -7) (("2" (ASSERT) (("2" (INST -7 I!1 J!1) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (LEMMA POS_OVER_IS_PP) (("5" (INST -1 FSP2 FSP1) (("5" (ASSERT) (("5" (EXPAND PP? -1) (("5" (EXPAND FINSEQ_APPL) (("5" (INST -1 "i - Pos_Over(fsp1, fsp2)`length" "j - Pos_Over(fsp1, fsp2)`length") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("6" (INST -1 FSP1 FSP2) (("6" (LEMMA POS_OVER_IS_SUB_SEQ) (("6" (INST -1 FSP2 FSP1) (("6" (ASSERT) (("6" (EXPAND* SUBSEQ FINSEQ_APPL) (("6" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("6" (INST -2 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + j") (("6" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("6" (SKOSIMP*) (("6" (LEMMA POS_EQUAL_CHARACTER) (("6" (LEMMA POS_OVER_CHARACTER) (("6" (INST -1 FSP2 FSP1) (("6" (INST -2 FSP1 FSP2) (("6" (ASSERT) (("6" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("6" (INST -2 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + j") (("6" (SKOSIMP) (("6" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 0 I!2+1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE "i!1=j!1") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (CASE "i!2=j!2") (("1" (REPLACES -1) (("1" (REPLACES -3) NIL NIL)) NIL) ("2" (EXPAND PP? -5) (("2" (ASSERT) (("2" (INST -5 I!2 J!2) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL -5) (("2" (FLATTEN) (("2" (EXPAND <= 7) (("2" (REPLACE -3 -2 RL) (("2" (INST 7 P1!2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 I!1 J!1) (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1=j!1") (("1" (REPLACES -1) (("1" (CASE "i!2=j!2") (("1" (REPLACES -1) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -1) (("1" (CASE "p1!1`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -5) (("2" (ASSERT) (("2" (INST -5 I!2 J!2) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 I!1 J!1) (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (LEMMA POS_OVER_IS_SUB_SEQ) (("7" (INST -1 FSP1 FSP2) (("7" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("7" (INST -1 FSP1 FSP2) (("7" (ASSERT) (("7" (EXPAND* SUBSEQ FINSEQ_APPL) (("7" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("7" (INST -2 J) (("7" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("7" (SKOSIMP*) (("7" (LEMMA POS_OVER_CHARACTER) (("7" (INST -1 FSP1 FSP2) (("7" (LEMMA POS_EQUAL_CHARACTER) (("7" (INST -1 FSP1 FSP2) (("7" (ASSERT) (("7" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("7" (INST -2 J) (("7" (SKOSIMP) (("7" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 J!1+1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE "i!1=i!2") (("1" (REPLACES -1) (("1" (CASE "j!1=j!2") (("1" (REPLACES -1) NIL NIL) ("2" (REPLACES -3) (("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 J!1 J!2) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 I!1 I!2) (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i!1=i!2") (("1" (CASE "j!1=j!2") (("1" (ASSERT) NIL NIL) ("2" (EXPAND PP? -8) (("2" (ASSERT) (("2" (INST -8 J!1 J!2) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 I!1 I!2) (("2" (EXPAND FINSEQ_APPL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (LEMMA POS_OVER_IS_SUB_SEQ) (("8" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("8" (INST -1 FSP1 FSP2) (("8" (INST -2 FSP2 FSP1) (("8" (ASSERT) (("8" (EXPAND* SUBSEQ FINSEQ_APPL) (("8" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("8" (INST -2 "j - Pos_Over(fsp1, fsp2)`length") (("8" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("8" (SKOSIMP*) (("8" (LEMMA POS_OVER_CHARACTER) (("8" (LEMMA POS_EQUAL_CHARACTER) (("8" (INST -1 FSP1 FSP2) (("8" (INST -2 FSP2 FSP1) (("8" (ASSERT) (("8" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i") (("8" (INST -2 "j - Pos_Over(fsp1, fsp2)`length") (("8" (SKOSIMP) (("8" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 I!1+1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACES -3) (("2" (REPLACES -3) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE I!1=J!2) (("1" (CASE "i!2=j!1") (("1" (ASSERT) NIL NIL) ("2" (EXPAND PP? -7) (("2" (ASSERT) (("2" (INST -7 I!2 J!1) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -5) (("2" (ASSERT) (("2" (INST -5 I!1 J!2) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE I!2=J!1) (("1" (CASE "j!2=i!1") (("1" (ASSERT) NIL NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 J!2 I!1) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PP? -6) (("2" (ASSERT) (("2" (INST -6 I!2 J!1) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (LEMMA POS_EQUAL_IS_PP) (("9" (INST -1 FSP1 FSP2) (("9" (ASSERT) (("9" (EXPAND PP? -1) (("9" (EXPAND FINSEQ_APPL) (("9" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + i" "-1 * Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length + j") (("9" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Over_is_PP| FORMULA-DECL NIL |orthogonality| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|o_assoc| FORMULA-DECL NIL |finite_sequences| NIL) (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL) (<= CONST-DECL "bool" |positions| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|Pos_Equal_character| FORMULA-DECL NIL |orthogonality| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|Pos_Equal_is_PP| FORMULA-DECL NIL |orthogonality| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (PP? CONST-DECL "bool" |positions| NIL)) SHOSTAK)) (|Pos_Over_and_Pos_Equal_dominance| 0 (|Pos_Over_and_Pos_Equal_dominance-2| "" 3885011958 ("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED "i") (("" (LEMMA "union_positions") (("" (INST -1 "fsp1" "fsp2") (("" (EXPAND "SPP?") (("" (FLATTEN) (("" (ASSERT) (("" (CASE "seq2set(fsp1)(fsp1`seq(i))") (("1" (REPLACES -2) (("1" (REWRITE "seq2set_comp") (("1" (SPLIT) (("1" (REWRITE "seq2set_comp") (("1" (SPLIT) (("1" (LEMMA "member_seq_in_seq2set[position]") (("1" (INST -1 "Pos_Over(fsp1, fsp2)" "fsp1`seq(i)") (("1" (ASSERT) (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (INST 1 "i!1") (("1" (EXPAND <=) (("1" (INST 1 "empty_seq") (("1" (REWRITE "seq_o_empty") (("1" (EXPAND "o") (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "o") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "member_seq_in_seq2set[position]") (("2" (INST -1 "Pos_Equal(fsp1, fsp2)" "fsp1`seq(i)") (("2" (ASSERT) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (TYPEPRED "i!1") (("2" (INST 1 "Pos_Over(fsp1, fsp2)`length + Pos_Over(fsp2, fsp1)`length + i!1") (("1" (EXPAND "o") (("1" (EXPAND <=) (("1" (INST 1 "empty_seq") (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "o") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "member_seq_in_seq2set[position]") (("2" (INST -1 "Pos_Under(fsp1, fsp2)" "fsp1`seq(i)") (("2" (ASSERT) (("2" (LEMMA "pos_under_character") (("2" (INST -1 "fsp1" "fsp2" "fsp1`seq(i)") (("2" (EXPAND "finseq_appl") (("2" (SKOLEM -1 "j") (("2" (LEMMA "sub_pos_is_under") (("2" (INST -1 "fsp1" "fsp2`seq(j)" "fsp1`seq(i)") (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (LEMMA "pos_up_in_pos_over") (("2" (INST -1 "fsp2" "fsp1" "fsp2`seq(j)" "p1!1") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "member_seq" -1) (("1" (EXPAND "finseq_appl") (("1" (SKOSIMP) (("1" (INST 2 "Pos_Over(fsp1,fsp2)`length + i!1") (("1" (EXPAND "o" 2) (("1" (EXPAND <= 2) (("1" (INST 2 "p1!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "o" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "empty_0") (("2" (REPLACES -1) (("2" (REWRITE "seq_o_empty") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "member_seq" 1) (("3" (EXPAND "finseq_appl") (("3" (INST 1 "j") NIL NIL)) NIL)) NIL) ("4" (EXPAND "member_seq" 1) (("4" (EXPAND "finseq_appl") (("4" (INST 1 "i") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "seq2set" 1) (("2" (EXPAND "finseq_appl") (("2" (INST 1 "i") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Pos_Over_and_Pos_Equal_dominance-1| |nil| 3568629679 ("" (SKEEP) (("" (SKEEP) (("" (TYPEPRED I) (("" (LEMMA UNION_POSITIONS) (("" (INST -1 FSP1 FSP2) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (CASE "seq2set(fsp1)(fsp1`seq(i))") (("1" (REPLACES -2) (("1" (REWRITE SEQ2SET_COMP) (("1" (SPLIT) (("1" (REWRITE SEQ2SET_COMP) (("1" (SPLIT) (("1" (LEMMA MEMBER_SEQ_IN_SEQ2SET[POSITION]) (("1" (INST -1 "Pos_Over(fsp1, fsp2)" "fsp1`seq(i)") (("1" (ASSERT) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (INST 1 I!1) (("1" (EXPAND <=) (("1" (INST 1 EMPTY_SEQ) (("1" (REWRITE SEQ_O_EMPTY) (("1" (EXPAND O) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND O) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA MEMBER_SEQ_IN_SEQ2SET[POSITION]) (("2" (INST -1 "Pos_Equal(fsp1, fsp2)" "fsp1`seq(i)") (("2" (ASSERT) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (TYPEPRED I!1) (("2" (INST 1 "Pos_Over(fsp1, fsp2)`length + Pos_Over(fsp2, fsp1)`length + i!1") (("1" (EXPAND O) (("1" (EXPAND <=) (("1" (INST 1 EMPTY_SEQ) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND O) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA MEMBER_SEQ_IN_SEQ2SET[POSITION]) (("2" (INST -1 "Pos_Under(fsp1, fsp2)" "fsp1`seq(i)") (("2" (ASSERT) (("2" (LEMMA POS_UNDER_CHARACTER) (("2" (INST -1 FSP1 FSP2 "fsp1`seq(i)") (("2" (EXPAND FINSEQ_APPL) (("2" (SKOLEM -1 J) (("2" (LEMMA SUB_POS_IS_UNDER) (("2" (INST -1 FSP1 "fsp2`seq(j)" "fsp1`seq(i)") (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (LEMMA POS_UP_IN_POS_OVER) (("2" (INST -1 FSP2 FSP1 "fsp2`seq(j)" "p1!1") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND MEMBER_SEQ -1) (("1" (EXPAND FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST 2 "Pos_Over(fsp1,fsp2)`length + i!1") (("1" (EXPAND O 2) (("1" (EXPAND <= 2) (("1" (INST 2 P1!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE EMPTY_0) (("2" (REPLACES -1) (("2" (REWRITE SEQ_O_EMPTY) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND MEMBER_SEQ 1) (("3" (EXPAND FINSEQ_APPL) (("3" (INST 1 J) NIL NIL)) NIL)) NIL) ("4" (EXPAND MEMBER_SEQ 1) (("4" (EXPAND FINSEQ_APPL) (("4" (INST 1 I) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SEQ2SET 1) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 1 I) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|union_positions| FORMULA-DECL NIL |orthogonality| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (<= CONST-DECL "bool" |positions| NIL) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|fsp1| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|fsp2| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|i!1| SKOLEM-CONST-DECL "below[Pos_Over(fsp1, fsp2)`length]" |orthogonality| NIL) (|member_seq_in_seq2set| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|i!1| SKOLEM-CONST-DECL "below[Pos_Equal(fsp1, fsp2)`length]" |orthogonality| NIL) (|Pos_Under_character| FORMULA-DECL NIL |orthogonality| NIL) (|sub_pos_is_under| FORMULA-DECL NIL |orthogonality| NIL) (|pos_up_in_Pos_Over| FORMULA-DECL NIL |orthogonality| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|i!1| SKOLEM-CONST-DECL "below[Pos_Over(fsp2, fsp1)`length]" |orthogonality| NIL) (|Pos_Under| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|seq2set_comp| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)) SHOSTAK)) (|divergence_in_Pos_Over_aux_TCC1| 0 (|divergence_in_Pos_Over_aux_TCC1-1| |nil| 3573980593 ("" (SKOSIMP) (("" (EXPAND* "#" PP? FINSEQ_APPL) NIL NIL)) NIL) ((|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (PP? CONST-DECL "bool" |positions| NIL)) NIL (|divergence_in_Pos_Over_aux| SUBTYPE "set2seq[position[variable, symbol, arity]].#(orthogonality.p)" "PP[variable, symbol, arity]"))) (|divergence_in_Pos_Over_aux_TCC2| 0 (|divergence_in_Pos_Over_aux_TCC2-4| "" 3885012173 ("" (SKOSIMP) (("" (EXPAND "parallel_reduction_fix?") (("" (SKOSIMP) (("" (EXPAND* "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (LEMMA "pos_over_character") (("" (INST -1 "#(p!1)" "fsp2!1") (("" (EXPAND "#" -1 1) (("" (EXPAND "SPP?") (("" (FLATTEN) (("" (EXPAND "PP?" -1 1) (("" (ASSERT) (("" (INST -1 "i!1") (("" (SPLIT) (("1" (REPLACE -2 -1 RL) (("1" (HIDE -2) (("1" (LEMMA "replace_par_pos_preservs_pos") (("1" (INST -1 "fsp2!1" "sigma_rhs(fss!1, fse!1)" "p!1" "t!1") (("1" (EXPAND "SPP?") (("1" (EXPAND "sigma_rhs" 1) (("1" (EXPAND "empty_seq") (("1" (PROP) (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") NIL NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1 RL) (("2" (HIDE -2) (("2" (SKOSIMP) (("2" (LEMMA "replace_par_pos_preservs_pp") (("2" (INST -1 "fsp2!1" "sigma_rhs(fss!1, fse!1)" "t!1") (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND* "SPP?" "finseq_appl") (("2" (INST -1 "j!1") (("2" (REPLACE -7 -1 RL) (("2" (LEMMA "closed_positions") (("2" (INST -1 "p!1" "fsp2!1`seq(j!1)" "t2!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|divergence_in_Pos_Over_aux_TCC2-3| "" 3803860916 ("" (SKOSIMP) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_CHARACTER) (("" (INST -1 "#(p!1)" FSP2!1) (("" (EXPAND "#" -1 1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (EXPAND PP? -1 1) (("" (ASSERT) (("" (INST -1 I!1) (("" (SPLIT) (("1" (REPLACE -2 -1 RL) (("1" (HIDE -2) (("1" (LEMMA REPLACE_PAR_POS_PRESERVS_POS) (("1" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" P!1 T!1) (("1" (EXPAND SPP?) (("1" (EXPAND SIGMA_RHS 1) (("1" (EXPAND EMPTY_SEQ) (("1" (PROP) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1 RL) (("2" (HIDE -2) (("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND* SPP? FINSEQ_APPL) (("2" (INST -1 J!1) (("2" (REPLACE -7 -1 RL) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P!1 "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|replace_par_pos_preservs_pos| FORMULA-DECL NIL |orthogonality_basis| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|closed_positions| FORMULA-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (< CONST-DECL "bool" |reals| NIL) (PP? CONST-DECL "bool" |positions| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|divergence_in_Pos_Over_aux_TCC2-2| "" 3756670241 ("" (SKOSIMP) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_CHARACTER) (("" (INST -1 "#(p!1)" FSP2!1) (("" (EXPAND "#" -1 1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (EXPAND PP? -1 1) (("" (ASSERT) (("" (INST -1 I!1) (("" (SPLIT) (("1" (REPLACE -9 -1 RL) (("1" (HIDE -9) (("1" (LEMMA REPLACE_PAR_POS_PRESERVS_POS) (("1" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" P!1 T!1) (("1" (EXPAND SPP?) (("1" (EXPAND SIGMA_RHS 1) (("1" (EXPAND EMPTY_SEQ) (("1" (PROP) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -9 -1 RL) (("2" (HIDE -9) (("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND* SPP? FINSEQ_APPL) (("2" (INST -1 J!1) (("2" (REPLACE -8 -1 RL) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P!1 "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|divergence_in_Pos_Over_aux_TCC2-1| |nil| 3573980593 ("" (SKOSIMP) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_CHARACTER) (("" (INST -1 "#(p!1)" FSP2!1) (("" (EXPAND "#" -1 1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (EXPAND PP? -1 1) (("" (ASSERT) (("" (INST -1 I!1) (("" (SPLIT) (("1" (REPLACE -2 -1 RL) (("1" (HIDE -2) (("1" (LEMMA REPLACE_PAR_POS_PRESERVS_POS) (("1" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" P!1 T!1) (("1" (EXPAND SPP?) (("1" (EXPAND SIGMA_RHS 1) (("1" (EXPAND EMPTY_SEQ) (("1" (PROP) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL) ("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1 RL) (("2" (HIDE -2) (("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND* SPP? FINSEQ_APPL) (("2" (INST -1 J!1) (("2" (REPLACE -7 -1 RL) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P!1 "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)"))) (|divergence_in_Pos_Over_aux_TCC3| 0 (|divergence_in_Pos_Over_aux_TCC3-3| "" 3885012211 ("" (SKOSIMP) (("" (EXPAND "SPP?") (("" (REWRITE "complement_pos_is_pp") (("" (FLATTEN) (("" (EXPAND* "SP?" "finseq_appl") (("" (SKOSIMP) (("" (LEMMA "complement_pos_character") (("" (INST -1 "fsp2!1" "p!1" "complement_pos(p!1, fsp2!1)`seq(i!1)") (("" (ASSERT) (("" (PROP) (("1" (SKOSIMP) (("1" (INST - "i!2") (("1" (REWRITE "pos_subterm_ax") NIL NIL)) NIL)) NIL) ("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality_basis[orthogonality.variable, orthogonality.symbol, orthogonality.arity].complement_pos(orthogonality.p, orthogonality.fsp2)" "SPP[orthogonality.variable, orthogonality.symbol, orthogonality.arity](subterm[orthogonality.variable, orthogonality.symbol, orthogonality.arity].subtermOF(orthogonality.t, orthogonality.p))")) (|divergence_in_Pos_Over_aux_TCC3-2| "" 3756670289 ("" (SKOSIMP) (("" (EXPAND SPP?) (("" (REWRITE COMPLEMENT_POS_IS_PP) (("" (FLATTEN) (("" (EXPAND* SP? FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA COMPLEMENT_POS_CHARACTER) (("" (INST -1 FSP2!1 P!1 "complement_pos(p!1, fsp2!1)`seq(i!1)") (("" (ASSERT) (("" (PROP) (("1" (SKOSIMP) (("1" (INST - I!2) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((SPP? CONST-DECL "bool" |positions| NIL) (|complement_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality_basis| NIL) (< CONST-DECL "bool" |reals| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|pos_subterm_ax| FORMULA-DECL NIL |subterm| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|complement_pos_character| FORMULA-DECL NIL |orthogonality_basis| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|complement_pos_is_PP| FORMULA-DECL NIL |orthogonality_basis| NIL)) SHOSTAK (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality_basis[orthogonality.variable, orthogonality.symbol, orthogonality.arity].complement_pos(orthogonality.p, orthogonality.fsp2)" "SPP[orthogonality.variable, orthogonality.symbol, orthogonality.arity](subterm[orthogonality.variable, orthogonality.symbol, orthogonality.arity].subtermOF(orthogonality.t, orthogonality.p))")) (|divergence_in_Pos_Over_aux_TCC3-1| |nil| 3573980593 ("" (SKOSIMP) (("" (EXPAND SPP?) (("" (REWRITE COMPLEMENT_POS_IS_PP) (("" (FLATTEN) (("" (EXPAND* SP? FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA COMPLEMENT_POS_CHARACTER) (("" (INST -1 FSP2!1 P!1 "complement_pos(p!1, fsp2!1)`seq(i!1)") (("" (ASSERT) (("" (PROP) (("1" (SKOSIMP) (("1" (INST -6 I!2) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|divergence_in_Pos_Over_aux| SUBTYPE "orthogonality_basis[orthogonality.variable, orthogonality.symbol, orthogonality.arity].complement_pos(orthogonality.p, orthogonality.fsp2)" "SPP[orthogonality.variable, orthogonality.symbol, orthogonality.arity](subterm[orthogonality.variable, orthogonality.symbol, orthogonality.arity].subtermOF(orthogonality.t, orthogonality.p))"))) (|divergence_in_Pos_Over_aux| 0 (|divergence_in_Pos_Over_aux-2| "" 3885016532 ("" (MEASURE-INDUCT "fsp2`length" "fsp2") (("1" (SKEEP) (("1" (SKEEP) (("1" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND "complement_pos") (("1" (EXPAND "empty_seq") (("1" (ASSERT) (("1" (EXPAND "parallel_reduction_fix?") (("1" (INST 1 "empty_seq" "empty_seq") (("1" (EXPAND "empty_seq") (("1" (SKOSIMP) (("1" (EXPAND "replace_par_pos") (("1" (ASSERT) (("1" (EXPAND "subtermsOF" 1) (("1" (EXPAND "sigma_lhs" 1) (("1" (EXPAND "empty_seq") (("1" (DECOMPOSE-EQUALITY 1) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "subset?") (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (EXPAND "member") (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (TYPEPRED "kk") (("2" (HIDE (-2 1)) (("2" (EXPAND "empty_seq") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "parallel_reduction_fix?" -3) (("2" (SKOSIMP) (("2" (EXPAND* "replace_par_pos" "finseq_appl") (("2" (ASSERT) (("2" (INST -1 "rest(x)") (("2" (REWRITE "length_rest") (("2" (INST -1 "E" "p" "replaceTerm(t, sigma_rhs(fss!1, fse!1)`seq(0),
                                                     x`seq(0))" "t2") (("2" (EXPAND "SPP?") (("2" (REWRITE "rest_of_pp_is_pp") (("2" (FLATTEN) (("2" (PROP) (("1" (EXPAND "complement_pos" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "parallel_reduction_fix?") (("1" (SKOSIMP) (("1" (INST 1 "add_first(fse!1`seq(0), fse!2)" "add_first(fss!1`seq(0), fss!2)") (("1" (EXPAND "add_first" 1 (1 2 3 4)) (("1" (EXPAND "insert?") (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "subtermsOF" 1) (("1" (EXPAND "sigma_lhs" 1) (("1" (EXPAND "finseq_appl") (("1" (DECOMPOSE-EQUALITY) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "subtermsOF" -11) (("1" (EXPAND "sigma_lhs" -11) (("1" (EXPAND "finseq_appl") (("1" (DECOMPOSE-EQUALITY -11) (("1" (INST -1 0) (("1" (TYPEPRED "choose(complement_pos_set(<=, o)(p, x`seq(0)))") (("1" (EXPAND "complement_pos_set" -1 1) (("1" (EXPAND "emptyset") (("1" (PROP) (("1" (REPLACE -3 2 RL) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p" "choose(complement_pos_set(<=, o)(p, x`seq(0)))" "t") (("1" (EXPAND* "SP?" "finseq_appl") (("1" (INST -12 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "SP?" "finseq_appl") (("2" (INST -10 "x1!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "complement_pos_character") (("2" (INST -1 "rest(x)" "p" "complement_pos(p, rest(x))`seq(x!1 - 1)") (("1" (EXPAND "seq2set") (("1" (EXPAND "finseq_appl") (("1" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (EXPAND "rest" -1) (("1" (EXPAND "rest" -2 1) (("1" (EXPAND* "^" "min" "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "subtermsOF" -6) (("1" (EXPAND "sigma_lhs" -6) (("1" (EXPAND "finseq_appl") (("1" (DECOMPOSE-EQUALITY -6) (("1" (INST -1 "x!1 - 1") (("1" (REPLACE -1 6 RL) (("1" (HIDE -1 -7) (("1" (LEMMA "pos_subterm") (("1" (INST-CP -1 "p" "complement_pos(p, rest(x))`seq(x!1 - 1)" "replaceTerm(t,
                                                                                       sigma_rhs(fss!1, fse!1)`seq(0),
                                                                                       x`seq(0))") (("1" (PROP) (("1" (INST -2 "p" "complement_pos(p, rest(x))`seq(x!1 - 1)" "t") (("1" (PROP) (("1" (REPLACE -1 6 RL) (("1" (REPLACE -2 6 RL) (("1" (HIDE -1 -2) (("1" (REPLACE -1 6 RL) (("1" (LEMMA "replace_persistence") (("1" (INST -1 "x`seq(0)" "x`seq(1+i!1)" "t" "sigma_rhs(fss!1, fse!1)`seq(0)") (("1" (EXPAND* "SP?" "PP?" "finseq_appl") (("1" (INST-CP -8 "1+i!1") (("1" (INST -8 0) (("1" (ASSERT) (("1" (INST -6 0 "1+i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "SP?" "finseq_appl") (("2" (INST -8 "1+i!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "replace_preserv_parallel_pos") (("2" (INST -1 "x`seq(0)" "x`seq(1+i!1)" "t" "sigma_rhs(fss!1, fse!1)`seq(0)") (("2" (EXPAND* "SP?" "PP?" "finseq_appl") (("2" (INST-CP -9 "1+i!1") (("2" (INST -9 0) (("2" (ASSERT) (("2" (INST -7 0 "1+i!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -8 -9 -15) (("2" (REWRITE "pos_subterm_ax") (("2" (HIDE 2) (("2" (LEMMA "complement_pos_character") (("2" (INST -1 "rest(x)" "p" "complement_pos(p, rest(x))`seq(x1!1)") (("2" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED "i!3") (("1" (EXPAND "rest" -1) (("1" (EXPAND "rest" -2 1) (("1" (EXPAND* "^" "min" "empty_seq") (("1" (REPLACE -2 1 RL) (("1" (EXPAND* "SP?" "PP?" "finseq_appl") (("1" (REWRITE "replace_preserv_parallel_pos") (("1" (INST -11 "1+i!3") NIL NIL) ("2" (INST -11 0) NIL NIL) ("3" (INST -10 0 "1+i!3") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2 4)) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE-ALL-BUT (-2 -3 1)) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKEEP) (("4" (ASSERT) NIL NIL)) NIL) ("5" (SKEEP) NIL NIL) ("6" (SKEEP) NIL NIL) ("7" (SKEEP) (("7" (HIDE -4 -5 3) (("7" (LEMMA "complement_pos_character") (("7" (INST -1 "rest(x)" "p" "complement_pos(p, rest(x))`seq(i_1 - 1)") (("1" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (EXPAND "rest" -1) (("1" (EXPAND "rest" -2 1) (("1" (EXPAND* "^" "min" "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "SP?" "finseq_appl") (("1" (INST -7 "1+i!1") (("1" (REWRITE "pos_subterm_ax") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2 4)) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (ASSERT) NIL NIL)) NIL) ("9" (SKOSIMP) (("9" (TYPEPRED "choose(complement_pos_set(<=, o)(p, x`seq(0)))") (("9" (EXPAND "complement_pos_set" -1 1) (("9" (EXPAND "emptyset") (("9" (PROP) (("9" (HIDE -7 -8 3) (("9" (EXPAND* "SP?" "finseq_appl") (("9" (INST -8 0) (("9" (REWRITE "pos_subterm_ax") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "replace_par_pos" 1) (("2" (REWRITE "sigma_rhs_rest") (("1" (REWRITE "rest_add_first") (("1" (REWRITE "rest_add_first") (("1" (REWRITE "rest_add_first") (("1" (EXPAND "finseq_appl") (("1" (EXPAND* "add_first" "insert?" "finseq_appl") (("1" (EXPAND "sigma_rhs" 1 1) (("1" (EXPAND "finseq_appl") (("1" (EXPAND "sigma_rhs" -5 1) (("1" (EXPAND "finseq_appl") (("1" (TYPEPRED "choose(complement_pos_set(<=, o)(p, x`seq(0)))") (("1" (EXPAND "complement_pos_set" -1 1) (("1" (EXPAND "emptyset") (("1" (PROP) (("1" (REPLACE -2 -7) (("1" (REWRITE "replace_distributivity" -7) (("1" (EXPAND* "SP?" "finseq_appl") (("1" (INST -9 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "add_first" 1) (("2" (EXPAND "insert?") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED ("fse!1" "fse!2")) (("2" (EXPAND* "add_first" "insert?" "finseq_appl") (("2" (HIDE-ALL-BUT (-1 -2 1 2)) (("2" (EXPAND "subset?") (("2" (EXPAND "subset?") (("2" (SKOSIMP) (("2" (EXPAND "member") (("2" (EXPAND "seq2set" -3) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE -4) (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "seq2set") (("1" (EXPAND "finseq_appl") (("1" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST?) (("2" (ASSERT) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "parallel_reduction_fix?") (("2" (SKOSIMP) (("2" (INST 2 "fse!2" "fss!2") (("2" (ASSERT) (("2" (SPLIT) (("1" (HIDE -4 -10) (("1" (EXPAND* "nonempty?" "empty?" "member") (("1" (EXPAND "subtermsOF" (-4 1)) (("1" (EXPAND "sigma_lhs" (-4 1)) (("1" (EXPAND* "empty_seq" "finseq_appl") (("1" (LIFT-IF 1) (("1" (PROP) (("1" (DECOMPOSE-EQUALITY 1) (("1" (DECOMPOSE-EQUALITY 1) (("1" (SKEEP) NIL NIL)) NIL) ("2" (SKEEP) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY 2) (("1" (LEMMA "complement_pos_character") (("1" (INST -1 "rest(x)" "p" "complement_pos(p, rest(x))`seq(x!1)") (("1" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (EXPAND "rest" -1) (("1" (EXPAND "rest" -2 1) (("1" (EXPAND* ^ "min" "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (DECOMPOSE-EQUALITY -6) (("1" (INST -1 "x!1") (("1" (REPLACE -1 5 RL) (("1" (HIDE -1) (("1" (EXPAND* "SP?" "PP?" "finseq_appl") (("1" (REWRITE "replace_persistence") (("1" (INST -7 0) NIL NIL) ("2" (HIDE -6) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (LEMMA "pos_over_character") (("2" (INST -1 " #(p)" "x") (("2" (EXPAND "#" -1 1) (("2" (EXPAND "PP?" -1 1) (("2" (INST -1 "i!2") (("2" (SPLIT) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -1) (("1" (EXPAND "finseq_appl") (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REVEAL -3) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "j!1=0") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -3 -14 1)) (("1" (REPLACE -3 -2 RL) (("1" (REPLACE -3 1 RL) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 0 "j!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 2)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 2 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -14 -3 RL) (("2" (REPLACE -14 1 RL) (("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -6 "p1!1") (("2" (EXPAND "complement_pos_set" 8) (("2" (EXPAND "emptyset") (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 "p1!1") NIL NIL)) NIL) ("2" (LEMMA "complement_pos_empty") (("2" (INST -1 "rest(x)" "p") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -3 1)) (("2" (LEMMA "seq_first_rest[position]") (("2" (INST -1 "x") (("2" (ASSERT) (("2" (EXPAND* "first" "finseq_appl") (("2" (REPLACES -2) (("2" (REPLACE -1 1 RL) (("2" (EXPAND* "PP?" "finseq_appl" "parallel") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "SP?" "PP?" "finseq_appl") (("2" (INST-CP -10 "1+i!1") (("2" (LEMMA "replace_persistence") (("2" (INST -1 "x`seq(0)" "p" "t" "sigma_rhs(fss!1, fse!1)`seq(0)") (("2" (INST -11 0) (("2" (ASSERT) (("2" (HIDE -8 -14 2 5) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (LEMMA "pos_over_character") (("2" (INST -1 "#(p)" "x") (("2" (EXPAND "#" -1 1) (("2" (EXPAND "PP?" -1 1) (("2" (INST -1 "i!3") (("2" (SPLIT) (("1" (EXPAND* "add_first" "insert?" "PP?" "finseq_appl") (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -15 -1 RL) (("2" (REPLACE -15 1 RL) (("2" (HIDE -15) (("2" (EXPAND "parallel" 2) (("2" (SPLIT) (("1" (CASE "j!1 = 0") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -2 1)) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND "o" -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -10 0 "j!1") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -7 "p1!1") (("2" (EXPAND "complement_pos_set" 5) (("2" (EXPAND "emptyset") (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 "p1!1") NIL NIL)) NIL) ("2" (LEMMA "complement_pos_empty") (("2" (INST -1 "rest(x)" "p") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -10 1)) (("2" (LEMMA "seq_first_rest[position]") (("2" (INST -1 "x") (("2" (ASSERT) (("2" (EXPAND* "first" "finseq_appl") (("2" (REPLACES -2) (("2" (REPLACE -1 1 RL) (("2" (EXPAND* "PP?" "finseq_appl") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND* "SP?" "PP?" "finseq_appl") (("3" (HIDE -8 4) (("3" (REWRITE "replace_preserv_parallel_pos") (("1" (INST -9 0) NIL NIL) ("2" (HIDE 2) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP*) (("2" (LEMMA "pos_over_character") (("2" (INST -1 "#(p)" "x") (("2" (EXPAND "#" -1 1) (("2" (EXPAND "PP?" -1 1) (("2" (INST -1 "i!3") (("2" (SPLIT) (("1" (EXPAND* "add_first" "insert?" PP? "finseq_appl") (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -15 -1 RL) (("2" (REPLACE -15 1 RL) (("2" (HIDE -15) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "j!1=0") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -2 1)) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND "o" -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -2 -10 1)) (("2" (INST -3 0 "j!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND <=) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 2 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -7 "p1!1") (("2" (EXPAND* "complement_pos_set" "emptyset") (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 "p1!1") NIL NIL)) NIL) ("2" (LEMMA "complement_pos_empty") (("2" (INST -1 "rest(x)" "p") (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -10 1)) (("2" (REPLACES -1) (("2" (LEMMA "seq_first_rest[position]") (("2" (INST -1 "x") (("2" (ASSERT) (("2" (EXPAND* "first" "finseq_appl") (("2" (REPLACE -1 1 RL) (("2" (EXPAND* "PP?" "finseq_appl") (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND* "SP?" "finseq_appl") (("4" (INST -10 0) NIL NIL)) NIL) ("5" (EXPAND "sigma_rhs" 1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE-ALL-BUT (-3 1)) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (LEMMA "complement_pos_character") (("3" (INST -1 "rest(x)" "p" "complement_pos(p, rest(x))`seq(i)") (("3" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (EXPAND "rest" -1) (("1" (EXPAND "rest" -2 1) (("1" (EXPAND* "^" "min" "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "SP?" "finseq_appl") (("1" (INST -8 "1+i!1") (("1" (HIDE-ALL-BUT (-1 -8 5)) (("1" (REPLACES -1) (("1" (REWRITE "pos_subterm_ax") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "replace_persistence" -4) (("1" (EXPAND* "SP?" "finseq_appl") (("1" (INST -6 0) NIL NIL)) NIL) ("2" (HIDE -3 -4 -10 2) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (LEMMA "pos_over_character") (("2" (INST -1 "#(p)" "x") (("2" (EXPAND "#" -1 1) (("2" (EXPAND "PP?" -1 1) (("2" (INST -1 "i!1") (("2" (SPLIT) (("1" (EXPAND* "add_first" "insert?" "PP?" "finseq_appl") (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -10 -1 RL) (("2" (REPLACE -10 1 RL) (("2" (HIDE -10) (("2" (EXPAND "parallel") (("2" (SPLIT) (("1" (CASE "j!1=0") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -2 1)) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE "empty_0") (("1" (REPLACES -1) (("1" (REWRITE "seq_o_empty") NIL NIL)) NIL)) NIL) ("2" (EXPAND "o" -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "PP?" "finseq_appl") (("2" (ASSERT) (("2" (INST -5 0 "j!1") (("2" (EXPAND "parallel") (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 5)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 5 "p1!1 o p1!2") (("2" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "nonempty?" "empty?" "member" "complement_pos_set" "emptyset") (("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -3 "p1!1") (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 "p1!1") NIL NIL)) NIL) ("2" (CASE "j!1=0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND* "PP?" "finseq_appl") (("2" (ASSERT) (("2" (INST -6 0 "j!1") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "rest" 1) (("2" (EXPAND* "^" "min" "empty_seq") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "SP?") (("1" (SKEEP) NIL NIL)) NIL) ("2" (EXPAND "SP?") (("2" (SKEEP) NIL NIL)) NIL) ("3" (EXPAND* "SP?" "PP?" "finseq_appl") (("3" (ASSERT) (("3" (SKOSIMP) (("3" (REWRITE "replace_preserv_parallel_pos") (("1" (INST -2 "1+i!1") NIL NIL) ("2" (INST -2 0) NIL NIL) ("3" (INST -1 0 "1+i!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 3) (("3" (EXPAND "parallel_reduction_fix?") (("3" (INST 1 "rest(fse!1)" "rest(fss!1)") (("1" (PROP) (("1" (HIDE-ALL-BUT (-3 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-4 1)) (("2" (GRIND) NIL NIL)) NIL) ("3" (EXPAND "rest" 1) (("3" (EXPAND* "^" "min" "empty_seq") (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (ASSERT) (("3" (PROP) (("1" (EXPAND "subtermsOF" 1) (("1" (EXPAND "sigma_lhs" 1) (("1" (EXPAND "empty_seq") (("1" (DECOMPOSE-EQUALITY 1) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "subtermsOF" 1) (("2" (EXPAND "sigma_lhs" 1) (("2" (EXPAND "empty_seq") (("2" (DECOMPOSE-EQUALITY 1) (("2" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "subtermsOF" 3) (("3" (EXPAND "sigma_lhs" 3) (("3" (EXPAND "empty_seq") (("3" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL)) NIL)) NIL) ("4" (EXPAND "subtermsOF" 1) (("4" (EXPAND "sigma_lhs" 1) (("4" (EXPAND "empty_seq") (("4" (DECOMPOSE-EQUALITY 1) (("4" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND "subtermsOF" 1) (("5" (EXPAND "sigma_lhs" 1) (("5" (EXPAND "empty_seq") (("5" (DECOMPOSE-EQUALITY 1) (("5" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND "subtermsOF" 3) (("6" (EXPAND "sigma_lhs" 3) (("6" (EXPAND "empty_seq") (("6" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (EXPAND "subtermsOF" 1) (("8" (EXPAND "sigma_lhs" 1) (("8" (EXPAND "empty_seq") (("8" (DECOMPOSE-EQUALITY 1) (("8" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("9" (EXPAND "subtermsOF" 1) (("9" (EXPAND "sigma_lhs" 1) (("9" (EXPAND "empty_seq") (("9" (DECOMPOSE-EQUALITY 1) (("9" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("10" (EXPAND "subtermsOF" 3) (("10" (EXPAND "sigma_lhs" 3) (("10" (EXPAND "empty_seq") (("10" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL)) NIL)) NIL) ("11" (EXPAND "subtermsOF" 1) (("11" (EXPAND "sigma_lhs" 1) (("11" (EXPAND "empty_seq") (("11" (DECOMPOSE-EQUALITY 1) (("11" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("12" (EXPAND "subtermsOF" 1) (("12" (EXPAND "sigma_lhs" 1) (("12" (EXPAND "empty_seq") (("12" (DECOMPOSE-EQUALITY 1) (("12" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("13" (ASSERT) NIL NIL) ("14" (ASSERT) NIL NIL) ("15" (EXPAND* "subtermsOF" "sigma_lhs") (("15" (EXPAND* "empty_seq" "finseq_appl") (("15" (DECOMPOSE-EQUALITY 3) (("1" (DECOMPOSE-EQUALITY 1) (("1" (DECOMPOSE-EQUALITY -5) (("1" (INST -1 "1+x!1") (("1" (EXPAND* "SP?" "PP?" "finseq_appl") (("1" (REWRITE REPLACE_PERSISTENCE) (("1" (INST -3 0) NIL NIL) ("2" (INST -3 "1+x!1") NIL NIL) ("3" (INST -2 0 "1+x!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "SP?" "finseq_appl") (("2" (INST -4 "x1!1") NIL NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND* "SP?" "PP?" "finseq_appl") (("3" (REWRITE "replace_preserv_parallel_pos") (("1" (INST -2 "1+i") NIL NIL) ("2" (INST -2 0) NIL NIL) ("3" (INST -1 0 "1+i") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND* "SP?" "PP?" "finseq_appl") (("3" (REWRITE "replace_preserv_parallel_pos") (("1" (INST -2 "1+i") NIL NIL) ("2" (INST -2 0) NIL NIL) ("3" (INST -1 0 "1+i") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (REWRITE "sigma_rhs_rest") NIL NIL)) NIL) ("2" (TYPEPRED "fse!1") (("2" (EXPAND "rest" 1) (("2" (HIDE-ALL-BUT (-1 1 2)) (("2" (EXPAND "subset?") (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (EXPAND "member") (("2" (INST?) (("2" (ASSERT) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (EXPAND "^") (("2" (LIFT-IF) (("2" (PROP) (("1" (TYPEPRED "kk") (("1" (GRIND) NIL NIL)) NIL) ("2" (TYPEPRED "kk") (("2" (GRIND) NIL NIL)) NIL) ("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND* "member_seq" "finseq_appl") (("4" (SKOSIMP) (("4" (LEMMA "pos_over_character") (("4" (INST -1 "#(p)" "x") (("4" (EXPAND "#" -1 1) (("4" (EXPAND "PP?" -1 1) (("4" (ASSERT) (("4" (INST -1 "i!1") (("4" (SPLIT) (("1" (EXPAND* "add_first" "insert?" "PP?" "finseq_appl") (("1" (HIDE -2) (("1" (INST -1 1 0) (("1" (ASSERT) (("1" (REWRITE "replace_preserv_parallel_pos") (("1" (EXPAND* "SP?" "finseq_appl") (("1" (INST -2 0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -9 -1 RL) (("2" (REPLACE -9 1 RL) (("2" (HIDE -9) (("2" (LEMMA "replace_preserv_parallel_pos") (("2" (INST -1 "x`seq(0)" "x`seq(j!1)" "t" "sigma_rhs(fss!1, fse!1)`seq(0)") (("2" (EXPAND* "SP?" "PP?" "finseq_appl") (("2" (INST-CP -4 "j!1") (("2" (INST -4 0) (("2" (CASE "j!1=0") (("1" (ASSERT) (("1" (HIDE -2 -4) (("1" (REPLACES -1) (("1" (LEMMA "replace_preserv_pos") (("1" (INST -1 "x`seq(0)" "t" "sigma_rhs(fss!1, fse!1)`seq(0)") (("1" (ASSERT) (("1" (LEMMA "pos_ax") (("1" (EXPAND <= -3) (("1" (SKOSIMP) (("1" (INST -1 "p" "p1!1" "replaceTerm(t, sigma_rhs(fss!1, fse!1)`seq(0), x`seq(0))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (PROP) (("1" (EXPAND <= -2) (("1" (SKOSIMP) (("1" (LEMMA "pos_ax") (("1" (INST -1 "p" "p1!1" "replaceTerm(t, sigma_rhs(fss!1, fse!1)`seq(0), x`seq(0))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 0 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND* "member_seq" "finseq_appl") (("5" (SKOSIMP) (("5" (LEMMA "pos_over_character") (("5" (INST -1 "#(p)" "x") (("5" (EXPAND "#" -1 1) (("5" (EXPAND "PP?" -1 1) (("5" (ASSERT) (("5" (INST -1 "i!1") (("5" (SPLIT) (("1" (LEMMA "parallel_pos_in_pos_over") (("1" (INST -1 "#(p)" "rest(x)" "p") (("1" (EXPAND "#" -1 1) (("1" (EXPAND "PP?" -1 1) (("1" (REWRITE "rest_of_pp_is_pp") (("1" (REPLACE -10 -2 RL) (("1" (PROP) (("1" (EXPAND* "member_seq" "finseq_appl") NIL NIL) ("2" (EXPAND "#" 1) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 1 0) NIL NIL)) NIL)) NIL) ("3" (REWRITE "add_first_parallel_pos_to_pp_is_pp") (("1" (EXPAND "finseq_appl") (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (EXPAND "rest" (-1 1)) (("1" (EXPAND* "^" "min" "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?") (("1" (EXPAND "PP?" -2) (("1" (EXPAND "finseq_appl") (("1" (INST -2 "2+i" 0) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "rest_of_pp_is_pp") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (CASE "j!1=0") (("1" (REPLACES -1) (("1" (REPLACE -9 -1 RL) (("1" (REPLACE -9 1 RL) (("1" (HIDE -9) (("1" (LEMMA "parallel_pos_in_pos_over") (("1" (INST -1 "#(p)" "rest(x)" "p") (("1" (EXPAND "#" -1 1) (("1" (EXPAND "PP?" -1 1) (("1" (REWRITE "rest_of_pp_is_pp") (("1" (PROP) (("1" (EXPAND* "member_seq" "finseq_appl") NIL NIL) ("2" (EXPAND "#" 1) (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 1 0) NIL NIL)) NIL)) NIL) ("3" (REWRITE "add_first_parallel_pos_to_pp_is_pp") (("1" (EXPAND "finseq_appl") (("1" (SKEEP) (("1" (TYPEPRED "i") (("1" (EXPAND "rest" (-1 1)) (("1" (EXPAND* "^" "min" "empty_seq") (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE 6) (("1" (EXPAND "parallel") (("1" (SPLIT) (("1" (EXPAND* "PP?" "finseq_appl") (("1" (ASSERT) (("1" (INST -4 0 "1+i") (("1" (ASSERT) (("1" (EXPAND "parallel") (("1" (FLATTEN) (("1" (EXPAND <= (-1 -3 9)) (("1" (SKOSIMP*) (("1" (REPLACES -1) (("1" (INST 9 "p1!1 o p1!2") (("1" (REWRITE "o_assoc") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_up_in_pos_over") (("2" (EXPAND <= -2) (("2" (SKOSIMP) (("2" (INST -1 "#(p)" "rest(x)" "p" "p1!1") (("2" (EXPAND "#" -1 1) (("2" (EXPAND "PP?" -1 1) (("2" (REWRITE "rest_of_pp_is_pp") (("2" (PROP) (("1" (EXPAND* "member_seq" "finseq_appl") NIL NIL) ("2" (REWRITE "empty_0" -1) (("2" (REPLACES -1) (("2" (REWRITE "seq_o_empty" -1) (("2" (REPLACE -1 -3 RL) (("2" (EXPAND* "PP?" "finseq_appl" "parallel") (("2" (ASSERT) (("2" (INST -4 0 "1+i") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (EXPAND* "member_seq" "finseq_appl") (("3" (INST 1 0) NIL NIL)) NIL)) NIL) ("4" (EXPAND "rest" 1) (("4" (EXPAND* "^" "min" "empty_seq") (("4" (LIFT-IF) (("4" (ASSERT) (("4" (EXPAND* "member_seq" "finseq_appl") (("4" (INST 1 "i") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE "rest_of_pp_is_pp") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -7 5) (("2" (LEMMA "pos_up_in_pos_over") (("2" (REPLACE -9 -2 RL) (("2" (REPLACE -9 2 RL) (("2" (HIDE -9) (("2" (EXPAND <= -2) (("2" (SKOSIMP) (("2" (INST -1 "#(p)" "rest(x)" "p" "p1!1") (("2" (EXPAND "#" -1 1) (("2" (EXPAND "PP?" -1 1) (("2" (REWRITE "rest_of_pp_is_pp") (("2" (PROP) (("1" (EXPAND* "member_seq" "finseq_appl") NIL NIL) ("2" (REWRITE "empty_0" -1) (("2" (REPLACES -1) (("2" (REWRITE "seq_o_empty" -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (EXPAND* "member_seq" "finseq_appl") (("3" (INST 1 0) NIL NIL)) NIL)) NIL) ("4" (EXPAND "rest" 1) (("4" (EXPAND* "^" "min" "empty_seq") (("4" (LIFT-IF) (("4" (ASSERT) (("4" (EXPAND* "member_seq" "finseq_appl") (("4" (INST 1 "j!1-1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE 2) (("2" (EXPAND "SPP?") (("2" (FLATTEN) (("2" (REWRITE "complement_pos_is_pp") (("2" (EXPAND* "SP?" "finseq_appl") (("2" (SKEEP) (("2" (LEMMA "complement_pos_character") (("2" (INST -1 "fsp2" "p" "complement_pos(p, fsp2)`seq(i)") (("2" (ASSERT) (("2" (PROP) (("1" (SKOSIMP) (("1" (INST -3 "i!1") (("1" (REWRITE "pos_subterm_ax") NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (LEMMA "pos_over_character") (("3" (INST -1 "#(p)" "fsp2") (("3" (EXPAND "#" -1 1) (("3" (EXPAND "PP?" -1 1) (("3" (EXPAND "SPP?") (("3" (FLATTEN) (("3" (ASSERT) (("3" (EXPAND* "member_seq" "finseq_appl") (("3" (SKOSIMP) (("3" (INST -1 "i!1") (("3" (REPLACE -6 -1 RL) (("3" (HIDE -6) (("3" (SPLIT) (("1" (EXPAND "parallel_reduction_fix?") (("1" (SKOSIMP) (("1" (REPLACES -7) (("1" (REWRITE "replace_par_pos_preservs_pos") (("1" (EXPAND "SPP?") (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") NIL NIL)) NIL) ("2" (EXPAND "sigma_rhs" 1) (("2" (EXPAND "empty_seq") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (LEMMA "replace_par_pos_preservs_pp") (("2" (EXPAND "finseq_appl") (("2" (EXPAND* "parallel_reduction_fix?") (("2" (SKOSIMP) (("2" (REPLACES -8) (("2" (INST -1 "fsp2" "sigma_rhs(fss!1, fse!1)" "t") (("2" (EXPAND "SPP?") (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 "j!1") (("2" (LEMMA "closed_positions") (("2" (INST -1 "p" "fsp2`seq(j!1)" "replace_par_pos(t, fsp2, sigma_rhs(fss!1, fse!1))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (EXPAND "SPP?") (("4" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (EXPAND* "#" "PP?" "finseq_appl") NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|divergence_in_Pos_Over_aux-1| |nil| 3573982917 ("" (MEASURE-INDUCT "fsp2`length" FSP2) (("1" (SKEEP) (("1" (SKEEP) (("1" (CASE "x`length=0") (("1" (HIDE -2) (("1" (EXPAND COMPLEMENT_POS) (("1" (EXPAND EMPTY_SEQ) (("1" (ASSERT) (("1" (EXPAND PARALLEL_REDUCTION_FIX?) (("1" (INST 1 EMPTY_SEQ EMPTY_SEQ) (("1" (EXPAND EMPTY_SEQ) (("1" (SKOSIMP) (("1" (EXPAND REPLACE_PAR_POS) (("1" (ASSERT) (("1" (EXPAND SUBTERMSOF 1) (("1" (EXPAND SIGMA_LHS 1) (("1" (EXPAND EMPTY_SEQ) (("1" (DECOMPOSE-EQUALITY 1) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "subset?") (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (EXPAND MEMBER) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (TYPEPRED KK) (("2" (HIDE (-2 1)) (("2" (EXPAND EMPTY_SEQ) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PARALLEL_REDUCTION_FIX? -3) (("2" (SKOSIMP) (("2" (EXPAND* REPLACE_PAR_POS FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -1 "rest(x)") (("2" (REWRITE LENGTH_REST) (("2" (INST -1 E P "replaceTerm(t, sigma_rhs(fss!1, fse!1)`seq(0),
                                                     x`seq(0))" T2) (("2" (EXPAND SPP?) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (FLATTEN) (("2" (PROP) (("1" (EXPAND COMPLEMENT_POS 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND PARALLEL_REDUCTION_FIX?) (("1" (SKOSIMP) (("1" (INST 1 "add_first(fse!1`seq(0), fse!2)" "add_first(fss!1`seq(0), fss!2)") (("1" (EXPAND ADD_FIRST 1 (1 2 3 4)) (("1" (EXPAND INSERT?) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND SUBTERMSOF 1) (("1" (EXPAND SIGMA_LHS 1) (("1" (EXPAND FINSEQ_APPL) (("1" (DECOMPOSE-EQUALITY) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND SUBTERMSOF -11) (("1" (EXPAND SIGMA_LHS -11) (("1" (EXPAND FINSEQ_APPL) (("1" (DECOMPOSE-EQUALITY -11) (("1" (INST -1 0) (("1" (TYPEPRED "choose(complement_pos_set(<=, o)(p, x`seq(0)))") (("1" (EXPAND COMPLEMENT_POS_SET -1 1) (("1" (EXPAND EMPTYSET) (("1" (PROP) (("1" (REPLACE -3 2 RL) (("1" (LEMMA POS_SUBTERM) (("1" (INST -1 P "choose(complement_pos_set(<=, o)(p, x`seq(0)))" T) (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (INST -12 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SP? FINSEQ_APPL) (("2" (INST -10 X1!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA COMPLEMENT_POS_CHARACTER) (("2" (INST -1 "rest(x)" P "complement_pos(p, rest(x))`seq(x!1 - 1)") (("1" (EXPAND "seq2set") (("1" (EXPAND "finseq_appl") (("1" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (EXPAND REST -1) (("1" (EXPAND REST -2 1) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND SUBTERMSOF -6) (("1" (EXPAND SIGMA_LHS -6) (("1" (EXPAND FINSEQ_APPL) (("1" (DECOMPOSE-EQUALITY -6) (("1" (INST -1 "x!1 - 1") (("1" (REPLACE -1 6 RL) (("1" (HIDE -1 -7) (("1" (LEMMA POS_SUBTERM) (("1" (INST-CP -1 P "complement_pos(p, rest(x))`seq(x!1 - 1)" "replaceTerm(t,
                                                                                       sigma_rhs(fss!1, fse!1)`seq(0),
                                                                                       x`seq(0))") (("1" (PROP) (("1" (INST -2 P "complement_pos(p, rest(x))`seq(x!1 - 1)" T) (("1" (PROP) (("1" (REPLACE -1 6 RL) (("1" (REPLACE -2 6 RL) (("1" (HIDE -1 -2) (("1" (REPLACE -1 6 RL) (("1" (LEMMA REPLACE_PERSISTENCE) (("1" (INST -1 "x`seq(0)" "x`seq(1+i!1)" T "sigma_rhs(fss!1, fse!1)`seq(0)") (("1" (EXPAND* SP? PP? FINSEQ_APPL) (("1" (INST-CP -8 1+I!1) (("1" (INST -8 0) (("1" (ASSERT) (("1" (INST -6 0 1+I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SP? FINSEQ_APPL) (("2" (INST -8 1+I!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA REPLACE_PRESERV_PARALLEL_POS) (("2" (INST -1 "x`seq(0)" "x`seq(1+i!1)" T "sigma_rhs(fss!1, fse!1)`seq(0)") (("2" (EXPAND* SP? PP? FINSEQ_APPL) (("2" (INST-CP -9 1+I!1) (("2" (INST -9 0) (("2" (ASSERT) (("2" (INST -7 0 1+I!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -8 -9 -15) (("2" (REWRITE POS_SUBTERM_AX) (("2" (HIDE 2) (("2" (LEMMA COMPLEMENT_POS_CHARACTER) (("2" (INST -1 "rest(x)" P "complement_pos(p, rest(x))`seq(x1!1)") (("2" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED I!3) (("1" (EXPAND REST -1) (("1" (EXPAND REST -2 1) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (REPLACE -2 1 RL) (("1" (EXPAND* SP? PP? FINSEQ_APPL) (("1" (REWRITE REPLACE_PRESERV_PARALLEL_POS) (("1" (INST -11 1+I!3) NIL NIL) ("2" (INST -11 0) NIL NIL) ("3" (INST -10 0 1+I!3) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2 4)) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE-ALL-BUT (-2 -3 1)) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (ASSERT) NIL NIL)) NIL) ("4" (SKEEP) (("4" (ASSERT) NIL NIL)) NIL) ("5" (SKEEP) NIL NIL) ("6" (SKEEP) NIL NIL) ("7" (SKEEP) (("7" (HIDE -4 -5 3) (("7" (LEMMA COMPLEMENT_POS_CHARACTER) (("7" (INST -1 "rest(x)" P "complement_pos(p, rest(x))`seq(i_1 - 1)") (("1" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (EXPAND REST -1) (("1" (EXPAND REST -2 1) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (INST -7 1+I!1) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2 4)) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("8" (SKEEP) (("8" (ASSERT) NIL NIL)) NIL) ("9" (SKOSIMP) (("9" (TYPEPRED "choose(complement_pos_set(<=, o)(p, x`seq(0)))") (("9" (EXPAND COMPLEMENT_POS_SET -1 1) (("9" (EXPAND EMPTYSET) (("9" (PROP) (("9" (HIDE -7 -8 3) (("9" (EXPAND* SP? FINSEQ_APPL) (("9" (INST -8 0) (("9" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND REPLACE_PAR_POS 1) (("2" (REWRITE SIGMA_RHS_REST) (("1" (REWRITE REST_ADD_FIRST) (("1" (REWRITE REST_ADD_FIRST) (("1" (REWRITE REST_ADD_FIRST) (("1" (EXPAND FINSEQ_APPL) (("1" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("1" (EXPAND SIGMA_RHS 1 1) (("1" (EXPAND FINSEQ_APPL) (("1" (EXPAND SIGMA_RHS -5 1) (("1" (EXPAND FINSEQ_APPL) (("1" (TYPEPRED "choose(complement_pos_set(<=, o)(p, x`seq(0)))") (("1" (EXPAND COMPLEMENT_POS_SET -1 1) (("1" (EXPAND EMPTYSET) (("1" (PROP) (("1" (REPLACE -2 -7) (("1" (REWRITE REPLACE_DISTRIBUTIVITY -7) (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (INST -9 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND ADD_FIRST 1) (("2" (EXPAND INSERT?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED (FSE!1 FSE!2)) (("2" (EXPAND* ADD_FIRST INSERT? FINSEQ_APPL) (("2" (HIDE-ALL-BUT (-1 -2 1 2)) (("2" (EXPAND "subset?") (("2" (EXPAND "subset?") (("2" (SKOSIMP) (("2" (EXPAND MEMBER) (("2" (EXPAND SEQ2SET -3) (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (LIFT-IF) (("2" (PROP) (("1" (HIDE -4) (("1" (INST?) (("1" (ASSERT) (("1" (EXPAND "seq2set") (("1" (EXPAND "finseq_appl") (("1" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (INST?) (("2" (ASSERT) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND PARALLEL_REDUCTION_FIX?) (("2" (SKOSIMP) (("2" (INST 2 FSE!2 FSS!2) (("2" (ASSERT) (("2" (SPLIT) (("1" (HIDE -4 -10) (("1" (EXPAND* NONEMPTY? EMPTY? MEMBER) (("1" (EXPAND SUBTERMSOF (-4 1)) (("1" (EXPAND SIGMA_LHS (-4 1)) (("1" (EXPAND* EMPTY_SEQ FINSEQ_APPL) (("1" (LIFT-IF 1) (("1" (PROP) (("1" (DECOMPOSE-EQUALITY 1) (("1" (DECOMPOSE-EQUALITY 1) (("1" (SKEEP) NIL NIL)) NIL) ("2" (SKEEP) NIL NIL)) NIL) ("2" (LIFT-IF) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY 2) (("1" (LEMMA COMPLEMENT_POS_CHARACTER) (("1" (INST -1 "rest(x)" P "complement_pos(p, rest(x))`seq(x!1)") (("1" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (EXPAND REST -1) (("1" (EXPAND REST -2 1) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (DECOMPOSE-EQUALITY -6) (("1" (INST -1 X!1) (("1" (REPLACE -1 5 RL) (("1" (HIDE -1) (("1" (EXPAND* SP? PP? FINSEQ_APPL) (("1" (REWRITE REPLACE_PERSISTENCE) (("1" (INST -7 0) NIL NIL) ("2" (HIDE -6) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 " #(p)" X) (("2" (EXPAND "#" -1 1) (("2" (EXPAND PP? -1 1) (("2" (INST -1 I!2) (("2" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REVEAL -3) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE J!1=0) (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -3 -14 1)) (("1" (REPLACE -3 -2 RL) (("1" (REPLACE -3 1 RL) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 0 J!1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 2)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 2 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -14 -3 RL) (("2" (REPLACE -14 1 RL) (("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -6 P1!1) (("2" (EXPAND COMPLEMENT_POS_SET 8) (("2" (EXPAND EMPTYSET) (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 P1!1) NIL NIL)) NIL) ("2" (LEMMA COMPLEMENT_POS_EMPTY) (("2" (INST -1 "rest(x)" P) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -3 1)) (("2" (LEMMA SEQ_FIRST_REST[POSITION]) (("2" (INST -1 X) (("2" (ASSERT) (("2" (EXPAND* FIRST FINSEQ_APPL) (("2" (REPLACES -2) (("2" (REPLACE -1 1 RL) (("2" (EXPAND* PP? FINSEQ_APPL PARALLEL) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SP? PP? FINSEQ_APPL) (("2" (INST-CP -10 1+I!1) (("2" (LEMMA REPLACE_PERSISTENCE) (("2" (INST -1 "x`seq(0)" P T "sigma_rhs(fss!1, fse!1)`seq(0)") (("2" (INST -11 0) (("2" (ASSERT) (("2" (HIDE -8 -14 2 5) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 "#(p)" X) (("2" (EXPAND "#" -1 1) (("2" (EXPAND PP? -1 1) (("2" (INST -1 I!3) (("2" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT? PP? FINSEQ_APPL) (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -15 -1 RL) (("2" (REPLACE -15 1 RL) (("2" (HIDE -15) (("2" (EXPAND PARALLEL 2) (("2" (SPLIT) (("1" (CASE "j!1 = 0") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -2 1)) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -10 0 J!1) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 7)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 7 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -7 P1!1) (("2" (EXPAND COMPLEMENT_POS_SET 5) (("2" (EXPAND EMPTYSET) (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 P1!1) NIL NIL)) NIL) ("2" (LEMMA COMPLEMENT_POS_EMPTY) (("2" (INST -1 "rest(x)" P) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -10 1)) (("2" (LEMMA SEQ_FIRST_REST[POSITION]) (("2" (INST -1 X) (("2" (ASSERT) (("2" (EXPAND* FIRST FINSEQ_APPL) (("2" (REPLACES -2) (("2" (REPLACE -1 1 RL) (("2" (EXPAND* PP? FINSEQ_APPL) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND* SP? PP? FINSEQ_APPL) (("3" (HIDE -8 4) (("3" (REWRITE REPLACE_PRESERV_PARALLEL_POS) (("1" (INST -9 0) NIL NIL) ("2" (HIDE 2) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP*) (("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 "#(p)" X) (("2" (EXPAND "#" -1 1) (("2" (EXPAND PP? -1 1) (("2" (INST -1 I!3) (("2" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT? PP? FINSEQ_APPL) (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -15 -1 RL) (("2" (REPLACE -15 1 RL) (("2" (HIDE -15) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE "j!1=0") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -2 1)) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -2 -10 1)) (("2" (INST -3 0 J!1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (EXPAND <=) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 2 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -7 P1!1) (("2" (EXPAND* COMPLEMENT_POS_SET EMPTYSET) (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 P1!1) NIL NIL)) NIL) ("2" (LEMMA COMPLEMENT_POS_EMPTY) (("2" (INST -1 "rest(x)" P) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -10 1)) (("2" (REPLACES -1) (("2" (LEMMA SEQ_FIRST_REST[POSITION]) (("2" (INST -1 X) (("2" (ASSERT) (("2" (EXPAND* FIRST FINSEQ_APPL) (("2" (REPLACE -1 1 RL) (("2" (EXPAND* PP? FINSEQ_APPL) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND* SP? FINSEQ_APPL) (("4" (INST -10 0) NIL NIL)) NIL) ("5" (EXPAND SIGMA_RHS 1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE-ALL-BUT (-3 1)) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (LEMMA COMPLEMENT_POS_CHARACTER) (("3" (INST -1 "rest(x)" P "complement_pos(p, rest(x))`seq(i)") (("3" (PROP) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (EXPAND REST -1) (("1" (EXPAND REST -2 1) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (INST -8 1+I!1) (("1" (HIDE-ALL-BUT (-1 -8 5)) (("1" (REPLACES -1) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE REPLACE_PERSISTENCE -4) (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (INST -6 0) NIL NIL)) NIL) ("2" (HIDE -3 -4 -10 2) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 "#(p)" X) (("2" (EXPAND "#" -1 1) (("2" (EXPAND PP? -1 1) (("2" (INST -1 I!1) (("2" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT? PP? FINSEQ_APPL) (("1" (INST -1 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -10 -1 RL) (("2" (REPLACE -10 1 RL) (("2" (HIDE -10) (("2" (EXPAND PARALLEL) (("2" (SPLIT) (("1" (CASE J!1=0) (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT (-1 -2 1)) (("1" (EXPAND <=) (("1" (SKOSIMP*) (("1" (REPLACES -2) (("1" (CASE "p1!2`length=0") (("1" (REWRITE EMPTY_0) (("1" (REPLACES -1) (("1" (REWRITE SEQ_O_EMPTY) NIL NIL)) NIL)) NIL) ("2" (EXPAND O -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* PP? FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -5 0 J!1) (("2" (EXPAND PARALLEL) (("2" (FLATTEN) (("2" (EXPAND <= (-1 -2 5)) (("2" (SKOSIMP*) (("2" (REPLACES -1) (("2" (INST 5 "p1!1 o p1!2") (("2" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* NONEMPTY? EMPTY? MEMBER COMPLEMENT_POS_SET EMPTYSET) (("2" (EXPAND <= -1) (("2" (SKOSIMP) (("2" (INST -3 P1!1) (("2" (PROP) (("1" (EXPAND <= 1) (("1" (INST 1 P1!1) NIL NIL)) NIL) ("2" (CASE "j!1=0") (("1" (ASSERT) NIL NIL) ("2" (EXPAND* PP? FINSEQ_APPL) (("2" (ASSERT) (("2" (INST -6 0 J!1) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND REST 1) (("2" (EXPAND* ^ MIN EMPTY_SEQ) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND SP?) (("1" (SKEEP) NIL NIL)) NIL) ("2" (EXPAND SP?) (("2" (SKEEP) NIL NIL)) NIL) ("3" (EXPAND* SP? PP? FINSEQ_APPL) (("3" (ASSERT) (("3" (SKOSIMP) (("3" (REWRITE REPLACE_PRESERV_PARALLEL_POS) (("1" (INST -2 1+I!1) NIL NIL) ("2" (INST -2 0) NIL NIL) ("3" (INST -1 0 1+I!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 3) (("3" (EXPAND PARALLEL_REDUCTION_FIX?) (("3" (INST 1 "rest(fse!1)" "rest(fss!1)") (("1" (PROP) (("1" (HIDE-ALL-BUT (-3 1)) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT (-4 1)) (("2" (GRIND) NIL NIL)) NIL) ("3" (EXPAND REST 1) (("3" (EXPAND* ^ MIN EMPTY_SEQ) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (LIFT-IF) (("3" (ASSERT) (("3" (PROP) (("1" (EXPAND SUBTERMSOF 1) (("1" (EXPAND SIGMA_LHS 1) (("1" (EXPAND EMPTY_SEQ) (("1" (DECOMPOSE-EQUALITY 1) (("1" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SUBTERMSOF 1) (("2" (EXPAND SIGMA_LHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (DECOMPOSE-EQUALITY 1) (("2" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND SUBTERMSOF 3) (("3" (EXPAND SIGMA_LHS 3) (("3" (EXPAND EMPTY_SEQ) (("3" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL)) NIL)) NIL) ("4" (EXPAND SUBTERMSOF 1) (("4" (EXPAND SIGMA_LHS 1) (("4" (EXPAND EMPTY_SEQ) (("4" (DECOMPOSE-EQUALITY 1) (("4" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND SUBTERMSOF 1) (("5" (EXPAND SIGMA_LHS 1) (("5" (EXPAND EMPTY_SEQ) (("5" (DECOMPOSE-EQUALITY 1) (("5" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("6" (EXPAND SUBTERMSOF 3) (("6" (EXPAND SIGMA_LHS 3) (("6" (EXPAND EMPTY_SEQ) (("6" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL)) NIL)) NIL) ("7" (ASSERT) NIL NIL) ("8" (EXPAND SUBTERMSOF 1) (("8" (EXPAND SIGMA_LHS 1) (("8" (EXPAND EMPTY_SEQ) (("8" (DECOMPOSE-EQUALITY 1) (("8" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("9" (EXPAND SUBTERMSOF 1) (("9" (EXPAND SIGMA_LHS 1) (("9" (EXPAND EMPTY_SEQ) (("9" (DECOMPOSE-EQUALITY 1) (("9" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("10" (EXPAND SUBTERMSOF 3) (("10" (EXPAND SIGMA_LHS 3) (("10" (EXPAND EMPTY_SEQ) (("10" (DECOMPOSE-EQUALITY 3) NIL NIL)) NIL)) NIL)) NIL) ("11" (EXPAND SUBTERMSOF 1) (("11" (EXPAND SIGMA_LHS 1) (("11" (EXPAND EMPTY_SEQ) (("11" (DECOMPOSE-EQUALITY 1) (("11" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("12" (EXPAND SUBTERMSOF 1) (("12" (EXPAND SIGMA_LHS 1) (("12" (EXPAND EMPTY_SEQ) (("12" (DECOMPOSE-EQUALITY 1) (("12" (SKEEP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("13" (ASSERT) NIL NIL) ("14" (ASSERT) NIL NIL) ("15" (EXPAND* SUBTERMSOF SIGMA_LHS) (("15" (EXPAND* EMPTY_SEQ FINSEQ_APPL) (("15" (DECOMPOSE-EQUALITY 3) (("1" (DECOMPOSE-EQUALITY 1) (("1" (DECOMPOSE-EQUALITY -5) (("1" (INST -1 "1+x!1") (("1" (EXPAND* SP? PP? FINSEQ_APPL) (("1" (REWRITE REPLACE_PERSISTENCE) (("1" (INST -3 0) NIL NIL) ("2" (INST -3 "1+x!1") NIL NIL) ("3" (INST -2 0 "1+x!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SP? FINSEQ_APPL) (("2" (INST -4 X1!1) NIL NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND* SP? PP? FINSEQ_APPL) (("3" (REWRITE REPLACE_PRESERV_PARALLEL_POS) (("1" (INST -2 "1+i") NIL NIL) ("2" (INST -2 0) NIL NIL) ("3" (INST -1 0 "1+i") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (SKEEP) (("3" (EXPAND* SP? PP? FINSEQ_APPL) (("3" (REWRITE REPLACE_PRESERV_PARALLEL_POS) (("1" (INST -2 "1+i") NIL NIL) ("2" (INST -2 0) NIL NIL) ("3" (INST -1 0 "1+i") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (REWRITE SIGMA_RHS_REST) NIL NIL)) NIL) ("2" (TYPEPRED FSE!1) (("2" (EXPAND REST 1) (("2" (HIDE-ALL-BUT (-1 1 2)) (("2" (EXPAND "subset?") (("2" (EXPAND "subset?") (("2" (SKEEP) (("2" (EXPAND "member") (("2" (INST?) (("2" (ASSERT) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (EXPAND "^") (("2" (LIFT-IF) (("2" (PROP) (("1" (TYPEPRED KK) (("1" (GRIND) NIL NIL)) NIL) ("2" (TYPEPRED KK) (("2" (GRIND) NIL NIL)) NIL) ("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("4" (SKOSIMP) (("4" (LEMMA POS_OVER_CHARACTER) (("4" (INST -1 "#(p)" X) (("4" (EXPAND "#" -1 1) (("4" (EXPAND PP? -1 1) (("4" (ASSERT) (("4" (INST -1 I!1) (("4" (SPLIT) (("1" (EXPAND* ADD_FIRST INSERT? PP? FINSEQ_APPL) (("1" (HIDE -2) (("1" (INST -1 1 0) (("1" (ASSERT) (("1" (REWRITE REPLACE_PRESERV_PARALLEL_POS) (("1" (EXPAND* SP? FINSEQ_APPL) (("1" (INST -2 0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (REPLACE -9 -1 RL) (("2" (REPLACE -9 1 RL) (("2" (HIDE -9) (("2" (LEMMA REPLACE_PRESERV_PARALLEL_POS) (("2" (INST -1 "x`seq(0)" "x`seq(j!1)" T "sigma_rhs(fss!1, fse!1)`seq(0)") (("2" (EXPAND* SP? PP? FINSEQ_APPL) (("2" (INST-CP -4 J!1) (("2" (INST -4 0) (("2" (CASE "j!1=0") (("1" (ASSERT) (("1" (HIDE -2 -4) (("1" (REPLACES -1) (("1" (LEMMA REPLACE_PRESERV_POS) (("1" (INST -1 "x`seq(0)" T "sigma_rhs(fss!1, fse!1)`seq(0)") (("1" (ASSERT) (("1" (LEMMA POS_AX) (("1" (EXPAND <= -3) (("1" (SKOSIMP) (("1" (INST -1 P P1!1 "replaceTerm(t, sigma_rhs(fss!1, fse!1)`seq(0), x`seq(0))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (PROP) (("1" (EXPAND <= -2) (("1" (SKOSIMP) (("1" (LEMMA POS_AX) (("1" (INST -1 P P1!1 "replaceTerm(t, sigma_rhs(fss!1, fse!1)`seq(0), x`seq(0))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 0 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("5" (SKOSIMP) (("5" (LEMMA POS_OVER_CHARACTER) (("5" (INST -1 "#(p)" X) (("5" (EXPAND "#" -1 1) (("5" (EXPAND PP? -1 1) (("5" (ASSERT) (("5" (INST -1 I!1) (("5" (SPLIT) (("1" (LEMMA PARALLEL_POS_IN_POS_OVER) (("1" (INST -1 "#(p)" "rest(x)" P) (("1" (EXPAND "#" -1 1) (("1" (EXPAND PP? -1 1) (("1" (REWRITE REST_OF_PP_IS_PP) (("1" (REPLACE -10 -2 RL) (("1" (PROP) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) NIL NIL) ("2" (EXPAND "#" 1) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 1 0) NIL NIL)) NIL)) NIL) ("3" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP) (("1" (EXPAND FINSEQ_APPL) (("1" (SKEEP) (("1" (TYPEPRED I) (("1" (EXPAND REST (-1 1)) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (EXPAND PP? -2) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -2 |2+I| 0) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE REST_OF_PP_IS_PP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (CASE J!1=0) (("1" (REPLACES -1) (("1" (REPLACE -9 -1 RL) (("1" (REPLACE -9 1 RL) (("1" (HIDE -9) (("1" (LEMMA PARALLEL_POS_IN_POS_OVER) (("1" (INST -1 "#(p)" "rest(x)" P) (("1" (EXPAND "#" -1 1) (("1" (EXPAND PP? -1 1) (("1" (REWRITE REST_OF_PP_IS_PP) (("1" (PROP) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) NIL NIL) ("2" (EXPAND "#" 1) (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 1 0) NIL NIL)) NIL)) NIL) ("3" (REWRITE ADD_FIRST_PARALLEL_POS_TO_PP_IS_PP) (("1" (EXPAND FINSEQ_APPL) (("1" (SKEEP) (("1" (TYPEPRED I) (("1" (EXPAND REST (-1 1)) (("1" (EXPAND* ^ MIN EMPTY_SEQ) (("1" (LIFT-IF) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE 6) (("1" (EXPAND PARALLEL) (("1" (SPLIT) (("1" (EXPAND* PP? FINSEQ_APPL) (("1" (ASSERT) (("1" (INST -4 0 |1+I|) (("1" (ASSERT) (("1" (EXPAND PARALLEL) (("1" (FLATTEN) (("1" (EXPAND <= (-1 -3 9)) (("1" (SKOSIMP*) (("1" (REPLACES -1) (("1" (INST 9 "p1!1 o p1!2") (("1" (REWRITE O_ASSOC) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_UP_IN_POS_OVER) (("2" (EXPAND <= -2) (("2" (SKOSIMP) (("2" (INST -1 "#(p)" "rest(x)" P P1!1) (("2" (EXPAND "#" -1 1) (("2" (EXPAND PP? -1 1) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (PROP) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) NIL NIL) ("2" (REWRITE EMPTY_0 -1) (("2" (REPLACES -1) (("2" (REWRITE SEQ_O_EMPTY -1) (("2" (REPLACE -1 -3 RL) (("2" (EXPAND* PP? FINSEQ_APPL PARALLEL) (("2" (ASSERT) (("2" (INST -4 0 |1+I|) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("3" (INST 1 0) NIL NIL)) NIL)) NIL) ("4" (EXPAND REST 1) (("4" (EXPAND* ^ MIN EMPTY_SEQ) (("4" (LIFT-IF) (("4" (ASSERT) (("4" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("4" (INST 1 I) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REWRITE REST_OF_PP_IS_PP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -7 5) (("2" (LEMMA POS_UP_IN_POS_OVER) (("2" (REPLACE -9 -2 RL) (("2" (REPLACE -9 2 RL) (("2" (HIDE -9) (("2" (EXPAND <= -2) (("2" (SKOSIMP) (("2" (INST -1 "#(p)" "rest(x)" P P1!1) (("2" (EXPAND "#" -1 1) (("2" (EXPAND PP? -1 1) (("2" (REWRITE REST_OF_PP_IS_PP) (("2" (PROP) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) NIL NIL) ("2" (REWRITE EMPTY_0 -1) (("2" (REPLACES -1) (("2" (REWRITE SEQ_O_EMPTY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("3" (INST 1 0) NIL NIL)) NIL)) NIL) ("4" (EXPAND REST 1) (("4" (EXPAND* ^ MIN EMPTY_SEQ) (("4" (LIFT-IF) (("4" (ASSERT) (("4" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("4" (INST 1 J!1-1) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (HIDE 2) (("2" (EXPAND SPP?) (("2" (FLATTEN) (("2" (REWRITE COMPLEMENT_POS_IS_PP) (("2" (EXPAND* SP? FINSEQ_APPL) (("2" (SKEEP) (("2" (LEMMA COMPLEMENT_POS_CHARACTER) (("2" (INST -1 FSP2 P "complement_pos(p, fsp2)`seq(i)") (("2" (ASSERT) (("2" (PROP) (("1" (SKOSIMP) (("1" (INST -3 I!1) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (SKEEP) (("3" (LEMMA POS_OVER_CHARACTER) (("3" (INST -1 "#(p)" FSP2) (("3" (EXPAND "#" -1 1) (("3" (EXPAND PP? -1 1) (("3" (EXPAND SPP?) (("3" (FLATTEN) (("3" (ASSERT) (("3" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("3" (SKOSIMP) (("3" (INST -1 I!1) (("3" (REPLACE -6 -1 RL) (("3" (HIDE -6) (("3" (SPLIT) (("1" (EXPAND PARALLEL_REDUCTION_FIX?) (("1" (SKOSIMP) (("1" (REPLACES -7) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND* PARALLEL_REDUCTION_FIX?) (("2" (SKOSIMP) (("2" (REPLACES -8) (("2" (INST -1 FSP2 "sigma_rhs(fss!1, fse!1)" T) (("2" (EXPAND SPP?) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P "fsp2`seq(j!1)" "replace_par_pos(t, fsp2, sigma_rhs(fss!1, fse!1))") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (SKEEP) (("4" (EXPAND SPP?) (("4" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL) ("5" (HIDE 2) (("5" (SKEEP) (("5" (EXPAND* "#" PP? FINSEQ_APPL) NIL NIL)) NIL)) NIL)) NIL) ((|replace_par_pos_preservs_pos| FORMULA-DECL NIL |orthogonality_basis| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|closed_positions| FORMULA-DECL NIL |positions| NIL) (|complement_pos_is_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (E SKOLEM-CONST-DECL "set[rewrite_rule[variable, symbol, arity]]" |orthogonality| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|sigma_lhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|t| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (|p| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|epsilon| CONST-DECL "T" |epsilons| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|subtermsOF| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|replace_par_pos| DEF-DECL "term" |orthogonality_basis| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|length_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|add_first_parallel_pos_to_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|i| SKOLEM-CONST-DECL "below[length(rest(x))]" |orthogonality| NIL) (|parallel_pos_in_Pos_Over| FORMULA-DECL NIL |orthogonality| NIL) (|pos_up_in_Pos_Over| FORMULA-DECL NIL |orthogonality| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|replace_preserv_pos| FORMULA-DECL NIL |replacement| NIL) (|pos_ax| FORMULA-DECL NIL |positions| NIL) (|fss!1| SKOLEM-CONST-DECL "finseq[Sub[variable, symbol, arity]]" |orthogonality| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|rest_add_first| FORMULA-DECL NIL |seq_extras| |structures|) (|replace_distributivity| FORMULA-DECL NIL |replacement| NIL) (|rhs| CONST-DECL "term" |rewrite_rules| NIL) (|sigma_rhs_rest| FORMULA-DECL NIL |orthogonality_basis| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|lhs| CONST-DECL "term" |rewrite_rules| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|fss!2| SKOLEM-CONST-DECL "finseq[Sub[variable, symbol, arity]]" |orthogonality| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|x| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|choose| CONST-DECL "(p)" |sets| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|complement_pos_set| CONST-DECL "set[T]" |predicate_fseq2set| NIL) (<= CONST-DECL "bool" |positions| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|emptyset| CONST-DECL "set" |sets| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|pos_subterm| FORMULA-DECL NIL |subterm| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|x!1| SKOLEM-CONST-DECL "below[1 +
       length
         (complement_pos[variable, symbol, arity]
              (p, rest[position[variable, symbol, arity]](x)))]" |orthogonality| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|pos_subterm_ax| FORMULA-DECL NIL |subterm| NIL) (|replace_preserv_parallel_pos| FORMULA-DECL NIL |replacement| NIL) (|replace_persistence| FORMULA-DECL NIL |replacement| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|complement_pos_character| FORMULA-DECL NIL |orthogonality_basis| NIL) (|i_1| SKOLEM-CONST-DECL "below[1 +
       length
         (complement_pos[variable, symbol, arity]
              (p, rest[position[variable, symbol, arity]](x)))]" |orthogonality| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|fse!1| SKOLEM-CONST-DECL "{fse | subset?[rewrite_rule[variable, symbol, arity]](fse, E)}" |orthogonality| NIL) (|fse!2| SKOLEM-CONST-DECL "{fse | subset?[rewrite_rule[variable, symbol, arity]](fse, E)}" |orthogonality| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (|complement_pos_empty| FORMULA-DECL NIL |orthogonality_basis| NIL) (|seq_first_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|first| CONST-DECL "T" |seq_extras| |structures|) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|o_assoc| FORMULA-DECL NIL |finite_sequences| NIL) (|fss!2| SKOLEM-CONST-DECL "finseq[Sub[variable, symbol, arity]]" |orthogonality| NIL) (|empty?| CONST-DECL "bool" |sets| NIL) (|rest_of_PP_is_PP| FORMULA-DECL NIL |positions| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|replaceTerm| DEF-DECL "term" |replacement| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|complement_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality_basis| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (SPP TYPE-EQ-DECL NIL |positions| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|divergence_in_Pos_Over_TCC1| 0 (|divergence_in_Pos_Over_TCC1-4| "" 3885017126 ("" (SKOSIMP) (("" (SKOSIMP) (("" (EXPAND* "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (LEMMA "pos_over_is_sub_seq") (("" (INST -1 "fsp1!1" "fsp2!1") (("" (EXPAND "SPP?") (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* "subseq" "finseq_appl") (("" (INST -1 "i!1") (("" (EXPAND* "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (EXPAND "SP?" -8) (("" (EXPAND "finseq_appl") (("" (INST - "i!2") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t)")) (|divergence_in_Pos_Over_TCC1-3| "" 3803861373 ("" (SKOSIMP) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ FINSEQ_APPL) (("" (INST -1 I!1) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (EXPAND SP? -8) (("" (EXPAND FINSEQ_APPL) (("" (INST - I!2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (< CONST-DECL "bool" |reals| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t)")) (|divergence_in_Pos_Over_TCC1-2| "" 3756670475 ("" (SKOSIMP) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ FINSEQ_APPL) (("" (INST -1 I!1) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (EXPAND SP? -3) (("" (EXPAND FINSEQ_APPL) (("" (INST - I!2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t)")) (|divergence_in_Pos_Over_TCC1-1| |nil| 3573811506 ("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -2) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ FINSEQ_APPL) (("" (INST -1 I!1) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (EXPAND SP? -7) (("" (EXPAND FINSEQ_APPL) (("" (INST -7 I!2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t)"))) (|divergence_in_Pos_Over_TCC2| 0 (|divergence_in_Pos_Over_TCC2-4| "" 3885017207 ("" (SKOSIMP) (("" (SKEEP) (("" (LEMMA "pos_over_is_sub_seq") (("" (INST -1 "fsp1!1" "fsp2!1") (("" (EXPAND "SPP?") (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* "subseq" "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (INST -1 "i!1") (("" (SKOSIMP) (("" (EXPAND "parallel_reduction_fix?" -4) (("" (SKOSIMP) (("" (REPLACE -7 1) (("" (LEMMA "replace_par_pos_preservs_pp") (("" (INST -1 "fsp1!1" "sigma_rhs(fss!1, fse!1)" "t!1") (("" (EXPAND "SPP?") (("" (EXPAND "sigma_rhs" -1 1) (("" (EXPAND "empty_seq") (("" (EXPAND "finseq_appl") (("" (LIFT-IF) (("" (ASSERT) (("" (INST -1 "i!2") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)")) (|divergence_in_Pos_Over_TCC2-3| "" 3803862989 ("" (SKOSIMP) (("" (SKEEP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (INST -1 I!1) (("" (SKOSIMP) (("" (EXPAND PARALLEL_REDUCTION_FIX? -4) (("" (SKOSIMP) (("" (REPLACE -7 1) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP1!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SPP?) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND EMPTY_SEQ) (("" (EXPAND FINSEQ_APPL) (("" (LIFT-IF) (("" (ASSERT) (("" (INST -1 I!2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (< CONST-DECL "bool" |reals| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL)) SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)")) (|divergence_in_Pos_Over_TCC2-2| "" 3756670610 ("" (SKOSIMP) (("" (SKEEP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (INST -1 I!1) (("" (SKOSIMP) (("" (EXPAND PARALLEL_REDUCTION_FIX? -6) (("" (SKOSIMP) (("" (REPLACE -9 1) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP1!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SPP?) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND EMPTY_SEQ) (("" (EXPAND FINSEQ_APPL) (("" (LIFT-IF) (("" (ASSERT) (("" (INST -1 I!2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)")) (|divergence_in_Pos_Over_TCC2-1| |nil| 3573811506 ("" (SKOSIMP) (("" (SKEEP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (INST -1 I!1) (("" (SKOSIMP) (("" (EXPAND PARALLEL_REDUCTION_FIX? -4) (("" (SKOSIMP) (("" (REPLACE -7 1) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP1!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SPP?) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND EMPTY_SEQ) (("" (EXPAND FINSEQ_APPL) (("" (LIFT-IF) (("" (ASSERT) (("" (INST -1 I!2) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)"))) (|divergence_in_Pos_Over_TCC3| 0 (|divergence_in_Pos_Over_TCC3-4| "" 3885017346 ("" (SKOSIMP) (("" (SKEEP) (("" (EXPAND "parallel_reduction_fix?" -2) (("" (SKOSIMP) (("" (EXPAND* "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (LEMMA "pos_over_character") (("" (INST -1 "fsp1!1" "fsp2!1") (("" (EXPAND "SPP?") (("" (FLATTEN) (("" (ASSERT) (("" (INST -1 "i!1") (("" (REPLACE -2 -1 RL) (("" (HIDE -2) (("" (SPLIT) (("1" (REPLACE -5 1) (("1" (REWRITE "replace_par_pos_preservs_pos") (("1" (EXPAND "SPP?") (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") NIL NIL)) NIL) ("2" (EXPAND "sigma_rhs" 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (LEMMA "replace_par_pos_preservs_pp") (("2" (INST -1 "fsp2!1" "sigma_rhs(fss!1, fse!1)" "t!1") (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND "SPP?") (("2" (EXPAND "finseq_appl") (("2" (INST -1 "j!1") (("2" (REPLACE -6 -1 RL) (("2" (LEMMA "closed_positions") (("2" (INST -1 "p!1" "fsp2!1`seq(j!1)" "t2!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|divergence_in_Pos_Over_TCC3-3| "" 3803866235 ("" (SKOSIMP) (("" (SKEEP) (("" (EXPAND PARALLEL_REDUCTION_FIX? -2) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_CHARACTER) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (INST -1 I!1) (("" (REPLACE -2 -1 RL) (("" (HIDE -2) (("" (SPLIT) (("1" (REPLACE -5 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND SPP?) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 J!1) (("2" (REPLACE -6 -1 RL) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P!1 "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|closed_positions| FORMULA-DECL NIL |positions| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|replace_par_pos_preservs_pos| FORMULA-DECL NIL |orthogonality_basis| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL)) SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|divergence_in_Pos_Over_TCC3-2| "" 3756671172 ("" (SKOSIMP) (("" (SKEEP) (("" (EXPAND PARALLEL_REDUCTION_FIX? -4) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_CHARACTER) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (INST -1 I!1) (("" (REPLACE -11 -1 RL) (("" (HIDE -11) (("" (SPLIT) (("1" (REPLACE -10 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND SPP?) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 J!1) (("2" (REPLACE -11 -1 RL) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P!1 "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|divergence_in_Pos_Over_TCC3-1| |nil| 3573980925 ("" (SKOSIMP) (("" (SKEEP) (("" (EXPAND PARALLEL_REDUCTION_FIX? -2) (("" (SKOSIMP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_CHARACTER) (("" (INST -1 FSP1!1 FSP2!1) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (INST -1 I!1) (("" (REPLACE -2 -1 RL) (("" (HIDE -2) (("" (SPLIT) (("1" (REPLACE -5 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) NIL NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND SPP?) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 J!1) (("2" (REPLACE -6 -1 RL) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 P!1 "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|divergence_in_Pos_Over| SUBTYPE "orthogonality.p" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)"))) (|divergence_in_Pos_Over| 0 (|divergence_in_Pos_Over-2| "" 3885087349 ("" (SKEEP) (("" (EXPAND* "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (LEMMA "pos_over_is_sub_seq") (("" (INST -1 "fsp1" "fsp2") (("" (EXPAND "SPP?") (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* "subseq" "finseq_appl") (("" (INST -1 "i!1") (("" (EXPAND* "member_seq" "finseq_appl") (("" (SKOSIMP) (("" (LEMMA "divergence_in_pos_over_aux") (("" (INST -1 "E" "fsp2" "p" "t" "t2") (("" (EXPAND "SPP?") (("" (PROP) (("1" (EXPAND "parallel_reduction_fix?" -7) (("1" (SKOSIMP -7) (("1" (INST 1 "fse!1`seq(i!2)" "fss!1`seq(i!2)") (("1" (SPLIT) (("1" (EXPAND "subtermsOF" -9) (("1" (EXPAND "sigma_lhs" -9) (("1" (LIFT-IF) (("1" (EXPAND* "empty_seq" "finseq_appl") (("1" (PROP) (("1" (HIDE -3) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 "i!2") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "SP?" -7) (("2" (EXPAND "finseq_appl") (("2" (INST -7 "x!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "replace_par_pos_subterm") (("2" (INST -1 "fsp1" "sigma_rhs(fss!1, fse!1)" "t") (("2" (EXPAND "SPP?") (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND "empty_seq") (("2" (ASSERT) (("2" (EXPAND "finseq_appl") (("2" (INST -1 "i!2") (("2" (REPLACE -11 -1 RL) (("2" (EXPAND "sigma_rhs" -1) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "parallel_reduction?" 1) (("3" (INST 1 "complement_pos(p, fsp2)") NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (TYPEPRED "fse!1") (("3" (HIDE-ALL-BUT (-1 1)) (("3" (EXPAND "subset?") (("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "seq2set") (("3" (EXPAND "finseq_appl") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "SP?" -3) (("2" (EXPAND "finseq_appl") (("2" (INST -3 "i!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA "pos_over_character") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (INST -1 "i!1") (("3" (REPLACE -9 -1 RL) (("3" (REPLACE -9 -2 RL) (("3" (HIDE -9) (("3" (SPLIT) (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (INST 1 0) (("1" (EXPAND "#") (("1" (EXPAND "Pos_Over" 1) (("1" (ASSERT) (("1" (EXPAND* "add_first" 1) (("1" (EXPAND "insert?") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "#") (("2" (EXPAND "Pos_Over" 1) (("2" (ASSERT) (("2" (EXPAND "add_first" 1) (("2" (EXPAND "insert?") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (EXPAND* "#" "Pos_Over") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* "add_first" "insert?" "member_seq" "finseq_appl") (("1" (INST 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND* "add_first" "insert?") (("2" (EXPAND "PP?" -1) (("2" (EXPAND "finseq_appl") (("2" (INST -1 0 "1+j!1") (("2" (ASSERT) (("2" (EXPAND "parallel") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "sub_pos_element") (("3" (EXPAND <= -2) (("3" (SKOSIMP) (("3" (INST -1 "fsp2" "p" "p1!1") (("3" (ASSERT) (("3" (SPLIT) (("1" (EXPAND "member_seq" 1) (("1" (EXPAND "finseq_appl") (("1" (INST 1 "j!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("2" (REWRITE "empty_0" -1) (("2" (REPLACES -1) (("2" (REWRITE "seq_o_empty") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|divergence_in_Pos_Over-1| |nil| 3573835906 ("" (SKEEP) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA POS_OVER_IS_SUB_SEQ) (("" (INST -1 FSP1 FSP2) (("" (EXPAND SPP?) (("" (FLATTEN) (("" (ASSERT) (("" (EXPAND* SUBSEQ FINSEQ_APPL) (("" (INST -1 I!1) (("" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("" (SKOSIMP) (("" (LEMMA DIVERGENCE_IN_POS_OVER_AUX) (("" (INST -1 E FSP2 P T T2) (("" (EXPAND SPP?) (("" (PROP) (("1" (EXPAND PARALLEL_REDUCTION_FIX? -7) (("1" (SKOSIMP -7) (("1" (INST 1 "fse!1`seq(i!2)" "fss!1`seq(i!2)") (("1" (SPLIT) (("1" (EXPAND SUBTERMSOF -9) (("1" (EXPAND SIGMA_LHS -9) (("1" (LIFT-IF) (("1" (EXPAND* EMPTY_SEQ FINSEQ_APPL) (("1" (PROP) (("1" (HIDE -3) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 I!2) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND SP? -7) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -7 X!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA REPLACE_PAR_POS_SUBTERM) (("2" (INST -1 FSP1 "sigma_rhs(fss!1, fse!1)" T) (("2" (EXPAND SPP?) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND EMPTY_SEQ) (("2" (ASSERT) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 I!2) (("2" (REPLACE -11 -1 RL) (("2" (EXPAND SIGMA_RHS -1) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND PARALLEL_REDUCTION? 1) (("3" (INST 1 "complement_pos(p, fsp2)") NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (TYPEPRED FSE!1) (("3" (HIDE-ALL-BUT (-1 1)) (("3" (EXPAND "subset?") (("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "seq2set") (("3" (EXPAND "finseq_appl") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND SP? -3) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -3 I!2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (LEMMA POS_OVER_CHARACTER) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (INST -1 I!1) (("3" (REPLACE -9 -1 RL) (("3" (REPLACE -9 -2 RL) (("3" (HIDE -9) (("3" (SPLIT) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (INST 1 0) (("1" (EXPAND "#") (("1" (EXPAND POS_OVER 1) (("1" (ASSERT) (("1" (EXPAND* ADD_FIRST 1) (("1" (EXPAND INSERT?) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "#") (("2" (EXPAND POS_OVER 1) (("2" (ASSERT) (("2" (EXPAND ADD_FIRST 1) (("2" (EXPAND INSERT?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (EXPAND* "#" POS_OVER) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND* ADD_FIRST INSERT? MEMBER_SEQ FINSEQ_APPL) (("1" (INST 1 0) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 1) (("2" (EXPAND* ADD_FIRST INSERT?) (("2" (EXPAND PP? -1) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 0 1+J!1) (("2" (ASSERT) (("2" (EXPAND PARALLEL) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA SUB_POS_ELEMENT) (("3" (EXPAND <= -2) (("3" (SKOSIMP) (("3" (INST -1 FSP2 P P1!1) (("3" (ASSERT) (("3" (SPLIT) (("1" (EXPAND MEMBER_SEQ 1) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 J!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("2" (REWRITE EMPTY_0 -1) (("2" (REPLACES -1) (("2" (REWRITE SEQ_O_EMPTY) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (< CONST-DECL "bool" |reals| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|subset?| CONST-DECL "bool" |sets| NIL) (|sigma_lhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (SP? CONST-DECL "bool" |positions| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|lhs| CONST-DECL "term" |rewrite_rules| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|subtermsOF| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|replace_par_pos_subterm| FORMULA-DECL NIL |orthogonality_basis| NIL) (SPP TYPE-EQ-DECL NIL |positions| NIL) (|complement_pos| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality_basis| NIL) (|parallel_reduction?| CONST-DECL "bool" |orthogonality_basis| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|fss!1| SKOLEM-CONST-DECL "finseq[Sub[variable, symbol, arity]]" |orthogonality| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|fsp1| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|i!2| SKOLEM-CONST-DECL "below[fsp1`length]" |orthogonality| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (E SKOLEM-CONST-DECL "set[rewrite_rule[variable, symbol, arity]]" |orthogonality| NIL) (|fse!1| SKOLEM-CONST-DECL "{fse | subset?[rewrite_rule[variable, symbol, arity]](fse, E)}" |orthogonality| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|sub_pos_element| FORMULA-DECL NIL |orthogonality| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|seq_o_empty| FORMULA-DECL NIL |seq_extras| |structures|) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (<= CONST-DECL "bool" |positions| NIL) (|parallel| CONST-DECL "bool" |positions| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|p| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|fsp2| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|divergence_in_Pos_Over_aux| FORMULA-DECL NIL |orthogonality| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)) SHOSTAK)) (|subterm_joinability_TCC1| 0 (|subterm_joinability_TCC1-4| "" 3885087572 ("" (EXPAND "finseq_appl") (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -2) (("" (EXPAND "parallel_reduction_fix?") (("" (SKOSIMP) (("" (LEMMA "replace_par_pos_preservs_pp") (("" (INST -1 "fsp1!1" "sigma_rhs(fss!1, fse!1)" "t!1") (("" (EXPAND "sigma_rhs" -1 1) (("" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -2 1) (("" (EXPAND "o" 1) (("" (PROP) (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp1!1" "fsp2!1") (("1" (ASSERT) (("1" (EXPAND* "subseq" "member_seq" "finseq_appl") (("1" (INST -1 "i!1") (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -3 "i!2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_over_character") (("2" (INST -1 "fsp2!1" "fsp1!1") (("2" (ASSERT) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SPLIT) (("1" (REPLACE -8 2) (("1" (REWRITE "replace_par_pos_preservs_pos") (("1" (EXPAND "SPP?") (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp2!1" "fsp1!1") (("1" (ASSERT) (("1" (EXPAND* "subseq" "member_seq" "finseq_appl") (("1" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("1" (SKOSIMP) (("1" (EXPAND "SP?" -11) (("1" (EXPAND "finseq_appl") (("1" (INST -11 "i!2") (("1" (EXPAND "A" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma_rhs" 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -3 "j!1") (("2" (LEMMA "closed_positions") (("2" (INST -1 A "fsp1!1`seq(j!1)" "t1!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_equal_is_sub_seq") (("3" (INST -1 "fsp1!1" "fsp2!1") (("3" (ASSERT) (("3" (EXPAND* "subseq" "member_seq" "finseq_appl") (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -
                                                  Pos_Over(fsp2!1, fsp1!1)`length
                                                  + i!1") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 "i!2") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)")) (|subterm_joinability_TCC1-3| "" 3803875412 ("" (EXPAND FINSEQ_APPL) (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -2) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP1!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -2 1) (("" (EXPAND O 1) (("" (PROP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I!1) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -3 I!2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 FSP2!1 FSP1!1) (("2" (ASSERT) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SPLIT) (("1" (REPLACE -8 2) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP2!1 FSP1!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("1" (SKOSIMP) (("1" (EXPAND SP? -11) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -11 I!2) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -3 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp1!1`seq(j!1)" T1!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP1!1 FSP2!1) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -
                                                  Pos_Over(fsp2!1, fsp1!1)`length
                                                  + i!1") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 I!2) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|closed_positions| FORMULA-DECL NIL |positions| NIL) (A SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|replace_par_pos_preservs_pos| FORMULA-DECL NIL |orthogonality_basis| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (< CONST-DECL "bool" |reals| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)")) (|subterm_joinability_TCC1-2| "" 3756671541 ("" (EXPAND FINSEQ_APPL) (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -5) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP1!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -11 1) (("" (EXPAND O 1) (("" (PROP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I!1) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -3 I!2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 FSP2!1 FSP1!1) (("2" (ASSERT) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SPLIT) (("1" (REPLACE -12 2) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP2!1 FSP1!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("1" (SKOSIMP) (("1" (EXPAND SP? -9) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -9 I!2) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -3 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp1!1`seq(j!1)" T1!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP1!1 FSP2!1) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -

                                              Pos_Over(fsp2!1, fsp1!1)`length

                                              + i!1") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 I!2) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)")) (|subterm_joinability_TCC1-1| |nil| 3573902467 ("" (EXPAND FINSEQ_APPL) (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -2) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP1!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -2 1) (("" (EXPAND O 1) (("" (PROP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I!1) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -3 I!2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 FSP2!1 FSP1!1) (("2" (ASSERT) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SPLIT) (("1" (REPLACE -8 2) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP2!1 FSP1!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("1" (SKOSIMP) (("1" (EXPAND SP? -11) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -11 I!2) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -3 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp1!1`seq(j!1)" T1!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP1!1 FSP2!1) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -
                                          Pos_Over(fsp2!1, fsp1!1)`length
                                          + i!1") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -1 I!2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED I!1) (("2" (REPLACE -3 -1) (("2" (EXPAND O -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t1)"))) (|subterm_joinability_TCC2| 0 (|subterm_joinability_TCC2-4| "" 3885087795 ("" (EXPAND "finseq_appl") (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -3) (("" (EXPAND "parallel_reduction_fix?") (("" (SKOSIMP) (("" (LEMMA "replace_par_pos_preservs_pp") (("" (INST -1 "fsp2!1" "sigma_rhs(fss!1, fse!1)" "t!1") (("" (EXPAND "sigma_rhs" -1 1) (("" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -2 1) (("" (EXPAND "o" 1) (("" (PROP) (("1" (LEMMA "pos_over_character") (("1" (INST -1 "fsp1!1" "fsp2!1") (("1" (ASSERT) (("1" (INST -1 "i!1") (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SPLIT) (("1" (REPLACE -9 1) (("1" (REWRITE "replace_par_pos_preservs_pos") (("1" (EXPAND "SPP?") (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp1!1" "fsp2!1") (("1" (ASSERT) (("1" (EXPAND* "subseq" "member_seq" "finseq_appl") (("1" (INST -1 "i!1") (("1" (SKOSIMP) (("1" (EXPAND "SP?" -14) (("1" (EXPAND "finseq_appl") (("1" (INST -14 "i!2") (("1" (EXPAND "A" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma_rhs" 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -4 "j!1") (("2" (LEMMA "closed_positions") (("2" (INST -1 "A" "fsp2!1`seq(j!1)" "t2!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_over_is_sub_seq") (("2" (INST -1 "fsp2!1" "fsp1!1") (("2" (ASSERT) (("2" (EXPAND* "subseq" "member_seq" "finseq_appl") (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SKOSIMP) (("2" (REPLACES -1) (("2" (INST -2 "i!2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_equal_character") (("3" (INST -1 "fsp1!1" "fsp2!1") (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -
                                                      Pos_Over(fsp2!1, fsp1!1)`length
                                                      + i!1") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 "j!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|subterm_joinability_TCC2-3| "" 3803876231 ("" (EXPAND FINSEQ_APPL) (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -3) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -2 1) (("" (EXPAND O 1) (("" (PROP) (("1" (LEMMA POS_OVER_CHARACTER) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (INST -1 I!1) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SPLIT) (("1" (REPLACE -9 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I!1) (("1" (SKOSIMP) (("1" (EXPAND SP? -14) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -14 I!2) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -4 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 FSP2!1 FSP1!1) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SKOSIMP) (("2" (REPLACES -1) (("2" (INST -2 I!2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP1!1 FSP2!1) (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -
                                                      Pos_Over(fsp2!1, fsp1!1)`length
                                                      + i!1") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 J!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|Pos_Equal_character| FORMULA-DECL NIL |orthogonality| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|closed_positions| FORMULA-DECL NIL |positions| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (A SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|replace_par_pos_preservs_pos| FORMULA-DECL NIL |orthogonality_basis| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (PP? CONST-DECL "bool" |positions| NIL) (< CONST-DECL "bool" |reals| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|subterm_joinability_TCC2-2| "" 3756671879 ("" (EXPAND FINSEQ_APPL) (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -4) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -11 1) (("" (EXPAND O 1) (("" (PROP) (("1" (LEMMA POS_OVER_CHARACTER) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (INST -1 I!1) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SPLIT) (("1" (REPLACE -13 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I!1) (("1" (SKOSIMP) (("1" (EXPAND SP? -8) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -8 I!2) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -4 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 FSP2!1 FSP1!1) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SKOSIMP) (("2" (REPLACES -1) (("2" (INST -2 I!2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP1!1 FSP2!1) (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -

                                                  Pos_Over(fsp2!1, fsp1!1)`length

                                                  + i!1") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 J!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|subterm_joinability_TCC2-1| |nil| 3573902467 ("" (EXPAND FINSEQ_APPL) (("" (SKOSIMP) (("" (SKOSIMP) (("" (HIDE -3) (("" (EXPAND PARALLEL_REDUCTION_FIX?) (("" (SKOSIMP) (("" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("" (INST -1 FSP2!1 "sigma_rhs(fss!1, fse!1)" T!1) (("" (EXPAND SIGMA_RHS -1 1) (("" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("" (FLATTEN) (("" (ASSERT) (("" (LIFT-IF) (("" (ASSERT) (("" (REPLACE -2 1) (("" (EXPAND O 1) (("" (PROP) (("1" (LEMMA POS_OVER_CHARACTER) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (INST -1 I!1) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1!1, fsp2!1)`seq(i!1)") (("1" (SPLIT) (("1" (REPLACE -9 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1!1 FSP2!1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I!1) (("1" (SKOSIMP) (("1" (EXPAND SP? -14) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -14 I!2) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -4 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp2!1`seq(j!1)" T2!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 FSP2!1 FSP1!1) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("2" (INST -1 "i!1 - Pos_Over(fsp1!1, fsp2!1)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2!1, fsp1!1)`seq(i!1 - Pos_Over(fsp1!1, fsp2!1)`length)") (("2" (SKOSIMP) (("2" (REPLACES -1) (("2" (INST -2 I!2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP1!1 FSP2!1) (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1!1, fsp2!1)`length -
                                              Pos_Over(fsp2!1, fsp1!1)`length
                                              + i!1") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -1 J!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED I!1) (("2" (REPLACE -3 -1) (("2" (EXPAND O -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|subterm_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)"))) (|subterm_joinability| 0 (|subterm_joinability-2| "" 3885091153 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND "finseq_appl") (("" (TYPEPRED "i") (("" (REPLACE -7 -1) (("" (EXPAND "o" -1) (("" (CASE "i<Pos_Over(fsp1, fsp2)`length") (("1" (LEMMA "divergence_in_pos_over") (("1" (INST -1 "E" "fsp1" "fsp2" "fsp`seq(i)" "t" "t1" "t2") (("1" (ASSERT) (("1" (PROP) (("1" (SKOSIMP) (("1" (LEMMA "parallel_moves_lemma") (("1" (INST -1 "E" "e!1" "sigma!1" "subtermOF(t2, fsp`seq(i))") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (INST 1 "s!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 1 "i") (("2" (REPLACE -8 1) (("2" (EXPAND "o" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i<Pos_Over(fsp1, fsp2)`length + Pos_Over(fsp2, fsp1)`length") (("1" (LEMMA "divergence_in_pos_over") (("1" (INST -1 "E" "fsp2" "fsp1" "fsp`seq(i)" "t" "t2" "t1") (("1" (ASSERT) (("1" (PROP) (("1" (SKOSIMP) (("1" (LEMMA "parallel_moves_lemma") (("1" (INST -1 "E" "e!1" "sigma!1" "subtermOF(t1, fsp`seq(i))") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (INST 2 "s!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "member_seq" "finseq_appl") (("2" (INST 1 "i - Pos_Over(fsp1, fsp2)`length") (("2" (REPLACE -8 1) (("2" (EXPAND "o" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "non_ambiguous_implies_same_term") (("2" (LEMMA "pos_equal_is_sub_seq") (("2" (LEMMA "pos_equal_character") (("2" (INST -1 "fsp1" "fsp2") (("2" (INST -2 "fsp1" "fsp2") (("2" (EXPAND "SPP?") (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND* "subseq" "finseq_appl") (("2" (INST -2 "i - Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length") (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (INST -1 "i - Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length") (("2" (SKOSIMP) (("2" (INST -3 "E" "empty_seq" "subtermOF(t, fsp`seq(i))" "subtermOF(t1, fsp`seq(i))" "subtermOF(t2, fsp`seq(i))") (("1" (EXPAND "Orthogonal?") (("1" (FLATTEN) (("1" (ASSERT) (("1" (PROP) (("1" (INST 4 "subtermOF(t1, fsp`seq(i))") (("1" (REPLACE -1 4 RL) (("1" (ASSERT) (("1" (LEMMA "parallel_reduction_reflexive") (("1" (INST -1 "E") (("1" (EXPAND "reflexive?") (("1" (INST -1 "subtermOF(t1, fsp`seq(i))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "positionsOF") (("2" (EXPAND* "only_empty_seq" "union" "empty_seq" "member") (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 1 3) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -7 -8 -10 5) (("3" (EXPAND "reduction_fix?") (("3" (EXPAND "parallel_reduction_fix?") (("3" (SKOSIMP) (("3" (INST 1 "fse!1`seq(i!1)" "fss!1`seq(i!1)") (("1" (EXPAND "empty_seq") (("1" (EXPAND "subtermOF" 1 1) (("1" (EXPAND "replaceTerm" 1) (("1" (REPLACE -10 1) (("1" (EXPAND "o" 1) (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (EXPAND* "subtermsOF" "sigma_lhs" "empty_seq" "finseq_appl") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -8) (("1" (INST -1 "i!1") NIL NIL) ("2" (EXPAND* "SP?" "finseq_appl") (("2" (INST -7 "x!1") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "replace_par_pos_subterm") (("2" (EXPAND "finseq_appl") (("2" (INST -1 "fsp1" "sigma_rhs(fss!1, fse!1)" "t") (("2" (EXPAND "SPP?" -1) (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 "i!1") (("2" (EXPAND "sigma_rhs" -1 2) (("2" (EXPAND "finseq_appl") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (TYPEPRED "fse!1") (("3" (HIDE-ALL-BUT (-1 1)) (("3" (EXPAND "subset?") (("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "seq2set") (("3" (EXPAND "finseq_appl") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -2 -5 -6 -9 5) (("4" (EXPAND "empty_seq") (("4" (EXPAND "reduction_fix?") (("4" (EXPAND "parallel_reduction_fix?") (("4" (SKOSIMP) (("4" (INST 1 "fse!1`seq(j!1)" "fss!1`seq(j!1)") (("1" (EXPAND "subtermOF" 1 1) (("1" (EXPAND "replaceTerm" 1) (("1" (REPLACE -10 1) (("1" (EXPAND "o" 1) (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (EXPAND* "subtermsOF" "sigma_lhs" "empty_seq" "finseq_appl") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -8) (("1" (INST -1 "j!1") NIL NIL) ("2" (EXPAND* "SP?" "finseq_appl") (("2" (INST -7 "x!1") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "replace_par_pos_subterm") (("2" (EXPAND "finseq_appl") (("2" (INST -1 "fsp2" "sigma_rhs(fss!1, fse!1)" "t") (("2" (EXPAND "sigma_rhs" -1 (1 3)) (("2" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (TYPEPRED "fse!1") (("3" (HIDE-ALL-BUT (-1 1)) (("3" (EXPAND "subset?") (("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (INST?) (("3" (EXPAND "seq2set") (("3" (EXPAND "finseq_appl") (("3" (ASSERT) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -11 1) (("2" (EXPAND "o" 1) (("2" (EXPAND "SP?" -8) (("2" (EXPAND "finseq_appl") (("2" (INST -8 "j!1") (("2" (REPLACE -1 1) (("2" (LEMMA "replace_par_pos_preservs_pp") (("2" (EXPAND "parallel_reduction_fix?" -11) (("2" (SKOSIMP) (("2" (INST -1 "fsp2" "sigma_rhs(fss!1, fse!1)" "t") (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 "j!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -7 -8 -10 4) (("3" (REPLACE -7 1) (("3" (EXPAND "o" 1) (("3" (REPLACE -1 1) (("3" (EXPAND "parallel_reduction_fix?") (("3" (SKOSIMP) (("3" (LEMMA "replace_par_pos_preservs_pp") (("3" (EXPAND "finseq_appl") (("3" (INST -1 "fsp1" "sigma_rhs(fss!1, fse!1)" "t") (("3" (EXPAND "sigma_rhs" -1 1) (("3" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("3" (LIFT-IF) (("3" (ASSERT) (("3" (INST -1 "i!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (REPLACE -11 1) (("4" (EXPAND "o" 1) (("4" (REPLACE -1 1) (("4" (EXPAND "SP?" -8) (("4" (EXPAND "finseq_appl") (("4" (INST -8 "j!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|subterm_joinability-1| |nil| 3574794210 ("" (SKEEP) (("" (SKEEP) (("" (EXPAND FINSEQ_APPL) (("" (TYPEPRED I) (("" (REPLACE -7 -1) (("" (EXPAND O -1) (("" (CASE "i<Pos_Over(fsp1, fsp2)`length") (("1" (LEMMA "divergence_in_Pos_Over") (("1" (INST -1 E FSP1 FSP2 "fsp`seq(i)" T T1 T2) (("1" (ASSERT) (("1" (PROP) (("1" (SKOSIMP) (("1" (LEMMA PARALLEL_MOVES_LEMMA) (("1" (INST -1 E E!1 SIGMA!1 "subtermOF(t2, fsp`seq(i))") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (INST 1 S!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 1 I) (("2" (REPLACE -8 1) (("2" (EXPAND O 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "i<Pos_Over(fsp1, fsp2)`length + Pos_Over(fsp2, fsp1)`length") (("1" (LEMMA DIVERGENCE_IN_POS_OVER) (("1" (INST -1 E FSP2 FSP1 "fsp`seq(i)" T T2 T1) (("1" (ASSERT) (("1" (PROP) (("1" (SKOSIMP) (("1" (LEMMA PARALLEL_MOVES_LEMMA) (("1" (INST -1 E E!1 SIGMA!1 "subtermOF(t1, fsp`seq(i))") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (INST 2 S!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (INST 1 "i - Pos_Over(fsp1, fsp2)`length") (("2" (REPLACE -8 1) (("2" (EXPAND O 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA NON_AMBIGUOUS_IMPLIES_SAME_TERM) (("2" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("2" (LEMMA POS_EQUAL_CHARACTER) (("2" (INST -1 FSP1 FSP2) (("2" (INST -2 FSP1 FSP2) (("2" (EXPAND SPP?) (("2" (FLATTEN) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ FINSEQ_APPL) (("2" (INST -2 "i - Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length") (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST -1 "i - Pos_Over(fsp1, fsp2)`length - Pos_Over(fsp2, fsp1)`length") (("2" (SKOSIMP) (("2" (INST -3 E EMPTY_SEQ "subtermOF(t, fsp`seq(i))" "subtermOF(t1, fsp`seq(i))" "subtermOF(t2, fsp`seq(i))") (("1" (EXPAND ORTHOGONAL?) (("1" (FLATTEN) (("1" (ASSERT) (("1" (PROP) (("1" (INST 4 "subtermOF(t1, fsp`seq(i))") (("1" (REPLACE -1 4 RL) (("1" (ASSERT) (("1" (LEMMA PARALLEL_REDUCTION_REFLEXIVE) (("1" (INST -1 E) (("1" (EXPAND REFLEXIVE?) (("1" (INST -1 "subtermOF(t1, fsp`seq(i))") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND POSITIONSOF) (("2" (EXPAND* ONLY_EMPTY_SEQ UNION EMPTY_SEQ MEMBER) (("2" (LIFT-IF) (("2" (PROP) (("1" (GRIND) NIL NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 1 3) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -7 -8 -10 5) (("3" (EXPAND REDUCTION_FIX?) (("3" (EXPAND PARALLEL_REDUCTION_FIX?) (("3" (SKOSIMP) (("3" (INST 1 "fse!1`seq(i!1)" "fss!1`seq(i!1)") (("1" (EXPAND EMPTY_SEQ) (("1" (EXPAND SUBTERMOF 1 1) (("1" (EXPAND REPLACETERM 1) (("1" (REPLACE -10 1) (("1" (EXPAND O 1) (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (EXPAND* SUBTERMSOF SIGMA_LHS EMPTY_SEQ FINSEQ_APPL) (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -8) (("1" (INST -1 I!1) NIL NIL) ("2" (EXPAND* SP? FINSEQ_APPL) (("2" (INST -7 X!1) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA REPLACE_PAR_POS_SUBTERM) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 FSP1 "sigma_rhs(fss!1, fse!1)" T) (("2" (EXPAND SPP? -1) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 I!1) (("2" (EXPAND SIGMA_RHS -1 2) (("2" (EXPAND FINSEQ_APPL) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (TYPEPRED FSE!1) (("3" (HIDE-ALL-BUT (-1 1)) (("3" (EXPAND "subset?") (("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (INST?) (("3" (ASSERT) (("3" (EXPAND "seq2set") (("3" (EXPAND "finseq_appl") (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -2 -5 -6 -9 5) (("4" (EXPAND EMPTY_SEQ) (("4" (EXPAND REDUCTION_FIX?) (("4" (EXPAND PARALLEL_REDUCTION_FIX?) (("4" (SKOSIMP) (("4" (INST 1 "fse!1`seq(j!1)" "fss!1`seq(j!1)") (("1" (EXPAND SUBTERMOF 1 1) (("1" (EXPAND REPLACETERM 1) (("1" (REPLACE -10 1) (("1" (EXPAND O 1) (("1" (REPLACE -1 1) (("1" (SPLIT) (("1" (EXPAND* SUBTERMSOF SIGMA_LHS EMPTY_SEQ FINSEQ_APPL) (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -8) (("1" (INST -1 J!1) NIL NIL) ("2" (EXPAND* SP? FINSEQ_APPL) (("2" (INST -7 X!1) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA REPLACE_PAR_POS_SUBTERM) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -1 FSP2 "sigma_rhs(fss!1, fse!1)" T) (("2" (EXPAND SIGMA_RHS -1 (1 3)) (("2" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL) ("3" (TYPEPRED FSE!1) (("3" (HIDE-ALL-BUT (-1 1)) (("3" (EXPAND "subset?") (("3" (EXPAND "subset?") (("3" (EXPAND "member") (("3" (INST?) (("3" (EXPAND "seq2set") (("3" (EXPAND "finseq_appl") (("3" (ASSERT) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -11 1) (("2" (EXPAND O 1) (("2" (EXPAND SP? -8) (("2" (EXPAND FINSEQ_APPL) (("2" (INST -8 J!1) (("2" (REPLACE -1 1) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (EXPAND PARALLEL_REDUCTION_FIX? -11) (("2" (SKOSIMP) (("2" (INST -1 FSP2 "sigma_rhs(fss!1, fse!1)" T) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (INST -1 J!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -7 -8 -10 4) (("3" (REPLACE -7 1) (("3" (EXPAND O 1) (("3" (REPLACE -1 1) (("3" (EXPAND PARALLEL_REDUCTION_FIX?) (("3" (SKOSIMP) (("3" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("3" (EXPAND FINSEQ_APPL) (("3" (INST -1 FSP1 "sigma_rhs(fss!1, fse!1)" T) (("3" (EXPAND SIGMA_RHS -1 1) (("3" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("3" (LIFT-IF) (("3" (ASSERT) (("3" (INST -1 I!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (REPLACE -11 1) (("4" (EXPAND O 1) (("4" (REPLACE -1 1) (("4" (EXPAND SP? -8) (("4" (EXPAND FINSEQ_APPL) (("4" (INST -8 J!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (< CONST-DECL "bool" |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|Orthogonal?| CONST-DECL "bool" |orthogonality_basis| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|fss!1| SKOLEM-CONST-DECL "finseq[Sub[variable, symbol, arity]]" |orthogonality| NIL) (|fsp2| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|j!1| SKOLEM-CONST-DECL "below[fsp2`length]" |orthogonality| NIL) (|fse!1| SKOLEM-CONST-DECL "{fse | subset?(fse, E)}" |orthogonality| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|fse!1| SKOLEM-CONST-DECL "{fse | subset?(fse, E)}" |orthogonality| NIL) (E SKOLEM-CONST-DECL "set[rewrite_rule[variable, symbol, arity]]" |orthogonality| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|i!1| SKOLEM-CONST-DECL "below[fsp1`length]" |orthogonality| NIL) (|fsp1| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|fss!1| SKOLEM-CONST-DECL "finseq[Sub[variable, symbol, arity]]" |orthogonality| NIL) (|replace_par_pos_subterm| FORMULA-DECL NIL |orthogonality_basis| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|sigma_lhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|subtermsOF| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|lhs| CONST-DECL "term" |rewrite_rules| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|replaceTerm| DEF-DECL "term" |replacement| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|reduction_fix?| CONST-DECL "bool" |reduction| NIL) (|union| CONST-DECL "set" |sets| NIL) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|catenate| CONST-DECL "positions" |positions| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|reflexive?| CONST-DECL "bool" |relations| NIL) (|parallel_reduction_reflexive| FORMULA-DECL NIL |orthogonality_basis| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|t2| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (|t1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (|t| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (|fsp| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|i| SKOLEM-CONST-DECL "below[fsp`length]" |orthogonality| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|Pos_Equal_character| FORMULA-DECL NIL |orthogonality| NIL) (|non_ambiguous_implies_same_term| FORMULA-DECL NIL |orthogonality_basis| NIL) (|divergence_in_Pos_Over| FORMULA-DECL NIL |orthogonality| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member| CONST-DECL "bool" |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|Parallel_Moves_Lemma| FORMULA-DECL NIL |orthogonality_basis| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|subterms_joinability_TCC1| 0 (|subterms_joinability_TCC1-1| |nil| 3568624547 ("" (SKOSIMP) (("" (SKOSIMP) (("" (ASSERT) NIL NIL)) NIL)) NIL) NIL NIL (|subterms_joinability| SUBTYPE "orthogonality.i" "below[length(fst)]"))) (|subterms_joinability_TCC2| 0 (|subterms_joinability_TCC2-2| "" 3885091300 ("" (LEMMA "subterm_joinability_TCC2") (("" (SKOSIMP) (("" (SKOSIMP) (("" (SKOSIMP) (("" (EXPAND "finseq_appl") (("" (INST -1 "E!1" "fsp!1" "fsp1!1" "fsp2!1" "t!1" "t1!1" "t2!1") (("" (ASSERT) (("" (INST -1 "i!1" "fst!1`seq(i!1)") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|subterms_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)")) (|subterms_joinability_TCC2-1| |nil| 3568624547 ("" (LEMMA SUBTERM_JOINABILITY_TCC2) (("" (SKOSIMP) (("" (SKOSIMP) (("" (SKOSIMP) (("" (EXPAND FINSEQ_APPL) (("" (INST -1 E!1 FSP!1 FSP1!1 FSP2!1 T!1 T1!1 T2!1) (("" (ASSERT) (("" (INST -1 I!1 "fst!1`seq(i!1)") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|subterm_joinability_TCC2| SUBTYPE-TCC NIL |orthogonality| NIL)) NIL (|subterms_joinability| SUBTYPE "finite_sequences[position[variable, symbol, arity]].finseq_appl(orthogonality.fsp)(orthogonality.i)" "positions?[orthogonality.variable, orthogonality.symbol, orthogonality.arity](orthogonality.t2)"))) (|subterms_joinability| 0 (|subterms_joinability-2| "" 3885092715 ("" (EXPAND "finseq_appl") (("" (SKEEP) (("" (LEMMA "subterm_joinability") (("" (EXPAND "finseq_appl") (("" (INST -1 "E" "fsp" "fsp1" "fsp2" "t" "t1" "t2") (("" (ASSERT) (("" (LEMMA "seq_construct1[term]") (("" (INST -1 "parallel_reduction?(E)" "subtermsOF(t1, fsp)" "subtermsOF(t2, fsp)" "fsp`length") (("1" (EXPAND "subtermsOF" -1) (("1" (EXPAND "finseq_appl") (("1" (PROP) (("1" (SKOSIMP) (("1" (INST 1 "fseq!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -5 2) (("2" (EXPAND "parallel_reduction_fix?") (("2" (SKOSIMP) (("2" (LEMMA "replace_par_pos_preservs_pp") (("2" (INST -1 "fsp2" "sigma_rhs(fss!1, fse!1)" "t") (("2" (EXPAND "sigma_rhs" -1 1) (("2" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("2" (LIFT-IF) (("2" (ASSERT) (("2" (FLATTEN) (("2" (REPLACE -10 1) (("2" (EXPAND "o" 1) (("2" (EXPAND "SP?" 1) (("2" (EXPAND "finseq_appl") (("2" (SKEEP) (("2" (PROP) (("1" (LEMMA "pos_over_character") (("1" (INST -1 "fsp1" "fsp2") (("1" (ASSERT) (("1" (INST -1 "i") (("1" (NAME-REPLACE "A" "Pos_Over(fsp1, fsp2)`seq(i)") (("1" (SPLIT) (("1" (REPLACE -12 1) (("1" (REWRITE "replace_par_pos_preservs_pos") (("1" (EXPAND "SPP?") (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp1" "fsp2") (("1" (ASSERT) (("1" (EXPAND* "subseq" "finseq_appl") (("1" (INST -1 "i") (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (EXPAND "SP?" -7) (("1" (EXPAND "finseq_appl") (("1" (INST -7 "i!1") (("1" (EXPAND "A" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma_rhs" 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -4 "j!1") (("2" (LEMMA "closed_positions") (("2" (INST -1 "A" "fsp2`seq(j!1)" "t2") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_over_is_sub_seq") (("2" (INST -1 "fsp2" "fsp1") (("2" (ASSERT) (("2" (EXPAND* "subseq" "member_seq" "finseq_appl") (("2" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("2" (SKOSIMP) (("2" (REPLACES -1) (("2" (INST -2 "i!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_equal_character") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -

                                    Pos_Over(fsp2, fsp1)`length

                                    + i") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 "j!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2 -6 2) (("3" (EXPAND "parallel_reduction_fix?") (("3" (SKOSIMP) (("3" (LEMMA "replace_par_pos_preservs_pp") (("3" (INST -1 "fsp1" "sigma_rhs(fss!1, fse!1)" "t") (("3" (EXPAND "sigma_rhs" -1 1) (("3" (EXPAND* "SPP?" "empty_seq" "finseq_appl") (("3" (LIFT-IF) (("3" (ASSERT) (("3" (FLATTEN) (("3" (REPLACE -10 1) (("3" (EXPAND O 1) (("3" (EXPAND "SP?" 1) (("3" (EXPAND "finseq_appl") (("3" (SKEEP) (("3" (PROP) (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp1" "fsp2") (("1" (ASSERT) (("1" (EXPAND* "subseq" "member_seq" "finseq_appl") (("1" (INST -1 "i") (("1" (NAME-REPLACE "A" "Pos_Over(fsp1, fsp2)`seq(i)") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -3 "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_over_character") (("2" (INST -1 "fsp2" "fsp1") (("2" (ASSERT) (("2" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2, fsp1)`seq(i - Pos_Over(fsp1, fsp2)`length)") (("2" (SPLIT) (("1" (REPLACE -11 2) (("1" (REWRITE "replace_par_pos_preservs_pos") (("1" (EXPAND "SPP?") (("1" (REWRITE "add_first_parallel_pos_to_sp_is_sp") (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp2" "fsp1") (("1" (ASSERT) (("1" (EXPAND* "subseq" "member_seq" "finseq_appl") (("1" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("1" (SKOSIMP) (("1" (EXPAND "SP?" -8) (("1" (EXPAND "finseq_appl") (("1" (INST -8 "i!1") (("1" (EXPAND "A" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "sigma_rhs" 1) (("2" (EXPAND "empty_seq") (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -3 "j!1") (("2" (LEMMA "closed_positions") (("2" (INST -1 "A" "fsp1`seq(j!1)" "t1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_equal_is_sub_seq") (("3" (INST -1 "fsp1" "fsp2") (("3" (ASSERT) (("3" (EXPAND* "subseq" "member_seq" "finseq_appl") (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -

                                          Pos_Over(fsp2, fsp1)`length

                                          + i") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 "i!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|subterms_joinability-1| |nil| 3568624548 ("" (EXPAND FINSEQ_APPL) (("" (SKEEP) (("" (LEMMA SUBTERM_JOINABILITY) (("" (EXPAND FINSEQ_APPL) (("" (INST -1 E FSP FSP1 FSP2 T T1 T2) (("" (ASSERT) (("" (LEMMA SEQ_CONSTRUCT1[TERM]) (("" (INST -1 "parallel_reduction?(E)" "subtermsOF(t1, fsp)" "subtermsOF(t2, fsp)" "fsp`length") (("1" (EXPAND SUBTERMSOF -1) (("1" (EXPAND FINSEQ_APPL) (("1" (PROP) (("1" (SKOSIMP) (("1" (INST 1 FSEQ!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -2 -5 2) (("2" (EXPAND PARALLEL_REDUCTION_FIX?) (("2" (SKOSIMP) (("2" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("2" (INST -1 FSP2 "sigma_rhs(fss!1, fse!1)" T) (("2" (EXPAND SIGMA_RHS -1 1) (("2" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (FLATTEN) (("2" (REPLACE -10 1) (("2" (EXPAND O 1) (("2" (EXPAND SP? 1) (("2" (EXPAND FINSEQ_APPL) (("2" (SKEEP) (("2" (PROP) (("1" (LEMMA POS_OVER_CHARACTER) (("1" (INST -1 FSP1 FSP2) (("1" (ASSERT) (("1" (INST -1 I) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1, fsp2)`seq(i)") (("1" (SPLIT) (("1" (REPLACE -12 1) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1 FSP2) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (INST -1 I) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (EXPAND SP? -7) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -7 I!1) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -4 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp2`seq(j!1)" T2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 FSP2 FSP1) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("2" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("2" (SKOSIMP) (("2" (REPLACES -1) (("2" (INST -2 I!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -
                                    Pos_Over(fsp2, fsp1)`length
                                    + i") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 J!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 -2 -6 2) (("3" (EXPAND PARALLEL_REDUCTION_FIX?) (("3" (SKOSIMP) (("3" (LEMMA REPLACE_PAR_POS_PRESERVS_PP) (("3" (INST -1 FSP1 "sigma_rhs(fss!1, fse!1)" T) (("3" (EXPAND SIGMA_RHS -1 1) (("3" (EXPAND* SPP? EMPTY_SEQ FINSEQ_APPL) (("3" (LIFT-IF) (("3" (ASSERT) (("3" (FLATTEN) (("3" (REPLACE -10 1) (("3" (EXPAND O 1) (("3" (EXPAND SP? 1) (("3" (EXPAND FINSEQ_APPL) (("3" (SKEEP) (("3" (PROP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP1 FSP2) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 I) (("1" (NAME-REPLACE "A" "Pos_Over(fsp1, fsp2)`seq(i)") (("1" (SKOSIMP) (("1" (REPLACES -1) (("1" (INST -3 I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_CHARACTER) (("2" (INST -1 FSP2 FSP1) (("2" (ASSERT) (("2" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("2" (NAME-REPLACE "A" "Pos_Over(fsp2, fsp1)`seq(i - Pos_Over(fsp1, fsp2)`length)") (("2" (SPLIT) (("1" (REPLACE -11 2) (("1" (REWRITE REPLACE_PAR_POS_PRESERVS_POS) (("1" (EXPAND SPP?) (("1" (REWRITE ADD_FIRST_PARALLEL_POS_TO_SP_IS_SP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP2 FSP1) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("1" (INST -1 "i - Pos_Over(fsp1, fsp2)`length") (("1" (SKOSIMP) (("1" (EXPAND SP? -8) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -8 I!1) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND SIGMA_RHS 1) (("2" (EXPAND EMPTY_SEQ) (("2" (LIFT-IF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -3 J!1) (("2" (LEMMA CLOSED_POSITIONS) (("2" (INST -1 A "fsp1`seq(j!1)" T1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP1 FSP2) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp1, fsp2)`length -
                                          Pos_Over(fsp2, fsp1)`length
                                          + i") (("3" (SKOSIMP) (("3" (REPLACES -1) (("3" (INST -1 I!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|fsp| SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|t1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|t2| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|parallel_reduction?| CONST-DECL "bool" |orthogonality_basis| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (|subtermsOF| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|replace_par_pos_preservs_PP| FORMULA-DECL NIL |orthogonality_basis| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|replace_par_pos_preservs_pos| FORMULA-DECL NIL |orthogonality_basis| NIL) (|add_first_parallel_pos_to_SP_is_SP| FORMULA-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (A SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|closed_positions| FORMULA-DECL NIL |positions| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|Pos_Over_character| FORMULA-DECL NIL |orthogonality| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Pos_Equal_character| FORMULA-DECL NIL |orthogonality| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|subset?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|sigma_rhs| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (A SKOLEM-CONST-DECL "position[variable, symbol, arity]" |orthogonality| NIL) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|seq_construct1| FORMULA-DECL NIL |predicate_fseq2set| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|subterm_joinability| FORMULA-DECL NIL |orthogonality| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL)) SHOSTAK)) (|parallel_reduction_has_DP| 0 (|parallel_reduction_has_DP-3| "" 3885095120 ("" (AUTO-REWRITE ("finseq_appl" "member")) (("" (SKOSIMP) (("" (EXPAND "diamond_property?") (("" (SKEEP) (("" (EXPAND "parallel_reduction?" (-2 -3)) (("" (SKOSIMP*) (("" (ASSERT) (("" (LEMMA "pos_over_and_pos_equal_dominance") (("" (INST-CP -1 "fsp!1" "fsp!2" "x") (("" (INST -1 "fsp!2" "fsp!1" "x") (("" (ASSERT) (("" (NAME-REPLACE "A" "Pos_Over(fsp!1, fsp!2) o Pos_Over(fsp!2, fsp!1) o Pos_Equal(fsp!1, fsp!2)") (("1" (CASE "SPP?(x)(A)") (("1" (LEMMA "replace_par_pos_dominance") (("1" (INST -1 "E!1" "A" "fsp!1" "y" "x") (("1" (ASSERT) (("1" (PROP) (("1" (LEMMA "replace_par_pos_dominance") (("1" (INST -1 "E!1" "A" "fsp!2" "z" "x") (("1" (ASSERT) (("1" (PROP) (("1" (HIDE -4 -5) (("1" (EXPAND* "parallel_reduction_fix?" "finseq_appl") (("1" (SKOSIMP*) (("1" (LEMMA "subterms_joinability") (("1" (EXPAND "finseq_appl") (("1" (INST -1 "E!1" "A" "fsp!1" "fsp!2" "x" "y" "z") (("1" (ASSERT) (("1" (EXPAND "A" -1 1) (("1" (SKOSIMP) (("1" (LEMMA "parallel_reduction_context") (("1" (EXPAND "finseq_appl") (("1" (INST 1 "replace_par_pos(x, A, fst!1)") (("1" (SPLIT) (("1" (INST -1 "E!1" "A" "subtermsOF(y, A)" "fst!1" "x") (("1" (ASSERT) (("1" (EXPAND "subtermsOF" 2) (("1" (ASSERT) (("1" (SKEEP 2) (("1" (INST -2 "i") (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "E!1" "A" "subtermsOF(z, A)" "fst!1" "x") (("2" (ASSERT) (("2" (EXPAND "subtermsOF" 2) (("2" (EXPAND "finseq_appl") (("2" (SKEEP 2) (("2" (INST -2 "i") (("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "dominates?") (("2" (SKEEP) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (INST -3 "kk!1") (("2" (SKOSIMP) (("2" (EXPAND "o" -3) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("1" (INST 1 "A`seq(j!1 + Pos_Over(fsp!1, fsp!2)`length)") (("1" (ASSERT) (("1" (PROP) (("1" (INST?) (("1" (EXPAND "A" 1) (("1" (EXPAND "o" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (EXPAND "o" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (EXPAND "o" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST 2 "A`seq(j!1 - Pos_Over(fsp!2, fsp!1)`length)") (("1" (ASSERT) (("1" (PROP) (("1" (INST?) (("1" (EXPAND "A" 1) (("1" (EXPAND "o" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (EXPAND "o" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND "A" 1) (("2" (EXPAND "o" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 -4 -5 -6 -7 3) (("3" (LEMMA "pos_equal_is_sub_seq") (("3" (INST -1 "fsp!2" "fsp!1") (("3" (TYPEPRED ("fsp!1" "fsp!2")) (("3" (EXPAND* "SPP?") (("3" (FLATTEN) (("3" (ASSERT) (("3" (LEMMA "pos_equal_character") (("3" (INST -1 "fsp!2" "fsp!1") (("3" (ASSERT) (("3" (EXPAND* "subseq" "finseq_appl") (("3" (INST -1 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1") (("3" (INST -6 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1") (("3" (LEMMA "same_pos_in_pos_equal") (("3" (INST -1 "fsp!1" "fsp!2" "Pos_Equal(fsp!2, fsp!1)`seq(-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1)") (("3" (ASSERT) (("3" (HIDE -7) (("3" (EXPAND* "member_seq" "finseq_appl") (("3" (PROP) (("3" (SKOSIMP) (("3" (INST 2 "A`seq(i!1 + Pos_Over(fsp!1, fsp!2)`length + Pos_Over(fsp!2, fsp!1)`length)") (("1" (PROP) (("1" (INST 1 "i!1 + Pos_Over(fsp!1, fsp!2)`length + Pos_Over(fsp!2, fsp!1)`length") (("1" (EXPAND "A" 1) (("1" (EXPAND "o" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (EXPAND "o" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "A" 1) (("2" (EXPAND "o" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "dominates?") (("2" (SKOSIMP) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (INST -3 "kk!1") (("2" (SKOSIMP) (("2" (INST 1 "A`seq(j!1)") (("1" (PROP) (("1" (INST?) (("1" (EXPAND "A" 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "A" 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "A" 1) (("2" (TYPEPRED ("fsp!1" "fsp!2")) (("2" (EXPAND "SPP?") (("2" (FLATTEN) (("2" (REWRITE "pos_over_and_pos_equal_is_pp") (("2" (EXPAND "o" 1) (("2" (EXPAND* "SP?" "finseq_appl") (("2" (SKEEP) (("2" (PROP) (("1" (LEMMA "pos_over_is_sub_seq") (("1" (INST -1 "fsp!1" "fsp!2") (("1" (ASSERT) (("1" (EXPAND* "subseq" "finseq_appl") (("1" (INST -1 "i") (("1" (EXPAND* "member_seq" "finseq_appl") (("1" (SKOSIMP) (("1" (INST -5 "i!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "pos_over_is_sub_seq") (("2" (INST -1 "fsp!2" "fsp!1") (("2" (ASSERT) (("2" (EXPAND* "subseq" "finseq_appl") (("2" (INST -1 "i - Pos_Over(fsp!1, fsp!2)`length") (("2" (EXPAND* "member_seq" "finseq_appl") (("2" (SKOSIMP) (("2" (INST -6 "i!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "pos_equal_is_sub_seq") (("3" (INST -1 "fsp!1" "fsp!2") (("3" (ASSERT) (("3" (EXPAND* "subseq" "member_seq" "finseq_appl") (("3" (INST -1 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + i") (("3" (SKOSIMP) (("3" (INST -3 "i!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "fsp!2") (("2" (EXPAND "SPP?") (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (TYPEPRED "fsp!1") (("3" (EXPAND "SPP?") (("3" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|parallel_reduction_has_DP-2| "" 3790333963 ("" (AUTO-REWRITE (FINSEQ_APPL MEMBER)) (("" (SKOSIMP) (("" (EXPAND DIAMOND_PROPERTY?) (("" (SKEEP) (("" (EXPAND PARALLEL_REDUCTION? (-2 -3)) (("" (SKOSIMP*) (("" (ASSERT) (("" (LEMMA POS_OVER_AND_POS_EQUAL_DOMINANCE) (("" (INST-CP -1 FSP!1 FSP!2 X) (("" (INST -1 FSP!2 FSP!1 X) (("" (ASSERT) (("" (NAME-REPLACE "A" "Pos_Over(fsp!1, fsp!2) o Pos_Over(fsp!2, fsp!1) o Pos_Equal(fsp!1, fsp!2)") (("1" (CASE "SPP?(x)(A)") (("1" (LEMMA REPLACE_PAR_POS_DOMINANCE) (("1" (INST -1 E!1 A FSP!1 Y X) (("1" (ASSERT) (("1" (PROP) (("1" (LEMMA REPLACE_PAR_POS_DOMINANCE) (("1" (INST -1 E!1 A FSP!2 Z X) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE -4 -5) (("1" (EXPAND* PARALLEL_REDUCTION_FIX? FINSEQ_APPL) (("1" (SKOSIMP*) (("1" (LEMMA SUBTERMS_JOINABILITY) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 E!1 A FSP!1 FSP!2 X Y Z) (("1" (ASSERT) (("1" (EXPAND A -1 1) (("1" (SKOSIMP) (("1" (LEMMA PARALLEL_REDUCTION_CONTEXT) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 "replace_par_pos(x, A, fst!1)") (("1" (SPLIT) (("1" (INST -1 E!1 A "subtermsOF(y, A)" FST!1 X) (("1" (ASSERT) (("1" (EXPAND SUBTERMSOF 2) (("1" (ASSERT) (("1" (SKEEP 2) (("1" (INST -2 I) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 E!1 A "subtermsOF(z, A)" FST!1 X) (("2" (ASSERT) (("2" (EXPAND SUBTERMSOF 2) (("2" (EXPAND FINSEQ_APPL) (("2" (SKEEP 2) (("2" (INST -2 I) (("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "dominates?") (("2" (SKEEP) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (INST -3 "kk!1") (("2" (SKOSIMP) (("2" (EXPAND O -3) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("1" (INST 1 "A`seq(j!1 + Pos_Over(fsp!1, fsp!2)`length)") (("1" (ASSERT) (("1" (PROP) (("1" (INST?) (("1" (EXPAND A 1) (("1" (EXPAND O 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST 2 "A`seq(j!1 - Pos_Over(fsp!2, fsp!1)`length)") (("1" (ASSERT) (("1" (PROP) (("1" (INST?) (("1" (EXPAND A 1) (("1" (EXPAND O 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 -4 -5 -6 -7 3) (("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP!2 FSP!1) (("3" (TYPEPRED (FSP!1 FSP!2)) (("3" (EXPAND* SPP?) (("3" (FLATTEN) (("3" (ASSERT) (("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP!2 FSP!1) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1") (("3" (INST -6 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1") (("3" (LEMMA SAME_POS_IN_POS_EQUAL) (("3" (INST -1 FSP!1 FSP!2 "Pos_Equal(fsp!2, fsp!1)`seq(-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1)") (("3" (ASSERT) (("3" (HIDE -7) (("3" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("3" (PROP) (("3" (SKOSIMP) (("3" (INST 2 "A`seq(i!1 + Pos_Over(fsp!1, fsp!2)`length + Pos_Over(fsp!2, fsp!1)`length)") (("1" (PROP) (("1" (INST 1 "i!1 + Pos_Over(fsp!1, fsp!2)`length + Pos_Over(fsp!2, fsp!1)`length") (("1" (EXPAND A 1) (("1" (EXPAND O 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "dominates?") (("2" (SKOSIMP) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (INST -3 "kk!1") (("2" (SKOSIMP) (("2" (INST 1 "A`seq(j!1)") (("1" (PROP) (("1" (INST?) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND A 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND A 1) (("2" (TYPEPRED (FSP!1 FSP!2)) (("2" (EXPAND SPP?) (("2" (FLATTEN) (("2" (REWRITE POS_OVER_AND_POS_EQUAL_IS_PP) (("2" (EXPAND O 1) (("2" (EXPAND* SP? FINSEQ_APPL) (("2" (SKEEP) (("2" (PROP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP!1 FSP!2) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (INST -1 I) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST -5 I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 FSP!2 FSP!1) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ FINSEQ_APPL) (("2" (INST -1 "i - Pos_Over(fsp!1, fsp!2)`length") (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST -6 I!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP!1 FSP!2) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + i") (("3" (SKOSIMP) (("3" (INST -3 I!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FSP!2) (("2" (EXPAND SPP?) (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (TYPEPRED FSP!1) (("3" (EXPAND SPP?) (("3" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Pos_Over_and_Pos_Equal_dominance| FORMULA-DECL NIL |orthogonality| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (PP? CONST-DECL "bool" |positions| NIL) (PP TYPE-EQ-DECL NIL |positions| NIL) (|Pos_Over| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Equal| DEF-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|Pos_Over_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (|Pos_Over_and_Pos_Equal_is_PP| FORMULA-DECL NIL |orthogonality| NIL) (|replace_par_pos_dominance| FORMULA-DECL NIL |orthogonality_basis| NIL) (|j!1| SKOLEM-CONST-DECL "below[(Pos_Over(fsp!1, fsp!2) o Pos_Over(fsp!2, fsp!1) o
        Pos_Equal(fsp!1, fsp!2))`length]" |orthogonality| NIL) (|dominates?| CONST-DECL "bool" |predicate_fseq2set| NIL) (|seq2set| CONST-DECL "finite_set[T]" |seq2set| |structures|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|x| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |orthogonality| NIL) (|fsp!1| SKOLEM-CONST-DECL "SPP[variable, symbol, arity](x)" |orthogonality| NIL) (|fsp!2| SKOLEM-CONST-DECL "SPP[variable, symbol, arity](x)" |orthogonality| NIL) (|j!1| SKOLEM-CONST-DECL "below[(Pos_Over(fsp!2, fsp!1) o Pos_Over(fsp!1, fsp!2) o
        Pos_Equal(fsp!2, fsp!1))`length]" |orthogonality| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|Pos_Equal_is_sub_seq| FORMULA-DECL NIL |orthogonality| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|Pos_Equal_character| FORMULA-DECL NIL |orthogonality| NIL) (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|same_pos_in_Pos_Equal| FORMULA-DECL NIL |orthogonality| NIL) (|member_seq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|i!1| SKOLEM-CONST-DECL "below[Pos_Equal(fsp!1, fsp!2)`length]" |orthogonality| NIL) (|subseq| CONST-DECL "bool" |predicate_fseq2set| NIL) (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_times_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (< CONST-DECL "bool" |reals| NIL) (|subtermsOF| CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality_basis| NIL) (SP TYPE-EQ-DECL NIL |positions| NIL) (SP? CONST-DECL "bool" |positions| NIL) (|replace_par_pos| DEF-DECL "term" |orthogonality_basis| NIL) (|fst!1| SKOLEM-CONST-DECL "finseq[term[variable, symbol, arity]]" |orthogonality| NIL) (|parallel_reduction_context| FORMULA-DECL NIL |orthogonality_basis| NIL) (A SKOLEM-CONST-DECL "finseq[position[variable, symbol, arity]]" |orthogonality| NIL) (|subterms_joinability| FORMULA-DECL NIL |orthogonality| NIL) (|parallel_reduction_fix?| CONST-DECL "bool" |orthogonality_basis| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (SPP TYPE-EQ-DECL NIL |positions| NIL) (SPP? CONST-DECL "bool" |positions| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|parallel_reduction?| CONST-DECL "bool" |orthogonality_basis| NIL) (|diamond_property?| CONST-DECL "bool" |ars_terminology| NIL)) SHOSTAK) (|parallel_reduction_has_DP-1| |nil| 3549740761 ("" (AUTO-REWRITE (FINSEQ_APPL MEMBER)) (("" (SKOSIMP) (("" (EXPAND DIAMOND_PROPERTY?) (("" (SKEEP) (("" (EXPAND PARALLEL_REDUCTION? (-2 -3)) (("" (SKOSIMP*) (("" (ASSERT) (("" (LEMMA POS_OVER_AND_POS_EQUAL_DOMINANCE) (("" (INST-CP -1 FSP!1 FSP!2 X) (("" (INST -1 FSP!2 FSP!1 X) (("" (ASSERT) (("" (NAME-REPLACE "A" "Pos_Over(fsp!1, fsp!2) o Pos_Over(fsp!2, fsp!1) o Pos_Equal(fsp!1, fsp!2)") (("1" (CASE "SPP?(x)(A)") (("1" (LEMMA REPLACE_PAR_POS_DOMINANCE) (("1" (INST -1 E!1 A FSP!1 Y X) (("1" (ASSERT) (("1" (PROP) (("1" (LEMMA REPLACE_PAR_POS_DOMINANCE) (("1" (INST -1 E!1 A FSP!2 Z X) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE -4 -5) (("1" (EXPAND* PARALLEL_REDUCTION_FIX? FINSEQ_APPL) (("1" (SKOSIMP*) (("1" (LEMMA SUBTERMS_JOINABILITY) (("1" (EXPAND FINSEQ_APPL) (("1" (INST -1 E!1 A FSP!1 FSP!2 X Y Z) (("1" (ASSERT) (("1" (EXPAND A -1 1) (("1" (SKOSIMP) (("1" (LEMMA PARALLEL_REDUCTION_CONTEXT) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 "replace_par_pos(x, A, fst!1)") (("1" (SPLIT) (("1" (INST -1 E!1 A "subtermsOF(y, A)" FST!1 X) (("1" (ASSERT) (("1" (EXPAND SUBTERMSOF 2) (("1" (ASSERT) (("1" (SKEEP 2) (("1" (INST -2 I) (("1" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 E!1 A "subtermsOF(z, A)" FST!1 X) (("2" (ASSERT) (("2" (EXPAND SUBTERMSOF 2) (("2" (EXPAND FINSEQ_APPL) (("2" (SKEEP 2) (("2" (INST -2 I) (("2" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "dominates?") (("2" (SKEEP) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (INST -3 "kk!1") (("2" (SKOSIMP) (("2" (EXPAND O -3) (("2" (LIFT-IF) (("2" (ASSERT) (("2" (PROP) (("1" (INST 1 "A`seq(j!1 + Pos_Over(fsp!1, fsp!2)`length)") (("1" (ASSERT) (("1" (PROP) (("1" (INST?) (("1" (EXPAND A 1) (("1" (EXPAND O 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (INST 2 "A`seq(j!1 - Pos_Over(fsp!2, fsp!1)`length)") (("1" (ASSERT) (("1" (PROP) (("1" (INST?) (("1" (EXPAND A 1) (("1" (EXPAND O 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 -4 -5 -6 -7 3) (("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP!2 FSP!1) (("3" (TYPEPRED (FSP!1 FSP!2)) (("3" (EXPAND* SPP?) (("3" (FLATTEN) (("3" (ASSERT) (("3" (LEMMA POS_EQUAL_CHARACTER) (("3" (INST -1 FSP!2 FSP!1) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1") (("1" (INST -6 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1") (("1" (LEMMA SAME_POS_IN_POS_EQUAL) (("1" (INST -1 FSP!1 FSP!2 "Pos_Equal(fsp!2, fsp!1)`seq(-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + j!1)") (("1" (ASSERT) (("1" (HIDE -7) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (PROP) (("1" (SKOSIMP) (("1" (INST 2 "A`seq(i!1 + Pos_Over(fsp!1, fsp!2)`length + Pos_Over(fsp!2, fsp!1)`length)") (("1" (PROP) (("1" (INST 1 "i!1 + Pos_Over(fsp!1, fsp!2)`length + Pos_Over(fsp!2, fsp!1)`length") (("1" (EXPAND A 1) (("1" (EXPAND O 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND A 1) (("2" (EXPAND O 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED J!1) (("2" (EXPAND O -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED J!1) (("2" (EXPAND O -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "dominates?") (("2" (SKOSIMP) (("2" (EXPAND "seq2set") (("2" (EXPAND "finseq_appl") (("2" (SKOSIMP) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (INST -3 "kk!1") (("2" (SKOSIMP) (("2" (INST 1 "A`seq(j!1)") (("1" (PROP) (("1" (INST?) (("1" (EXPAND A 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND A 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND A 1) (("2" (TYPEPRED (FSP!1 FSP!2)) (("2" (EXPAND SPP?) (("2" (FLATTEN) (("2" (REWRITE POS_OVER_AND_POS_EQUAL_IS_PP) (("2" (EXPAND O 1) (("2" (EXPAND* SP? FINSEQ_APPL) (("2" (SKEEP) (("2" (PROP) (("1" (LEMMA POS_OVER_IS_SUB_SEQ) (("1" (INST -1 FSP!1 FSP!2) (("1" (ASSERT) (("1" (EXPAND* SUBSEQ FINSEQ_APPL) (("1" (INST -1 I) (("1" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("1" (SKOSIMP) (("1" (INST -5 I!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA POS_OVER_IS_SUB_SEQ) (("2" (INST -1 FSP!2 FSP!1) (("2" (ASSERT) (("2" (EXPAND* SUBSEQ FINSEQ_APPL) (("2" (INST -1 "i - Pos_Over(fsp!1, fsp!2)`length") (("2" (EXPAND* MEMBER_SEQ FINSEQ_APPL) (("2" (SKOSIMP) (("2" (INST -6 I!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA POS_EQUAL_IS_SUB_SEQ) (("3" (INST -1 FSP!1 FSP!2) (("3" (ASSERT) (("3" (EXPAND* SUBSEQ MEMBER_SEQ FINSEQ_APPL) (("3" (INST -1 "-1 * Pos_Over(fsp!1, fsp!2)`length - Pos_Over(fsp!2, fsp!1)`length + i") (("3" (SKOSIMP) (("3" (INST -3 I!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED FSP!2) (("2" (EXPAND SPP?) (("2" (FLATTEN) NIL NIL)) NIL)) NIL) ("3" (TYPEPRED FSP!1) (("3" (EXPAND SPP?) (("3" (FLATTEN) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|Orthogonal_implies_confluent| 0 (|Orthogonal_implies_confluent-2| "" 3885095405 ("" (SKOSIMP) (("" (ASSERT) (("" (EXPAND "confluent?") (("" (SKEEP) (("" (LEMMA "parallel_reduction_rtc") (("" (INST -1 "E!1") (("" (EXPAND "joinable?") (("" (LEMMA "parallel_reduction_has_dp") (("" (INST -1 "E!1") (("" (LEMMA "dp_implies_stc") (("" (INST -1 "parallel_reduction?(E!1)") (("" (ASSERT) (("" (LEMMA "strong_confl_implies_confl") (("" (INST -1 "parallel_reduction?(E!1)") (("" (ASSERT) (("" (EXPAND "confluent?") (("" (INST -1 "x" "y" "z") (("" (ASSERT) (("" (EXPAND "joinable?") (("" (SKOSIMP) (("" (INST 1 "z!1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|Orthogonal_implies_confluent-1| |nil| 3445676656 ("" (SKOSIMP) (("" (ASSERT) (("" (EXPAND CONFLUENT?) (("" (SKEEP) (("" (LEMMA PARALLEL_REDUCTION_RTC) (("" (INST -1 E!1) (("" (EXPAND JOINABLE?) (("" (LEMMA PARALLEL_REDUCTION_HAS_DP) (("" (INST -1 E!1) (("" (LEMMA DP_IMPLIES_STC) (("" (INST -1 "parallel_reduction?(E!1)") (("" (ASSERT) (("" (LEMMA STRONG_CONFL_IMPLIES_CONFL) (("" (INST -1 "parallel_reduction?(E!1)") (("" (ASSERT) (("" (EXPAND CONFLUENT?) (("" (INST -1 X Y Z) (("" (ASSERT) (("" (EXPAND JOINABLE?) (("" (SKOSIMP) (("" (INST 1 Z!1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|term| TYPE-DECL NIL |term_adt| NIL) (|rewrite_rule?| CONST-DECL "bool" |rewrite_rules| NIL) (|rewrite_rule| TYPE-EQ-DECL NIL |rewrite_rules| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|Orthogonal?| CONST-DECL "bool" |orthogonality_basis| NIL) (|Orthogonal| TYPE-EQ-DECL NIL |orthogonality_basis| NIL) (|parallel_reduction_has_DP| FORMULA-DECL NIL |orthogonality| NIL) (|DP_implies_StC| FORMULA-DECL NIL |results_confluence| NIL) (|Strong_Confl_implies_Confl| FORMULA-DECL NIL |results_confluence| NIL) (|parallel_reduction?| CONST-DECL "bool" |orthogonality_basis| NIL) (PRED TYPE-EQ-DECL NIL |defined_types| NIL) (|joinable?| CONST-DECL "bool" |ars_terminology| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |orthogonality| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |orthogonality| NIL) (|parallel_reduction_RTC| FORMULA-DECL NIL |orthogonality_basis| NIL) (|confluent?| CONST-DECL "bool" |ars_terminology| NIL)) SHOSTAK)))
