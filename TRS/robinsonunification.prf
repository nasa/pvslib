(|robinsonunification| (|IMP_unification_TCC1| 0 (|IMP_unification_TCC1-1| |nil| 3467989055 ("" (LEMMA VAR_COUNTABLE) (("" (PROPAX) NIL NIL)) NIL) ((|var_countable| FORMULA-DECL NIL |robinsonunification| NIL)) NIL (|IMP_unification| ASSUMING "unification[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].unification" "var_countable: ASSUMPTION countability[term_adt[unification.variable, unification.symbol, unification.arity].term].is_countably_infinite(variables_term[unification.variable, unification.symbol, unification.arity].V)"))) (|xx_TCC1| 0 (|xx_TCC1-2| "" 3884996704 ("" (LEMMA "var_nonempty") (("" (EXPAND* "nonempty?" "empty?") (("" (SKOSIMP*) (("" (INST 1 "x!1") (("" (ASSERT) (("" (EXPAND "member") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|xx| EXISTENCE "" "(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)")) (|xx_TCC1-1| |nil| 3468765193 ("" (LEMMA VAR_NONEMPTY) (("" (EXPAND* NONEMPTY? EMPTY?) (("" (SKOSIMP*) (("" (INST 1 X!1) (("" (ASSERT) (("" (EXPAND MEMBER) (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|empty?| CONST-DECL "bool" |sets| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|x!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|var_nonempty| FORMULA-DECL NIL |robinsonunification| NIL)) NIL (|xx| EXISTENCE "" "(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)"))) (|ff_TCC1| 0 (|ff_TCC1-2| "" 3884996727 ("" (LEMMA "symbol_nonempty") (("" (EXPAND* "nonempty?" "empty?") (("" (SKOSIMP) (("" (EXPAND "member") (("" (INST 1 "x!1") NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|ff| EXISTENCE "" "{f: robinsonunification.symbol | robinsonunification.arity(f) = 1}")) (|ff_TCC1-1| |nil| 3474208611 ("" (LEMMA SYMBOL_NONEMPTY) (("" (EXPAND* NONEMPTY? EMPTY?) (("" (SKOSIMP) (("" (EXPAND MEMBER) (("" (INST 1 X!1) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|empty?| CONST-DECL "bool" |sets| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|x!1| SKOLEM-CONST-DECL "symbol" |robinsonunification| NIL) (|symbol_nonempty| FORMULA-DECL NIL |robinsonunification| NIL)) NIL (|ff| EXISTENCE "" "{f: robinsonunification.symbol | robinsonunification.arity(f) = 1}"))) (|fail_TCC1| 0 (|fail_TCC1-2| "" 3884996743 ("" (TYPEPRED "ff") (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL) NIL SHOSTAK (|fail| SUBTYPE "set2seq[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].#(robinsonunification.xx)" "{args: finite_sequences[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].finite_sequence | args`length = robinsonunification.arity(robinsonunification.ff)}")) (|fail_TCC1-1| |nil| 3467989055 ("" (TYPEPRED FF) (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL) ((|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|ff| CONST-DECL "{f: symbol | arity(f) = 1}" |robinsonunification| NIL)) NIL (|fail| SUBTYPE "set2seq[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].#(robinsonunification.xx)" "{args: finite_sequences[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].finite_sequence | args`length = robinsonunification.arity(robinsonunification.ff)}"))) (|fail_TCC2| 0 (|fail_TCC2-3| "" 3884997101 ("" (EXPAND "Sub?") (("" (CASE-REPLACE "Dom((id[(V)]
                       WITH [xx
                               := app[variable, symbol, arity]
                                      (ff,
                                        #[term[variable, symbol, arity]]
                                       (xx))])) = singleton(xx)") (("1" (HIDE -1) (("1" (REWRITE "finite_singleton") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (DECOMPOSE-EQUALITY) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "singleton") (("1" (EXPAND "Dom") (("1" (FLATTEN) (("1" (EXPAND "id") (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "singleton" "Dom") (("2" (FLATTEN) (("2" (GRIND) (("2" (TYPEPRED "xx") (("2" (EXPAND "V") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|fail| SUBTYPE "identity[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].id WITH [(robinsonunification.xx) := term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app(robinsonunification.ff, set2seq[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].#(robinsonunification.xx))]" "Sub[variable, symbol, arity]")) (|fail_TCC2-2| "" 3790333822 ("" (EXPAND SUB?) (("" (CASE-REPLACE "Dom((id[(V)]
                       WITH [xx
                               := app[variable, symbol, arity]
                                      (ff,
                                        #[term[variable, symbol, arity]]
                                       (xx))])) = singleton(xx)") (("1" (HIDE -1) (("1" (REWRITE FINITE_SINGLETON) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (DECOMPOSE-EQUALITY) (("2" (IFF) (("2" (PROP) (("1" (EXPAND SINGLETON) (("1" (EXPAND DOM) (("1" (FLATTEN) (("1" (EXPAND ID) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SINGLETON DOM) (("2" (FLATTEN) (("2" (GRIND) (("2" (TYPEPRED XX) (("2" (EXPAND V) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[(V)]" |robinsonunification| NIL) (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[term[variable, symbol, arity]]" |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|ff| CONST-DECL "{f: symbol | arity(f) = 1}" |robinsonunification| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|xx| CONST-DECL "(V)" |robinsonunification| NIL) (|singleton?| CONST-DECL "bool" |sets| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|finite_singleton| JUDGEMENT-TCC NIL |finite_sets| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL)) SHOSTAK (|fail| SUBTYPE "identity[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].id WITH [(robinsonunification.xx) := term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app(robinsonunification.ff, set2seq[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].#(robinsonunification.xx))]" "Sub[variable, symbol, arity]")) (|fail_TCC2-1| |nil| 3474208611 ("" (EXPAND SUB?) (("" (CASE-REPLACE "Dom((id[(V)]
                       WITH [xx
                               := app[variable, symbol, arity]
                                      (ff,
                                        #[term[variable, symbol, arity]]
                                       (xx))])) = singleton(xx)") (("1" (HIDE -1) (("1" (REWRITE FINITE_SINGLETON) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (DECOMPOSE-EQUALITY) (("2" (IFF) (("2" (PROP) (("1" (EXPAND SINGLETON) (("1" (EXPAND DOM) (("1" (FLATTEN) (("1" (EXPAND ID) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SINGLETON DOM) (("2" (FLATTEN) (("2" (GRIND) (("2" (REPLACES -1) (("2" (TYPEPRED XX) (("2" (EXPAND V) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|fail| SUBTYPE "identity[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].id WITH [(robinsonunification.xx) := term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app(robinsonunification.ff, set2seq[term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term].#(robinsonunification.xx))]" "Sub[variable, symbol, arity]"))) (|first_diff_TCC1| 0 (|first_diff_TCC1-2| "" 3756667884 ("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (LEMMA "positions_of_arg") (("" (INST -1 "s" "kk") (("1" (REPLACE -4 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|s| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|fp| SKOLEM-CONST-DECL "symbol" |robinsonunification| NIL) (|stp| SKOLEM-CONST-DECL "{args: finite_sequence[term[variable, symbol, arity]] |
   args`length = arity(fp)}" |robinsonunification| NIL) (|kk| SKOLEM-CONST-DECL "below[length(stp)]" |robinsonunification| NIL)) SHOSTAK (|first_diff| SUBTYPE "set2seq[posnat].#((number_fields.+)(robinsonunification.kk, 1))" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.s)")) (|first_diff_TCC1-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (LEMMA "positions_of_arg") (("" (INST -1 "s!1" "k!1") (("1" (TYPEPRED "k!1") (("1" (TYPEPRED ST!1) (("1" (TYPEPRED STP!1) (("1" (REPLACE -4 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|first_diff| SUBTYPE "set2seq[posnat].#((number_fields.+)(robinsonunification.kk, 1))" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.s)"))) (|first_diff_TCC2| 0 (|first_diff_TCC2-3| "" 3803854726 ("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (LEMMA "positions_of_arg") (("" (INST -1 "t" "kk") (("1" (REPLACE -5 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|s| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|t| SKOLEM-CONST-DECL "{t: term | s /= t}" |robinsonunification| NIL) (|fp| SKOLEM-CONST-DECL "symbol" |robinsonunification| NIL) (|stp| SKOLEM-CONST-DECL "{args: finite_sequence[term[variable, symbol, arity]] |
   args`length = arity(fp)}" |robinsonunification| NIL) (|kk| SKOLEM-CONST-DECL "below[length(stp)]" |robinsonunification| NIL)) SHOSTAK (|first_diff| SUBTYPE "set2seq[posnat].#((number_fields.+)(robinsonunification.kk, 1))" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.t)")) (|first_diff_TCC2-2| "" 3756667942 ("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (LEMMA "positions_of_arg") (("" (INST -1 "t" "kk") (("1" (REPLACE -6 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|first_diff| SUBTYPE "set2seq[posnat].#((number_fields.+)(robinsonunification.kk, 1))" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.t)")) (|first_diff_TCC2-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (LEMMA "positions_of_arg") (("" (INST -1 "t!1" "k!1") (("1" (TYPEPRED ST!1) (("1" (TYPEPRED STP!1) (("1" (REPLACE -5 1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|first_diff| SUBTYPE "set2seq[posnat].#((number_fields.+)(robinsonunification.kk, 1))" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.t)"))) (|first_diff_TCC3| 0 (|first_diff_TCC3-2| "" 3756668771 ("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (REPLACE -4 :HIDE? T) (("" (REPLACE -3 :HIDE? T) (("" (REPLACE -3 :HIDE? T) (("" (ASSERT) (("" (DECOMPOSE-EQUALITY 1) (("" (DECOMPOSE-EQUALITY 1) (("" (DECOMPOSE-EQUALITY 1) (("" (EXPAND "nonempty?") (("" (EXPAND "empty?") (("" (EXPAND "member") (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|first| CONST-DECL "T" |seq_extras| |structures|) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|empty?| CONST-DECL "bool" |sets| NIL) (< CONST-DECL "bool" |reals| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL)) SHOSTAK (|first_diff| SUBTYPE "{kk: nat_types[length(robinsonunification.stp)].below | subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, set2seq[posnat].#((number_fields.+)(kk, 1))) /= subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, set2seq[posnat].#((number_fields.+)(kk, 1)))}" "(sets[below[length(stp)]].nonempty?)")) (|first_diff_TCC3-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) NIL NIL (|first_diff| SUBTYPE "{kk: nat_types[length(robinsonunification.stp)].below | subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, set2seq[posnat].#((number_fields.+)(kk, 1))) /= subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, set2seq[posnat].#((number_fields.+)(kk, 1)))}" "(sets[below[length(stp)]].nonempty?)"))) (|first_diff_TCC4| 0 (|first_diff_TCC4-2| "" 3756668823 ("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK (|first_diff| SUBTYPE "subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, set2seq[posnat].#((number_fields.+)(robinsonunification.k, 1)))" "{t: term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term | (booleans.NOT)(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, set2seq[posnat].#((number_fields.+)(1, robinsonunification.k))) = t)}")) (|first_diff_TCC4-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (EXPAND "<<") (("" (LIFT-IF) (("" (PROP) (("1" (HIDE-ALL-BUT (-1 -2)) (("1" (ASSERT) NIL NIL)) NIL) ("2" (INST 2 K!1) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL) ("2" (REPLACE -1 1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL NIL (|first_diff| SUBTYPE "subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, set2seq[posnat].#((number_fields.+)(robinsonunification.k, 1)))" "{t: term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term | (booleans.NOT)(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, set2seq[posnat].#((number_fields.+)(1, robinsonunification.k))) = t)}"))) (|first_diff_TCC5| 0 (|first_diff_TCC5-2| "" 3756669193 ("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (SKEEP :PREDS? T) (("" (ASSERT) (("" (REPLACE -4 :HIDE? T) (("" (REPLACE -5 :HIDE? T) (("" (REPLACE -4 :HIDE? T) (("" (DECOMPOSE-EQUALITY 1) (("" (DECOMPOSE-EQUALITY 1) (("" (EXPAND "<<") (("" (ASSERT) (("" (DECOMPOSE-EQUALITY 1) (("" (INST 3 "k") (("" (ASSERT) (("" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|subterm| ADT-DEF-DECL "boolean" |term_adt| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|first| CONST-DECL "T" |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat_min| APPLICATION-JUDGEMENT "{k: nat | k <= i AND k <= j}" |real_defs| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (< CONST-DECL "bool" |reals| NIL) (<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) SHOSTAK (|first_diff| TERMINATION "robinsonunification.first_diff(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, set2seq[posnat].#((number_fields.+)(robinsonunification.k, 1))), subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, set2seq[posnat].#((number_fields.+)(robinsonunification.k, 1))))" "NIL")) (|first_diff_TCC5-1| |nil| 3468147562 ("" (SKOSIMP*) (("" (LEMMA "positions_of_arg") (("" (INST -1 "s!1" "kk!1") (("1" (REPLACE -1 1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|first_diff| TERMINATION "robinsonunification.first_diff(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, set2seq[posnat].#((number_fields.+)(robinsonunification.k, 1))), subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, set2seq[posnat].#((number_fields.+)(robinsonunification.k, 1))))" "NIL"))) (|comutative_first_diff_TCC1| 0 (|comutative_first_diff_TCC1-1| |nil| 3468654719 ("" (SKOSIMP) (("" (TYPEPRED "t!1") (("" (ASSERT) NIL NIL)) NIL)) NIL) ((/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)) NIL (|comutative_first_diff| SUBTYPE "robinsonunification.s" "{t_1: term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term | robinsonunification.t /= t_1}"))) (|comutative_first_diff| 0 (|comutative_first_diff-3| "" 3884997611 ("" (MEASURE-INDUCT+ "length(p)" "p") (("" (SKOSIMP) (("" (EXPAND "first_diff" -2) (("" (LIFT-IF) (("" (ASSERT) (("" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] | NOT
                    subtermOF(s!1,  #(1 + kk)) = subtermOF (t!1,  #(1 + kk))})" :HIDE? NIL) (("1" (NAME-REPLACE "k!1" "1 + k!11") (("1" (PROP) (("1" (HIDE -3 -4) (("1" (EXPAND "first_diff" 1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -4) (("2" (EXPAND "first_diff") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (REVEAL -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (HIDE -4) (("3" (EXPAND "first_diff" 3) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("4" (INST -4 "first_diff(subtermOF(s!1,  #(k!1)),
                                              subtermOF(t!1,  #(k!1)))") (("4" (INST -4 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("4" (PROP) (("1" (EXPAND "first_diff" 4) (("1" (ASSERT) (("1" (NAME-REPLACE "k!22" "min({kk: below[length(args(s!1))] | NOT
                                     subtermOF(t!1,  #(1 + kk)) = subtermOF(s!1,  #(1 + kk))})" :HIDE? NIL) (("1" (NAME-REPLACE "k!2" "1 + k!22") (("1" (REVEAL -4 -1) (("1" (REPLACE -3 -1 RL) (("1" (REPLACE -7 -2 RL) (("1" (HIDE (-3 -7)) (("1" (CASE "k!1 = k!2") (("1" (REPLACES -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "length(args(s!1))=length(args(t!1))") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REPLACE -2 1 RL) (("1" (REPLACE -3 1 RL) (("1" (ASSERT) (("1" (NAME-REPLACE "myset" " min({kk: below[length(args(s!1))] |
                                                        NOT subtermOF(t!1,  #(1 + kk)) = subtermOF(s!1,  #(1 + kk))})" :HIDE? NIL) (("1" (REWRITE "min_def") (("1" (REWRITE "min_def") (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "minimum?") (("1" (SKOSIMP*) (("1" (INST -1 "x!2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3 4 5)) (("2" (LEMMA "first_diff_tcc3") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-6 1 3 4 5)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 6) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 1 3 4 5)) (("2" (LEMMA "first_diff_tcc3") (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-6 1 3 4 5)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 6) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-5 1 3 4 5)) (("2" (LEMMA "first_diff_tcc3") (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (2 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (2 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-4 1)) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1 2 3 4)) (("2" (LEMMA "first_diff_tcc3") (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1 2 3 4)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (EXPAND* "add_first" "insert?") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 -3) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("1" (HIDE -3 1) (("1" (EXPAND "first_diff") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2) (("2" (EXPAND "first_diff") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (LEMMA "first_diff_TCC3") (("4" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("4" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (REVEAL -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 5) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (PROP) (("1" (HIDE -3 1) (("1" (EXPAND "first_diff") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2) (("2" (EXPAND "first_diff") (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE -2 -3 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -) (("5" (SKOSIMP*) (("5" (LEMMA "positions_of_arg") (("5" (INST -1 "t!1" "kk!1") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1) (("4" (PROP) (("1" (HIDE 1) (("1" (EXPAND "first_diff") (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "first_diff") (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE -2 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 5) (("2" (TYPEPRED "kk!1") (("2" (LEMMA "equal_symbol_equal_length_arg") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "f(t!1)" "args(s!1)" "args(t!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 5) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (PROP) (("1" (HIDE -3) (("1" (EXPAND "first_diff") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND "first_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE -3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|comutative_first_diff-2| "" 3756667485 ("" (MEASURE-INDUCT+ "length(p)" "p") (("" (SKOSIMP) (("" (EXPAND "first_diff" -2) (("" (LIFT-IF) (("" (ASSERT) (("" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] | NOT
                    subtermOF(s!1,  #(1 + kk)) = subtermOF (t!1,  #(1 + kk))})" :HIDE? NIL) (("1" (NAME-REPLACE "k!1" "1 + k!11") (("1" (PROP) (("1" (HIDE -3 -4) (("1" (EXPAND "first_diff" 1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -4) (("2" (EXPAND "first_diff") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (REVEAL -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (HIDE -4) (("3" (EXPAND "first_diff" 3) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("4" (INST -4 "first_diff(subtermOF(s!1,  #(k!1)),
                                              subtermOF(t!1,  #(k!1)))") (("4" (INST -4 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("4" (PROP) (("1" (EXPAND "first_diff" 4) (("1" (ASSERT) (("1" (NAME-REPLACE "k!22" "min({kk: below[length(args(s!1))] | NOT
                                     subtermOF(t!1,  #(1 + kk)) = subtermOF(s!1,  #(1 + kk))})" :HIDE? NIL) (("1" (NAME-REPLACE "k!2" "1 + k!22") (("1" (REVEAL -4 -1) (("1" (REPLACE -3 -1 RL) (("1" (REPLACE -7 -2 RL) (("1" (HIDE (-3 -7)) (("1" (CASE "k!1 = k!2") (("1" (REPLACES -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "length(args(s!1))=length(args(t!1))") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REPLACE -2 1 RL) (("1" (REPLACE -3 1 RL) (("1" (ASSERT) (("1" (NAME-REPLACE "myset" " min({kk: below[length(args(s!1))] |
                                                        NOT subtermOF(t!1,  #(1 + kk)) = subtermOF(s!1,  #(1 + kk))})" :HIDE? NIL) (("1" (REWRITE MIN_DEF) (("1" (REWRITE MIN_DEF) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND MINIMUM?) (("1" (SKOSIMP*) (("1" (INST -1 X!2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-6 1 3 4 5)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 6) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-6 1 3 4 5)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 6) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-5 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (2 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (2 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-4 1)) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1 2 3 4)) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1 2 3 4)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (EXPAND* "add_first" "insert?") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 -3) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("1" (HIDE -3 1) (("1" (EXPAND "first_diff") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2) (("2" (EXPAND "first_diff") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (LEMMA "first_diff_TCC3") (("4" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("4" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (REVEAL -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 5) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (PROP) (("1" (HIDE -3 1) (("1" (EXPAND "first_diff") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2) (("2" (EXPAND "first_diff") (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE -2 -3 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -) (("5" (SKOSIMP*) (("5" (LEMMA "positions_of_arg") (("5" (INST -1 "t!1" "kk!1") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1) (("4" (PROP) (("1" (HIDE 1) (("1" (EXPAND "first_diff") (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "first_diff") (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE -2 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 5) (("2" (TYPEPRED "kk!1") (("2" (LEMMA "equal_symbol_equal_length_arg") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "f(t!1)" "args(s!1)" "args(t!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 5) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (PROP) (("1" (HIDE -3) (("1" (EXPAND "first_diff") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND "first_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE -3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}" |min_nat| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (TRUE CONST-DECL "bool" |booleans| NIL) (|min_def| FORMULA-DECL NIL |min_nat| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|first_diff_TCC3| SUBTYPE-TCC NIL |robinsonunification| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minimum?| CONST-DECL "bool" |min_nat| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|kk!1| SKOLEM-CONST-DECL "below[length(args[variable, symbol, arity](t!1))]" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|equal_symbol_equal_length_arg| FORMULA-DECL NIL |positions| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK) (|comutative_first_diff-1| |nil| 3468654726 ("" (MEASURE-INDUCT+ "length(p)" "p") (("" (SKOSIMP) (("" (EXPAND "first_diff" -2) (("" (LIFT-IF) (("" (ASSERT) (("" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] | NOT
                    subtermOF(s!1,  #(1 + kk)) = subtermOF (t!1,  #(1 + kk))})" :HIDE? NIL) (("1" (NAME-REPLACE "k!1" "1 + k!11") (("1" (PROP) (("1" (HIDE -3 -4) (("1" (EXPAND "first_diff" 1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -4) (("2" (EXPAND "first_diff") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (REVEAL -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) (("3" (HIDE -4) (("3" (EXPAND "first_diff" 3) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("4" (INST -4 "first_diff(subtermOF(s!1,  #(k!1)),
                                              subtermOF(t!1,  #(k!1)))") (("4" (INST -4 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("4" (PROP) (("1" (EXPAND "first_diff" 4) (("1" (ASSERT) (("1" (NAME-REPLACE "k!22" "min({kk: below[length(args(s!1))] | NOT
                                     subtermOF(t!1,  #(1 + kk)) = subtermOF(s!1,  #(1 + kk))})" :HIDE? NIL) (("1" (NAME-REPLACE "k!2" "1 + k!22") (("1" (REVEAL -4 -1) (("1" (REPLACE -3 -1 RL) (("1" (REPLACE -7 -2 RL) (("1" (HIDE (-3 -7)) (("1" (CASE "k!1 = k!2") (("1" (REPLACES -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (CASE "length(args(s!1))=length(args(t!1))") (("1" (REPLACE -1) (("1" (ASSERT) (("1" (REPLACE -2 1 RL) (("1" (REPLACE -3 1 RL) (("1" (ASSERT) (("1" (NAME-REPLACE "myset" " min({kk: below[length(args(s!1))] |
                                                        NOT subtermOF(t!1,  #(1 + kk)) = subtermOF(s!1,  #(1 + kk))})" :HIDE? NIL) (("1" (REWRITE MIN_DEF) (("1" (REWRITE MIN_DEF) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND MINIMUM?) (("1" (SKOSIMP*) (("1" (INST -1 X!2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-6 1 3 4 5)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 6) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-6 1 3 4 5)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 6) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-5 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (2 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (2 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-4 1)) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1 2 3 4)) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "t!1" "s!1" "f(t!1)" "args(t!1)") (("2" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1 2 3 4)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "s!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (EXPAND* "add_first" "insert?") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 -3) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("1" (HIDE -3 1) (("1" (EXPAND "first_diff") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2) (("2" (EXPAND "first_diff") (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (LEMMA "first_diff_TCC7") (("4" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("4" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (REVEAL -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 2)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 5) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (PROP) (("1" (HIDE -3 1) (("1" (EXPAND "first_diff") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 2) (("2" (EXPAND "first_diff") (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE -2 -3 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "t!1" "kk!1") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -) (("5" (SKOSIMP*) (("5" (LEMMA "positions_of_arg") (("5" (INST -1 "t!1" "kk!1") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1) (("4" (PROP) (("1" (HIDE 1) (("1" (EXPAND "first_diff") (("1" (LIFT-IF) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "first_diff") (("2" (LIFT-IF) (("2" (PROP) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE 3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (HIDE -2 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE 5) (("2" (TYPEPRED "kk!1") (("2" (LEMMA "equal_symbol_equal_length_arg") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "f(t!1)" "args(s!1)" "args(t!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE 5) (("5" (EXPAND "first_diff") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("5" (PROP) (("1" (HIDE -3) (("1" (EXPAND "first_diff") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND "first_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE -3) (("3" (EXPAND "first_diff") (("3" (ASSERT) NIL NIL)) NIL)) NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|position_s_first_diff| 0 (|position_s_first_diff-2| "" 3756667591 ("" (MEASURE-INDUCT+ "length(p)" "p") (("" (SKOSIMP) (("" (EXPAND "first_diff" -2) (("" (LIFT-IF) (("" (PROP) (("1" (HIDE -3) (("1" (REPLACES -2) (("1" (EXPAND "positionsOF") (("1" (ASSERT) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (REPLACES -2) (("2" (EXPAND "positionsOF") (("2" (ASSERT) (("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3) (("3" (REPLACES -2) (("3" (EXPAND "positionsOF") (("3" (ASSERT) (("3" (EXPAND* "union" "only_empty_seq" "IUnion" "member") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] | NOT
                            subtermOF(s!1,  #(1 + kk)) = subtermOF (t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1 + k!11") (("1" (INST -3 "first_diff(subtermOF(s!1, #(k!1)), subtermOF(t!1, #(k!1)))" "subtermOF(s!1, #(k!1))" "subtermOF(t!1, #(k!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (REPLACE -1 -2) (("1" (EXPAND "add_first" -2) (("1" (EXPAND "insert?" -2) (("1" (REWRITE "add_first_is_o") (("1" (LEMMA "pos_o_term") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE (-1 -2 5)) (("1" (REVEAL -7) (("1" (REPLACE -1 1 RL) (("1" (HIDE -1) (("1" (LEMMA "positions_of_arg") (("1" (INST -1 "s!1" "k!11") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "k!11") (("2" (HIDE (-2 1 3)) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE - 5) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - 5) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (REPLACES -1) (("5" (HIDE -1 1 2) (("5" (EXPAND "positionsOF") (("5" (ASSERT) (("5" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|kk!1| SKOLEM-CONST-DECL "below[length(args[variable, symbol, arity](t!1))]" |robinsonunification| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|first_diff_TCC3| SUBTYPE-TCC NIL |robinsonunification| NIL) (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|pos_o_term| FORMULA-DECL NIL |subterm| NIL) (|k!11| SKOLEM-CONST-DECL "{a |
   NOT subtermOF(s!1,  #(1 + a)) = subtermOF(t!1,  #(1 + a)) AND
    FORALL (x: below[length(args(t!1))]):
      NOT subtermOF(s!1,  #(1 + x)) = subtermOF(t!1,  #(1 + x)) IMPLIES
       a <= x}" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|add_first_is_o| FORMULA-DECL NIL |seq_extras| |structures|) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|min| CONST-DECL "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}" |min_nat| NIL) (<= CONST-DECL "bool" |reals| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|union| CONST-DECL "set" |sets| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK) (|position_s_first_diff-1| |nil| 3468178714 ("" (MEASURE-INDUCT+ "length(p)" "p") (("" (SKOSIMP) (("" (EXPAND "first_diff" -2) (("" (LIFT-IF) (("" (PROP) (("1" (HIDE -3) (("1" (REPLACES -2) (("1" (EXPAND "positionsOF") (("1" (ASSERT) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (REPLACES -2) (("2" (EXPAND "positionsOF") (("2" (ASSERT) (("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3) (("3" (REPLACES -2) (("3" (EXPAND "positionsOF") (("3" (ASSERT) (("3" (EXPAND* "union" "only_empty_seq" "IUnion" "member") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] | NOT
                        subtermOF(s!1,  #(1 + kk)) = subtermOF (t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1 + k!11") (("1" (INST -3 "first_diff(subtermOF(s!1, #(k!1)), subtermOF(t!1, #(k!1)))" "subtermOF(s!1, #(k!1))" "subtermOF(t!1, #(k!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (REPLACE -1 -2) (("1" (EXPAND "add_first" -2) (("1" (EXPAND "insert?" -2) (("1" (REWRITE "add_first_is_o") (("1" (LEMMA "pos_o_term") (("1" (INST?) (("1" (ASSERT) (("1" (HIDE (-1 -2 5)) (("1" (REVEAL -7) (("1" (REPLACE -1 1 RL) (("1" (HIDE -1) (("1" (LEMMA "positions_of_arg") (("1" (INST -1 "s!1" "k!11") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "k!11") (("2" (HIDE (-2 1 3)) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE - 5) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - 5) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - 5) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (REPLACES -1) (("5" (HIDE -1 1 2) (("5" (EXPAND "positionsOF") (("5" (ASSERT) (("5" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|position_t_first_diff| 0 (|position_t_first_diff-2| "" 3884997650 ("" (LEMMA "comutative_first_diff") (("" (LEMMA "position_s_first_diff") (("" (SKOSIMP*) (("" (INST -1 "t!1" "s!1" "p!1") (("" (INST -2 "s!1" "t!1" "p!1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|position_t_first_diff-1| |nil| 3468768340 ("" (LEMMA COMUTATIVE_FIRST_DIFF) (("" (LEMMA POSITION_S_FIRST_DIFF) (("" (SKOSIMP*) (("" (INST -1 T!1 S!1 P!1) (("" (INST -2 S!1 T!1 P!1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|comutative_first_diff| FORMULA-DECL NIL |robinsonunification| NIL)) SHOSTAK)) (|first_diff_has_diff_argument_TCC1| 0 (|first_diff_has_diff_argument_TCC1-2| "" 3884997668 ("" (SKOSIMP) (("" (LEMMA "position_s_first_diff") (("" (INST -1 "s!1" "t!1" "p!1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|first_diff_has_diff_argument| SUBTYPE "robinsonunification.p" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.s)")) (|first_diff_has_diff_argument_TCC1-1| |nil| 3469282256 ("" (SKOSIMP) (("" (LEMMA POSITION_S_FIRST_DIFF) (("" (INST -1 S!1 T!1 P!1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ((|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) NIL (|first_diff_has_diff_argument| SUBTYPE "robinsonunification.p" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.s)"))) (|first_diff_has_diff_argument_TCC2| 0 (|first_diff_has_diff_argument_TCC2-1| |nil| 3469282256 ("" (SKOSIMP) (("" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ((|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL)) NIL (|first_diff_has_diff_argument| SUBTYPE "robinsonunification.p" "positions?[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity](robinsonunification.t)"))) (|first_diff_has_diff_argument| 0 (|first_diff_has_diff_argument-4| "" 3884998019 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND "first_diff" -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACES -2) (("1" (HIDE -1 -2) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0") (("1" (TYPEPRED "t!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -2) (("2" (HIDE -1 -2 1) (("2" (EXPAND "subtermOF") (("2" (REWRITE "empty_0") (("2" (TYPEPRED "t!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACES -2) (("3" (HIDE -1 -2 1 2) (("3" (EXPAND "subtermOF") (("3" (REWRITE "empty_0") (("3" (TYPEPRED "t!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                 NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 "first_diff(subtermOF(s!1,  #(k!1)),
                                                    subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND "add_first" -3) (("1" (EXPAND "insert?" -3) (("1" (FLATTEN) (("1" (NAME-REPLACE "p!1" "first_diff(subtermOF(s!1,  #(k!1)),
                                                    subtermOF(t!1,  #(k!1)))" :HIDE? NIL) (("1" (LEMMA "subt_of_subt_is_subt_of_term") (("1" (INST -1 "s!1" "k!1" "p!1" "x!1") (("1" (ASSERT) (("1" (LEMMA "subt_of_subt_is_subt_of_term") (("1" (INST -1 "t!1" "k!1" "p!1" "x!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 -6 5) (("2" (REVEAL -8) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (LEMMA "first_diff_tcc2") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") NIL NIL)) NIL)) NIL) ("2" (REVEAL -14) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE - 5) (("2" (REVEAL -8) (("2" (REVEAL -9) (("2" (LEMMA "first_diff_tcc1") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (LEMMA "first_diff_tcc3") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 +) (("5" (REPLACES -1) (("5" (EXPAND "subtermOF") (("5" (REWRITE "empty_0") (("5" (TYPEPRED "t!1") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (REWRITE "position_t_first_diff") NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "s!1" "t!1" "y!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REWRITE "position_t_first_diff") NIL NIL)) NIL) ("5" (HIDE 2) (("5" (LEMMA "position_s_first_diff") (("5" (INST -1 "s!1" "t!1" "p!1") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|first_diff_has_diff_argument-3| "" 3803855574 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND FIRST_DIFF -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACES -2) (("1" (HIDE -1 -2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) (("1" (TYPEPRED T!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -2) (("2" (HIDE -1 -2 1) (("2" (EXPAND SUBTERMOF) (("2" (REWRITE EMPTY_0) (("2" (TYPEPRED T!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACES -2) (("3" (HIDE -1 -2 1 2) (("3" (EXPAND SUBTERMOF) (("3" (REWRITE EMPTY_0) (("3" (TYPEPRED T!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                 NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 "first_diff(subtermOF(s!1,  #(k!1)),
                                                    subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND ADD_FIRST -3) (("1" (EXPAND INSERT? -3) (("1" (FLATTEN) (("1" (NAME-REPLACE "p!1" "first_diff(subtermOF(s!1,  #(k!1)),
                                                    subtermOF(t!1,  #(k!1)))" :HIDE? NIL) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 S!1 K!1 P!1 X!1) (("1" (ASSERT) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 T!1 K!1 P!1 X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 -6 5) (("2" (REVEAL -8) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (LEMMA FIRST_DIFF_TCC2) (("2" (INST -1 S!1 T!1 "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") NIL NIL)) NIL)) NIL) ("2" (REVEAL -14) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE - 5) (("2" (REVEAL -8) (("2" (REVEAL -9) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 S!1 T!1 "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 +) (("5" (REPLACES -1) (("5" (EXPAND SUBTERMOF) (("5" (REWRITE EMPTY_0) (("5" (TYPEPRED T!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 Y!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("5" (HIDE 2) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 S!1 T!1 P!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|kk!1| SKOLEM-CONST-DECL "below[length(args[variable, symbol, arity](t!1))]" |robinsonunification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (|first_diff_TCC3| SUBTYPE-TCC NIL |robinsonunification| NIL) (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|subt_of_subt_is_subt_of_term| FORMULA-DECL NIL |subterm| NIL) (|first_diff_TCC1| SUBTYPE-TCC NIL |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|first_diff_TCC2| SUBTYPE-TCC NIL |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|k!1| SKOLEM-CONST-DECL "posint" |robinsonunification| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|min| CONST-DECL "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}" |min_nat| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK) (|first_diff_has_diff_argument-2| "" 3756667644 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND FIRST_DIFF -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACES -2) (("1" (HIDE -1 -2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) (("1" (TYPEPRED T!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -2) (("2" (HIDE -1 -2 1) (("2" (EXPAND SUBTERMOF) (("2" (REWRITE EMPTY_0) (("2" (TYPEPRED T!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACES -2) (("3" (HIDE -1 -2 1 2) (("3" (EXPAND SUBTERMOF) (("3" (REWRITE EMPTY_0) (("3" (TYPEPRED T!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                 NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 "first_diff(subtermOF(s!1,  #(k!1)),
                                                    subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND ADD_FIRST -3) (("1" (EXPAND INSERT? -3) (("1" (FLATTEN) (("1" (NAME-REPLACE "p!1" "first_diff(subtermOF(s!1,  #(k!1)),
                                                    subtermOF(t!1,  #(k!1)))" :HIDE? NIL) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 S!1 K!1 P!1 X!1) (("1" (ASSERT) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 T!1 K!1 P!1 X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 -6 5) (("2" (REVEAL -8) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (LEMMA FIRST_DIFF_TCC2) (("2" (INST -1 S!1 T!1 "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") NIL NIL)) NIL)) NIL) ("2" (REVEAL -14) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE - 5) (("2" (REVEAL -8) (("2" (REVEAL -9) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 S!1 T!1 "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 +) (("5" (REPLACES -1) (("5" (EXPAND SUBTERMOF) (("5" (REWRITE EMPTY_0) (("5" (TYPEPRED T!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 Y!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("5" (HIDE 2) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 S!1 T!1 P!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|first_diff_has_diff_argument-1| |nil| 3469282257 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND FIRST_DIFF -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACES -2) (("1" (HIDE -1 -2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) (("1" (TYPEPRED T!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -2) (("2" (HIDE -1 -2 1) (("2" (EXPAND SUBTERMOF) (("2" (REWRITE EMPTY_0) (("2" (TYPEPRED T!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACES -2) (("3" (HIDE -1 -2 1 2) (("3" (EXPAND SUBTERMOF) (("3" (REWRITE EMPTY_0) (("3" (TYPEPRED T!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                           NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 "first_diff(subtermOF(s!1,  #(k!1)),
                                            subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND ADD_FIRST -3) (("1" (EXPAND INSERT? -3) (("1" (FLATTEN) (("1" (NAME-REPLACE "p!1" "first_diff(subtermOF(s!1,  #(k!1)),
                                            subtermOF(t!1,  #(k!1)))" :HIDE? NIL) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 S!1 K!1 P!1 X!1) (("1" (ASSERT) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 T!1 K!1 P!1 X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 -6 5) (("2" (REVEAL -8) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (LEMMA FIRST_DIFF_TCC2) (("2" (INST -1 S!1 T!1 "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (REVEAL -14) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE - 5) (("2" (REVEAL -8) (("2" (REVEAL -9) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 S!1 T!1 "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -2 +) (("5" (REPLACES -1) (("5" (EXPAND SUBTERMOF) (("5" (REWRITE EMPTY_0) (("5" (TYPEPRED T!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 Y!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("5" (HIDE 2) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 S!1 T!1 P!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|first_diff_unifiable_vars| 0 (|first_diff_unifiable_vars-4| "" 3884998451 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND "first_diff" -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -3 -4 2) (("1" (REPLACES -2) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND "unifiable") (("2" (SKEEP -3) (("2" (EXPAND "unifier") (("2" (EXPAND "ext" -3 1) (("2" (ASSERT) (("2" (REPLACES -2) (("2" (EXPAND "subtermOF") (("2" (REWRITE "empty_0") (("2" (HIDE 1) (("2" (TYPEPRED "t!1") (("2" (FLATTEN) (("2" (EXPAND "ext" -2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 -4 1 2 3) (("3" (REPLACES -2) (("3" (EXPAND "subtermOF") (("3" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                             NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 " first_diff(subtermOF(s!1,  #(k!1)),
                                                            subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND "add_first" -3) (("1" (EXPAND "insert?" -3) (("1" (PROP) (("1" (LEMMA "subt_of_subt_is_subt_of_term") (("1" (INST -1 "s!1" "k!1" "first_diff(subtermOF(s!1,  #(k!1)),
                                                                    subtermOF(t!1,  #(k!1)))" "x!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA "first_diff_TCC1") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "subt_of_subt_is_subt_of_term") (("2" (INST -1 "t!1" "k!1" "first_diff(subtermOF(s!1,  #(k!1)),
                                                                    subtermOF(t!1,  #(k!1)))" "x!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA "first_diff_TCC2") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 5 6) (("3" (LEMMA "unifiable_terms_unifiable_args") (("3" (EXPAND "unifiable") (("3" (SKOSIMP) (("3" (INST 1 "sigma!1") (("3" (INST -1 "sigma!1" "s!1" "t!1" "#(k!1)") (("1" (EXPAND* "member" "U") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REVEAL -5) (("2" (REVEAL -6) (("2" (LEMMA "first_diff_TCC1") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) (("1" (LEMMA "first_diff_TCC2") (("1" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 5 6) (("2" (LEMMA "first_diff_TCC3") (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (5 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (5 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 -2 5 6) (("5" (EXPAND "unifiable") (("5" (SKEEP -1) (("5" (EXPAND "unifier") (("5" (EXPAND "ext") (("5" (ASSERT) (("5" (LIFT-IF) (("5" (PROP) (("1" (DECOMPOSE-EQUALITY -2) NIL NIL) ("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 2)) (("2" (REWRITE "position_t_first_diff") NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "s!1" "t!1" "y!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (-1 2)) (("4" (REWRITE "position_t_first_diff") NIL NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 1)) (("5" (LEMMA "position_s_first_diff") (("5" (INST -1 "s!1" "t!1" "p!1") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|first_diff_unifiable_vars-3| "" 3803855883 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND FIRST_DIFF -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -3 -4 2) (("1" (REPLACES -2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND UNIFIABLE) (("2" (SKEEP -3) (("2" (EXPAND UNIFIER) (("2" (EXPAND EXT -3 1) (("2" (ASSERT) (("2" (REPLACES -2) (("2" (EXPAND SUBTERMOF) (("2" (REWRITE EMPTY_0) (("2" (HIDE 1) (("2" (TYPEPRED T!1) (("2" (FLATTEN) (("2" (EXPAND EXT -2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 -4 1 2 3) (("3" (REPLACES -2) (("3" (EXPAND SUBTERMOF) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                             NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 " first_diff(subtermOF(s!1,  #(k!1)),
                                                            subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND ADD_FIRST -3) (("1" (EXPAND INSERT? -3) (("1" (PROP) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 S!1 K!1 "first_diff(subtermOF(s!1,  #(k!1)),
                                                                    subtermOF(t!1,  #(k!1)))" X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("2" (INST -1 T!1 K!1 "first_diff(subtermOF(s!1,  #(k!1)),
                                                                    subtermOF(t!1,  #(k!1)))" X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA FIRST_DIFF_TCC2) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 5 6) (("3" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("3" (EXPAND UNIFIABLE) (("3" (SKOSIMP) (("3" (INST 1 SIGMA!1) (("3" (INST -1 SIGMA!1 S!1 T!1 "#(k!1)") (("1" (EXPAND* MEMBER U) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REVEAL -5) (("2" (REVEAL -6) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) (("1" (LEMMA FIRST_DIFF_TCC2) (("1" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 5 6) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (5 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (5 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 -2 5 6) (("5" (EXPAND UNIFIABLE) (("5" (SKEEP -1) (("5" (EXPAND UNIFIER) (("5" (EXPAND EXT) (("5" (ASSERT) (("5" (LIFT-IF) (("5" (PROP) (("1" (DECOMPOSE-EQUALITY -2) NIL NIL) ("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 2)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 Y!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (-1 2)) (("4" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 1)) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 S!1 T!1 P!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|kk!1| SKOLEM-CONST-DECL "below[length(args[variable, symbol, arity](t!1))]" |robinsonunification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (|first_diff_TCC3| SUBTYPE-TCC NIL |robinsonunification| NIL) (|posint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|k!1| SKOLEM-CONST-DECL "posint" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|first_diff_TCC1| SUBTYPE-TCC NIL |robinsonunification| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|subt_of_subt_is_subt_of_term| FORMULA-DECL NIL |subterm| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|first_diff_TCC2| SUBTYPE-TCC NIL |robinsonunification| NIL) (|unifiable_terms_unifiable_args| FORMULA-DECL NIL |unification| NIL) (|member| CONST-DECL "bool" |sets| NIL) (U CONST-DECL "set[Sub[variable, symbol, arity]]" |unification| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|min| CONST-DECL "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}" |min_nat| NIL) (<= CONST-DECL "bool" |reals| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (TRUE CONST-DECL "bool" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK) (|first_diff_unifiable_vars-2| "" 3756659648 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND FIRST_DIFF -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -3 -4 2) (("1" (REPLACES -2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND UNIFIABLE) (("2" (SKEEP -3) (("2" (EXPAND UNIFIER) (("2" (EXPAND EXT -3 1) (("2" (ASSERT) (("2" (REPLACES -2) (("2" (EXPAND SUBTERMOF) (("2" (REWRITE EMPTY_0) (("2" (HIDE 1) (("2" (TYPEPRED T!1) (("2" (FLATTEN) (("2" (EXPAND EXT -2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 -4 1 2 3) (("3" (REPLACES -2) (("3" (EXPAND SUBTERMOF) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                             NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 " first_diff(subtermOF(s!1,  #(k!1)),
                                                            subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND ADD_FIRST -3) (("1" (EXPAND INSERT? -3) (("1" (PROP) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 S!1 K!1 "first_diff(subtermOF(s!1,  #(k!1)),
                                                                    subtermOF(t!1,  #(k!1)))" X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("2" (INST -1 T!1 K!1 "first_diff(subtermOF(s!1,  #(k!1)),
                                                                    subtermOF(t!1,  #(k!1)))" X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA FIRST_DIFF_TCC2) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 5 6) (("3" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("3" (EXPAND UNIFIABLE) (("3" (SKOSIMP) (("3" (INST 1 SIGMA!1) (("3" (INST -1 SIGMA!1 S!1 T!1 "#(k!1)") (("1" (EXPAND* MEMBER U) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REVEAL -5) (("2" (REVEAL -6) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) (("1" (LEMMA FIRST_DIFF_TCC2) (("1" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 5 6) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (5 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (5 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 -2 5 6) (("5" (EXPAND UNIFIABLE) (("5" (SKEEP -1) (("5" (EXPAND UNIFIER) (("5" (EXPAND EXT) (("5" (ASSERT) (("5" (LIFT-IF) (("5" (PROP) (("1" (DECOMPOSE-EQUALITY -2) NIL NIL) ("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 2)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 Y!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (-1 2)) (("4" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 1)) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 S!1 T!1 P!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|first_diff_unifiable_vars-1| |nil| 3469352101 ("" (MEASURE-INDUCT+ "length(p)" "p") (("1" (SKOSIMP) (("1" (EXPAND FIRST_DIFF -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -3 -4 2) (("1" (REPLACES -2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (EXPAND UNIFIABLE) (("2" (SKEEP -3) (("2" (EXPAND UNIFIER) (("2" (EXPAND EXT -3 1) (("2" (ASSERT) (("2" (REPLACES -2) (("2" (EXPAND SUBTERMOF) (("2" (REWRITE EMPTY_0) (("2" (HIDE 1) (("2" (TYPEPRED T!1) (("2" (FLATTEN) (("2" (EXPAND EXT -2) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("2" (HIDE 2 3 4) (("2" (DECOMPOSE-EQUALITY) (("2" (DECOMPOSE-EQUALITY) (("2" (HIDE -2 -3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -3 -4 1 2 3) (("3" (REPLACES -2) (("3" (EXPAND SUBTERMOF) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("4" (ASSERT) (("4" (NAME-REPLACE "k!11" "min({kk: below[length(args(t!1))] |
                                 NOT subtermOF(s!1,  #(1 + kk)) = subtermOF(t!1,  #(1 + kk))})") (("1" (NAME-REPLACE "k!1" "1+k!11") (("1" (INST -3 " first_diff(subtermOF(s!1,  #(k!1)),
                                            subtermOF(t!1,  #(k!1)))") (("1" (INST -3 "subtermOF(s!1,  #(k!1))" "subtermOF(t!1,  #(k!1))") (("1" (REPLACE -2 -3) (("1" (EXPAND ADD_FIRST -3) (("1" (EXPAND INSERT? -3) (("1" (PROP) (("1" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("1" (INST -1 S!1 K!1 "first_diff(subtermOF(s!1,  #(k!1)),
                                                subtermOF(t!1,  #(k!1)))" X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA SUBT_OF_SUBT_IS_SUBT_OF_TERM) (("2" (INST -1 T!1 K!1 "first_diff(subtermOF(s!1,  #(k!1)),
                                                subtermOF(t!1,  #(k!1)))" X!1) (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -3 -4 5 6) (("2" (REVEAL -8) (("2" (REVEAL -7) (("2" (LEMMA FIRST_DIFF_TCC2) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE -2 5 6) (("3" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("3" (EXPAND UNIFIABLE) (("3" (SKOSIMP) (("3" (INST 1 SIGMA!1) (("3" (INST -1 SIGMA!1 S!1 T!1 "#(k!1)") (("1" (EXPAND* MEMBER U) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REVEAL -5) (("2" (REVEAL -6) (("2" (LEMMA FIRST_DIFF_TCC1) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) (("1" (LEMMA FIRST_DIFF_TCC2) (("1" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("1" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "k!11") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 4)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 6)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 5 6) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 "s!1" "t!1" "f(s!1)" "args(s!1)") (("2" (CASE "s!1 = app(f(s!1), args(s!1))") (("1" (ASSERT) (("1" (HIDE -1) (("1" (INST -1 "f(t!1)" "args(t!1)") (("1" (CASE "t!1 = app(f(t!1), args(t!1))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE - (5 6)) (("3" (SKOSIMP*) (("3" (LEMMA "positions_of_arg") (("3" (INST -1 "t!1" "kk!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE - (5 6)) (("4" (SKOSIMP*) (("4" (LEMMA "positions_of_arg") (("4" (INST -1 "s!1" "kk!1") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "kk!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE -1 -2 5 6) (("5" (EXPAND UNIFIABLE) (("5" (SKEEP -1) (("5" (EXPAND UNIFIER) (("5" (EXPAND EXT) (("5" (ASSERT) (("5" (LIFT-IF) (("5" (PROP) (("1" (DECOMPOSE-EQUALITY -2) NIL NIL) ("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 2)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 Y!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (-1 2)) (("4" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 1)) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 S!1 T!1 P!1) (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|fd_equal_symbol_TCC1| 0 (|fd_equal_symbol_TCC1-2| "" 3884998699 ("" (SKOSIMP*) (("" (LEMMA "position_s_first_diff") (("" (INST -1 "s!1" "t!1" "fd!1") (("" (ASSERT) (("" (TYPEPRED "p!1") (("" (HIDE -2) (("" (HIDE -3) (("" (LEMMA "app_term") (("" (INST -1 "fd!1" "p!1" "s!1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|fd_equal_symbol| SUBTYPE "subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, robinsonunification.p)" "(term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app?)")) (|fd_equal_symbol_TCC1-1| |nil| 3512858302 ("" (SKOSIMP*) (("" (LEMMA POSITION_S_FIRST_DIFF) (("" (INST -1 S!1 T!1 FD!1) (("" (ASSERT) (("" (TYPEPRED P!1) (("" (HIDE -2) (("" (HIDE -3) (("" (LEMMA APP_TERM) (("" (INST -1 FD!1 P!1 S!1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|app_term| FORMULA-DECL NIL |subterm| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) NIL (|fd_equal_symbol| SUBTYPE "subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.s, robinsonunification.p)" "(term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app?)"))) (|fd_equal_symbol_TCC2| 0 (|fd_equal_symbol_TCC2-2| "" 3884998721 ("" (SKOSIMP*) (("" (LEMMA "position_t_first_diff") (("" (INST -1 "s!1" "t!1" "fd!1") (("" (ASSERT) (("" (TYPEPRED "p!1") (("" (HIDE -1 -4) (("" (LEMMA "app_term") (("" (INST -1 "fd!1" "p!1" "t!1") (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK (|fd_equal_symbol| SUBTYPE "subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, robinsonunification.p)" "(term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app?)")) (|fd_equal_symbol_TCC2-1| |nil| 3512858302 ("" (SKOSIMP*) (("" (LEMMA POSITION_T_FIRST_DIFF) (("" (INST -1 S!1 T!1 FD!1) (("" (ASSERT) (("" (TYPEPRED P!1) (("" (HIDE -1 -4) (("" (LEMMA APP_TERM) (("" (INST -1 FD!1 P!1 T!1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|app_term| FORMULA-DECL NIL |subterm| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) NIL (|fd_equal_symbol| SUBTYPE "subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].subtermOF(robinsonunification.t, robinsonunification.p)" "(term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].app?)"))) (|fd_equal_symbol| 0 (|fd_equal_symbol-4| "" 3884999498 ("" (MEASURE-INDUCT+ "length(first_diff(s, t))" ("s" "t")) (("1" (SKOSIMP) (("1" (NAME-REPLACE "fd" "first_diff(x!1, x!2)" :HIDE? NIL) (("1" (EXPAND "first_diff" -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT (-2 -4)) (("1" (REPLACE -1 -2 RL) (("1" (HIDE -1) (("1" (EXPAND "child") (("1" (SKOSIMP) (("1" (LEMMA "seq_empty[posnat]") (("1" (INST -1 "p!1" "p1!1") (("1" (ASSERT) (("1" (FLATTEN) (("1" (REWRITE "empty_0" -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -4)) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -1) (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (LEMMA "seq_empty[posnat]") (("2" (INST -1 "p!1" "p1!1") (("2" (ASSERT) (("2" (FLATTEN) (("2" (REWRITE "empty_0" -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 -4)) (("3" (REPLACE -1 -2 RL) (("3" (HIDE -1) (("3" (EXPAND "child") (("3" (SKOSIMP) (("3" (LEMMA "seq_empty[posnat]") (("3" (INST -1 "p!1" "p1!1") (("3" (ASSERT) (("3" (FLATTEN) (("3" (REWRITE "empty_0" -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "p!1 = empty_seq") (("1" (HIDE-ALL-BUT (-1 -2 4)) (("1" (REPLACES -1) (("1" (REWRITE "subterm_empty_seq") (("1" (REWRITE "subterm_empty_seq") NIL NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "kk" "min({kk: below[length(args(x!2))] |
                                                          subtermOF(x!1,  #(kk + 1)) /=
                                                           subtermOF(x!2,  #(kk + 1))})" :HIDE? NIL) (("1" (ASSERT) (("1" (INST -4 "subtermOF(x!1,  #(1 + kk))" "subtermOF(x!2,  #(1 + kk))") (("1" (REPLACE -3 -4 RL) (("1" (EXPAND "add_first" -4) (("1" (EXPAND "insert?" -4) (("1" (INST -4 "rest(p!1)") (("1" (SPLIT) (("1" (LEMMA "pos_subterm") (("1" (INST-CP -1 "#(1 + kk)" "rest(p!1)" "x!1") (("1" (INST -1 "#(1 + kk)" "rest(p!1)" "x!2") (("1" (SPLIT) (("1" (SPLIT) (("1" (REPLACE -1 -3 RL) (("1" (REPLACE -2 -3 RL) (("1" (CASE "#(1 + kk) o rest(p!1) = p!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 3 4 5 6) (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (CASE "first(p!1) = first(fd)") (("1" (CASE "first(fd) = 1 + kk") (("1" (HIDE-ALL-BUT (-1 -2 1 2)) (("1" (REPLACES -1) (("1" (LEMMA "seq_first_rest_1[posnat]") (("1" (INST -1 "p!1") (("1" (ASSERT) (("1" (HIDE -1 2) (("1" (FLATTEN) (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (REWRITE "first_add") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1 3)) (("2" (REPLACES -1) (("2" (REWRITE "first_compo") (("2" (HIDE 2) (("2" (FLATTEN) (("2" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (FLATTEN) (("3" (REWRITE "empty_0") (("3" (REPLACES -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (1 3)) (("4" (FLATTEN) (("4" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "p!1") (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA "seq_first_rest_1[posnat]") (("1" (INST -1 "p!1") (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA "first_compo[posnat]") (("2" (INST -1 "p!1" "p1!1") (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "p!1") (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE "first_add") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "p!1") (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA "seq_first_rest_1[posnat]") (("1" (INST -1 "p!1") (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA "first_compo[posnat]") (("2" (INST -1 "p!1" "p1!1") (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "p!1") (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE "first_add") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 2)) (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (INST 1 "p1!1") (("2" (ASSERT) (("2" (LEMMA "rest_compo[posnat]") (("2" (INST -1 "p!1" "p1!1") (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "p!1") (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (LEMMA "rest_add_first[posnat]") (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)), subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "p!1 = #(1 + kk) o rest(p!1)") (("1" (TYPEPRED "p!1") (("1" (HIDE-ALL-BUT (-1 -2 -3 1 2)) (("1" (REWRITE "pos_subterm_ax") (("1" (REWRITE "pos_subterm_ax") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 3)) (("2" (LEMMA "seq_first_rest_1[posnat]") (("2" (INST -1 "p!1") (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "p!1") (("2" (ASSERT) (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (REPLACE -2 -3 RL) (("2" (HIDE -2) (("2" (LEMMA "first_add[posnat]") (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)),
                                                       subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (REPLACE -3 -1) (("2" (HIDE -3) (("2" (REWRITE "first_compo") (("2" (REPLACES -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1 3 4 5)) (("2" (LEMMA "first_diff_TCC3") (("2" (INST -1 "x!1" "x!2" "f(x!1)" "args(x!1)") (("2" (ASSERT) (("2" (CASE "x!1 = app(f(x!1), args(x!1))") (("1" (ASSERT) (("1" (INST -2 "f(x!2)" "args(x!2)") (("1" (CASE "x!2 = app(f(x!2), args(x!2))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (REWRITE "positions_of_arg") NIL NIL)) NIL) ("4" (HIDE -2 -3 -4 2 6) (("4" (SKOSIMP) (("4" (REWRITE "positions_of_arg") (("4" (TYPEPRED "kk!1") (("4" (TYPEPRED "args(x!2)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 -3)) (("5" (REPLACE -1 -2 RL) (("5" (HIDE -1) (("5" (EXPAND "child") (("5" (SKOSIMP) (("5" (LEMMA "seq_empty[posnat]") (("5" (INST -1 "p!1" "p1!1") (("5" (ASSERT) (("5" (FLATTEN) (("5" (REWRITE "empty_0" -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (LEMMA "position_t_first_diff") (("2" (INST -1 "y!1" "y!2" "first_diff(y!1, y!2)") (("2" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("2" (EXPAND "child") (("2" (SKOSIMP) (("2" (LEMMA "pos_subterm_ax") (("2" (INST -1 "p!1" "p1!1" "y!2") (("2" (ASSERT) (("2" (LEMMA "not_var") (("2" (LEMMA "seq_first_rest[posnat]") (("2" (INST -1 "p1!1") (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "p1!1") (("2" (ASSERT) (("2" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "y!1" "y!2" "first_diff(y!1, y!2)") (("3" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("3" (EXPAND "child") (("3" (SKOSIMP) (("3" (LEMMA "pos_subterm_ax") (("3" (INST -1 "p!1" "p1!1" "y!1") (("3" (ASSERT) (("3" (LEMMA "not_var") (("3" (LEMMA "seq_first_rest[posnat]") (("3" (INST -1 "p1!1") (("3" (LEMMA "empty_0[posnat]") (("3" (INST -1 "p1!1") (("3" (ASSERT) (("3" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (SKOSIMP) (("4" (LEMMA "position_t_first_diff") (("4" (INST -1 "y!1" "y!2" "first_diff(y!1, y!2)") (("4" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("4" (EXPAND "child") (("4" (SKOSIMP) (("4" (LEMMA "pos_subterm_ax") (("4" (INST -1 "p!1" "p1!1" "y!2") (("4" (ASSERT) (("4" (LEMMA "not_var") (("4" (LEMMA "seq_first_rest[posnat]") (("4" (INST -1 "p1!1") (("4" (LEMMA "empty_0[posnat]") (("4" (INST -1 "p1!1") (("4" (ASSERT) (("4" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT 1) (("5" (SKOSIMP) (("5" (LEMMA "position_s_first_diff") (("5" (INST -1 "y!1" "y!2" "first_diff(y!1, y!2)") (("5" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("5" (EXPAND "child") (("5" (SKOSIMP) (("5" (LEMMA "pos_subterm_ax") (("5" (INST -1 "p!1" "p1!1" "y!1") (("5" (ASSERT) (("5" (LEMMA "not_var") (("5" (LEMMA "seq_first_rest[posnat]") (("5" (INST -1 "p1!1") (("5" (LEMMA "empty_0[posnat]") (("5" (INST -1 "p1!1") (("5" (ASSERT) (("5" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (HIDE-ALL-BUT 1) (("6" (SKOSIMP) (("6" (LEMMA "position_t_first_diff") (("6" (INST?) (("6" (INST?) (("6" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("6" (EXPAND "child") (("6" (SKOSIMP) (("6" (LEMMA "pos_subterm_ax") (("6" (INST?) (("6" (INST?) (("6" (LEMMA "seq_first_rest[posnat]") (("6" (INST -1 "p1!1") (("6" (LEMMA "empty_0[posnat]") (("6" (INST -1 "p1!1") (("6" (ASSERT) (("6" (LEMMA "not_var") (("6" (INST?) (("6" (INST?) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (HIDE-ALL-BUT (-2 1)) (("7" (LEMMA "position_t_first_diff") (("7" (INST?) (("7" (INST?) (("7" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("7" (EXPAND "child") (("7" (SKOSIMP) (("7" (LEMMA "pos_subterm_ax") (("7" (INST?) (("7" (INST?) (("7" (LEMMA "seq_first_rest[posnat]") (("7" (INST -1 "p1!1") (("7" (LEMMA "empty_0[posnat]") (("7" (INST -1 "p1!1") (("7" (ASSERT) (("7" (LEMMA "not_var") (("7" (INST?) (("7" (INST?) (("7" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (HIDE-ALL-BUT (-2 1)) (("8" (LEMMA "position_s_first_diff") (("8" (INST?) (("8" (INST?) (("8" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("8" (EXPAND "child") (("8" (SKOSIMP) (("8" (LEMMA "pos_subterm_ax") (("8" (INST?) (("8" (INST?) (("8" (LEMMA "seq_first_rest[posnat]") (("8" (INST -1 "p1!1") (("8" (LEMMA "empty_0[posnat]") (("8" (INST -1 "p1!1") (("8" (ASSERT) (("8" (LEMMA "not_var") (("8" (INST?) (("8" (INST?) (("8" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (HIDE-ALL-BUT 1) (("9" (SKOSIMP) (("9" (LEMMA "position_s_first_diff") (("9" (INST?) (("9" (INST?) (("9" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("9" (EXPAND "child") (("9" (SKOSIMP) (("9" (LEMMA "pos_subterm_ax") (("9" (INST?) (("9" (INST?) (("9" (LEMMA "seq_first_rest[posnat]") (("9" (INST -1 "p1!1") (("9" (LEMMA "empty_0[posnat]") (("9" (INST -1 "p1!1") (("9" (ASSERT) (("9" (LEMMA "not_var") (("9" (INST?) (("9" (INST?) (("9" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (HIDE-ALL-BUT (-2 1)) (("10" (LEMMA "position_t_first_diff") (("10" (INST?) (("10" (INST?) (("10" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("10" (EXPAND "child") (("10" (SKOSIMP) (("10" (LEMMA "pos_subterm_ax") (("10" (INST?) (("10" (INST?) (("10" (LEMMA "seq_first_rest[posnat]") (("10" (INST -1 "p1!1") (("10" (LEMMA "empty_0[posnat]") (("10" (INST -1 "p1!1") (("10" (ASSERT) (("10" (LEMMA "not_var") (("10" (INST?) (("10" (INST?) (("10" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("11" (HIDE-ALL-BUT (-2 1)) (("11" (LEMMA "position_s_first_diff") (("11" (INST?) (("11" (INST?) (("11" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("11" (EXPAND "child") (("11" (SKOSIMP) (("11" (LEMMA "pos_subterm_ax") (("11" (INST?) (("11" (INST?) (("11" (LEMMA "seq_first_rest[posnat]") (("11" (INST -1 "p1!1") (("11" (LEMMA "empty_0[posnat]") (("11" (INST -1 "p1!1") (("11" (ASSERT) (("11" (LEMMA "not_var") (("11" (INST?) (("11" (INST?) (("11" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("12" (HIDE-ALL-BUT 1) (("12" (SKOSIMP) (("12" (LEMMA "position_t_first_diff") (("12" (INST?) (("12" (INST?) (("12" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("12" (EXPAND "child") (("12" (SKOSIMP) (("12" (LEMMA "pos_subterm_ax") (("12" (INST?) (("12" (INST?) (("12" (LEMMA "seq_first_rest[posnat]") (("12" (INST -1 "p1!1") (("12" (LEMMA "empty_0[posnat]") (("12" (INST -1 "p1!1") (("12" (ASSERT) (("12" (LEMMA "not_var") (("12" (INST?) (("12" (INST?) (("12" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("13" (HIDE-ALL-BUT 1) (("13" (SKOSIMP) (("13" (LEMMA "position_s_first_diff") (("13" (INST?) (("13" (INST?) (("13" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("13" (EXPAND "child") (("13" (SKOSIMP) (("13" (LEMMA "pos_subterm_ax") (("13" (INST?) (("13" (INST?) (("13" (LEMMA "seq_first_rest[posnat]") (("13" (INST -1 "p1!1") (("13" (LEMMA "empty_0[posnat]") (("13" (INST -1 "p1!1") (("13" (ASSERT) (("13" (LEMMA "not_var") (("13" (INST?) (("13" (INST?) (("13" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("14" (SKOSIMP) (("14" (LEMMA "position_t_first_diff") (("14" (INST?) (("14" (ASSERT) (("14" (HIDE -2) (("14" (EXPAND "child") (("14" (SKOSIMP) (("14" (LEMMA "pos_subterm_ax") (("14" (INST?) (("14" (INST?) (("14" (LEMMA "seq_first_rest[posnat]") (("14" (INST -1 "p1!1") (("14" (LEMMA "empty_0[posnat]") (("14" (INST -1 "p1!1") (("14" (ASSERT) (("14" (LEMMA "not_var") (("14" (INST?) (("14" (INST?) (("14" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("15" (SKOSIMP) (("15" (LEMMA "position_s_first_diff") (("15" (INST?) (("15" (ASSERT) (("15" (HIDE -2) (("15" (EXPAND "child") (("15" (SKOSIMP) (("15" (LEMMA "pos_subterm_ax") (("15" (INST?) (("15" (INST?) (("15" (LEMMA "seq_first_rest[posnat]") (("15" (INST -1 "p1!1") (("15" (LEMMA "empty_0[posnat]") (("15" (INST -1 "p1!1") (("15" (ASSERT) (("15" (LEMMA "not_var") (("15" (INST?) (("15" (INST?) (("15" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|fd_equal_symbol-3| "" 3803860471 ("" (MEASURE-INDUCT+ "length(first_diff(s, t))" ("s" "t")) (("1" (SKOSIMP) (("1" (NAME-REPLACE "fd" "first_diff(x!1, x!2)" :HIDE? NIL) (("1" (EXPAND FIRST_DIFF -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT (-2 -4)) (("1" (REPLACE -1 -2 RL) (("1" (HIDE -1) (("1" (EXPAND CHILD) (("1" (SKOSIMP) (("1" (LEMMA SEQ_EMPTY[POSNAT]) (("1" (INST -1 P!1 P1!1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -4)) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -1) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (LEMMA SEQ_EMPTY[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 -4)) (("3" (REPLACE -1 -2 RL) (("3" (HIDE -1) (("3" (EXPAND CHILD) (("3" (SKOSIMP) (("3" (LEMMA SEQ_EMPTY[POSNAT]) (("3" (INST -1 P!1 P1!1) (("3" (ASSERT) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "p!1 = empty_seq") (("1" (HIDE-ALL-BUT (-1 -2 4)) (("1" (REPLACES -1) (("1" (REWRITE SUBTERM_EMPTY_SEQ) (("1" (REWRITE SUBTERM_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "kk" "min({kk: below[length(args(x!2))] |
                                                          subtermOF(x!1,  #(kk + 1)) /=
                                                           subtermOF(x!2,  #(kk + 1))})" :HIDE? NIL) (("1" (ASSERT) (("1" (INST -4 "subtermOF(x!1,  #(1 + kk))" "subtermOF(x!2,  #(1 + kk))") (("1" (REPLACE -3 -4 RL) (("1" (EXPAND ADD_FIRST -4) (("1" (EXPAND INSERT? -4) (("1" (INST -4 "rest(p!1)") (("1" (SPLIT) (("1" (LEMMA POS_SUBTERM) (("1" (INST-CP -1 "#(1 + kk)" "rest(p!1)" "x!1") (("1" (INST -1 "#(1 + kk)" "rest(p!1)" "x!2") (("1" (SPLIT) (("1" (SPLIT) (("1" (REPLACE -1 -3 RL) (("1" (REPLACE -2 -3 RL) (("1" (CASE "#(1 + kk) o rest(p!1) = p!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 3 4 5 6) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = first(fd)") (("1" (CASE "first(fd) = 1 + kk") (("1" (HIDE-ALL-BUT (-1 -2 1 2)) (("1" (REPLACES -1) (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE -1 2) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1 3)) (("2" (REPLACES -1) (("2" (REWRITE FIRST_COMPO) (("2" (HIDE 2) (("2" (FLATTEN) (("2" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) (("3" (REPLACES -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (1 3)) (("4" (FLATTEN) (("4" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA FIRST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA FIRST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (INST 1 P1!1) (("2" (ASSERT) (("2" (LEMMA REST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (LEMMA REST_ADD_FIRST[POSNAT]) (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)), subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "p!1 = #(1 + kk) o rest(p!1)") (("1" (TYPEPRED P!1) (("1" (HIDE-ALL-BUT (-1 -2 -3 1 2)) (("1" (REWRITE POS_SUBTERM_AX) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 3)) (("2" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("2" (INST -1 P!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (REPLACE -2 -3 RL) (("2" (HIDE -2) (("2" (LEMMA FIRST_ADD[POSNAT]) (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)),
                                                       subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (REPLACE -3 -1) (("2" (HIDE -3) (("2" (REWRITE FIRST_COMPO) (("2" (REPLACES -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 X!1 X!2 "f(x!1)" "args(x!1)") (("2" (ASSERT) (("2" (CASE "x!1 = app(f(x!1), args(x!1))") (("1" (ASSERT) (("1" (INST -2 "f(x!2)" "args(x!2)") (("1" (CASE "x!2 = app(f(x!2), args(x!2))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (REWRITE POSITIONS_OF_ARG) NIL NIL)) NIL) ("4" (HIDE -2 -3 -4 2 6) (("4" (SKOSIMP) (("4" (REWRITE POSITIONS_OF_ARG) (("4" (TYPEPRED KK!1) (("4" (TYPEPRED "args(x!2)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 -3)) (("5" (REPLACE -1 -2 RL) (("5" (HIDE -1) (("5" (EXPAND CHILD) (("5" (SKOSIMP) (("5" (LEMMA SEQ_EMPTY[POSNAT]) (("5" (INST -1 P!1 P1!1) (("5" (ASSERT) (("5" (FLATTEN) (("5" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 1)) (("2" (LEMMA POSITION_T_FIRST_DIFF) (("2" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("2" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (LEMMA POS_SUBTERM_AX) (("2" (INST -1 P!1 P1!1 Y!2) (("2" (ASSERT) (("2" (LEMMA NOT_VAR) (("2" (LEMMA SEQ_FIRST_REST[POSNAT]) (("2" (INST -1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P1!1) (("2" (ASSERT) (("2" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("3" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("3" (EXPAND CHILD) (("3" (SKOSIMP) (("3" (LEMMA POS_SUBTERM_AX) (("3" (INST -1 P!1 P1!1 Y!1) (("3" (ASSERT) (("3" (LEMMA NOT_VAR) (("3" (LEMMA SEQ_FIRST_REST[POSNAT]) (("3" (INST -1 P1!1) (("3" (LEMMA EMPTY_0[POSNAT]) (("3" (INST -1 P1!1) (("3" (ASSERT) (("3" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (SKOSIMP) (("4" (LEMMA POSITION_T_FIRST_DIFF) (("4" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("4" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("4" (EXPAND CHILD) (("4" (SKOSIMP) (("4" (LEMMA POS_SUBTERM_AX) (("4" (INST -1 P!1 P1!1 Y!2) (("4" (ASSERT) (("4" (LEMMA NOT_VAR) (("4" (LEMMA SEQ_FIRST_REST[POSNAT]) (("4" (INST -1 P1!1) (("4" (LEMMA EMPTY_0[POSNAT]) (("4" (INST -1 P1!1) (("4" (ASSERT) (("4" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT 1) (("5" (SKOSIMP) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("5" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("5" (EXPAND CHILD) (("5" (SKOSIMP) (("5" (LEMMA POS_SUBTERM_AX) (("5" (INST -1 P!1 P1!1 Y!1) (("5" (ASSERT) (("5" (LEMMA NOT_VAR) (("5" (LEMMA SEQ_FIRST_REST[POSNAT]) (("5" (INST -1 P1!1) (("5" (LEMMA EMPTY_0[POSNAT]) (("5" (INST -1 P1!1) (("5" (ASSERT) (("5" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (HIDE-ALL-BUT 1) (("6" (SKOSIMP) (("6" (LEMMA POSITION_T_FIRST_DIFF) (("6" (INST?) (("6" (INST?) (("6" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("6" (EXPAND CHILD) (("6" (SKOSIMP) (("6" (LEMMA POS_SUBTERM_AX) (("6" (INST?) (("6" (INST?) (("6" (LEMMA SEQ_FIRST_REST[POSNAT]) (("6" (INST -1 P1!1) (("6" (LEMMA EMPTY_0[POSNAT]) (("6" (INST -1 P1!1) (("6" (ASSERT) (("6" (LEMMA NOT_VAR) (("6" (INST?) (("6" (INST?) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (HIDE-ALL-BUT (-2 1)) (("7" (LEMMA POSITION_T_FIRST_DIFF) (("7" (INST?) (("7" (INST?) (("7" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("7" (EXPAND CHILD) (("7" (SKOSIMP) (("7" (LEMMA POS_SUBTERM_AX) (("7" (INST?) (("7" (INST?) (("7" (LEMMA SEQ_FIRST_REST[POSNAT]) (("7" (INST -1 P1!1) (("7" (LEMMA EMPTY_0[POSNAT]) (("7" (INST -1 P1!1) (("7" (ASSERT) (("7" (LEMMA NOT_VAR) (("7" (INST?) (("7" (INST?) (("7" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (HIDE-ALL-BUT (-2 1)) (("8" (LEMMA POSITION_S_FIRST_DIFF) (("8" (INST?) (("8" (INST?) (("8" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("8" (EXPAND CHILD) (("8" (SKOSIMP) (("8" (LEMMA POS_SUBTERM_AX) (("8" (INST?) (("8" (INST?) (("8" (LEMMA SEQ_FIRST_REST[POSNAT]) (("8" (INST -1 P1!1) (("8" (LEMMA EMPTY_0[POSNAT]) (("8" (INST -1 P1!1) (("8" (ASSERT) (("8" (LEMMA NOT_VAR) (("8" (INST?) (("8" (INST?) (("8" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (HIDE-ALL-BUT 1) (("9" (SKOSIMP) (("9" (LEMMA POSITION_S_FIRST_DIFF) (("9" (INST?) (("9" (INST?) (("9" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("9" (EXPAND CHILD) (("9" (SKOSIMP) (("9" (LEMMA POS_SUBTERM_AX) (("9" (INST?) (("9" (INST?) (("9" (LEMMA SEQ_FIRST_REST[POSNAT]) (("9" (INST -1 P1!1) (("9" (LEMMA EMPTY_0[POSNAT]) (("9" (INST -1 P1!1) (("9" (ASSERT) (("9" (LEMMA NOT_VAR) (("9" (INST?) (("9" (INST?) (("9" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (HIDE-ALL-BUT (-2 1)) (("10" (LEMMA POSITION_T_FIRST_DIFF) (("10" (INST?) (("10" (INST?) (("10" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("10" (EXPAND CHILD) (("10" (SKOSIMP) (("10" (LEMMA POS_SUBTERM_AX) (("10" (INST?) (("10" (INST?) (("10" (LEMMA SEQ_FIRST_REST[POSNAT]) (("10" (INST -1 P1!1) (("10" (LEMMA EMPTY_0[POSNAT]) (("10" (INST -1 P1!1) (("10" (ASSERT) (("10" (LEMMA NOT_VAR) (("10" (INST?) (("10" (INST?) (("10" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("11" (HIDE-ALL-BUT (-2 1)) (("11" (LEMMA POSITION_S_FIRST_DIFF) (("11" (INST?) (("11" (INST?) (("11" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("11" (EXPAND CHILD) (("11" (SKOSIMP) (("11" (LEMMA POS_SUBTERM_AX) (("11" (INST?) (("11" (INST?) (("11" (LEMMA SEQ_FIRST_REST[POSNAT]) (("11" (INST -1 P1!1) (("11" (LEMMA EMPTY_0[POSNAT]) (("11" (INST -1 P1!1) (("11" (ASSERT) (("11" (LEMMA NOT_VAR) (("11" (INST?) (("11" (INST?) (("11" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("12" (HIDE-ALL-BUT 1) (("12" (SKOSIMP) (("12" (LEMMA POSITION_T_FIRST_DIFF) (("12" (INST?) (("12" (INST?) (("12" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("12" (EXPAND CHILD) (("12" (SKOSIMP) (("12" (LEMMA POS_SUBTERM_AX) (("12" (INST?) (("12" (INST?) (("12" (LEMMA SEQ_FIRST_REST[POSNAT]) (("12" (INST -1 P1!1) (("12" (LEMMA EMPTY_0[POSNAT]) (("12" (INST -1 P1!1) (("12" (ASSERT) (("12" (LEMMA NOT_VAR) (("12" (INST?) (("12" (INST?) (("12" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("13" (HIDE-ALL-BUT 1) (("13" (SKOSIMP) (("13" (LEMMA POSITION_S_FIRST_DIFF) (("13" (INST?) (("13" (INST?) (("13" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("13" (EXPAND CHILD) (("13" (SKOSIMP) (("13" (LEMMA POS_SUBTERM_AX) (("13" (INST?) (("13" (INST?) (("13" (LEMMA SEQ_FIRST_REST[POSNAT]) (("13" (INST -1 P1!1) (("13" (LEMMA EMPTY_0[POSNAT]) (("13" (INST -1 P1!1) (("13" (ASSERT) (("13" (LEMMA NOT_VAR) (("13" (INST?) (("13" (INST?) (("13" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("14" (SKOSIMP) (("14" (LEMMA POSITION_T_FIRST_DIFF) (("14" (INST?) (("14" (ASSERT) (("14" (HIDE -2) (("14" (EXPAND CHILD) (("14" (SKOSIMP) (("14" (LEMMA POS_SUBTERM_AX) (("14" (INST?) (("14" (INST?) (("14" (LEMMA SEQ_FIRST_REST[POSNAT]) (("14" (INST -1 P1!1) (("14" (LEMMA EMPTY_0[POSNAT]) (("14" (INST -1 P1!1) (("14" (ASSERT) (("14" (LEMMA NOT_VAR) (("14" (INST?) (("14" (INST?) (("14" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("15" (SKOSIMP) (("15" (LEMMA POSITION_S_FIRST_DIFF) (("15" (INST?) (("15" (ASSERT) (("15" (HIDE -2) (("15" (EXPAND CHILD) (("15" (SKOSIMP) (("15" (LEMMA POS_SUBTERM_AX) (("15" (INST?) (("15" (INST?) (("15" (LEMMA SEQ_FIRST_REST[POSNAT]) (("15" (INST -1 P1!1) (("15" (LEMMA EMPTY_0[POSNAT]) (("15" (INST -1 P1!1) (("15" (ASSERT) (("15" (LEMMA NOT_VAR) (("15" (INST?) (("15" (INST?) (("15" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|seq_first_rest| FORMULA-DECL NIL |seq_extras| |structures|) (|not_var| FORMULA-DECL NIL |positions| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|seq_empty| FORMULA-DECL NIL |seq_extras| |structures|) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|nonempty?| CONST-DECL "bool" |sets| NIL) (<= CONST-DECL "bool" |reals| NIL) (|min| CONST-DECL "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}" |min_nat| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|p!1| SKOLEM-CONST-DECL "{p: position | positionsOF(x!1)(p) AND positionsOF(x!2)(p)}" |robinsonunification| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|kk| SKOLEM-CONST-DECL "{a |
   NOT subtermOF(x!1,  #(1 + a)) = subtermOF(x!2,  #(1 + a)) AND
    FORALL (x: below[length(args(x!2))]):
      NOT subtermOF(x!1,  #(1 + x)) = subtermOF(x!2,  #(1 + x)) IMPLIES
       a <= x}" |robinsonunification| NIL) (|x!2| SKOLEM-CONST-DECL "{t: term | x!1 /= t}" |robinsonunification| NIL) (|x!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|rest_add_first| FORMULA-DECL NIL |seq_extras| |structures|) (|rest_compo| FORMULA-DECL NIL |seq_extras| |structures|) (|pos_subterm| FORMULA-DECL NIL |subterm| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|nat_min| APPLICATION-JUDGEMENT "{k: nat | k <= i AND k <= j}" |real_defs| NIL) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|first_compo| FORMULA-DECL NIL |seq_extras| |structures|) (|seq_first_rest_1| FORMULA-DECL NIL |seq_extras| |structures|) (|first_add| FORMULA-DECL NIL |seq_extras| |structures|) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| |structures|) (|first| CONST-DECL "T" |seq_extras| |structures|) (O CONST-DECL "finseq" |finite_sequences| NIL) (|pos_subterm_ax| FORMULA-DECL NIL |subterm| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|first_diff_TCC3| SUBTYPE-TCC NIL |robinsonunification| NIL) (|term_app_extensionality| FORMULA-DECL NIL |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|positions_of_arg| FORMULA-DECL NIL |positions| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|subterm_empty_seq| FORMULA-DECL NIL |subterm| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|child| CONST-DECL "bool" |positions| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK) (|fd_equal_symbol-2| "" 3756667710 ("" (MEASURE-INDUCT+ "length(first_diff(s, t))" ("s" "t")) (("1" (SKOSIMP) (("1" (NAME-REPLACE "fd" "first_diff(x!1, x!2)" :HIDE? NIL) (("1" (EXPAND FIRST_DIFF -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT (-2 -4)) (("1" (REPLACE -1 -2 RL) (("1" (HIDE -1) (("1" (EXPAND CHILD) (("1" (SKOSIMP) (("1" (LEMMA SEQ_EMPTY[POSNAT]) (("1" (INST -1 P!1 P1!1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -4)) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -1) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (LEMMA SEQ_EMPTY[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 -4)) (("3" (REPLACE -1 -2 RL) (("3" (HIDE -1) (("3" (EXPAND CHILD) (("3" (SKOSIMP) (("3" (LEMMA SEQ_EMPTY[POSNAT]) (("3" (INST -1 P!1 P1!1) (("3" (ASSERT) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "p!1 = empty_seq") (("1" (HIDE-ALL-BUT (-1 -2 4)) (("1" (REPLACES -1) (("1" (REWRITE SUBTERM_EMPTY_SEQ) (("1" (REWRITE SUBTERM_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "kk" "min({kk: below[length(args(x!2))] |
                                                          subtermOF(x!1,  #(kk + 1)) /=
                                                           subtermOF(x!2,  #(kk + 1))})" :HIDE? NIL) (("1" (ASSERT) (("1" (INST -4 "subtermOF(x!1,  #(1 + kk))" "subtermOF(x!2,  #(1 + kk))") (("1" (REPLACE -3 -4 RL) (("1" (EXPAND ADD_FIRST -4) (("1" (EXPAND INSERT? -4) (("1" (INST -4 "rest(p!1)") (("1" (SPLIT) (("1" (LEMMA POS_SUBTERM) (("1" (INST-CP -1 "#(1 + kk)" "rest(p!1)" "x!1") (("1" (INST -1 "#(1 + kk)" "rest(p!1)" "x!2") (("1" (SPLIT) (("1" (SPLIT) (("1" (REPLACE -1 -3 RL) (("1" (REPLACE -2 -3 RL) (("1" (CASE "#(1 + kk) o rest(p!1) = p!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 3 4 5 6) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = first(fd)") (("1" (CASE "first(fd) = 1 + kk") (("1" (HIDE-ALL-BUT (-1 -2 1 2)) (("1" (REPLACES -1) (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE -1 2) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1 3)) (("2" (REPLACES -1) (("2" (REWRITE FIRST_COMPO) (("2" (HIDE 2) (("2" (FLATTEN) (("2" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) (("3" (REPLACES -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (1 3)) (("4" (FLATTEN) (("4" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA FIRST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA FIRST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (INST 1 P1!1) (("2" (ASSERT) (("2" (LEMMA REST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (LEMMA REST_ADD_FIRST[POSNAT]) (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)), subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "p!1 = #(1 + kk) o rest(p!1)") (("1" (TYPEPRED P!1) (("1" (HIDE-ALL-BUT (-1 -2 -3 1 2)) (("1" (REWRITE POS_SUBTERM_AX) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 3)) (("2" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("2" (INST -1 P!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (REPLACE -2 -3 RL) (("2" (HIDE -2) (("2" (LEMMA FIRST_ADD[POSNAT]) (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)),
                                                       subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (REPLACE -3 -1) (("2" (HIDE -3) (("2" (REWRITE FIRST_COMPO) (("2" (REPLACES -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC3) (("2" (INST -1 X!1 X!2 "f(x!1)" "args(x!1)") (("2" (ASSERT) (("2" (CASE "x!1 = app(f(x!1), args(x!1))") (("1" (ASSERT) (("1" (INST -2 "f(x!2)" "args(x!2)") (("1" (CASE "x!2 = app(f(x!2), args(x!2))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (REWRITE POSITIONS_OF_ARG) NIL NIL)) NIL) ("4" (HIDE -2 -3 -4 2 6) (("4" (SKOSIMP) (("4" (REWRITE POSITIONS_OF_ARG) (("4" (TYPEPRED KK!1) (("4" (TYPEPRED "args(x!2)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 -3)) (("5" (REPLACE -1 -2 RL) (("5" (HIDE -1) (("5" (EXPAND CHILD) (("5" (SKOSIMP) (("5" (LEMMA SEQ_EMPTY[POSNAT]) (("5" (INST -1 P!1 P1!1) (("5" (ASSERT) (("5" (FLATTEN) (("5" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA POSITION_T_FIRST_DIFF) (("2" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("2" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (LEMMA POS_SUBTERM_AX) (("2" (INST -1 P!1 P1!1 Y!2) (("2" (ASSERT) (("2" (LEMMA NOT_VAR) (("2" (LEMMA SEQ_FIRST_REST[POSNAT]) (("2" (INST -1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P1!1) (("2" (ASSERT) (("2" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("3" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("3" (EXPAND CHILD) (("3" (SKOSIMP) (("3" (LEMMA POS_SUBTERM_AX) (("3" (INST -1 P!1 P1!1 Y!1) (("3" (ASSERT) (("3" (LEMMA NOT_VAR) (("3" (LEMMA SEQ_FIRST_REST[POSNAT]) (("3" (INST -1 P1!1) (("3" (LEMMA EMPTY_0[POSNAT]) (("3" (INST -1 P1!1) (("3" (ASSERT) (("3" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (SKOSIMP) (("4" (LEMMA POSITION_T_FIRST_DIFF) (("4" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("4" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("4" (EXPAND CHILD) (("4" (SKOSIMP) (("4" (LEMMA POS_SUBTERM_AX) (("4" (INST -1 P!1 P1!1 Y!2) (("4" (ASSERT) (("4" (LEMMA NOT_VAR) (("4" (LEMMA SEQ_FIRST_REST[POSNAT]) (("4" (INST -1 P1!1) (("4" (LEMMA EMPTY_0[POSNAT]) (("4" (INST -1 P1!1) (("4" (ASSERT) (("4" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT 1) (("5" (SKOSIMP) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("5" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("5" (EXPAND CHILD) (("5" (SKOSIMP) (("5" (LEMMA POS_SUBTERM_AX) (("5" (INST -1 P!1 P1!1 Y!1) (("5" (ASSERT) (("5" (LEMMA NOT_VAR) (("5" (LEMMA SEQ_FIRST_REST[POSNAT]) (("5" (INST -1 P1!1) (("5" (LEMMA EMPTY_0[POSNAT]) (("5" (INST -1 P1!1) (("5" (ASSERT) (("5" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (HIDE-ALL-BUT 1) (("6" (SKOSIMP) (("6" (LEMMA POSITION_T_FIRST_DIFF) (("6" (INST?) (("6" (INST?) (("6" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("6" (EXPAND CHILD) (("6" (SKOSIMP) (("6" (LEMMA POS_SUBTERM_AX) (("6" (INST?) (("6" (INST?) (("6" (LEMMA SEQ_FIRST_REST[POSNAT]) (("6" (INST -1 P1!2) (("6" (LEMMA EMPTY_0[POSNAT]) (("6" (INST -1 P1!2) (("6" (ASSERT) (("6" (LEMMA NOT_VAR) (("6" (INST?) (("6" (INST?) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (HIDE-ALL-BUT (-1 1)) (("7" (LEMMA POSITION_T_FIRST_DIFF) (("7" (INST?) (("7" (INST?) (("7" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("7" (EXPAND CHILD) (("7" (SKOSIMP) (("7" (LEMMA POS_SUBTERM_AX) (("7" (INST?) (("7" (INST?) (("7" (LEMMA SEQ_FIRST_REST[POSNAT]) (("7" (INST -1 P1!1) (("7" (LEMMA EMPTY_0[POSNAT]) (("7" (INST -1 P1!1) (("7" (ASSERT) (("7" (LEMMA NOT_VAR) (("7" (INST?) (("7" (INST?) (("7" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (HIDE-ALL-BUT (-1 1)) (("8" (LEMMA POSITION_S_FIRST_DIFF) (("8" (INST?) (("8" (INST?) (("8" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("8" (EXPAND CHILD) (("8" (SKOSIMP) (("8" (LEMMA POS_SUBTERM_AX) (("8" (INST?) (("8" (INST?) (("8" (LEMMA SEQ_FIRST_REST[POSNAT]) (("8" (INST -1 P1!1) (("8" (LEMMA EMPTY_0[POSNAT]) (("8" (INST -1 P1!1) (("8" (ASSERT) (("8" (LEMMA NOT_VAR) (("8" (INST?) (("8" (INST?) (("8" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (HIDE-ALL-BUT 1) (("9" (SKOSIMP) (("9" (LEMMA POSITION_S_FIRST_DIFF) (("9" (INST?) (("9" (INST?) (("9" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("9" (EXPAND CHILD) (("9" (SKOSIMP) (("9" (LEMMA POS_SUBTERM_AX) (("9" (INST?) (("9" (INST?) (("9" (LEMMA SEQ_FIRST_REST[POSNAT]) (("9" (INST -1 P1!2) (("9" (LEMMA EMPTY_0[POSNAT]) (("9" (INST -1 P1!2) (("9" (ASSERT) (("9" (LEMMA NOT_VAR) (("9" (INST?) (("9" (INST?) (("9" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (HIDE-ALL-BUT (-1 1)) (("10" (LEMMA POSITION_T_FIRST_DIFF) (("10" (INST?) (("10" (INST?) (("10" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("10" (EXPAND CHILD) (("10" (SKOSIMP) (("10" (LEMMA POS_SUBTERM_AX) (("10" (INST?) (("10" (INST?) (("10" (LEMMA SEQ_FIRST_REST[POSNAT]) (("10" (INST -1 P1!1) (("10" (LEMMA EMPTY_0[POSNAT]) (("10" (INST -1 P1!1) (("10" (ASSERT) (("10" (LEMMA NOT_VAR) (("10" (INST?) (("10" (INST?) (("10" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("11" (HIDE-ALL-BUT (-1 1)) (("11" (LEMMA POSITION_S_FIRST_DIFF) (("11" (INST?) (("11" (INST?) (("11" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("11" (EXPAND CHILD) (("11" (SKOSIMP) (("11" (LEMMA POS_SUBTERM_AX) (("11" (INST?) (("11" (INST?) (("11" (LEMMA SEQ_FIRST_REST[POSNAT]) (("11" (INST -1 P1!1) (("11" (LEMMA EMPTY_0[POSNAT]) (("11" (INST -1 P1!1) (("11" (ASSERT) (("11" (LEMMA NOT_VAR) (("11" (INST?) (("11" (INST?) (("11" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("12" (HIDE-ALL-BUT 1) (("12" (SKOSIMP) (("12" (LEMMA POSITION_T_FIRST_DIFF) (("12" (INST?) (("12" (INST?) (("12" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("12" (EXPAND CHILD) (("12" (SKOSIMP) (("12" (LEMMA POS_SUBTERM_AX) (("12" (INST?) (("12" (INST?) (("12" (LEMMA SEQ_FIRST_REST[POSNAT]) (("12" (INST -1 P1!1) (("12" (LEMMA EMPTY_0[POSNAT]) (("12" (INST -1 P1!1) (("12" (ASSERT) (("12" (LEMMA NOT_VAR) (("12" (INST?) (("12" (INST?) (("12" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("13" (HIDE-ALL-BUT 1) (("13" (SKOSIMP) (("13" (LEMMA POSITION_S_FIRST_DIFF) (("13" (INST?) (("13" (INST?) (("13" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("13" (EXPAND CHILD) (("13" (SKOSIMP) (("13" (LEMMA POS_SUBTERM_AX) (("13" (INST?) (("13" (INST?) (("13" (LEMMA SEQ_FIRST_REST[POSNAT]) (("13" (INST -1 P1!1) (("13" (LEMMA EMPTY_0[POSNAT]) (("13" (INST -1 P1!1) (("13" (ASSERT) (("13" (LEMMA NOT_VAR) (("13" (INST?) (("13" (INST?) (("13" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("14" (HIDE 2) (("14" (SKOSIMP) (("14" (LEMMA POSITION_T_FIRST_DIFF) (("14" (INST?) (("14" (ASSERT) (("14" (HIDE -2) (("14" (EXPAND CHILD) (("14" (SKOSIMP) (("14" (LEMMA POS_SUBTERM_AX) (("14" (INST?) (("14" (INST?) (("14" (LEMMA SEQ_FIRST_REST[POSNAT]) (("14" (INST -1 P1!1) (("14" (LEMMA EMPTY_0[POSNAT]) (("14" (INST -1 P1!1) (("14" (ASSERT) (("14" (LEMMA NOT_VAR) (("14" (INST?) (("14" (INST?) (("14" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("15" (HIDE 2) (("15" (SKOSIMP) (("15" (LEMMA POSITION_S_FIRST_DIFF) (("15" (INST?) (("15" (ASSERT) (("15" (HIDE -2) (("15" (EXPAND CHILD) (("15" (SKOSIMP) (("15" (LEMMA POS_SUBTERM_AX) (("15" (INST?) (("15" (INST?) (("15" (LEMMA SEQ_FIRST_REST[POSNAT]) (("15" (INST -1 P1!1) (("15" (LEMMA EMPTY_0[POSNAT]) (("15" (INST -1 P1!1) (("15" (ASSERT) (("15" (LEMMA NOT_VAR) (("15" (INST?) (("15" (INST?) (("15" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|fd_equal_symbol-1| |nil| 3512858302 ("" (MEASURE-INDUCT+ "length(first_diff(s, t))" ("s" "t")) (("1" (SKOSIMP) (("1" (NAME-REPLACE "fd" "first_diff(x!1, x!2)" :HIDE? NIL) (("1" (EXPAND FIRST_DIFF -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT (-2 -4)) (("1" (REPLACE -1 -2 RL) (("1" (HIDE -1) (("1" (EXPAND CHILD) (("1" (SKOSIMP) (("1" (LEMMA SEQ_EMPTY[POSNAT]) (("1" (INST -1 P!1 P1!1) (("1" (ASSERT) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -4)) (("2" (REPLACE -1 -2 RL) (("2" (HIDE -1) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (LEMMA SEQ_EMPTY[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (ASSERT) (("2" (FLATTEN) (("2" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 -4)) (("3" (REPLACE -1 -2 RL) (("3" (HIDE -1) (("3" (EXPAND CHILD) (("3" (SKOSIMP) (("3" (LEMMA SEQ_EMPTY[POSNAT]) (("3" (INST -1 P!1 P1!1) (("3" (ASSERT) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (CASE "p!1 = empty_seq") (("1" (HIDE-ALL-BUT (-1 -2 4)) (("1" (REPLACES -1) (("1" (REWRITE SUBTERM_EMPTY_SEQ) (("1" (REWRITE SUBTERM_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL) ("2" (NAME-REPLACE "kk" "min({kk: below[length(args(x!2))] |
                                                  subtermOF(x!1,  #(kk + 1)) /=
                                                   subtermOF(x!2,  #(kk + 1))})" :HIDE? NIL) (("1" (ASSERT) (("1" (INST -4 "subtermOF(x!1,  #(1 + kk))" "subtermOF(x!2,  #(1 + kk))") (("1" (REPLACE -3 -4 RL) (("1" (EXPAND ADD_FIRST -4) (("1" (EXPAND INSERT? -4) (("1" (INST -4 "rest(p!1)") (("1" (SPLIT) (("1" (LEMMA POS_SUBTERM) (("1" (INST-CP -1 "#(1 + kk)" "rest(p!1)" "x!1") (("1" (INST -1 "#(1 + kk)" "rest(p!1)" "x!2") (("1" (SPLIT) (("1" (SPLIT) (("1" (REPLACE -1 -3 RL) (("1" (REPLACE -2 -3 RL) (("1" (CASE "#(1 + kk) o rest(p!1) = p!1") (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 -2 -3 -5 3 4 5 6) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = first(fd)") (("1" (CASE "first(fd) = 1 + kk") (("1" (HIDE-ALL-BUT (-1 -2 1 2)) (("1" (REPLACES -1) (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE -1 2) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1 3)) (("2" (REPLACES -1) (("2" (REWRITE FIRST_COMPO) (("2" (HIDE 2) (("2" (FLATTEN) (("2" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) (("3" (REPLACES -1) (("3" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT (1 3)) (("4" (FLATTEN) (("4" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA FIRST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (HIDE-ALL-BUT (-1 -7 -8 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (CASE "first(p!1) = 1 + kk") (("1" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("1" (INST -1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (1 3)) (("1" (FLATTEN) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 3)) (("2" (LEMMA FIRST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (REPLACE -3 2 RL) (("2" (REPLACE -2 2 RL) (("2" (HIDE-ALL-BUT 2) (("2" (REWRITE FIRST_ADD) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (1 3)) (("3" (FLATTEN) (("3" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 2)) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (INST 1 P1!1) (("2" (ASSERT) (("2" (LEMMA REST_COMPO[POSNAT]) (("2" (INST -1 P!1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (REPLACE -1 2 RL) (("2" (LEMMA REST_ADD_FIRST[POSNAT]) (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)), subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "p!1 = #(1 + kk) o rest(p!1)") (("1" (TYPEPRED P!1) (("1" (HIDE-ALL-BUT (-1 -2 -3 1 2)) (("1" (REWRITE POS_SUBTERM_AX) (("1" (REWRITE POS_SUBTERM_AX) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 -4 1 3)) (("2" (LEMMA SEQ_FIRST_REST_1[POSNAT]) (("2" (INST -1 P!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P!1) (("2" (ASSERT) (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (REPLACE -2 -3 RL) (("2" (HIDE -2) (("2" (LEMMA FIRST_ADD[POSNAT]) (("2" (INST -1 "first_diff(subtermOF(x!1,  #(1 + kk)),
                                         subtermOF(x!2,  #(1 + kk)))" "1 + kk") (("2" (REPLACE -3 -1) (("2" (HIDE -3) (("2" (REWRITE FIRST_COMPO) (("2" (REPLACES -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1 3 4 5)) (("2" (LEMMA FIRST_DIFF_TCC7) (("2" (INST -1 X!1 X!2 "f(x!1)" "args(x!1)") (("2" (ASSERT) (("2" (CASE "x!1 = app(f(x!1), args(x!1))") (("1" (ASSERT) (("1" (INST -2 "f(x!2)" "args(x!2)") (("1" (CASE "x!2 = app(f(x!2), args(x!2))") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT (1 3)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (1 5)) (("2" (DECOMPOSE-EQUALITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (REWRITE POSITIONS_OF_ARG) NIL NIL)) NIL) ("4" (HIDE -2 -3 -4 2 6) (("4" (SKOSIMP) (("4" (REWRITE POSITIONS_OF_ARG) (("4" (TYPEPRED KK!1) (("4" (TYPEPRED "args(x!2)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT (-1 -3)) (("5" (REPLACE -1 -2 RL) (("5" (HIDE -1) (("5" (EXPAND CHILD) (("5" (SKOSIMP) (("5" (LEMMA SEQ_EMPTY[POSNAT]) (("5" (INST -1 P!1 P1!1) (("5" (ASSERT) (("5" (FLATTEN) (("5" (REWRITE EMPTY_0 -2) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 1)) (("2" (LEMMA POSITION_T_FIRST_DIFF) (("2" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("2" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("2" (EXPAND CHILD) (("2" (SKOSIMP) (("2" (LEMMA POS_SUBTERM_AX) (("2" (INST -1 P!1 P1!1 Y!2) (("2" (ASSERT) (("2" (LEMMA NOT_VAR) (("2" (LEMMA SEQ_FIRST_REST[POSNAT]) (("2" (INST -1 P1!1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 P1!1) (("2" (ASSERT) (("2" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("3" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("3" (EXPAND CHILD) (("3" (SKOSIMP) (("3" (LEMMA POS_SUBTERM_AX) (("3" (INST -1 P!1 P1!1 Y!1) (("3" (ASSERT) (("3" (LEMMA NOT_VAR) (("3" (LEMMA SEQ_FIRST_REST[POSNAT]) (("3" (INST -1 P1!1) (("3" (LEMMA EMPTY_0[POSNAT]) (("3" (INST -1 P1!1) (("3" (ASSERT) (("3" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE-ALL-BUT 1) (("4" (SKOSIMP) (("4" (LEMMA POSITION_T_FIRST_DIFF) (("4" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("4" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("4" (EXPAND CHILD) (("4" (SKOSIMP) (("4" (LEMMA POS_SUBTERM_AX) (("4" (INST -1 P!1 P1!1 Y!2) (("4" (ASSERT) (("4" (LEMMA NOT_VAR) (("4" (LEMMA SEQ_FIRST_REST[POSNAT]) (("4" (INST -1 P1!1) (("4" (LEMMA EMPTY_0[POSNAT]) (("4" (INST -1 P1!1) (("4" (ASSERT) (("4" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!2, p!1)") (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT 1) (("5" (SKOSIMP) (("5" (LEMMA POSITION_S_FIRST_DIFF) (("5" (INST -1 Y!1 Y!2 "first_diff(y!1, y!2)") (("5" (NAME-REPLACE "fd" "first_diff(y!1, y!2)") (("5" (EXPAND CHILD) (("5" (SKOSIMP) (("5" (LEMMA POS_SUBTERM_AX) (("5" (INST -1 P!1 P1!1 Y!1) (("5" (ASSERT) (("5" (LEMMA NOT_VAR) (("5" (LEMMA SEQ_FIRST_REST[POSNAT]) (("5" (INST -1 P1!1) (("5" (LEMMA EMPTY_0[POSNAT]) (("5" (INST -1 P1!1) (("5" (ASSERT) (("5" (INST -2 "first(p1!1)" "p1!1" "rest(p1!1)" "subtermOF(y!1, p!1)") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("6" (HIDE-ALL-BUT 1) (("6" (SKOSIMP) (("6" (LEMMA POSITION_T_FIRST_DIFF) (("6" (INST?) (("6" (INST?) (("6" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("6" (EXPAND CHILD) (("6" (SKOSIMP) (("6" (LEMMA POS_SUBTERM_AX) (("6" (INST?) (("6" (INST?) (("6" (LEMMA SEQ_FIRST_REST[POSNAT]) (("6" (INST -1 P1!2) (("6" (LEMMA EMPTY_0[POSNAT]) (("6" (INST -1 P1!2) (("6" (ASSERT) (("6" (LEMMA NOT_VAR) (("6" (INST?) (("6" (INST?) (("6" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("7" (HIDE-ALL-BUT (-1 1)) (("7" (LEMMA POSITION_T_FIRST_DIFF) (("7" (INST?) (("7" (INST?) (("7" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("7" (EXPAND CHILD) (("7" (SKOSIMP) (("7" (LEMMA POS_SUBTERM_AX) (("7" (INST?) (("7" (INST?) (("7" (LEMMA SEQ_FIRST_REST[POSNAT]) (("7" (INST -1 P1!1) (("7" (LEMMA EMPTY_0[POSNAT]) (("7" (INST -1 P1!1) (("7" (ASSERT) (("7" (LEMMA NOT_VAR) (("7" (INST?) (("7" (INST?) (("7" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("8" (HIDE-ALL-BUT (-1 1)) (("8" (LEMMA POSITION_S_FIRST_DIFF) (("8" (INST?) (("8" (INST?) (("8" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("8" (EXPAND CHILD) (("8" (SKOSIMP) (("8" (LEMMA POS_SUBTERM_AX) (("8" (INST?) (("8" (INST?) (("8" (LEMMA SEQ_FIRST_REST[POSNAT]) (("8" (INST -1 P1!1) (("8" (LEMMA EMPTY_0[POSNAT]) (("8" (INST -1 P1!1) (("8" (ASSERT) (("8" (LEMMA NOT_VAR) (("8" (INST?) (("8" (INST?) (("8" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("9" (HIDE-ALL-BUT 1) (("9" (SKOSIMP) (("9" (LEMMA POSITION_S_FIRST_DIFF) (("9" (INST?) (("9" (INST?) (("9" (NAME-REPLACE "fd" "first_diff(x!1`1, x!1`2)") (("9" (EXPAND CHILD) (("9" (SKOSIMP) (("9" (LEMMA POS_SUBTERM_AX) (("9" (INST?) (("9" (INST?) (("9" (LEMMA SEQ_FIRST_REST[POSNAT]) (("9" (INST -1 P1!2) (("9" (LEMMA EMPTY_0[POSNAT]) (("9" (INST -1 P1!2) (("9" (ASSERT) (("9" (LEMMA NOT_VAR) (("9" (INST?) (("9" (INST?) (("9" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("10" (HIDE-ALL-BUT (-1 1)) (("10" (LEMMA POSITION_T_FIRST_DIFF) (("10" (INST?) (("10" (INST?) (("10" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("10" (EXPAND CHILD) (("10" (SKOSIMP) (("10" (LEMMA POS_SUBTERM_AX) (("10" (INST?) (("10" (INST?) (("10" (LEMMA SEQ_FIRST_REST[POSNAT]) (("10" (INST -1 P1!1) (("10" (LEMMA EMPTY_0[POSNAT]) (("10" (INST -1 P1!1) (("10" (ASSERT) (("10" (LEMMA NOT_VAR) (("10" (INST?) (("10" (INST?) (("10" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("11" (HIDE-ALL-BUT (-1 1)) (("11" (LEMMA POSITION_S_FIRST_DIFF) (("11" (INST?) (("11" (INST?) (("11" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("11" (EXPAND CHILD) (("11" (SKOSIMP) (("11" (LEMMA POS_SUBTERM_AX) (("11" (INST?) (("11" (INST?) (("11" (LEMMA SEQ_FIRST_REST[POSNAT]) (("11" (INST -1 P1!1) (("11" (LEMMA EMPTY_0[POSNAT]) (("11" (INST -1 P1!1) (("11" (ASSERT) (("11" (LEMMA NOT_VAR) (("11" (INST?) (("11" (INST?) (("11" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("12" (HIDE-ALL-BUT 1) (("12" (SKOSIMP) (("12" (LEMMA POSITION_T_FIRST_DIFF) (("12" (INST?) (("12" (INST?) (("12" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("12" (EXPAND CHILD) (("12" (SKOSIMP) (("12" (LEMMA POS_SUBTERM_AX) (("12" (INST?) (("12" (INST?) (("12" (LEMMA SEQ_FIRST_REST[POSNAT]) (("12" (INST -1 P1!1) (("12" (LEMMA EMPTY_0[POSNAT]) (("12" (INST -1 P1!1) (("12" (ASSERT) (("12" (LEMMA NOT_VAR) (("12" (INST?) (("12" (INST?) (("12" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("13" (HIDE-ALL-BUT 1) (("13" (SKOSIMP) (("13" (LEMMA POSITION_S_FIRST_DIFF) (("13" (INST?) (("13" (INST?) (("13" (NAME-REPLACE "fd" "first_diff(y!1`1, y!1`2)") (("13" (EXPAND CHILD) (("13" (SKOSIMP) (("13" (LEMMA POS_SUBTERM_AX) (("13" (INST?) (("13" (INST?) (("13" (LEMMA SEQ_FIRST_REST[POSNAT]) (("13" (INST -1 P1!1) (("13" (LEMMA EMPTY_0[POSNAT]) (("13" (INST -1 P1!1) (("13" (ASSERT) (("13" (LEMMA NOT_VAR) (("13" (INST?) (("13" (INST?) (("13" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("14" (HIDE 2) (("14" (SKOSIMP) (("14" (LEMMA POSITION_T_FIRST_DIFF) (("14" (INST?) (("14" (ASSERT) (("14" (HIDE -2) (("14" (EXPAND CHILD) (("14" (SKOSIMP) (("14" (LEMMA POS_SUBTERM_AX) (("14" (INST?) (("14" (INST?) (("14" (LEMMA SEQ_FIRST_REST[POSNAT]) (("14" (INST -1 P1!1) (("14" (LEMMA EMPTY_0[POSNAT]) (("14" (INST -1 P1!1) (("14" (ASSERT) (("14" (LEMMA NOT_VAR) (("14" (INST?) (("14" (INST?) (("14" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("15" (HIDE 2) (("15" (SKOSIMP) (("15" (LEMMA POSITION_S_FIRST_DIFF) (("15" (INST?) (("15" (ASSERT) (("15" (HIDE -2) (("15" (EXPAND CHILD) (("15" (SKOSIMP) (("15" (LEMMA POS_SUBTERM_AX) (("15" (INST?) (("15" (INST?) (("15" (LEMMA SEQ_FIRST_REST[POSNAT]) (("15" (INST -1 P1!1) (("15" (LEMMA EMPTY_0[POSNAT]) (("15" (INST -1 P1!1) (("15" (ASSERT) (("15" (LEMMA NOT_VAR) (("15" (INST?) (("15" (INST?) (("15" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK)) (|link_of_frst_diff_TCC1| 0 (|link_of_frst_diff_TCC1-2| "" 3803860560 ("" (SKOSIMP*) (("" (EXPAND V) (("" (PROPAX) NIL NIL)) NIL)) NIL) ((V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL)) SHOSTAK (|link_of_frst_diff| SUBTYPE "robinsonunification.sp" "(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)")) (|link_of_frst_diff_TCC1-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (HIDE -1 -2 -4) (("" (EXPAND V) (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) NIL NIL (|link_of_frst_diff| SUBTYPE "robinsonunification.sp" "(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)"))) (|link_of_frst_diff_TCC2| 0 (|link_of_frst_diff_TCC2-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (LEMMA "Vars_is_var") (("" (LEMMA "vars_of_term_finite") (("" (INST -1 "sp!1") (("" (INST -2 "sp!1") (("" (ASSERT) (("" (EXPAND* "Sub?" "Dom") (("" (REPLACES -2) (("" (EXPAND "is_finite") (("" (SKOSIMP) (("" (INST 2 "N!1" "f!1") (("1" (HIDE-ALL-BUT (-1 2)) (("1" (EXPAND "injective?") (("1" (SKEEP) (("1" (INST -1 "x1" "x2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (PROP) (("1" (ASSERT) (("1" (REPLACES -1) (("1" (HIDE -2 -5 1) (("1" (LEMMA "first_diff_has_diff_argument") (("1" (INST -1 "s!1" "t!1" "k!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|Vars_is_var| FORMULA-DECL NIL |subterm| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|first_diff_has_diff_argument| FORMULA-DECL NIL |robinsonunification| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|sp!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|tp!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL)) NIL (|link_of_frst_diff| SUBTYPE "(LAMBDA (x: (variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)): IF x = robinsonunification.sp THEN robinsonunification.tp ELSE x ENDIF)" "Sub[variable, symbol, arity]"))) (|link_of_frst_diff_TCC3| 0 (|link_of_frst_diff_TCC3-1| |nil| 3467989055 ("" (SUBTYPE-TCC) NIL NIL) ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)) NIL (|link_of_frst_diff| SUBTYPE "robinsonunification.tp" "(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)"))) (|link_of_frst_diff_TCC4| 0 (|link_of_frst_diff_TCC4-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (LEMMA "Vars_is_var") (("" (LEMMA "vars_of_term_finite") (("" (INST -1 "tp!1") (("" (INST -2 "tp!1") (("" (ASSERT) (("" (EXPAND* "Sub?" "Dom") (("" (REPLACES -2) (("" (EXPAND "is_finite") (("" (SKOSIMP) (("" (INST 3 "N!1" "f!1") (("1" (HIDE-ALL-BUT (-1 3)) (("1" (EXPAND "injective?") (("1" (SKEEP) (("1" (INST -1 "x1" "x2") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKEEP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|Vars_is_var| FORMULA-DECL NIL |subterm| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|injective?| CONST-DECL "bool" |functions| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (< CONST-DECL "bool" |reals| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|tp!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|sp!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL)) NIL (|link_of_frst_diff| SUBTYPE "(LAMBDA (x: (variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)): IF x = robinsonunification.tp THEN robinsonunification.sp ELSE x ENDIF)" "Sub[variable, symbol, arity]"))) (|dom_link_of_frst_diff_is| 0 (|dom_link_of_frst_diff_is-2| "" 3884999661 ("" (SKOSIMP) (("" (ASSERT) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (PROP) (("1" (EXPAND* "restrict" "singleton") (("1" (DECOMPOSE-EQUALITY 1) (("1" (IFF) (("1" (PROP) (("1" (COPY -3) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!1") (("1" (EXPAND "Dom") (("1" (EXPAND "link_of_frst_diff" -1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -3 1 RL) (("2" (EXPAND "link_of_frst_diff" 1) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "Dom") (("1" (REPLACE -5 1 RL) (("1" (REPLACE -2 1 RL) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND* "member" "subtermOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "Vars") (("1" (INST 1 "empty_seq") (("1" (EXPAND "subtermOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (EXPAND "positionsOF") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (REVEAL -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (REVEAL -4) (("3" (ASSERT) NIL NIL)) NIL) ("4" (EXPAND "Vars") (("4" (EXPAND "finseq_appl") (("4" (INST 3 "empty_seq") (("1" (REVEAL -4) (("1" (REPLACE -1 -2 RL) (("1" (EXPAND "subtermOF" 3 1) (("1" (REWRITE "empty_0" 3) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "finseq_appl") (("2" (EXPAND "positionsOF") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1 3) (("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "restrict" "singleton") (("2" (DECOMPOSE-EQUALITY 2) (("1" (IFF) (("1" (PROP) (("1" (COPY -2) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!1") (("1" (EXPAND "Dom") (("1" (REPLACE -1 -2 RL) (("1" (EXPAND "link_of_frst_diff" -2) (("1" (ASSERT) (("1" (CASE "vars?(subtermOF(t!1, first_diff(s!1, t!1)))") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "link_of_frst_diff" -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (REPLACE -3 1 RL) (("2" (EXPAND "link_of_frst_diff" -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "position_s_first_diff") (("3" (LEMMA "comutative_first_diff") (("3" (INST -2 "t!1" "s!1" "first_diff(s!1,t!1)") (("3" (ASSERT) (("3" (INST -1 "s!1" "t!1" "p!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (COPY -2) (("2" (DECOMPOSE-EQUALITY -1) (("2" (INST -1 "x!1") (("2" (EXPAND "link_of_frst_diff" -1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "Dom") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND "link_of_frst_diff" -3) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2 3) (("2" (SKOSIMP) (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "t!1" "s!1" "p!1") (("2" (LEMMA "comutative_first_diff") (("2" (ASSERT) (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|dom_link_of_frst_diff_is-1| |nil| 3468666181 ("" (SKOSIMP) (("" (ASSERT) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (PROP) (("1" (EXPAND* "restrict" "singleton") (("1" (DECOMPOSE-EQUALITY 1) (("1" (IFF) (("1" (PROP) (("1" (COPY -3) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!1") (("1" (EXPAND "Dom") (("1" (EXPAND "link_of_frst_diff" -1) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -3 1 RL) (("2" (EXPAND "link_of_frst_diff" 1) (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "Dom") (("1" (REPLACE -5 1 RL) (("1" (REPLACE -2 1 RL) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND* "member" "subtermOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "Vars") (("1" (INST 1 "empty_seq") (("1" (EXPAND "subtermOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT 1) (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -) (("2" (EXPAND "positionsOF") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (REVEAL -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (REVEAL -4) (("3" (ASSERT) NIL NIL)) NIL) ("4" (EXPAND "Vars") (("4" (EXPAND "finseq_appl") (("4" (INST 3 "empty_seq") (("1" (REVEAL -4) (("1" (REPLACE -1 -2 RL) (("1" (EXPAND "subtermOF" 3 1) (("1" (REWRITE "empty_0" 3) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "finseq_appl") (("2" (EXPAND "positionsOF") (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (HIDE 1 3) (("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "restrict" "singleton") (("2" (DECOMPOSE-EQUALITY 2) (("1" (IFF) (("1" (PROP) (("1" (COPY -2) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!1") (("1" (EXPAND "Dom") (("1" (REPLACE -1 -2 RL) (("1" (EXPAND "link_of_frst_diff" -2) (("1" (ASSERT) (("1" (CASE "vars?(subtermOF(t!1, first_diff(s!1, t!1)))") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "link_of_frst_diff" -4) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (REPLACE -3 1 RL) (("2" (EXPAND "link_of_frst_diff" -2) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "position_s_first_diff") (("3" (LEMMA "comutative_first_diff") (("3" (INST -2 "t!1" "s!1" "first_diff(s!1,t!1)") (("3" (ASSERT) (("3" (INST -1 S!1 T!1 P!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (COPY -2) (("2" (DECOMPOSE-EQUALITY -1) (("2" (INST -1 "x!1") (("2" (EXPAND "link_of_frst_diff" -1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (EXPAND "Dom") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL) ("3" (ASSERT) (("3" (EXPAND "link_of_frst_diff" -3) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2 3) (("2" (SKOSIMP) (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "t!1" "s!1" "p!1") (("2" (LEMMA "comutative_first_diff") (("2" (ASSERT) (("2" (INST -1 S!1 T!1 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (|first| CONST-DECL "T" |seq_extras| |structures|) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| |structures|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (< CONST-DECL "bool" |reals| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|union| CONST-DECL "set" |sets| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|comutative_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) SHOSTAK)) (|dom_ran_link_disjoint| 0 (|dom_ran_link_disjoint-1| |nil| 3468741400 ("" (ASSERT) (("" (SKOSIMP*) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (TYPEPRED "x!1") (("" (TYPEPRED "r!1") (("" (HIDE -2) (("" (EXPAND "member") (("" (REPLACE -3 -1) (("" (REPLACE -3 -2) (("" (EXPAND "Dom") (("" (EXPAND "Ran") (("" (SKOSIMP) (("" (EXPAND* "member" "Dom") (("" (LEMMA "dom_link_of_frst_diff_is") (("" (INST -1 "first_diff(s!1, t!1)" "s!1" "t!1") (("" (ASSERT) (("" (REPLACE -4 -1) (("" (ASSERT) (("" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("" (EXPAND* "restrict" "singleton") (("" (PROP) (("1" (COPY -2) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!1") (("1" (IFF) (("1" (ASSERT) (("1" (TYPEPRED "x!1") (("1" (EXPAND "member") (("1" (ASSERT) (("1" (HIDE -1 -2) (("1" (REPLACE -6 -5 RL) (("1" (DECOMPOSE-EQUALITY -3) (("1" (INST -1 "x!2") (("1" (EXPAND "Dom") (("1" (EXPAND "link_of_frst_diff" -5) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -5 1) (("1" (REPLACE -5 -1) (("1" (REPLACE -3 1 RL) (("1" (REPLACE -1 1 RL) (("1" (HIDE-ALL-BUT (-7 1)) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -6 -1) (("2" (HIDE -2 -3 -4 -8 1 2) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vars?(subtermOF(t!1, p!1))") (("1" (COPY -2) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!1") (("1" (EXPAND "Dom" -1) (("1" (DECOMPOSE-EQUALITY -3) (("1" (INST -1 "x!2") (("1" (EXPAND "Dom" -1) (("1" (REPLACE -6 -5 RL) (("1" (EXPAND "link_of_frst_diff" -5) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -5 1) (("1" (REPLACE -5 -1) (("1" (REPLACE -3 1 RL) (("1" (REPLACE -1 1 RL) (("1" (HIDE-ALL-BUT (-7 1)) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -6 -1) (("2" (HIDE-ALL-BUT (-1 -6 -7 4)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -4 1 2 5)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "t!1" "s!1" "p!1") (("3" (ASSERT) (("3" (HIDE 2) (("3" (LEMMA "comutative_first_diff") (("3" (INST -1 "s!1" "t!1" "p!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|member| CONST-DECL "bool" |sets| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|dom_link_of_frst_diff_is| FORMULA-DECL NIL |robinsonunification| NIL) (|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|comutative_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|Ran| CONST-DECL "set[term[variable, symbol, arity]]" |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) SHOSTAK)) (|link_remove_x| 0 (|link_remove_x-1| |nil| 3468745076 ("" (SKOSIMP) (("" (ASSERT) (("" (FLATTEN) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (PROP) (("1" (LEMMA "vars_subst_not_in") (("1" (INST -1 "s!1" "sig!1" "x!1") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (LEMMA "dom_ran_link_disjoint") (("1" (INST -1 "s!1" "t!1") (("1" (ASSERT) (("1" (INST -1 "x!1" "r!1") (("1" (REPLACES -4) (("1" (HIDE -2 -3 -4 2) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -4) (("2" (HIDE -1 -2 -3 2) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "vars_subst_not_in") (("2" (INST -1 "t!1" "sig!1" "x!1") (("2" (ASSERT) (("2" (SKOSIMP) (("2" (LEMMA "dom_ran_link_disjoint") (("2" (INST -1 "s!1" "t!1") (("2" (ASSERT) (("2" (INST -1 "x!1" "r!1") (("1" (REPLACES -4) (("1" (HIDE -2 -3 -4 2) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACES -4) (("2" (HIDE -1 -2 -3 2) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|r!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|vars_subst_not_in| FORMULA-DECL NIL |substitution| NIL) (|dom_ran_link_disjoint| FORMULA-DECL NIL |robinsonunification| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|r!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|x!1| SKOLEM-CONST-DECL "(V)" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|Ran| CONST-DECL "set[term[variable, symbol, arity]]" |substitution| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|member| CONST-DECL "bool" |sets| NIL)) SHOSTAK)) (|link_of_frst_diff_s_is_subset_union| 0 (|link_of_frst_diff_s_is_subset_union-2| "" 3884999799 ("" (SKOSIMP) (("" (ASSERT) (("" (FLATTEN) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1,t!1)" :HIDE? NIL) (("" (EXPAND* "subset?") (("" (SKOSIMP) (("" (EXPAND* "union" "member") (("" (FLATTEN) (("" (CASE "member(x!1, VRan(sig!1))") (("1" (EXPAND* "member" "VRan") (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "first_diff(s!1, t!1)" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (TYPEPRED "i!1") (("1" (INST -3 "i!1") (("1" (ASSERT) (("1" (REPLACES -3) (("1" (HIDE -1) (("1" (REPLACE -4 -3 RL) (("1" (EXPAND "link_of_frst_diff" -3) (("1" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 4)) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "t!1") (("1" (ASSERT) (("1" (PROP) (("1" (INST 1 "p!1 o p!2") (("1" (REWRITE "pos_subterm") NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL -4) (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "t!1" "s!1" "p!1") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REWRITE "comutative_first_diff") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -3 -5 -6 1)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY -1) (("1" (TYPEPRED "i!1") (("1" (INST -3 "i!1") (("1" (ASSERT) (("1" (REPLACES -3) (("1" (EXPAND "V") (("1" (REPLACE -4 -3 RL) (("1" (EXPAND "link_of_frst_diff" -3) (("1" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 4)) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "s!1") (("1" (ASSERT) (("1" (PROP) (("1" (INST 1 "p!1 o p!2") (("1" (REWRITE "pos_subterm") NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL -4) (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -3 -4 -7 1 2)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "position_t_first_diff") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (NAME "p!1" "first_diff(s!1,t!1)") (("2" (CASE "vars?(subtermOF(s!1,p!1))") (("1" (CASE "VRan(sig!1) = Vars(subtermOF(t!1,p!1))") (("1" (REPLACES -1) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!1" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -4 -1) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (LEMMA "positions_of_ext") (("1" (INST -1 "sig!1" "s!1") (("1" (DECOMPOSE-EQUALITY -1) (("1" (EXPAND "Vars" -5) (("1" (SKOSIMP) (("1" (INST -1 "p!2") (("1" (ASSERT) (("1" (EXPAND "union") (("1" (PROP) (("1" (EXPAND "member") (("1" (FLATTEN) (("1" (REWRITE "subterm_ext_commute") (("1" (DECOMPOSE-EQUALITY -5) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -2) (("2" (TYPEPRED "x!1") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOSIMP) (("2" (REPLACE -1 -8) (("2" (REWRITE "pos_subterm") (("2" (REWRITE "subterm_ext_commute") (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (CASE "subtermOF(s!1, p1!1) = subtermOF(s!1, p!1)") (("1" (REPLACE -8 -9 RL) (("1" (EXPAND "link_of_frst_diff" -9) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -8 -1) (("1" (HIDE-ALL-BUT (-1 3)) (("1" (EXPAND "Vars") (("1" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -10) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -7 -8 RL) (("2" (EXPAND "link_of_frst_diff" -8) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -8 -5 RL) (("1" (EXPAND "ext" -5) (("1" (EXPAND "link_of_frst_diff" -5) (("1" (ASSERT) (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (REPLACE -1 -3 RL) (("1" (HIDE-ALL-BUT (-3 6)) (("1" (EXPAND "Vars") (("1" (INST 1 "p1!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "VRan" -1) (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "p!1" "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -5 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (REPLACE -4 -1 RL) (("1" (EXPAND "link_of_frst_diff" -1) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -3 2)) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "VRan" 1) (("2" (EXPAND "IUnion") (("2" (INST 1 "subtermOF(s!1, p!1)") (("1" (REPLACE -4 1 RL) (("1" (EXPAND "link_of_frst_diff" 1) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -3 2)) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (EXPAND "Dom") (("2" (DECOMPOSE-EQUALITY -4) (("2" (INST -1 "subtermOF(s!1, p!1)") (("2" (EXPAND "link_of_frst_diff" -1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) (("1" (REPLACE -2 -1) (("1" (REPLACE -5 -1) (("1" (HIDE-ALL-BUT (-1 -5)) (("1" (LEMMA "first_diff_has_diff_argument") (("1" (INST -1 "s!1" "t!1" "p!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "sig!1 = link_of_frst_diff(s!1,t!1)") (("1" (EXPAND "link_of_frst_diff" -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (REWRITE "position_t_first_diff") NIL NIL)) NIL)) NIL) ("2" (CASE "vars?(subtermOF(t!1,p!1))") (("1" (CASE "VRan(sig!1) = Vars(subtermOF(s!1,p!1))") (("1" (REPLACES -1) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!1" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -4 -1) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (LEMMA "positions_of_ext") (("1" (INST -1 "sig!1" "s!1") (("1" (DECOMPOSE-EQUALITY -1) (("1" (EXPAND "Vars" -5) (("1" (SKOSIMP) (("1" (INST -1 "p!2") (("1" (ASSERT) (("1" (EXPAND "union") (("1" (PROP) (("1" (EXPAND "member") (("1" (FLATTEN) (("1" (REWRITE "subterm_ext_commute") (("1" (DECOMPOSE-EQUALITY -5) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -2) (("2" (TYPEPRED "x!1") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOSIMP) (("2" (REPLACE -1 -8) (("2" (REWRITE "pos_subterm") (("2" (REWRITE "subterm_ext_commute") (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (CASE "subtermOF(s!1, p1!1) = subtermOF(t!1, p!1)") (("1" (REPLACE -8 -9 RL) (("1" (EXPAND "link_of_frst_diff" -9) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -8 -1) (("1" (HIDE-ALL-BUT (-1 4)) (("1" (EXPAND "Vars") (("1" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -10) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -7 -8 RL) (("2" (EXPAND "link_of_frst_diff" -8) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -8 -5 RL) (("1" (EXPAND "ext" -5) (("1" (EXPAND "link_of_frst_diff" -5) (("1" (ASSERT) (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (REPLACE -1 -3 RL) (("1" (HIDE-ALL-BUT (-3 7)) (("1" (EXPAND "Vars") (("1" (INST 1 "p1!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "VRan" -1) (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "p!1" "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -5 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (REPLACE -4 -1 RL) (("1" (EXPAND "link_of_frst_diff" -1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "VRan" 1) (("2" (EXPAND "IUnion") (("2" (INST 1 "subtermOF(t!1, p!1)") (("1" (REPLACE -4 1 RL) (("1" (EXPAND "link_of_frst_diff" 1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (EXPAND "Dom") (("2" (DECOMPOSE-EQUALITY -4) (("2" (INST -1 "subtermOF(t!1, p!1)") (("2" (EXPAND "link_of_frst_diff" -1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (CASE "sig!1 = link_of_frst_diff(s!1,t!1)") (("1" (EXPAND "link_of_frst_diff" -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (REWRITE "position_t_first_diff") NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "s!1" "t!1" "p!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|link_of_frst_diff_s_is_subset_union-1| |nil| 3469270552 ("" (SKOSIMP) (("" (ASSERT) (("" (FLATTEN) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1,t!1)" :HIDE? NIL) (("" (EXPAND* "subset?") (("" (SKOSIMP) (("" (EXPAND* "union" "member") (("" (FLATTEN) (("" (CASE "member(x!1, VRan(sig!1))") (("1" (EXPAND* "member" "VRan") (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "first_diff(s!1, t!1)" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (TYPEPRED "i!1") (("1" (INST -3 "i!1") (("1" (ASSERT) (("1" (REPLACES -3) (("1" (HIDE -1) (("1" (REPLACE -4 -3 RL) (("1" (EXPAND "link_of_frst_diff" -3) (("1" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 4)) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "t!1") (("1" (ASSERT) (("1" (PROP) (("1" (INST 1 "p!1 o p!2") (("1" (REWRITE "pos_subterm") NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL -4) (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "t!1" "s!1" "p!1") (("2" (ASSERT) (("2" (HIDE 2) (("2" (REWRITE "comutative_first_diff") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -3 -5 -6 1)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY -1) (("1" (TYPEPRED "i!1") (("1" (INST -3 "i!1") (("1" (ASSERT) (("1" (REPLACES -3) (("1" (EXPAND "V") (("1" (REPLACE -4 -3 RL) (("1" (EXPAND "link_of_frst_diff" -3) (("1" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 4)) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "s!1") (("1" (ASSERT) (("1" (PROP) (("1" (INST 1 "p!1 o p!2") (("1" (REWRITE "pos_subterm") NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REVEAL -4) (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -3 -4 -7 1 2)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (NAME "p!1" "first_diff(s!1,t!1)") (("2" (CASE "vars?(subtermOF(s!1,p!1))") (("1" (CASE "VRan(sig!1) = Vars(subtermOF(t!1,p!1))") (("1" (REPLACES -1) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!1" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -4 -1) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (LEMMA "positions_of_ext") (("1" (INST -1 "sig!1" "s!1") (("1" (DECOMPOSE-EQUALITY -1) (("1" (EXPAND "Vars" -5) (("1" (SKOSIMP) (("1" (INST -1 "p!2") (("1" (ASSERT) (("1" (EXPAND "union") (("1" (PROP) (("1" (EXPAND "member") (("1" (FLATTEN) (("1" (REWRITE "subterm_ext_commute") (("1" (DECOMPOSE-EQUALITY -5) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -2) (("2" (TYPEPRED "x!1") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOSIMP) (("2" (REPLACE -1 -8) (("2" (REWRITE "pos_subterm") (("2" (REWRITE "subterm_ext_commute") (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (CASE "subtermOF(s!1, p1!1) = subtermOF(s!1, p!1)") (("1" (REPLACE -8 -9 RL) (("1" (EXPAND "link_of_frst_diff" -9) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -8 -1) (("1" (HIDE-ALL-BUT (-1 3)) (("1" (EXPAND "Vars") (("1" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -10) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -7 -8 RL) (("2" (EXPAND "link_of_frst_diff" -8) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -8 -5 RL) (("1" (EXPAND "ext" -5) (("1" (EXPAND "link_of_frst_diff" -5) (("1" (ASSERT) (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (REPLACE -1 -3 RL) (("1" (HIDE-ALL-BUT (-3 6)) (("1" (EXPAND "Vars") (("1" (INST 1 "p1!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "VRan" -1) (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "p!1" "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -5 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (REPLACE -4 -1 RL) (("1" (EXPAND "link_of_frst_diff" -1) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -3 2)) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "VRan" 1) (("2" (EXPAND "IUnion") (("2" (INST 1 "subtermOF(s!1, p!1)") (("1" (REPLACE -4 1 RL) (("1" (EXPAND "link_of_frst_diff" 1) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -3 2)) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (EXPAND "Dom") (("2" (DECOMPOSE-EQUALITY -4) (("2" (INST -1 "subtermOF(s!1, p!1)") (("2" (EXPAND "link_of_frst_diff" -1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) (("1" (REPLACE -2 -1) (("1" (REPLACE -5 -1) (("1" (HIDE-ALL-BUT (-1 -5)) (("1" (LEMMA FIRST_DIFF_HAS_DIFF_ARGUMENT) (("1" (INST -1 S!1 T!1 P!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "sig!1 = link_of_frst_diff(s!1,t!1)") (("1" (EXPAND LINK_OF_FRST_DIFF -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL)) NIL) ("2" (CASE "vars?(subtermOF(t!1,p!1))") (("1" (CASE "VRan(sig!1) = Vars(subtermOF(s!1,p!1))") (("1" (REPLACES -1) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!1" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -4 -1) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (LEMMA "positions_of_ext") (("1" (INST -1 "sig!1" "s!1") (("1" (DECOMPOSE-EQUALITY -1) (("1" (EXPAND "Vars" -5) (("1" (SKOSIMP) (("1" (INST -1 "p!2") (("1" (ASSERT) (("1" (EXPAND "union") (("1" (PROP) (("1" (EXPAND "member") (("1" (FLATTEN) (("1" (REWRITE "subterm_ext_commute") (("1" (DECOMPOSE-EQUALITY -5) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -2) (("2" (TYPEPRED "x!1") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOSIMP) (("2" (REPLACE -1 -8) (("2" (REWRITE "pos_subterm") (("2" (REWRITE "subterm_ext_commute") (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (CASE "subtermOF(s!1, p1!1) = subtermOF(t!1, p!1)") (("1" (REPLACE -8 -9 RL) (("1" (EXPAND "link_of_frst_diff" -9) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -8 -1) (("1" (HIDE-ALL-BUT (-1 4)) (("1" (EXPAND "Vars") (("1" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -10) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -7 -8 RL) (("2" (EXPAND "link_of_frst_diff" -8) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -8 -5 RL) (("1" (EXPAND "ext" -5) (("1" (EXPAND "link_of_frst_diff" -5) (("1" (ASSERT) (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p1!1" "p2!1" "s!1") (("1" (ASSERT) (("1" (REPLACE -1 -3 RL) (("1" (HIDE-ALL-BUT (-3 7)) (("1" (EXPAND "Vars") (("1" (INST 1 "p1!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "VRan" -1) (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "p!1" "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -5 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (REPLACE -4 -1 RL) (("1" (EXPAND "link_of_frst_diff" -1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "VRan" 1) (("2" (EXPAND "IUnion") (("2" (INST 1 "subtermOF(t!1, p!1)") (("1" (REPLACE -4 1 RL) (("1" (EXPAND "link_of_frst_diff" 1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (EXPAND "Dom") (("2" (DECOMPOSE-EQUALITY -4) (("2" (INST -1 "subtermOF(t!1, p!1)") (("2" (EXPAND "link_of_frst_diff" -1) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (CASE "sig!1 = link_of_frst_diff(s!1,t!1)") (("1" (EXPAND LINK_OF_FRST_DIFF -1) (("1" (ASSERT) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND LINK_OF_FRST_DIFF) (("2" (ASSERT) NIL NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 S!1 T!1 P!1) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[term[variable, symbol, arity]]" |robinsonunification| NIL) (|first_diff_has_diff_argument| FORMULA-DECL NIL |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|subterm_ext_commute| FORMULA-DECL NIL |substitution| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|v| ADT-ACCESSOR-DECL "[(vars?) -> variable]" |term_adt| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|positions_of_ext| FORMULA-DECL NIL |substitution| NIL) (|link_remove_x| FORMULA-DECL NIL |robinsonunification| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|p!2| SKOLEM-CONST-DECL "positions?[variable, symbol, arity](subtermOF(s!1, p!1))" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|pos_o_term| FORMULA-DECL NIL |subterm| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|comutative_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|p!2| SKOLEM-CONST-DECL "positions?[variable, symbol, arity](subtermOF(t!1, p!1))" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|pos_subterm| FORMULA-DECL NIL |subterm| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|dom_link_of_frst_diff_is| FORMULA-DECL NIL |robinsonunification| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|VRan| CONST-DECL "set[(V)]" |substitution| NIL) (|union| CONST-DECL "set" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|subset?| CONST-DECL "bool" |sets| NIL)) SHOSTAK)) (|comutative_link_fd| 0 (|comutative_link_fd-2| "" 3884999823 ("" (SKOSIMP*) (("" (LEMMA "comutative_first_diff") (("" (INST?) (("" (ASSERT) (("" (PROP) (("" (INST -1 "first_diff(t!1, s!1)") (("" (EXPAND "link_of_frst_diff") (("" (LIFT-IF) (("" (ASSERT) (("" (NAME-REPLACE POSITION "first_diff(s!1, t!1)") (("" (REPLACE -1) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|comutative_link_fd-1| |nil| 3469378012 ("" (SKOSIMP*) (("" (LEMMA COMUTATIVE_FIRST_DIFF) (("" (INST?) (("" (ASSERT) (("" (PROP) (("" (INST -1 "first_diff(t!1, s!1)") (("" (EXPAND LINK_OF_FRST_DIFF) (("" (LIFT-IF) (("" (ASSERT) (("" (NAME-REPLACE POSITION "first_diff(s!1, t!1)") (("" (REPLACE -1) (("" (CASE " vars?(subtermOF(t!1, position))") (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL) ("3" (HIDE 2 3) (("3" (REPLACE -1 1 RL) (("3" (HIDE -) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST -1 T!1 S!1 "first_diff(t!1, s!1)") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|comutative_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) SHOSTAK)) (|link_of_frst_diff_t_is_subset_union| 0 (|link_of_frst_diff_t_is_subset_union-2| "" 3884999957 ("" (LEMMA "comutative_link_fd") (("" (LEMMA "link_of_frst_diff_s_is_subset_union") (("" (SKOSIMP*) (("" (ASSERT) (("" (CASE "NOT vars?(subtermOF(s!1, first_diff(s!1, t!1)))") (("1" (INST -1 "t!1" "s!1") (("1" (INST -2 "s!1" "t!1") (("1" (ASSERT) (("1" (PROP) (("1" (REPLACE -2) (("1" (HIDE -2 1 2) (("1" (EXPAND "subset?") (("1" (SKOSIMP*) (("1" (INST -1 "x!1") (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND* "member" "union") (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -2) (("2" (PROP) (("2" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1,t!1)" :HIDE? NIL) (("2" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("2" (EXPAND* "subset?") (("2" (SKOSIMP) (("2" (EXPAND* "union" "member") (("2" (FLATTEN) (("2" (CASE "member(x!1, VRan(sig!1))") (("1" (EXPAND* "member" "VRan") (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "first_diff(s!1, t!1)" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -4 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (TYPEPRED "i!1") (("1" (INST -3 "i!1") (("1" (ASSERT) (("1" (REPLACES -3) (("1" (HIDE -1) (("1" (REPLACE -4 -2 RL) (("1" (EXPAND "link_of_frst_diff" -2) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -3 4)) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "t!1") (("1" (ASSERT) (("1" (PROP) (("1" (INST 1 "p!1 o p!2") (("1" (REWRITE "pos_subterm") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REWRITE "position_t_first_diff") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -4 -5 -6 1)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (CASE "VRan(sig!1) = Vars(subtermOF(t!1,p!1))") (("1" (REPLACES -1) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!1" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (LEMMA "positions_of_ext") (("1" (INST -1 "sig!1" "t!1") (("1" (DECOMPOSE-EQUALITY -1) (("1" (EXPAND "Vars" -5) (("1" (SKOSIMP) (("1" (INST -1 "p!2") (("1" (ASSERT) (("1" (EXPAND "union") (("1" (PROP) (("1" (EXPAND "member") (("1" (FLATTEN) (("1" (REWRITE "subterm_ext_commute") (("1" (DECOMPOSE-EQUALITY -5) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -2) (("2" (TYPEPRED "x!1") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOSIMP) (("2" (REPLACE -1 -8) (("2" (REWRITE "pos_subterm") (("2" (REWRITE "subterm_ext_commute") (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (CASE "subtermOF(t!1, p1!1) = subtermOF(t!1, p!1)") (("1" (REPLACE -7 -9 RL) (("1" (EXPAND "link_of_frst_diff" -9) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -8 -2) (("1" (HIDE-ALL-BUT (-2 3)) (("1" (EXPAND "Vars") (("1" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1) (("2" (HIDE-ALL-BUT (-1 4)) (("2" (EXPAND "Vars") (("2" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "link_of_frst_diff" -9) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -6 -8 RL) (("2" (EXPAND "link_of_frst_diff" -8) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -8 -6 RL) (("1" (EXPAND "ext" -6) (("1" (EXPAND "link_of_frst_diff" -6) (("1" (ASSERT) (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p2!1" "t!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p!1" "p2!1" "t!1") (("1" (CASE "positionsOF(t!1)(p!1)") (("1" (ASSERT) (("1" (ASSERT) (("1" (REPLACE -10 -5) (("1" (REPLACE -2 -5 RL) (("1" (HIDE-ALL-BUT (-5 7)) (("1" (EXPAND "Vars") (("1" (INST 1 "p!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-9 1)) (("2" (REWRITE "position_t_first_diff") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "ext" -5) (("2" (REPLACE -7 -5 RL) (("2" (EXPAND "link_of_frst_diff" -5) (("2" (ASSERT) (("2" (LEMMA "pos_o_term") (("2" (INST -1 "p1!1" "p2!1" "t!1") (("2" (ASSERT) (("2" (LEMMA "pos_subterm") (("2" (INST -1 "p1!1" "p2!1" "t!1") (("2" (ASSERT) (("2" (REPLACE -1 -3 RL) (("2" (HIDE-ALL-BUT (-3 8)) (("2" (EXPAND "Vars") (("2" (INST 1 "p1!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "link_of_frst_diff" -8) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "VRan" -1) (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "p!1" "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -4 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (REPLACE -3 -1 RL) (("1" (EXPAND "link_of_frst_diff" -1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "VRan" 1) (("2" (EXPAND "IUnion") (("2" (INST 1 "subtermOF(s!1, p!1)") (("1" (REPLACE -3 1 RL) (("1" (EXPAND "link_of_frst_diff" 1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (EXPAND "Dom") (("2" (LEMMA "dom_link_of_frst_diff_is") (("2" (INST -1 "p!1" "s!1" "t!1") (("2" (ASSERT) (("2" (REPLACE -4 -1) (("2" (EXPAND* "restrict" "singleton") (("2" (DECOMPOSE-EQUALITY -1) (("2" (INST -1 "subtermOF(s!1, p!1)") (("2" (ASSERT) (("2" (EXPAND "Dom") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (REWRITE "position_t_first_diff") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "position_s_first_diff") (("3" (INST?) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|link_of_frst_diff_t_is_subset_union-1| |nil| 3469369542 ("" (LEMMA COMUTATIVE_LINK_FD) (("" (LEMMA LINK_OF_FRST_DIFF_S_IS_SUBSET_UNION) (("" (SKOSIMP*) (("" (ASSERT) (("" (CASE "NOT vars?(subtermOF(s!1, first_diff(s!1, t!1)))") (("1" (INST -1 T!1 S!1) (("1" (INST -2 S!1 T!1) (("1" (ASSERT) (("1" (PROP) (("1" (REPLACE -2) (("1" (HIDE -2 1 2) (("1" (EXPAND SUBSET?) (("1" (SKOSIMP*) (("1" (INST -1 X!1) (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND* MEMBER UNION) (("1" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3 -2) (("2" (PROP) (("2" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1,t!1)" :HIDE? NIL) (("2" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("2" (EXPAND* "subset?") (("2" (SKOSIMP) (("2" (EXPAND* "union" "member") (("2" (FLATTEN) (("2" (CASE "member(x!1, VRan(sig!1))") (("1" (EXPAND* "member" "VRan") (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "first_diff(s!1, t!1)" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -4 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (TYPEPRED "i!1") (("1" (INST -3 "i!1") (("1" (ASSERT) (("1" (REPLACES -3) (("1" (HIDE -1) (("1" (REPLACE -4 -2 RL) (("1" (EXPAND "link_of_frst_diff" -2) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -3 4)) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "t!1") (("1" (ASSERT) (("1" (PROP) (("1" (INST 1 "p!1 o p!2") (("1" (REWRITE "pos_subterm") (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -4 -5 -6 1)) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (CASE "VRan(sig!1) = Vars(subtermOF(t!1,p!1))") (("1" (REPLACES -1) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!1" "s!1" "t!1") (("1" (ASSERT) (("1" (REPLACE -3 -1) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (LEMMA "positions_of_ext") (("1" (INST -1 "sig!1" "t!1") (("1" (DECOMPOSE-EQUALITY -1) (("1" (EXPAND "Vars" -5) (("1" (SKOSIMP) (("1" (INST -1 "p!2") (("1" (ASSERT) (("1" (EXPAND "union") (("1" (PROP) (("1" (EXPAND "member") (("1" (FLATTEN) (("1" (REWRITE "subterm_ext_commute") (("1" (DECOMPOSE-EQUALITY -5) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT -2) (("2" (TYPEPRED "x!1") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (SKOSIMP) (("2" (REPLACE -1 -8) (("2" (REWRITE "pos_subterm") (("2" (REWRITE "subterm_ext_commute") (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (CASE "subtermOF(t!1, p1!1) = subtermOF(t!1, p!1)") (("1" (REPLACE -7 -9 RL) (("1" (EXPAND "link_of_frst_diff" -9) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (REPLACE -8 -2) (("1" (HIDE-ALL-BUT (-2 3)) (("1" (EXPAND "Vars") (("1" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -2 -1) (("2" (HIDE-ALL-BUT (-1 4)) (("2" (EXPAND "Vars") (("2" (INST 1 "p2!1") NIL NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "link_of_frst_diff" -9) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REPLACE -6 -8 RL) (("2" (EXPAND "link_of_frst_diff" -8) (("2" (ASSERT) (("2" (LIFT-IF) (("2" (PROP) (("1" (REPLACE -8 -6 RL) (("1" (EXPAND "ext" -6) (("1" (EXPAND "link_of_frst_diff" -6) (("1" (ASSERT) (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p2!1" "t!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p!1" "p2!1" "t!1") (("1" (CASE "positionsOF(t!1)(p!1)") (("1" (ASSERT) (("1" (ASSERT) (("1" (REPLACE -10 -5) (("1" (REPLACE -2 -5 RL) (("1" (HIDE-ALL-BUT (-5 7)) (("1" (EXPAND "Vars") (("1" (INST 1 "p!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-9 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND EXT -5) (("2" (REPLACE -7 -5 RL) (("2" (EXPAND LINK_OF_FRST_DIFF -5) (("2" (ASSERT) (("2" (LEMMA POS_O_TERM) (("2" (INST -1 "p1!1" "p2!1" "t!1") (("2" (ASSERT) (("2" (LEMMA "pos_subterm") (("2" (INST -1 "p1!1" "p2!1" "t!1") (("2" (ASSERT) (("2" (REPLACE -1 -3 RL) (("2" (HIDE-ALL-BUT (-3 8)) (("2" (EXPAND "Vars") (("2" (INST 1 "p1!1 o p2!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND LINK_OF_FRST_DIFF -8) (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY 1) (("2" (IFF) (("2" (PROP) (("1" (EXPAND "VRan" -1) (("1" (EXPAND "IUnion") (("1" (SKOSIMP) (("1" (LEMMA "dom_link_of_frst_diff_is") (("1" (INST -1 "p!1" "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND* "restrict" "singleton") (("1" (REPLACE -4 -1) (("1" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACES -1) (("1" (REPLACE -3 -1 RL) (("1" (EXPAND "link_of_frst_diff" -1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "VRan" 1) (("2" (EXPAND "IUnion") (("2" (INST 1 "subtermOF(s!1, p!1)") (("1" (REPLACE -3 1 RL) (("1" (EXPAND "link_of_frst_diff" 1) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "link_of_frst_diff" -4) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (EXPAND "Dom") (("2" (LEMMA DOM_LINK_OF_FRST_DIFF_IS) (("2" (INST -1 P!1 S!1 T!1) (("2" (ASSERT) (("2" (REPLACE -4 -1) (("2" (EXPAND* RESTRICT SINGLETON) (("2" (DECOMPOSE-EQUALITY -1) (("2" (INST -1 "subtermOF(s!1, p!1)") (("2" (ASSERT) (("2" (EXPAND DOM) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-1 1)) (("3" (REWRITE POSITION_T_FIRST_DIFF) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA POSITION_S_FIRST_DIFF) (("3" (INST?) (("3" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|link_of_frst_diff_s_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|VRan| CONST-DECL "set[(V)]" |substitution| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|dom_link_of_frst_diff_is| FORMULA-DECL NIL |robinsonunification| NIL) (|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|pos_o_term| FORMULA-DECL NIL |subterm| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|p!2| SKOLEM-CONST-DECL "positions?[variable, symbol, arity](subtermOF(t!1, first_diff(s!1, t!1)))" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|pos_subterm| FORMULA-DECL NIL |subterm| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|link_remove_x| FORMULA-DECL NIL |robinsonunification| NIL) (|positions_of_ext| FORMULA-DECL NIL |substitution| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|v| ADT-ACCESSOR-DECL "[(vars?) -> variable]" |term_adt| NIL) (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|subterm_ext_commute| FORMULA-DECL NIL |substitution| NIL) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[term[variable, symbol, arity]]" |robinsonunification| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|union| CONST-DECL "set" |sets| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|comutative_link_fd| FORMULA-DECL NIL |robinsonunification| NIL)) SHOSTAK)) (|union_vars_ext_link| 0 (|union_vars_ext_link-1| |nil| 3468747509 ("" (SKOSIMP*) (("" (ASSERT) (("" (FLATTEN) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (DECOMPOSE-EQUALITY 2) (("" (IFF) (("" (PROP) (("1" (EXPAND "difference") (("1" (EXPAND "union") (("1" (EXPAND "member") (("1" (PROP) (("1" (LEMMA "link_of_frst_diff_s_is_subset_union") (("1" (INST -1 "s!1" "t!1") (("1" (ASSERT) (("1" (EXPAND "subset?") (("1" (INST -1 "x!1") (("1" (EXPAND* "union" "member") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "link_remove_x") (("2" (INST -1 "x!1" "s!1" "t!1") (("2" (ASSERT) (("2" (ASSERT) (("2" (PROP) (("2" (EXPAND "member") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "link_of_frst_diff_t_is_subset_union") (("3" (INST -1 "s!1" "t!1") (("3" (ASSERT) (("3" (EXPAND "subset?") (("3" (INST -1 "x!1") (("3" (EXPAND* "union" "member") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "link_remove_x") (("4" (INST -1 "x!1" "s!1" "t!1") (("4" (ASSERT) (("4" (ASSERT) (("4" (PROP) (("4" (ASSERT) (("4" (EXPAND MEMBER) (("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "difference" "union" "member") (("2" (PROP) (("1" (HIDE 3) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (INST 2 "p!1") (("1" (REWRITE "subterm_ext_commute") (("1" (REPLACES -1) (("1" (TYPEPRED "x!1") (("1" (EXPAND* "V" "Dom" "ext") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE "ext_preserv_pos") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND "Vars") (("2" (SKOSIMP) (("2" (INST 2 "p!1") (("1" (REWRITE "subterm_ext_commute") (("1" (REPLACES -1) (("1" (TYPEPRED "x!1") (("1" (EXPAND* "V" "Dom" "ext") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE "ext_preserv_pos") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "positions?[variable, symbol, arity](t!1)" |robinsonunification| NIL) (|ext_preserv_pos| FORMULA-DECL NIL |substitution| NIL) (|subterm_ext_commute| FORMULA-DECL NIL |substitution| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|p!1| SKOLEM-CONST-DECL "positions?[variable, symbol, arity](s!1)" |robinsonunification| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|link_of_frst_diff_t_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|link_remove_x| FORMULA-DECL NIL |robinsonunification| NIL) (|link_of_frst_diff_s_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|difference| CONST-DECL "set" |sets| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL)) SHOSTAK)) (|termination_lemma_TCC1| 0 (|termination_lemma_TCC1-1| |nil| 3468654228 ("" (SKOSIMP) (("" (REWRITE "finite_union") (("1" (HIDE -1 2) (("1" (REWRITE "vars_of_term_finite") NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) ((|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL)) NIL (|termination_lemma| SUBTYPE "sets[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].union(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(substitution[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].ext(robinsonunification.sig)(robinsonunification.s)), subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(substitution[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].ext(robinsonunification.sig)(robinsonunification.t)))" "finite_set[(V[variable, symbol, arity])]"))) (|termination_lemma_TCC2| 0 (|termination_lemma_TCC2-1| |nil| 3468654228 ("" (SKOSIMP) (("" (HIDE -) (("" (REWRITE "finite_union") (("1" (HIDE 2) (("1" (REWRITE "vars_of_term_finite") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL)) NIL (|termination_lemma| SUBTYPE "sets[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].union(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(robinsonunification.s), subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(robinsonunification.t))" "finite_set[(V[variable, symbol, arity])]"))) (|termination_lemma| 0 (|termination_lemma-1| |nil| 3468683546 ("" (SKOSIMP*) (("" (ASSERT) (("" (PROP) (("" (NAME-REPLACE "sig1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (LEMMA "card_diff_subset[(V)]") (("" (LEMMA "union_vars_ext_link") (("" (INST -1 "s!1" "t!1") (("" (ASSERT) (("" (REPLACE -3 -1) (("" (ASSERT) (("" (REPLACES -1) (("" (INST -1 "Dom(sig1)" "union(Vars(s!1), Vars(t!1))") (("1" (PROP) (("1" (CASE-REPLACE "card(Dom(sig1)) = 1") (("1" (ASSERT) NIL NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "card_one") (("2" (LEMMA "dom_link_of_frst_diff_is") (("2" (INST -1 "first_diff(s!1, t!1)" "s!1" "t!1") (("2" (ASSERT) (("2" (PROP) (("1" (EXPAND "restrict") (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST 1 "subtermOF(s!1, first_diff(s!1, t!1))") (("1" (DECOMPOSE-EQUALITY 1) (("1" (INST -1 "x!1") (("1" (REVEAL -5) (("1" (REPLACE -1 -2) (("1" (ASSERT) (("1" (HIDE -1 -3) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "V") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "restrict") (("2" (CASE "vars?(subtermOF(t!1, first_diff(s!1, t!1)))") (("1" (INST 2 "subtermOF(t!1, first_diff(s!1, t!1))") (("1" (DECOMPOSE-EQUALITY -2) (("1" (DECOMPOSE-EQUALITY 2) (("1" (INST -1 "x!1") (("1" (REVEAL -5) (("1" (ASSERT) (("1" (REPLACE -1 -2) (("1" (HIDE -1 -3 2) (("1" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "V") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REVEAL 1) (("2" (REVEAL -3) (("2" (HIDE -2 4) (("2" (EXPAND "link_of_frst_diff") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT 1) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "t!1" "s!1" "first_diff(s!1,t!1)") (("3" (PROP) (("3" (HIDE 2) (("3" (LEMMA "comutative_first_diff") (("3" (INST -1 "s!1" "t!1" "first_diff(s!1, t!1)") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "dom_link_of_frst_diff_is") (("2" (INST -1 "first_diff(s!1,t!1)" "s!1" "t!1") (("2" (ASSERT) (("2" (REPLACE -2 -1) (("2" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("2" (EXPAND "restrict") (("2" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (HIDE 2 3) (("1" (EXPAND "subset?") (("1" (SKOSIMP) (("1" (INST -1 "x!1") (("1" (EXPAND "member") (("1" (IFF) (("1" (ASSERT) (("1" (EXPAND "singleton") (("1" (EXPAND "union") (("1" (FLATTEN) (("1" (HIDE-ALL-BUT (-1 1)) (("1" (EXPAND* "member" "Vars") (("1" (INST 1 "p!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "vars?(subtermOF(t!1, p!1))") (("1" (HIDE 1 3 4 -3 -4) (("1" (EXPAND "subset?") (("1" (SKOSIMP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 "x!1") (("1" (EXPAND "member") (("1" (IFF) (("1" (ASSERT) (("1" (HIDE -2 -3) (("1" (EXPAND* "union" "member") (("1" (FLATTEN) (("1" (HIDE 1) (("1" (EXPAND "Vars") (("1" (INST 1 "p!1") (("1" (EXPAND "singleton") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-2 -3 1 2 4)) (("2" (EXPAND "link_of_frst_diff") (("2" (REPLACES -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE-ALL-BUT (-2 1)) (("3" (LEMMA "position_s_first_diff") (("3" (INST -1 "t!1" "s!1" "p!1") (("3" (ASSERT) (("3" (HIDE 2) (("3" (LEMMA "comutative_first_diff") (("3" (INST -1 "s!1" "t!1" "p!1") (("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "sig1") (("2" (HIDE -2 2 3) (("2" (EXPAND "Sub?") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|union_vars_ext_link| FORMULA-DECL NIL |robinsonunification| NIL) (|sig1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|Card| CONST-DECL "nat" |finite_sets| NIL) (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|card_one| FORMULA-DECL NIL |finite_sets| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|singleton?| CONST-DECL "bool" |sets| NIL) (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[(V)]" |robinsonunification| NIL) (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set[term[variable, symbol, arity]]" |robinsonunification| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|comutative_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|dom_link_of_frst_diff_is| FORMULA-DECL NIL |robinsonunification| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|card_diff_subset| FORMULA-DECL NIL |finite_sets| NIL)) SHOSTAK)) (|unifiable_implies_not_fail| 0 (|unifiable_implies_not_fail-2| "" 3885000303 ("" (SKOSIMP) (("" (ASSERT) (("" (NAME "sig!1" "link_of_frst_diff(s!1, t!1)") (("" (PROP) (("" (EXPAND "link_of_frst_diff" -3) (("" (LIFT-IF) (("" (PROP) (("1" (NAME "p!1" "first_diff(s!1, t!1)") (("1" (REPLACE -1) (("1" (DECOMPOSE-EQUALITY -2) (("1" (CASE "xx = subtermOF(s!1, p!1)") (("1" (INST -2 "xx") (("1" (ASSERT) (("1" (EXPAND "fail" -2) (("1" (REPLACE -1 1 RL) (("1" (REPLACE -2 1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND* "member" "Vars") (("1" (INST 1 "#(1)") (("1" (EXPAND "subtermOF" 1) (("1" (REWRITE "empty_0") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (CASE "#(xx)`seq(first( #(1)) - 1) = xx") (("1" (REPLACE -1 2) (("1" (CASE "rest( #(1)) = empty_seq") (("1" (REPLACE -1 2) (("1" (HIDE-ALL-BUT 2) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "length_rest_0[posnat]") (("2" (INST -1 "#(1)") (("2" (PROP) (("1" (HIDE-ALL-BUT (-1 2)) (("1" (REWRITE "empty_0") NIL NIL)) NIL) ("2" (EXPAND "#" -1) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "#") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "positionsOF") (("2" (ASSERT) (("2" (EXPAND* "union" "IUnion" "member") (("2" (PROP) (("1" (EXPAND "#") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 1 2) (("2" (INST 1 1) (("1" (EXPAND "catenate") (("1" (EXPAND "finseq_appl") (("1" (INST 1 "empty_seq") (("1" (SPLIT) (("1" (EXPAND "member") (("1" (EXPAND "positionsOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "subtermOF(s!1, p!1)") (("2" (EXPAND "fail") (("2" (ASSERT) (("2" (EXPAND ID) (("2" (HIDE 1 2) (("2" (LEMMA "first_diff_has_diff_argument") (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "var_term_unifiable_not_var_in_term") (("2" (INST -1 "subtermOF(s!1, first_diff(s!1, t!1))" "subtermOF(t!1, first_diff(s!1, t!1))") (("2" (ASSERT) (("2" (HIDE -1 -2) (("2" (SPLIT) (("1" (LEMMA "unifiable_terms_unifiable_args") (("1" (EXPAND "unifiable") (("1" (SKOSIMP) (("1" (INST 1 "sigma!1") (("1" (INST -1 "sigma!1" "s!1" "t!1" "first_diff(s!1, t!1)") (("1" (EXPAND* "member" "U") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "position_t_first_diff") (("2" (LEMMA "position_s_first_diff") (("2" (INST?) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "first_diff_has_diff_argument") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (DECOMPOSE-EQUALITY -1) (("3" (NAME "p!1" "first_diff(s!1, t!1)") (("3" (REPLACE -1) (("3" (CASE "xx = subtermOF(t!1, p!1)") (("1" (INST -3 "subtermOF(t!1, p!1)") (("1" (EXPAND "fail") (("1" (ASSERT) (("1" (REPLACE -1 1 RL) (("1" (REPLACE -3 1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND* "member" "Vars") (("1" (INST 1 "#(1)") (("1" (EXPAND "subtermOF" 1) (("1" (REWRITE "empty_0") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (CASE "#(xx)`seq(first( #(1)) - 1) = xx") (("1" (REPLACE -1 2) (("1" (CASE "rest( #(1)) = empty_seq") (("1" (REPLACE -1 2) (("1" (HIDE-ALL-BUT 2) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "length_rest_0[posnat]") (("2" (INST -1 "#(1)") (("2" (PROP) (("1" (HIDE-ALL-BUT (-1 2)) (("1" (REWRITE "empty_0") NIL NIL)) NIL) ("2" (EXPAND "#" -1) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "#") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "positionsOF") (("2" (ASSERT) (("2" (EXPAND* "union" "IUnion" "member") (("2" (PROP) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 1 2) (("2" (INST 1 1) (("1" (EXPAND "catenate") (("1" (EXPAND "finseq_appl") (("1" (INST 1 "empty_seq") (("1" (SPLIT) (("1" (EXPAND "member") (("1" (EXPAND "positionsOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "subtermOF(t!1, p!1)") (("2" (EXPAND "fail") (("2" (ASSERT) (("2" (EXPAND "id") (("2" (HIDE 1 2 3 -3 -4) (("2" (LEMMA "first_diff_has_diff_argument") (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "var_term_unifiable_not_var_in_term") (("4" (INST -1 "subtermOF(t!1, first_diff(s!1, t!1))" "subtermOF(s!1, first_diff(s!1, t!1))") (("4" (ASSERT) (("4" (HIDE -1 -2 -3 2) (("4" (LEMMA "unifiable_terms_unifiable_args") (("4" (EXPAND "unifiable") (("4" (SKOSIMP) (("4" (INST 1 "sigma!1") (("4" (INST -1 "sigma!1" "s!1" "t!1" "first_diff(s!1, t!1)") (("1" (EXPAND* "member" "U") (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "unifier") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE "position_t_first_diff") (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "s!1" "t!1" "first_diff(s!1, t!1)") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (LEMMA "first_diff_unifiable_vars") (("5" (INST -1 "s!1" "t!1" "first_diff(s!1, t!1)") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|unifiable_implies_not_fail-1| |nil| 3469312693 ("" (SKOSIMP) (("" (ASSERT) (("" (NAME "sig!1" "link_of_frst_diff(s!1, t!1)") (("" (PROP) (("" (EXPAND LINK_OF_FRST_DIFF -3) (("" (LIFT-IF) (("" (PROP) (("1" (NAME "p!1" "first_diff(s!1, t!1)") (("1" (REPLACE -1) (("1" (DECOMPOSE-EQUALITY -2) (("1" (CASE "xx = subtermOF(s!1, p!1)") (("1" (INST -2 "xx") (("1" (ASSERT) (("1" (EXPAND FAIL -2) (("1" (REPLACE -1 1 RL) (("1" (REPLACE -2 1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND* MEMBER VARS) (("1" (INST 1 "#(1)") (("1" (EXPAND SUBTERMOF 1) (("1" (REWRITE EMPTY_0) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND FINSEQ_APPL) (("2" (CASE "#(xx)`seq(first( #(1)) - 1) = xx") (("1" (REPLACE -1 2) (("1" (CASE "rest( #(1)) = empty_seq") (("1" (REPLACE -1 2) (("1" (HIDE-ALL-BUT 2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA LENGTH_REST_0[POSNAT]) (("2" (INST -1 "#(1)") (("2" (PROP) (("1" (HIDE-ALL-BUT (-1 2)) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL) ("2" (EXPAND "#" -1) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "#") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND POSITIONSOF) (("2" (ASSERT) (("2" (EXPAND* UNION IUNION MEMBER) (("2" (PROP) (("1" (EXPAND "#") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE 1 2) (("2" (INST 1 1) (("1" (EXPAND CATENATE) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 EMPTY_SEQ) (("1" (SPLIT) (("1" (EXPAND MEMBER) (("1" (EXPAND POSITIONSOF) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND ONLY_EMPTY_SEQ) (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -1 "subtermOF(s!1, p!1)") (("2" (EXPAND FAIL) (("2" (ASSERT) (("2" (EXPAND ID) (("2" (HIDE 1 2) (("2" (LEMMA FIRST_DIFF_HAS_DIFF_ARGUMENT) (("2" (INST -1 S!1 T!1 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA VAR_TERM_UNIFIABLE_NOT_VAR_IN_TERM) (("2" (INST -1 "subtermOF(s!1, first_diff(s!1, t!1))" "subtermOF(t!1, first_diff(s!1, t!1))") (("2" (ASSERT) (("2" (HIDE -1 -2) (("2" (SPLIT) (("1" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("1" (EXPAND UNIFIABLE) (("1" (SKOSIMP) (("1" (INST 1 SIGMA!1) (("1" (INST -1 SIGMA!1 S!1 T!1 "first_diff(s!1, t!1)") (("1" (EXPAND* MEMBER U) (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE POSITION_T_FIRST_DIFF) (("2" (LEMMA POSITION_S_FIRST_DIFF) (("2" (INST?) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA FIRST_DIFF_HAS_DIFF_ARGUMENT) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (DECOMPOSE-EQUALITY -1) (("3" (NAME "p!1" "first_diff(s!1, t!1)") (("3" (REPLACE -1) (("3" (CASE "xx = subtermOF(t!1, p!1)") (("1" (INST -3 "subtermOF(t!1, p!1)") (("1" (EXPAND FAIL) (("1" (ASSERT) (("1" (REPLACE -1 1 RL) (("1" (REPLACE -3 1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND* MEMBER VARS) (("1" (INST 1 "#(1)") (("1" (EXPAND SUBTERMOF 1) (("1" (REWRITE EMPTY_0) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND FINSEQ_APPL) (("2" (CASE "#(xx)`seq(first( #(1)) - 1) = xx") (("1" (REPLACE -1 2) (("1" (CASE "rest( #(1)) = empty_seq") (("1" (REPLACE -1 2) (("1" (HIDE-ALL-BUT 2) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA LENGTH_REST_0[POSNAT]) (("2" (INST -1 "#(1)") (("2" (PROP) (("1" (HIDE-ALL-BUT (-1 2)) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL) ("2" (EXPAND "#" -1) (("2" (ASSERT) NIL NIL)) NIL) ("3" (EXPAND "#" 1) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (EXPAND "#") (("2" (PROPAX) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND POSITIONSOF) (("2" (ASSERT) (("2" (EXPAND* UNION IUNION MEMBER) (("2" (PROP) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 1 2) (("2" (INST 1 1) (("1" (EXPAND CATENATE) (("1" (EXPAND FINSEQ_APPL) (("1" (INST 1 EMPTY_SEQ) (("1" (SPLIT) (("1" (EXPAND MEMBER) (("1" (EXPAND POSITIONSOF) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND ONLY_EMPTY_SEQ) (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -2 "subtermOF(t!1, p!1)") (("2" (EXPAND FAIL) (("2" (ASSERT) (("2" (EXPAND ID) (("2" (HIDE 1 2 3 -3 -4) (("2" (LEMMA FIRST_DIFF_HAS_DIFF_ARGUMENT) (("2" (INST -1 S!1 T!1 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA VAR_TERM_UNIFIABLE_NOT_VAR_IN_TERM) (("4" (INST -1 "subtermOF(t!1, first_diff(s!1, t!1))" "subtermOF(s!1, first_diff(s!1, t!1))") (("4" (ASSERT) (("4" (HIDE -1 -2 -3 2) (("4" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("4" (EXPAND UNIFIABLE) (("4" (SKOSIMP) (("4" (INST 1 SIGMA!1) (("4" (INST -1 SIGMA!1 S!1 T!1 "first_diff(s!1, t!1)") (("1" (EXPAND* MEMBER U) (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND UNIFIER) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (REWRITE POSITION_T_FIRST_DIFF) (("2" (LEMMA POSITION_S_FIRST_DIFF) (("2" (INST -1 S!1 T!1 "first_diff(s!1, t!1)") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (LEMMA FIRST_DIFF_UNIFIABLE_VARS) (("5" (INST -1 S!1 T!1 "first_diff(s!1, t!1)") (("5" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|first_diff_unifiable_vars| FORMULA-DECL NIL |robinsonunification| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (|var_term_unifiable_not_var_in_term| FORMULA-DECL NIL |unification| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (U CONST-DECL "set[Sub[variable, symbol, arity]]" |unification| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (|unifiable_terms_unifiable_args| FORMULA-DECL NIL |unification| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|fail| CONST-DECL "Sub" |robinsonunification| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|first_diff_has_diff_argument| FORMULA-DECL NIL |robinsonunification| NIL) (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|union| CONST-DECL "set" |sets| NIL) (|catenate| CONST-DECL "positions" |positions| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (|upto?| NONEMPTY-TYPE-EQ-DECL NIL |IUnion_extra| NIL) (<= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|length_rest_0| FORMULA-DECL NIL |seq_extras| |structures|) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| |structures|) (|first| CONST-DECL "T" |seq_extras| |structures|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|ff| CONST-DECL "{f: symbol | arity(f) = 1}" |robinsonunification| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|xx| CONST-DECL "(V)" |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL)) SHOSTAK)) (|preserving_generality| 0 (|preserving_generality-2| "" 3885000460 ("" (SKOSIMP) (("" (ASSERT) (("" (INST 1 "rho!1") (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (DECOMPOSE-EQUALITY 1) (("" (COPY -1) (("" (EXPAND "link_of_frst_diff" -1) (("" (LIFT-IF) (("" (PROP) (("1" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 "x!1") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "comp" 2) (("1" (REPLACE -2 2 RL) (("1" (REPLACE -1 2) (("1" (LEMMA "unifiable_terms_unifiable_args") (("1" (INST -1 "rho!1" "s!1" "t!1" "p!1") (("1" (ASSERT) (("1" (HIDE-ALL-BUT (-1 -5 2)) (("1" (EXPAND* "member" "U" "unifier") (("1" (EXPAND "ext" -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REWRITE "position_t_first_diff") (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "comp" 3) (("2" (REPLACE -1 3 RL) (("2" (HIDE-ALL-BUT 3) (("2" (EXPAND "ext") (("2" (TYPEPRED "x!1") (("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 1) (("2" (LEMMA "unifiable_implies_not_fail") (("2" (INST -1 "s!1" "t!1") (("2" (ASSERT) (("2" (REPLACES -3) (("2" (EXPAND "unifiable") (("2" (HIDE -1) (("2" (INST 1 "rho!1") (("2" (EXPAND* "member" U) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("3" (DECOMPOSE-EQUALITY -2) (("3" (INST -1 "x!1") (("3" (LIFT-IF) (("3" (PROP) (("1" (EXPAND "comp" 3) (("1" (REPLACE -2 3 RL) (("1" (REPLACE -1 3) (("1" (LEMMA "unifiable_terms_unifiable_args") (("1" (INST -1 "rho!1" "s!1" "t!1" "p!1") (("1" (ASSERT) (("1" (HIDE-ALL-BUT (-1 -5 3)) (("1" (EXPAND* "member" "U" "unifier") (("1" (EXPAND "ext" -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REWRITE "position_t_first_diff") (("2" (LEMMA "position_s_first_diff") (("2" (INST -1 "s!1" "t!1" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "comp" 4) (("2" (REPLACE -1 4 RL) (("2" (HIDE-ALL-BUT 4) (("2" (TYPEPRED "x!1") (("2" (EXPAND V) (("2" (EXPAND "ext") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 -3 1 2) (("4" (LEMMA "unifiable_implies_not_fail") (("4" (INST -1 "s!1" "t!1") (("4" (ASSERT) (("4" (REPLACES -3) (("4" (EXPAND "unifiable") (("4" (HIDE -1) (("4" (INST 1 "rho!1") (("4" (EXPAND* "member" U) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT (-3 1 2)) (("5" (LEMMA "first_diff_unifiable_vars") (("5" (INST -1 "s!1" "t!1" "first_diff(s!1, t!1)") (("5" (PROP) (("5" (HIDE 2 3) (("5" (EXPAND* "member" "U" "unifiable") (("5" (INST 1 "rho!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|preserving_generality-1| |nil| 3469363975 ("" (SKOSIMP) (("" (ASSERT) (("" (INST 1 RHO!1) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (DECOMPOSE-EQUALITY 1) (("" (COPY -1) (("" (EXPAND LINK_OF_FRST_DIFF -1) (("" (LIFT-IF) (("" (PROP) (("1" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 X!1) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND COMP 2) (("1" (REPLACE -2 2 RL) (("1" (REPLACE -1 2) (("1" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("1" (INST -1 RHO!1 S!1 T!1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (-1 -5 2)) (("1" (EXPAND* MEMBER U UNIFIER) (("1" (EXPAND EXT -1 1) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) (("2" (LEMMA POSITION_S_FIRST_DIFF) (("2" (INST -1 S!1 T!1 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND COMP 3) (("2" (REPLACE -1 3 RL) (("2" (HIDE-ALL-BUT 3) (("2" (EXPAND EXT) (("2" (TYPEPRED X!1) (("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 -3 1) (("2" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("2" (INST -1 S!1 T!1) (("2" (ASSERT) (("2" (REPLACES -3) (("2" (EXPAND UNIFIABLE) (("2" (HIDE -1) (("2" (INST 1 RHO!1) (("2" (EXPAND* MEMBER U) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (NAME-REPLACE "p!1" "first_diff(s!1, t!1)" :HIDE? NIL) (("3" (DECOMPOSE-EQUALITY -2) (("3" (INST -1 X!1) (("3" (LIFT-IF) (("3" (PROP) (("1" (EXPAND COMP 3) (("1" (REPLACE -2 3 RL) (("1" (REPLACE -1 3) (("1" (LEMMA UNIFIABLE_TERMS_UNIFIABLE_ARGS) (("1" (INST -1 RHO!1 S!1 T!1 P!1) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (-1 -5 3)) (("1" (EXPAND* MEMBER U UNIFIER) (("1" (EXPAND EXT -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (REWRITE POSITION_T_FIRST_DIFF) (("2" (LEMMA POSITION_S_FIRST_DIFF) (("2" (INST -1 S!1 T!1 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND COMP 4) (("2" (REPLACE -1 4 RL) (("2" (HIDE-ALL-BUT 4) (("2" (TYPEPRED X!1) (("2" (EXPAND V) (("2" (EXPAND EXT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (HIDE -1 -3 1 2) (("4" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("4" (INST -1 S!1 T!1) (("4" (ASSERT) (("4" (REPLACES -3) (("4" (EXPAND UNIFIABLE) (("4" (HIDE -1) (("4" (INST 1 RHO!1) (("4" (EXPAND* MEMBER U) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("5" (HIDE-ALL-BUT (-3 1 2)) (("5" (LEMMA FIRST_DIFF_UNIFIABLE_VARS) (("5" (INST -1 S!1 T!1 "first_diff(s!1, t!1)") (("5" (PROP) (("5" (HIDE 2 3) (("5" (EXPAND* MEMBER U UNIFIABLE) (("5" (INST 1 RHO!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|first_diff_unifiable_vars| FORMULA-DECL NIL |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (|unifiable_implies_not_fail| FORMULA-DECL NIL |robinsonunification| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|unifiable_terms_unifiable_args| FORMULA-DECL NIL |unification| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (U CONST-DECL "set[Sub[variable, symbol, arity]]" |unification| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|s!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (|t!1| SKOLEM-CONST-DECL "{t: term | s!1 /= t}" |robinsonunification| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|comp| CONST-DECL "term" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) SHOSTAK)) (|unifiable_preserves_unifiability| 0 (|unifiable_preserves_unifiability-2| "" 3885000567 ("" (SKOSIMP) (("" (ASSERT) (("" (PROP) (("" (LEMMA "preserving_generality") (("" (EXPAND "unifiable" -2) (("" (SKOSIMP) (("" (INST -1 "sigma!1" "s!1" "t!1") (("" (EXPAND* "member" "U") (("" (ASSERT) (("" (SKOSIMP) (("" (EXPAND "unifiable") (("" (INST 1 "theta!1") (("" (EXPAND "unifier") (("" (REPLACES -1) (("" (REWRITE "ext_o") (("" (EXPAND "O") (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|unifiable_preserves_unifiability-1| |nil| 3469363687 ("" (SKOSIMP) (("" (ASSERT) (("" (PROP) (("" (LEMMA PRESERVING_GENERALITY) (("" (EXPAND UNIFIABLE -2) (("" (SKOSIMP) (("" (INST -1 SIGMA!1 S!1 T!1) (("" (EXPAND* MEMBER U) (("" (ASSERT) (("" (SKOSIMP) (("" (EXPAND UNIFIABLE) (("" (INST 1 THETA!1) (("" (EXPAND UNIFIER) (("" (REPLACES -1) (("" (REWRITE EXT_O) (("" (EXPAND O) (("" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|preserving_generality| FORMULA-DECL NIL |robinsonunification| NIL) (U CONST-DECL "set[Sub[variable, symbol, arity]]" |unification| NIL) (|member| CONST-DECL "bool" |sets| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (O CONST-DECL "T3" |function_props| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|ext_o| FORMULA-DECL NIL |substitution| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL)) SHOSTAK)) (|robinson_unification_algorithm_TCC1| 0 (|robinson_unification_algorithm_TCC1-1| |nil| 3467989055 ("" (SKOSIMP) (("" (REWRITE "finite_union") (("1" (HIDE 2) (("1" (REWRITE "vars_of_term_finite") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) ((|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL)) NIL (|robinson_unification_algorithm| SUBTYPE "sets[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].union(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(robinsonunification.s), subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(robinsonunification.t))" "finite_set[(V[variable, symbol, arity])]"))) (|robinson_unification_algorithm_TCC2| 0 (|robinson_unification_algorithm_TCC2-1| |nil| 3467989055 ("" (SKOSIMP) (("" (REWRITE "finite_union") (("1" (HIDE 2) (("1" (REWRITE "vars_of_term_finite") NIL NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) ((|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL)) NIL (|robinson_unification_algorithm| SUBTYPE "sets[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].union(subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(robinsonunification.z`1), subterm[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].Vars(robinsonunification.z`2))" "finite_set[(V[variable, symbol, arity])]"))) (|robinson_unification_algorithm_TCC3| 0 (|robinson_unification_algorithm_TCC3-1| |nil| 3467989055 ("" (SKOSIMP) (("" (REWRITE "iden_subs") NIL NIL)) NIL) ((|iden_subs| FORMULA-DECL NIL |substitution| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL)) NIL (|robinson_unification_algorithm| SUBTYPE "identity[(variables_term[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].V)].identity" "Sub[variable, symbol, arity]"))) (|robinson_unification_algorithm_TCC4| 0 (|robinson_unification_algorithm_TCC4-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (LEMMA "termination_lemma") (("" (INST -1 "s!1" "t!1") (("" (ASSERT) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|termination_lemma| FORMULA-DECL NIL |robinsonunification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL)) NIL (|robinson_unification_algorithm| TERMINATION "robinsonunification.robinson_unification_algorithm(substitution[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].ext(robinsonunification.sig)(robinsonunification.s), substitution[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].ext(robinsonunification.sig)(robinsonunification.t))" "NIL"))) (|robinson_unification_algorithm_TCC5| 0 (|robinson_unification_algorithm_TCC5-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (REWRITE "subs_o") NIL NIL)) NIL) ((|subs_o| FORMULA-DECL NIL |substitution| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL)) NIL (|robinson_unification_algorithm| SUBTYPE "substitution[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].comp(robinsonunification.sigma, robinsonunification.sig)" "Sub[variable, symbol, arity]"))) (|robinson_unification_algorithm_TCC6| 0 (|robinson_unification_algorithm_TCC6-2| "" 3790333857 ("" (SKOSIMP*) NIL NIL) NIL SHOSTAK (|robinson_unification_algorithm| SUBTYPE "robinsonunification.t" "{t: term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term | robinsonunification.s /= t}")) (|robinson_unification_algorithm_TCC6-1| |nil| 3467989055 ("" (SKOSIMP*) (("" (REWRITE "subs_o") NIL NIL)) NIL) NIL NIL (|robinson_unification_algorithm| SUBTYPE "robinsonunification.t" "{t: term_adt[robinsonunification.variable, robinsonunification.symbol, robinsonunification.arity].term | robinsonunification.s /= t}"))) (|var_ext_term_exists_var_term| 0 (|var_ext_term_exists_var_term-2| "" 3885000804 ("" (INDUCT "r") (("1" (SKOSIMP*) (("1" (NAME-REPLACE "y!1" "vars(vars1_var!1)" :HIDE? NIL) (("1" (INST 1 "y!1") (("1" (EXPAND "member") (("1" (SPLIT) (("1" (HIDE -) (("1" (EXPAND "Vars" 1) (("1" (INST 1 "empty_seq") (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0") NIL NIL)) NIL) ("2" (REVEAL -1) (("2" (EXPAND "positionsOF") (("2" (ASSERT) (("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "ext") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (NAME-REPLACE "r!1" "app(app1_var!1, app2_var!1)" :HIDE? NIL) (("2" (EXPAND "member") (("2" (CASE "length(app2_var!1) = 0") (("1" (HIDE -3) (("1" (EXPAND "ext") (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -2) (("1" (ASSERT) (("1" (EXPAND "Vars" -4) (("1" (SKOSIMP) (("1" (CASE "p!1 = empty_seq") (("1" (REPLACE -1) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0" -5) (("1" (TYPEPRED "x!1") (("1" (EXPAND V) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "p!1") (("2" (CASE "positionsOF(r!1) = only_empty_seq") (("1" (REPLACE -1) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "positionsOF" 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "EXISTS (i :  below[length(app2_var!1)]):
                         Vars(ext(sigma!1)(app2_var!1`seq(i)))(x!1)") (("1" (SKOSIMP) (("1" (INST -3 "i!1") (("1" (INST -3 "sigma!1" "x!1") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (INST 2 "y!1") (("1" (ASSERT) (("1" (HIDE -1 -4 -5) (("1" (EXPAND "Vars") (("1" (SKOSIMP) (("1" (INST 2 "add_first(i!1+1, p!1)") (("1" (EXPAND "subtermOF" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* "add_first" "insert?") (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (REWRITE "rest_add_first") (("2" (REWRITE "first_add") (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "i!1") (("2" (TYPEPRED "p!1") (("2" (EXPAND "positionsOF" 1) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -3) (("2" (ASSERT) (("2" (EXPAND* "union" "IUnion" "member") (("2" (FLATTEN) (("2" (EXPAND "finseq_appl") (("2" (INST 2 "i!1 + 1") (("2" (ASSERT) (("2" (EXPAND "catenate") (("2" (INST 2 "p!1") (("2" (EXPAND "member") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 3) (("2" (EXPAND "ext" -2) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) (("2" (EXPAND "finseq_appl") (("2" (EXPAND "Vars" -3) (("2" (SKOSIMP) (("2" (EXPAND "subtermOF") (("2" (LIFT-IF) (("2" (PROP) (("1" (TYPEPRED "x!1") (("1" (EXPAND V) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (INST 2 "first(p!1) - 1") (("1" (EXPAND "Vars" 2) (("1" (INST 2 "rest(p!1)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED "p!1") (("2" (HIDE -2) (("2" (GRIND) (("1" (CASE "(# length := 0,
                                   seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #) = empty_seq") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "positionsOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL) ("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "(# length := 0,
                                seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "(# length := 0,
                                   seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #) = empty_seq") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND "positionsOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND "only_empty_seq") (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA "empty_0[posnat]") (("2" (INST -1 "(# length := 0,
                                seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CASE "x!2 = (# length := x!2`length,
                                   seq := LAMBDA (x: below[p!1`length - 1]): x!2`seq(x) #)") (("1" (REPLACE -1 3 RL) (("1" (PROPAX) NIL NIL)) NIL) ("2" (DECOMPOSE-EQUALITY) (("1" (DECOMPOSE-EQUALITY) (("1" (SKOSIMP) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -1) (("2" (TYPEPRED "p!1") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|var_ext_term_exists_var_term-1| |nil| 3471813028 ("" (INDUCT R) (("1" (SKOSIMP*) (("1" (NAME-REPLACE "y!1" "vars(vars1_var!1)" :HIDE? NIL) (("1" (INST 1 Y!1) (("1" (EXPAND MEMBER) (("1" (SPLIT) (("1" (HIDE -) (("1" (EXPAND VARS 1) (("1" (INST 1 EMPTY_SEQ) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL) ("2" (REVEAL -1) (("2" (EXPAND POSITIONSOF) (("2" (ASSERT) (("2" (EXPAND ONLY_EMPTY_SEQ) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND EXT) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP*) (("2" (NAME-REPLACE "r!1" "app(app1_var!1, app2_var!1)" :HIDE? NIL) (("2" (EXPAND MEMBER) (("2" (CASE "length(app2_var!1) = 0") (("1" (HIDE -3) (("1" (EXPAND EXT) (("1" (ASSERT) (("1" (DECOMPOSE-EQUALITY -2) (("1" (ASSERT) (("1" (EXPAND VARS -4) (("1" (SKOSIMP) (("1" (CASE "p!1 = empty_seq") (("1" (REPLACE -1) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0 -5) (("1" (TYPEPRED X!1) (("1" (EXPAND V) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (CASE "positionsOF(r!1) = only_empty_seq") (("1" (REPLACE -1) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND POSITIONSOF 1) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "EXISTS (i :  below[length(app2_var!1)]):
                         Vars(ext(sigma!1)(app2_var!1`seq(i)))(x!1)") (("1" (SKOSIMP) (("1" (INST -3 I!1) (("1" (INST -3 SIGMA!1 X!1) (("1" (ASSERT) (("1" (SKOSIMP) (("1" (INST 2 Y!1) (("1" (ASSERT) (("1" (HIDE -1 -4 -5) (("1" (EXPAND VARS) (("1" (SKOSIMP) (("1" (INST 2 "add_first(i!1+1, p!1)") (("1" (EXPAND SUBTERMOF 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* ADD_FIRST INSERT?) (("1" (ASSERT) NIL NIL)) NIL) ("2" (EXPAND FINSEQ_APPL) (("2" (REWRITE REST_ADD_FIRST) (("2" (REWRITE FIRST_ADD) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED I!1) (("2" (TYPEPRED P!1) (("2" (EXPAND POSITIONSOF 1) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -3) (("2" (ASSERT) (("2" (EXPAND* UNION IUNION MEMBER) (("2" (FLATTEN) (("2" (EXPAND FINSEQ_APPL) (("2" (INST 2 "i!1 + 1") (("2" (ASSERT) (("2" (EXPAND CATENATE) (("2" (INST 2 P!1) (("2" (EXPAND MEMBER) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 3) (("2" (EXPAND EXT -2) (("2" (ASSERT) (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) (("2" (EXPAND FINSEQ_APPL) (("2" (EXPAND VARS -3) (("2" (SKOSIMP) (("2" (EXPAND SUBTERMOF) (("2" (LIFT-IF) (("2" (PROP) (("1" (TYPEPRED X!1) (("1" (EXPAND V) (("1" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (EXPAND FINSEQ_APPL) (("2" (INST 2 "first(p!1) - 1") (("1" (EXPAND VARS 2) (("1" (INST 2 "rest(p!1)") (("1" (ASSERT) NIL NIL) ("2" (TYPEPRED P!1) (("2" (HIDE -2) (("2" (GRIND) (("1" (CASE "(# length := 0,
                                   seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #) = empty_seq") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND POSITIONSOF) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) NIL NIL) ("3" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 "(# length := 0,
                                seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "(# length := 0,
                                   seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #) = empty_seq") (("1" (REPLACES -1) (("1" (HIDE-ALL-BUT 1) (("1" (EXPAND POSITIONSOF) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL) ("2" (EXPAND ONLY_EMPTY_SEQ) (("2" (PROPAX) NIL NIL)) NIL) ("3" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (LEMMA EMPTY_0[POSNAT]) (("2" (INST -1 "(# length := 0,
                                seq := (LAMBDA (x: below[0]): epsilon! (t: posnat): TRUE) #)") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("3" (CASE "x!2 = (# length := x!2`length,
                                   seq := LAMBDA (x: below[p!1`length - 1]): x!2`seq(x) #)") (("1" (REPLACE -1 3 RL) (("1" (PROPAX) NIL NIL)) NIL) ("2" (DECOMPOSE-EQUALITY) (("1" (DECOMPOSE-EQUALITY) (("1" (SKOSIMP) (("1" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (SKOSIMP) (("3" (PROP) (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) (("2" (HIDE -1) (("2" (TYPEPRED P!1) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((< CONST-DECL "bool" |reals| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|union| CONST-DECL "set" |sets| NIL) (|catenate| CONST-DECL "positions" |positions| NIL) (|upto?| NONEMPTY-TYPE-EQ-DECL NIL |IUnion_extra| NIL) (<= CONST-DECL "bool" |reals| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|rest_add_first| FORMULA-DECL NIL |seq_extras| |structures|) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|first_add| FORMULA-DECL NIL |seq_extras| |structures|) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|r!1| SKOLEM-CONST-DECL "(app?)" |robinsonunification| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|app1_var!1| SKOLEM-CONST-DECL "symbol" |robinsonunification| NIL) (|app2_var!1| SKOLEM-CONST-DECL "{args: finite_sequence[term[variable, symbol, arity]] |
   args`length = arity(app1_var!1)}" |robinsonunification| NIL) (|i!1| SKOLEM-CONST-DECL "below[length(app2_var!1)]" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "positions?[variable, symbol, arity](app2_var!1`seq(i!1))" |robinsonunification| NIL) (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers| NIL) (|min| CONST-DECL "{p: real | p <= m AND p <= n}" |real_defs| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (FALSE CONST-DECL "bool" |booleans| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL) (|epsilon| CONST-DECL "T" |epsilons| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|x!2| SKOLEM-CONST-DECL "position[variable, symbol, arity]" |robinsonunification| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| |structures|) (|first| CONST-DECL "T" |seq_extras| |structures|) (|sigma!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|p!1| SKOLEM-CONST-DECL "positions?
    [variable, symbol, arity](app[variable, symbol, arity]
                                  (f(r!1),
                                   (# length := args(r!1)`length,
                                      seq
                                        := LAMBDA (n:
                                                     below[args(r!1)`length]):
                                             ext[variable, symbol, arity]
                                                 (sigma!1)
                                                 (args(r!1)`seq(n)) #)))" |robinsonunification| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|y!1| SKOLEM-CONST-DECL "(vars?)" |robinsonunification| NIL) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|vars| ADT-CONSTRUCTOR-DECL "[variable -> (vars?)]" |term_adt| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|term_induction| FORMULA-DECL NIL |term_adt| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|member| CONST-DECL "bool" |sets| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|term| TYPE-DECL NIL |term_adt| NIL)) SHOSTAK)) (|rob_uni_alg_dom_subset_union_vars| 0 (|rob_uni_alg_dom_subset_union_vars-2| "" 3885001155 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (EXPAND "robinson_unification_algorithm") (("1" (ASSERT) (("1" (EXPAND* "subset?" "union" "member") (("1" (SKOSIMP) (("1" (HIDE-ALL-BUT -3) (("1" (EXPAND "Dom") (("1" (FLATTEN) (("1" (EXPAND "identity") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "p!1" "first_diff(x!1, x!2)") (("1" (NAME "sig!1" "link_of_frst_diff(x!1, x!2)") (("1" (NAME "sig!2" "robinson_unification_algorithm(ext(sig!1)(x!1), ext(sig!1)(x!2))") (("1" (INST -4 "ext(sig!1)(x!1)" "ext(sig!1)(x!2)") (("1" (LEMMA "termination_lemma") (("1" (INST -1 "x!1" "x!2") (("1" (REPLACE -3) (("1" (ASSERT) (("1" (LEMMA "unifiable_implies_not_fail") (("1" (INST -1 "x!1" "x!2") (("1" (REPLACE -4) (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA "unifiable_preserves_unifiability") (("1" (INST -1 "x!1" "x!2") (("1" (REPLACE -3) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (EXPAND "robinson_unification_algorithm" 3) (("1" (REPLACE -3) (("1" (REPLACE -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (CASE "subset?(union(Vars(ext(sig!1)(x!1)), Vars(ext(sig!1)(x!2))),
                             union(Vars(x!1), Vars(x!2)))") (("1" (REPLACES -2) (("1" (HIDE-ALL-BUT (-1 -6 1)) (("1" (EXPAND "subset?") (("1" (SKOSIMP) (("1" (INST -1 "x!3") (("1" (INST -3 "x!3") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "link_of_frst_diff_s_is_subset_union") (("2" (INST -1 "x!1" "x!2") (("2" (REPLACE -5) (("2" (ASSERT) (("2" (LEMMA "link_of_frst_diff_t_is_subset_union") (("2" (INST -1 "x!1" "x!2") (("2" (REPLACE -6) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (EXPAND "subset?") (("2" (SKOSIMP) (("2" (INST -1 "x!3") (("2" (INST -2 "x!3") (("2" (ASSERT) (("2" (HIDE 3) (("2" (EXPAND* "union" "member") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "subset?(union(Vars(ext(sig!1)(x!1)), Vars(ext(sig!1)(x!2))),
                             union(Vars(x!1), Vars(x!2)))") (("1" (EXPAND "subset?" 2) (("1" (SKOSIMP) (("1" (LEMMA "dom_o") (("1" (INST -1 "sig!2" "sig!1") (("1" (EXPAND "subset?" -1) (("1" (INST -1 "x!3") (("1" (ASSERT) (("1" (EXPAND "member" -1) (("1" (EXPAND "union" -1) (("1" (SPLIT -1) (("1" (HIDE-ALL-BUT (-1 -2 -8 2)) (("1" (EXPAND "subset?") (("1" (INST -2 "x!3") (("1" (INST -3 "x!3") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 -5 -8 1 4) (("2" (LEMMA "dom_link_of_frst_diff_is") (("2" (INST -1 "p!1" "x!1" "x!2") (("2" (REPLACE -3) (("2" (REPLACE -4) (("2" (ASSERT) (("2" (EXPAND* "restrict" "singleton") (("2" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 "x!3") (("1" (EXPAND "member") (("1" (IFF) (("1" (ASSERT) (("1" (EXPAND* "union" "member") (("1" (FLATTEN) (("1" (EXPAND "Vars" 1) (("1" (INST 1 "p!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "x!3") (("1" (IFF) (("1" (EXPAND "member") (("1" (ASSERT) (("1" (EXPAND* "union" "member") (("1" (FLATTEN) (("1" (EXPAND "Vars" 3) (("1" (INST 3 "p!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 1)) (("2" (LEMMA "position_t_first_diff") (("2" (INST -1 "x!1" "x!2" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "link_of_frst_diff_s_is_subset_union") (("2" (LEMMA "link_of_frst_diff_t_is_subset_union") (("2" (INST -2 "x!1" "x!2") (("2" (INST -1 "x!1" "x!2") (("2" (REPLACE -5) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (EXPAND "subset?") (("2" (SKOSIMP) (("2" (INST -2 "x!3") (("2" (INST -1 "x!3") (("2" (ASSERT) (("2" (HIDE 3) (("2" (EXPAND* "union" "member") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|rob_uni_alg_dom_subset_union_vars-1| |nil| 3471781382 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (EXPAND ROBINSON_UNIFICATION_ALGORITHM) (("1" (ASSERT) (("1" (EXPAND* SUBSET? UNION MEMBER) (("1" (SKOSIMP) (("1" (HIDE-ALL-BUT -3) (("1" (EXPAND DOM) (("1" (FLATTEN) (("1" (EXPAND IDENTITY) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "p!1" "first_diff(x!1, x!2)") (("1" (NAME "sig!1" "link_of_frst_diff(x!1, x!2)") (("1" (NAME "sig!2" "robinson_unification_algorithm(ext(sig!1)(x!1), ext(sig!1)(x!2))") (("1" (INST -4 "ext(sig!1)(x!1)" "ext(sig!1)(x!2)") (("1" (LEMMA TERMINATION_LEMMA) (("1" (INST -1 X!1 X!2) (("1" (REPLACE -3) (("1" (ASSERT) (("1" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("1" (INST -1 X!1 X!2) (("1" (REPLACE -4) (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA UNIFIABLE_PRESERVES_UNIFIABILITY) (("1" (INST -1 X!1 X!2) (("1" (REPLACE -3) (("1" (ASSERT) (("1" (REPLACE -2) (("1" (EXPAND ROBINSON_UNIFICATION_ALGORITHM 3) (("1" (REPLACE -3) (("1" (REPLACE -2) (("1" (LIFT-IF) (("1" (PROP) (("1" (CASE "subset?(union(Vars(ext(sig!1)(x!1)), Vars(ext(sig!1)(x!2))),
                             union(Vars(x!1), Vars(x!2)))") (("1" (REPLACES -2) (("1" (HIDE-ALL-BUT (-1 -6 1)) (("1" (EXPAND SUBSET?) (("1" (SKOSIMP) (("1" (INST -1 X!3) (("1" (INST -3 X!3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA LINK_OF_FRST_DIFF_S_IS_SUBSET_UNION) (("2" (INST -1 X!1 X!2) (("2" (REPLACE -5) (("2" (ASSERT) (("2" (LEMMA LINK_OF_FRST_DIFF_T_IS_SUBSET_UNION) (("2" (INST -1 X!1 X!2) (("2" (REPLACE -6) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (EXPAND SUBSET?) (("2" (SKOSIMP) (("2" (INST -1 X!3) (("2" (INST -2 X!3) (("2" (ASSERT) (("2" (HIDE 3) (("2" (EXPAND* UNION MEMBER) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "subset?(union(Vars(ext(sig!1)(x!1)), Vars(ext(sig!1)(x!2))),
                             union(Vars(x!1), Vars(x!2)))") (("1" (EXPAND SUBSET? 2) (("1" (SKOSIMP) (("1" (LEMMA DOM_O) (("1" (INST -1 SIG!2 SIG!1) (("1" (EXPAND SUBSET? -1) (("1" (INST -1 X!3) (("1" (ASSERT) (("1" (EXPAND MEMBER -1) (("1" (EXPAND UNION -1) (("1" (SPLIT -1) (("1" (HIDE-ALL-BUT (-1 -2 -8 2)) (("1" (EXPAND SUBSET?) (("1" (INST -2 X!3) (("1" (INST -3 X!3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2 -3 -4 -5 -8 1 4) (("2" (LEMMA DOM_LINK_OF_FRST_DIFF_IS) (("2" (INST -1 P!1 X!1 X!2) (("2" (REPLACE -3) (("2" (REPLACE -4) (("2" (ASSERT) (("2" (EXPAND* RESTRICT SINGLETON) (("2" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 X!3) (("1" (EXPAND MEMBER) (("1" (IFF) (("1" (ASSERT) (("1" (EXPAND* UNION MEMBER) (("1" (FLATTEN) (("1" (EXPAND VARS 1) (("1" (INST 1 P!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 X!3) (("1" (IFF) (("1" (EXPAND MEMBER) (("1" (ASSERT) (("1" (EXPAND* UNION MEMBER) (("1" (FLATTEN) (("1" (EXPAND VARS 3) (("1" (INST 3 P!1) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 1)) (("2" (LEMMA POSITION_T_FIRST_DIFF) (("2" (INST -1 X!1 X!2 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA LINK_OF_FRST_DIFF_S_IS_SUBSET_UNION) (("2" (LEMMA LINK_OF_FRST_DIFF_T_IS_SUBSET_UNION) (("2" (INST -2 X!1 X!2) (("2" (INST -1 X!1 X!2) (("2" (REPLACE -5) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-1 -2 1)) (("2" (EXPAND SUBSET?) (("2" (SKOSIMP) (("2" (INST -2 X!3) (("2" (INST -1 X!3) (("2" (ASSERT) (("2" (HIDE 3) (("2" (EXPAND* UNION MEMBER) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL)) NIL) ((|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL) (|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|identity| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|unifiable_preserves_unifiability| FORMULA-DECL NIL |robinsonunification| NIL) (|dom_link_of_frst_diff_is| FORMULA-DECL NIL |robinsonunification| NIL) (|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|dom_o| FORMULA-DECL NIL |substitution| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|link_of_frst_diff_t_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|link_of_frst_diff_s_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|unifiable_implies_not_fail| FORMULA-DECL NIL |robinsonunification| NIL) (|termination_lemma| FORMULA-DECL NIL |robinsonunification| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|robinson_unification_algorithm| DEF-DECL "Sub" |robinsonunification| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Card| CONST-DECL "nat" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|rob_uni_alg_vran_subset_union| 0 (|rob_uni_alg_vran_subset_union-2| "" 3885001434 ("" (SKOSIMP) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (NAME-REPLACE "sig!2" "robinson_unification_algorithm(ext(sig!1)(s!1), ext(sig!1)(t!1))" :HIDE? NIL) (("" (ASSERT) (("" (REPLACE -1) (("" (PROP) (("" (EXPAND* "subset?" "union" "difference" "member") (("" (SKOSIMP) (("" (SPLIT) (("1" (EXPAND* "VRan" "IUnion") (("1" (SKOSIMP) (("1" (EXPAND "comp") (("1" (LEMMA "dom_o") (("1" (INST -1 "sig!2" "sig!1") (("1" (EXPAND* "subset?" "union" "member") (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (SPLIT) (("1" (CASE "Dom(sig!1)(i!1)") (("1" (LEMMA "rob_uni_alg_dom_subset_union_vars") (("1" (INST -1 "ext(sig!1)(s!1)" "ext(sig!1)(t!1)") (("1" (ASSERT) (("1" (REPLACE -4) (("1" (LEMMA "unifiable_preserves_unifiability") (("1" (INST -1 "s!1" "t!1") (("1" (REPLACE -6) (("1" (ASSERT) (("1" (EXPAND "subset?") (("1" (INST -2 "i!1") (("1" (EXPAND* "union" "member") (("1" (SPLIT) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "i!1" "s!1" "t!1") (("1" (REPLACE -7) (("1" (ASSERT) (("1" (LEMMA "unifiable_implies_not_fail") (("1" (INST -1 "s!1" "t!1") (("1" (REPLACE -8) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "link_remove_x") (("2" (INST -1 "i!1" "s!1" "t!1") (("2" (REPLACE -7) (("2" (ASSERT) (("2" (LEMMA "unifiable_implies_not_fail") (("2" (INST -1 "s!1" "t!1") (("2" (REPLACE -8) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "Dom" 1) (("2" (FLATTEN) (("2" (REPLACE -1) (("2" (TYPEPRED "i!1") (("2" (EXPAND V) (("2" (EXPAND "ext" -8) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-4 -8 2)) (("2" (INST 1 "i!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT member(x!1, Vars(sig!1(i!1)))") (("1" (LEMMA "var_ext_term_exists_var_term") (("1" (INST -1 "sig!1(i!1)" "sig!2" "x!1") (("1" (EXPAND "member") (("1" (SKOSIMP) (("1" (TYPEPRED "y!1") (("1" (CASE "Dom(sig!2)(y!1)") (("1" (INST 3 "y!1") NIL NIL) ("2" (EXPAND "Dom" 1) (("2" (FLATTEN) (("2" (REPLACE -1) (("2" (EXPAND "Vars" -4) (("2" (SKOSIMP) (("2" (CASE "p!1 = empty_seq") (("1" (REPLACE -1) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0" -5) (("1" (REPLACE -5 -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "p!1") (("2" (CASE "positionsOF(y!1) = only_empty_seq") (("1" (REPLACE -1 -2) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (EXPAND* V "positionsOF") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 "i!1") (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "VRan" "IUnion") (("2" (SKOSIMP) (("2" (LEMMA "dom_o") (("2" (INST -1 "sig!2" "sig!1") (("2" (EXPAND* "subset?" "union" "member") (("2" (INST -1 "i!1") (("2" (ASSERT) (("2" (SPLIT) (("1" (CASE "NOT Dom(sig!1)(i!1)") (("1" (EXPAND "Dom" 1) (("1" (FLATTEN) (("1" (EXPAND COMP) (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT (-2 -7 1)) (("1" (TYPEPRED "i!1") (("1" (HIDE -2) (("1" (EXPAND* V "ext") (("1" (ASSERT) (("1" (INST 1 "i!1") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "rob_uni_alg_dom_subset_union_vars") (("2" (INST -1 "ext(sig!1)(s!1)" "ext(sig!1)(t!1)") (("2" (ASSERT) (("2" (REPLACE -5) (("2" (LEMMA "unifiable_preserves_unifiability") (("2" (INST -1 "s!1" "t!1") (("2" (REPLACE -7) (("2" (ASSERT) (("2" (EXPAND* "subset?" "union" "member") (("2" (INST -2 "i!1") (("2" (ASSERT) (("2" (LEMMA "link_remove_x") (("2" (INST -1 "i!1" "s!1" "t!1") (("2" (REPLACE -8) (("2" (ASSERT) (("2" (LEMMA "unifiable_implies_not_fail") (("2" (INST -1 "s!1" "t!1") (("2" (REPLACE -9) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "var_ext_term_exists_var_term") (("2" (EXPAND COMP -7) (("2" (INST -1 "sig!1(i!1)" "sig!2" "x!1") (("2" (EXPAND "member") (("2" (ASSERT) (("2" (SKOSIMP) (("2" (CASE "Dom(sig!2)(y!1)") (("1" (INST 1 "y!1") NIL NIL) ("2" (EXPAND "Dom" 1) (("2" (FLATTEN) (("2" (REPLACE -1 -3) (("2" (EXPAND "Vars" -3) (("2" (SKOSIMP) (("2" (CASE "p!1 = empty_seq") (("1" (REPLACE -1 -4) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0" -4) (("1" (EXPAND "Dom" -6) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED "p!1") (("2" (CASE "positionsOF(y!1) = only_empty_seq") (("1" (REPLACE -1) (("1" (EXPAND "only_empty_seq") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED "y!1") (("2" (EXPAND* V "positionsOF") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|rob_uni_alg_vran_subset_union-1| |nil| 3471785783 ("" (SKOSIMP) (("" (NAME-REPLACE "sig!1" "link_of_frst_diff(s!1, t!1)" :HIDE? NIL) (("" (NAME-REPLACE "sig!2" "robinson_unification_algorithm(ext(sig!1)(s!1), ext(sig!1)(t!1))" :HIDE? NIL) (("" (ASSERT) (("" (REPLACE -1) (("" (PROP) (("" (EXPAND* SUBSET? UNION DIFFERENCE MEMBER) (("" (SKOSIMP) (("" (SPLIT) (("1" (EXPAND* VRAN IUNION) (("1" (SKOSIMP) (("1" (EXPAND COMP) (("1" (LEMMA DOM_O) (("1" (INST -1 SIG!2 SIG!1) (("1" (EXPAND* SUBSET? UNION MEMBER) (("1" (INST -1 I!1) (("1" (ASSERT) (("1" (SPLIT) (("1" (CASE "Dom(sig!1)(i!1)") (("1" (LEMMA ROB_UNI_ALG_DOM_SUBSET_UNION_VARS) (("1" (INST -1 "ext(sig!1)(s!1)" "ext(sig!1)(t!1)") (("1" (ASSERT) (("1" (REPLACE -4) (("1" (LEMMA UNIFIABLE_PRESERVES_UNIFIABILITY) (("1" (INST -1 S!1 T!1) (("1" (REPLACE -6) (("1" (ASSERT) (("1" (EXPAND SUBSET?) (("1" (INST -2 I!1) (("1" (EXPAND* UNION MEMBER) (("1" (SPLIT) (("1" (LEMMA LINK_REMOVE_X) (("1" (INST -1 I!1 S!1 T!1) (("1" (REPLACE -7) (("1" (ASSERT) (("1" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("1" (INST -1 S!1 T!1) (("1" (REPLACE -8) (("1" (ASSERT) (("1" (EXPAND MEMBER) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA LINK_REMOVE_X) (("2" (INST -1 I!1 S!1 T!1) (("2" (REPLACE -7) (("2" (ASSERT) (("2" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("2" (INST -1 S!1 T!1) (("2" (REPLACE -8) (("2" (ASSERT) (("2" (EXPAND MEMBER) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND DOM 1) (("2" (FLATTEN) (("2" (REPLACE -1) (("2" (TYPEPRED I!1) (("2" (EXPAND V) (("2" (EXPAND EXT -8) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-4 -8 2)) (("2" (INST 1 I!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (CASE "NOT member(x!1, Vars(sig!1(i!1)))") (("1" (LEMMA VAR_EXT_TERM_EXISTS_VAR_TERM) (("1" (INST -1 "sig!1(i!1)" "sig!2" "x!1") (("1" (EXPAND MEMBER) (("1" (SKOSIMP) (("1" (TYPEPRED Y!1) (("1" (CASE "Dom(sig!2)(y!1)") (("1" (INST 3 Y!1) NIL NIL) ("2" (EXPAND DOM 1) (("2" (FLATTEN) (("2" (REPLACE -1) (("2" (EXPAND VARS -4) (("2" (SKOSIMP) (("2" (CASE "p!1 = empty_seq") (("1" (REPLACE -1) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0 -5) (("1" (REPLACE -5 -4) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (CASE "positionsOF(y!1) = only_empty_seq") (("1" (REPLACE -1 -2) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-3 1)) (("2" (EXPAND* V POSITIONSOF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST 1 I!1) (("2" (EXPAND MEMBER) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* VRAN IUNION) (("2" (SKOSIMP) (("2" (LEMMA DOM_O) (("2" (INST -1 SIG!2 SIG!1) (("2" (EXPAND* SUBSET? UNION MEMBER) (("2" (INST -1 I!1) (("2" (ASSERT) (("2" (SPLIT) (("1" (CASE "NOT Dom(sig!1)(i!1)") (("1" (EXPAND DOM 1) (("1" (FLATTEN) (("1" (EXPAND COMP) (("1" (REPLACE -1) (("1" (HIDE-ALL-BUT (-2 -7 1)) (("1" (TYPEPRED I!1) (("1" (HIDE -2) (("1" (EXPAND* V EXT) (("1" (ASSERT) (("1" (INST 1 I!1) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA ROB_UNI_ALG_DOM_SUBSET_UNION_VARS) (("2" (INST -1 "ext(sig!1)(s!1)" "ext(sig!1)(t!1)") (("2" (ASSERT) (("2" (REPLACE -5) (("2" (LEMMA UNIFIABLE_PRESERVES_UNIFIABILITY) (("2" (INST -1 S!1 T!1) (("2" (REPLACE -7) (("2" (ASSERT) (("2" (EXPAND* SUBSET? UNION MEMBER) (("2" (INST -2 I!1) (("2" (ASSERT) (("2" (LEMMA LINK_REMOVE_X) (("2" (INST -1 I!1 S!1 T!1) (("2" (REPLACE -8) (("2" (ASSERT) (("2" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("2" (INST -1 S!1 T!1) (("2" (REPLACE -9) (("2" (ASSERT) (("2" (EXPAND MEMBER) (("2" (PROP) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA VAR_EXT_TERM_EXISTS_VAR_TERM) (("2" (EXPAND COMP -7) (("2" (INST -1 "sig!1(i!1)" SIG!2 X!1) (("2" (EXPAND MEMBER) (("2" (ASSERT) (("2" (SKOSIMP) (("2" (CASE "Dom(sig!2)(y!1)") (("1" (INST 1 Y!1) NIL NIL) ("2" (EXPAND DOM 1) (("2" (FLATTEN) (("2" (REPLACE -1 -3) (("2" (EXPAND VARS -3) (("2" (SKOSIMP) (("2" (CASE "p!1 = empty_seq") (("1" (REPLACE -1 -4) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0 -4) (("1" (EXPAND DOM -6) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (TYPEPRED P!1) (("2" (CASE "positionsOF(y!1) = only_empty_seq") (("1" (REPLACE -1) (("1" (EXPAND ONLY_EMPTY_SEQ) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT 1) (("2" (TYPEPRED Y!1) (("2" (EXPAND* V POSITIONSOF) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ((|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|y!1| SKOLEM-CONST-DECL "(V)" |robinsonunification| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|VRan| CONST-DECL "set[(V)]" |substitution| NIL) (|comp| CONST-DECL "term" |substitution| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|rob_uni_alg_dom_subset_union_vars| FORMULA-DECL NIL |robinsonunification| NIL) (|unifiable_preserves_unifiability| FORMULA-DECL NIL |robinsonunification| NIL) (|link_remove_x| FORMULA-DECL NIL |robinsonunification| NIL) (|unifiable_implies_not_fail| FORMULA-DECL NIL |robinsonunification| NIL) (|i!1| SKOLEM-CONST-DECL "{x | Dom[variable, symbol, arity](comp(sig!2, sig!1))(x)}" |robinsonunification| NIL) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|var_ext_term_exists_var_term| FORMULA-DECL NIL |robinsonunification| NIL) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|y!1| SKOLEM-CONST-DECL "(V)" |robinsonunification| NIL) (|sig!2| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|dom_o| FORMULA-DECL NIL |substitution| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|difference| CONST-DECL "set" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|union| CONST-DECL "set" |sets| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|robinson_unification_algorithm| DEF-DECL "Sub" |robinsonunification| NIL)) SHOSTAK)) (|rob_uni_alg_dom_ran_disjoint| 0 (|rob_uni_alg_dom_ran_disjoint-2| "" 3885001597 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (EXPAND "subset?") (("1" (SKOSIMP) (("1" (EXPAND "robinson_unification_algorithm") (("1" (ASSERT) (("1" (HIDE-ALL-BUT -3) (("1" (EXPAND* "member" "VRan" "IUnion") (("1" (SKOSIMP) (("1" (TYPEPRED "i!1") (("1" (HIDE -1 -3) (("1" (EXPAND* "Dom" "identity") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "sig!1" "link_of_frst_diff(x!1, x!2)") (("1" (NAME "p!1" "first_diff(x!1, x!2)") (("1" (INST -3 "ext(sig!1)(x!1)" "ext(sig!1)(x!2)") (("1" (LEMMA "termination_lemma") (("1" (INST -1 "x!1" "x!2") (("1" (REPLACE -3) (("1" (ASSERT) (("1" (LEMMA "unifiable_implies_not_fail") (("1" (INST -1 "x!1" "x!2") (("1" (REPLACE -4) (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA "unifiable_preserves_unifiability") (("1" (INST -1 "x!1" "x!2") (("1" (REPLACE -3) (("1" (ASSERT) (("1" (NAME-REPLACE "sig!2" "robinson_unification_algorithm(ext(sig!1)(x!1), ext(sig!1)(x!2))" :HIDE? NIL) (("1" (EXPAND "robinson_unification_algorithm" 3) (("1" (REPLACE -4) (("1" (REPLACE -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* "subset?" "difference" "union" "member") (("1" (SKOSIMP) (("1" (INST -7 "x!3") (("1" (ASSERT) (("1" (PROP) (("1" (LEMMA "link_of_frst_diff_s_is_subset_union") (("1" (INST -1 "x!1" "x!2") (("1" (ASSERT) (("1" (REPLACE -3) (("1" (EXPAND* "subset?" "union" "member") (("1" (INST -1 "x!3") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "link_of_frst_diff_t_is_subset_union") (("2" (INST -1 "x!1" "x!2") (("2" (ASSERT) (("2" (REPLACE -3) (("2" (EXPAND* "subset?" "union" "member") (("2" (INST -1 "x!3") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* "subset?" "difference" "union" "member") (("2" (SKOSIMP) (("2" (LEMMA "rob_uni_alg_vran_subset_union") (("2" (INST -1 "x!1" "x!2") (("2" (REPLACE -6) (("2" (ASSERT) (("2" (REPLACE -3) (("2" (EXPAND "subset?") (("2" (INST -1 "x!3") (("2" (EXPAND "member") (("2" (EXPAND* "difference" "union" "member") (("2" (PROP) (("1" (INST -7 "x!3") (("1" (ASSERT) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -7 1 4)) (("1" (LEMMA "link_of_frst_diff_s_is_subset_union") (("1" (INST -1 "x!1" "x!2") (("1" (ASSERT) (("1" (REPLACE -3) (("1" (EXPAND "subset?") (("1" (INST -1 "x!3") (("1" (EXPAND* "union" "member") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -7 2 4)) (("2" (LEMMA "link_of_frst_diff_t_is_subset_union") (("2" (INST -1 "x!1" "x!2") (("2" (ASSERT) (("2" (REPLACE -3) (("2" (EXPAND "subset?") (("2" (INST -1 "x!3") (("2" (EXPAND* "union" "member") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -8 "x!3") (("2" (ASSERT) (("2" (PROP) (("1" (LEMMA "dom_o") (("1" (INST -1 "sig!2" "sig!1") (("1" (EXPAND "subset?") (("1" (INST -1 "x!3") (("1" (EXPAND "member") (("1" (EXPAND "union") (("1" (EXPAND "member") (("1" (ASSERT) (("1" (HIDE-ALL-BUT (-1 -2 -9 2 3)) (("1" (LEMMA "link_remove_x") (("1" (INST -1 "x!3" "x!1" "x!2") (("1" (REPLACE -4) (("1" (ASSERT) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "dom_o") (("2" (INST -1 "sig!2" "sig!1") (("2" (EXPAND "subset?") (("2" (INST -1 "x!3") (("2" (EXPAND* "union" "member") (("2" (ASSERT) (("2" (LEMMA "link_remove_x") (("2" (INST -1 "x!3" "x!1" "x!2") (("2" (REPLACE -10) (("2" (ASSERT) (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA "dom_link_of_frst_diff_is") (("3" (INST -1 "p!1" "x!1" "x!2") (("3" (ASSERT) (("3" (REPLACE -7) (("3" (EXPAND* "restrict" "singleton") (("3" (EXPAND "VRan" -2) (("3" (EXPAND "IUnion") (("3" (SKOSIMP) (("3" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACE -8 -3 RL) (("1" (EXPAND "link_of_frst_diff" -3) (("1" (REPLACE -7) (("1" (PROP) (("1" (EXPAND "Vars" (-1 3)) (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "x!2") (("1" (ASSERT) (("1" (LEMMA "position_t_first_diff") (("1" (INST -1 "x!1" "x!2" "p!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p!1" "p!2" "x!2") (("1" (ASSERT) (("1" (REPLACE -1 -5 RL) (("1" (HIDE-ALL-BUT (-5 3)) (("1" (INST 1 "p!1 o p!2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 "i!1") (("1" (ASSERT) (("1" (REPLACE -7 -2 RL) (("1" (EXPAND "link_of_frst_diff" -2) (("1" (REPLACE -6) (("1" (CASE "vars?(subtermOF(x!2, p!1))") (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND "Vars" (-1 3)) (("1" (SKOSIMP) (("1" (TYPEPRED "p!2") (("1" (LEMMA "pos_o_term") (("1" (INST -1 "p!1" "p!2" "x!1") (("1" (ASSERT) (("1" (LEMMA "position_s_first_diff") (("1" (INST -1 "x!1" "x!2" "p!1") (("1" (ASSERT) (("1" (LEMMA "pos_subterm") (("1" (INST -1 "p!1" "p!2" "x!1") (("1" (ASSERT) (("1" (REPLACE -1 -5 RL) (("1" (HIDE-ALL-BUT (-5 3)) (("1" (INST 1 "p!1 o p!2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "link_of_frst_diff" -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 -9 1 2)) (("2" (LEMMA "first_diff_unifiable_vars") (("2" (INST -1 "x!1" "x!2" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-8 1)) (("2" (LEMMA "position_t_first_diff") (("2" (INST -1 "x!1" "x!2" "p!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA "dom_o") (("4" (INST -1 "sig!2" "sig!1") (("4" (EXPAND "subset?") (("4" (INST -1 "x!3") (("4" (EXPAND "member") (("4" (ASSERT) (("4" (EXPAND* "union" "member") (("4" (HIDE-ALL-BUT (-1 -3 -8 3 4)) (("4" (LEMMA "dom_ran_link_disjoint") (("4" (INST -1 "x!1" "x!2") (("4" (REPLACE -4) (("4" (ASSERT) (("4" (EXPAND* "VRan" "IUnion") (("4" (SKOSIMP) (("4" (INST -1 "x!3" "sig!1(i!1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND "member") (("2" (EXPAND RAN) (("2" (INST 1 "i!1") (("2" (TYPEPRED "i!1") (("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "member") (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|rob_uni_alg_dom_ran_disjoint-1| |nil| 3469797806 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (EXPAND SUBSET?) (("1" (SKOSIMP) (("1" (EXPAND ROBINSON_UNIFICATION_ALGORITHM) (("1" (ASSERT) (("1" (HIDE-ALL-BUT -3) (("1" (EXPAND* MEMBER VRAN IUNION) (("1" (SKOSIMP) (("1" (TYPEPRED I!1) (("1" (HIDE -1 -3) (("1" (EXPAND* DOM IDENTITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (NAME "sig!1" "link_of_frst_diff(x!1, x!2)") (("1" (NAME "p!1" "first_diff(x!1, x!2)") (("1" (INST -3 "ext(sig!1)(x!1)" "ext(sig!1)(x!2)") (("1" (LEMMA TERMINATION_LEMMA) (("1" (INST -1 X!1 X!2) (("1" (REPLACE -3) (("1" (ASSERT) (("1" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("1" (INST -1 X!1 X!2) (("1" (REPLACE -4) (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA UNIFIABLE_PRESERVES_UNIFIABILITY) (("1" (INST -1 X!1 X!2) (("1" (REPLACE -3) (("1" (ASSERT) (("1" (NAME-REPLACE "sig!2" "robinson_unification_algorithm(ext(sig!1)(x!1), ext(sig!1)(x!2))" :HIDE? NIL) (("1" (EXPAND ROBINSON_UNIFICATION_ALGORITHM 3) (("1" (REPLACE -4) (("1" (REPLACE -1) (("1" (LIFT-IF) (("1" (PROP) (("1" (EXPAND* SUBSET? DIFFERENCE UNION MEMBER) (("1" (SKOSIMP) (("1" (INST -7 X!3) (("1" (ASSERT) (("1" (PROP) (("1" (LEMMA LINK_OF_FRST_DIFF_S_IS_SUBSET_UNION) (("1" (INST -1 X!1 X!2) (("1" (ASSERT) (("1" (REPLACE -3) (("1" (EXPAND* SUBSET? UNION MEMBER) (("1" (INST -1 X!3) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA LINK_OF_FRST_DIFF_T_IS_SUBSET_UNION) (("2" (INST -1 X!1 X!2) (("2" (ASSERT) (("2" (REPLACE -3) (("2" (EXPAND* SUBSET? UNION MEMBER) (("2" (INST -1 X!3) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL) ("4" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND* SUBSET? DIFFERENCE UNION MEMBER) (("2" (SKOSIMP) (("2" (LEMMA "rob_uni_alg_vran_subset_union") (("2" (INST -1 X!1 X!2) (("2" (REPLACE -6) (("2" (ASSERT) (("2" (REPLACE -3) (("2" (EXPAND SUBSET?) (("2" (INST -1 X!3) (("2" (EXPAND MEMBER) (("2" (EXPAND* DIFFERENCE UNION MEMBER) (("2" (PROP) (("1" (INST -7 X!3) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 -7 1 4)) (("1" (LEMMA LINK_OF_FRST_DIFF_S_IS_SUBSET_UNION) (("1" (INST -1 X!1 X!2) (("1" (ASSERT) (("1" (REPLACE -3) (("1" (EXPAND SUBSET?) (("1" (INST -1 X!3) (("1" (EXPAND* UNION MEMBER) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-1 -7 2 4)) (("2" (LEMMA LINK_OF_FRST_DIFF_T_IS_SUBSET_UNION) (("2" (INST -1 X!1 X!2) (("2" (ASSERT) (("2" (REPLACE -3) (("2" (EXPAND SUBSET?) (("2" (INST -1 X!3) (("2" (EXPAND* UNION MEMBER) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -8 X!3) (("2" (ASSERT) (("2" (PROP) (("1" (LEMMA DOM_O) (("1" (INST -1 SIG!2 SIG!1) (("1" (EXPAND SUBSET?) (("1" (INST -1 X!3) (("1" (EXPAND MEMBER) (("1" (EXPAND UNION) (("1" (EXPAND MEMBER) (("1" (ASSERT) (("1" (HIDE-ALL-BUT (-1 -2 -9 2 3)) (("1" (LEMMA LINK_REMOVE_X) (("1" (INST -1 X!3 X!1 X!2) (("1" (REPLACE -4) (("1" (ASSERT) (("1" (EXPAND MEMBER) (("1" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA DOM_O) (("2" (INST -1 SIG!2 SIG!1) (("2" (EXPAND SUBSET?) (("2" (INST -1 X!3) (("2" (EXPAND* UNION MEMBER) (("2" (ASSERT) (("2" (LEMMA LINK_REMOVE_X) (("2" (INST -1 X!3 X!1 X!2) (("2" (REPLACE -10) (("2" (ASSERT) (("2" (EXPAND MEMBER) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (LEMMA DOM_LINK_OF_FRST_DIFF_IS) (("3" (INST -1 P!1 X!1 X!2) (("3" (ASSERT) (("3" (REPLACE -7) (("3" (EXPAND* RESTRICT SINGLETON) (("3" (EXPAND VRAN -2) (("3" (EXPAND IUNION) (("3" (SKOSIMP) (("3" (PROP) (("1" (DECOMPOSE-EQUALITY -2) (("1" (INST -1 I!1) (("1" (ASSERT) (("1" (REPLACE -8 -3 RL) (("1" (EXPAND LINK_OF_FRST_DIFF -3) (("1" (REPLACE -7) (("1" (PROP) (("1" (EXPAND VARS (-1 3)) (("1" (SKOSIMP) (("1" (TYPEPRED P!2) (("1" (LEMMA POS_O_TERM) (("1" (INST -1 P!1 P!2 X!2) (("1" (ASSERT) (("1" (LEMMA POSITION_T_FIRST_DIFF) (("1" (INST -1 X!1 X!2 P!1) (("1" (ASSERT) (("1" (LEMMA POS_SUBTERM) (("1" (INST -1 P!1 P!2 X!2) (("1" (ASSERT) (("1" (REPLACE -1 -5 RL) (("1" (HIDE-ALL-BUT (-5 3)) (("1" (INST 1 "p!1 o p!2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND LINK_OF_FRST_DIFF -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (DECOMPOSE-EQUALITY -1) (("1" (INST -1 I!1) (("1" (ASSERT) (("1" (REPLACE -7 -2 RL) (("1" (EXPAND LINK_OF_FRST_DIFF -2) (("1" (REPLACE -6) (("1" (CASE "vars?(subtermOF(x!2, p!1))") (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND VARS (-1 3)) (("1" (SKOSIMP) (("1" (TYPEPRED P!2) (("1" (LEMMA POS_O_TERM) (("1" (INST -1 P!1 P!2 X!1) (("1" (ASSERT) (("1" (LEMMA POSITION_S_FIRST_DIFF) (("1" (INST -1 X!1 X!2 P!1) (("1" (ASSERT) (("1" (LEMMA POS_SUBTERM) (("1" (INST -1 P!1 P!2 X!1) (("1" (ASSERT) (("1" (REPLACE -1 -5 RL) (("1" (HIDE-ALL-BUT (-5 3)) (("1" (INST 1 "p!1 o p!2") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND LINK_OF_FRST_DIFF -9) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-6 -9 1 2)) (("2" (LEMMA FIRST_DIFF_UNIFIABLE_VARS) (("2" (INST -1 X!1 X!2 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE-ALL-BUT (-8 1)) (("2" (LEMMA POSITION_T_FIRST_DIFF) (("2" (INST -1 X!1 X!2 P!1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("4" (LEMMA DOM_O) (("4" (INST -1 SIG!2 SIG!1) (("4" (EXPAND SUBSET?) (("4" (INST -1 X!3) (("4" (EXPAND MEMBER) (("4" (ASSERT) (("4" (EXPAND* UNION MEMBER) (("4" (HIDE-ALL-BUT (-1 -3 -8 3 4)) (("4" (LEMMA DOM_RAN_LINK_DISJOINT) (("4" (INST -1 X!1 X!2) (("4" (REPLACE -4) (("4" (ASSERT) (("4" (EXPAND* VRAN IUNION) (("4" (SKOSIMP) (("4" (INST -1 "x!3" "sig!1(i!1)") (("1" (HIDE-ALL-BUT (-2 1)) (("1" (EXPAND MEMBER) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (EXPAND MEMBER) (("2" (EXPAND RAN) (("2" (INST 1 I!1) (("2" (TYPEPRED I!1) (("2" (EXPAND MEMBER) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND MEMBER) (("3" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL)) NIL) ((|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL) (|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|identity| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|first_diff| DEF-DECL "position" |robinsonunification| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|termination_lemma| FORMULA-DECL NIL |robinsonunification| NIL) (|unifiable_implies_not_fail| FORMULA-DECL NIL |robinsonunification| NIL) (|link_of_frst_diff_t_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|link_of_frst_diff_s_is_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|dom_o| FORMULA-DECL NIL |substitution| NIL) (|link_remove_x| FORMULA-DECL NIL |robinsonunification| NIL) (|vars?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|position_s_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|first_diff_unifiable_vars| FORMULA-DECL NIL |robinsonunification| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|pos_o_term| FORMULA-DECL NIL |subterm| NIL) (|pos_subterm| FORMULA-DECL NIL |subterm| NIL) (O CONST-DECL "finseq" |finite_sequences| NIL) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|position_t_first_diff| FORMULA-DECL NIL |robinsonunification| NIL) (|restrict| CONST-DECL "R" |restrict| NIL) (|singleton| CONST-DECL "(singleton?)" |sets| NIL) (|finite_restrict| APPLICATION-JUDGEMENT "finite_set[S]" |restrict_set_props| NIL) (|dom_link_of_frst_diff_is| FORMULA-DECL NIL |robinsonunification| NIL) (|i!1| SKOLEM-CONST-DECL "{x | Dom[variable, symbol, arity](sig!1)(x)}" |robinsonunification| NIL) (|Ran| CONST-DECL "set[term[variable, symbol, arity]]" |substitution| NIL) (|x!3| SKOLEM-CONST-DECL "(V[variable, symbol, arity])" |robinsonunification| NIL) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|dom_ran_link_disjoint| FORMULA-DECL NIL |robinsonunification| NIL) (|rob_uni_alg_vran_subset_union| FORMULA-DECL NIL |robinsonunification| NIL) (|unifiable_preserves_unifiability| FORMULA-DECL NIL |robinsonunification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|robinson_unification_algorithm| DEF-DECL "Sub" |robinsonunification| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|difference| CONST-DECL "set" |sets| NIL) (|VRan| CONST-DECL "set[(V)]" |substitution| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Card| CONST-DECL "nat" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|robinson_unification_algorithm_fails_iff_non_unifiable| 0 (|robinson_unification_algorithm_fails_iff_non_unifiable-2| "" 3885001932 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (PROP) (("1" (EXPAND "robinson_unification_algorithm" 2) (("1" (NAME-REPLACE "sig!1" "link_of_frst_diff(x!1, x!2)" :HIDE? NIL) (("1" (NAME-REPLACE "sig!2" "robinson_unification_algorithm(ext(sig!1)(x!1),ext(sig!1)(x!2))" :HIDE? NIL) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 2)) (("1" (EXPAND "unifiable") (("1" (INST 1 "identity") (("1" (EXPAND "unifier") (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "Sub?") (("2" (CASE-REPLACE "Dom(identity) = emptyset") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND* "Dom" EMPTYSET) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "ext(sig!1)(x!1)" "ext(sig!1)(x!2)") (("2" (LEMMA "termination_lemma") (("2" (INST -1 "x!1" "x!2") (("2" (REPLACE -3) (("2" (ASSERT) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-4 5)) (("2" (EXPAND* "unifiable" "unifier") (("2" (SKOSIMP) (("2" (INST 1 "comp(sigma!1, sig!1)") (("1" (REWRITE "ext_o") (("1" (EXPAND O) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REWRITE "subs_o") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 3) (("2" (FLATTEN) (("2" (EXPAND "unifiable") (("2" (INST 1 "identity") (("1" (EXPAND "unifier") (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND "Sub?") (("2" (CASE-REPLACE "Dom(identity) = emptyset") (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND* "Dom" "emptyset") (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (LEMMA "rob_uni_alg_dom_ran_disjoint") (("2" (INST -1 "x!1" "x!2") (("2" (ASSERT) (("2" (NAME-REPLACE "sig!1" "robinson_unification_algorithm(x!1, x!2)") (("2" (DECOMPOSE-EQUALITY -2) (("2" (EXPAND* "subset?" "difference" "union" "member") (("2" (INST -2 "xx") (("2" (INST -1 "xx") (("2" (PROP) (("1" (EXPAND "fail") (("1" (EXPAND "Dom") (("1" (FLATTEN) (("1" (HIDE -1 -4) (("1" (REPLACES -1) (("1" (TYPEPRED "xx") (("1" (EXPAND V) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "fail") (("2" (EXPAND "Dom") (("2" (FLATTEN) (("2" (HIDE -1 -4) (("2" (REPLACES -1) (("2" (TYPEPRED "xx") (("2" (EXPAND "V") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND "VRan") (("3" (EXPAND "IUnion") (("3" (INST 1 "xx") (("1" (EXPAND "fail") (("1" (HIDE -2) (("1" (EXPAND "Vars") (("1" (INST 1 "#(1)") (("1" (EXPAND "subtermOF") (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND "finseq_appl") (("2" (REPLACES -1) (("2" (HIDE 1) (("2" (CASE "args(app(ff,  #(xx)))`seq(first( #(1)) - 1) = xx") (("1" (REPLACES -1) (("1" (CASE "rest( #(1)) = empty_seq") (("1" (REPLACES -1) (("1" (EXPAND "subtermOF") (("1" (REWRITE "empty_0") NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (EXPAND "first") (("3" (EXPAND "finseq_appl") (("3" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "#") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND "positionsOF") (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY -2) (("2" (HIDE -1 -2 -5 +) (("2" (EXPAND "#") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 1) (("3" (EXPAND* "union" "IUnion" "member" "only_empty_seq") (("3" (FLATTEN) (("3" (HIDE 1) (("3" (INST 1 1) (("1" (EXPAND "catenate") (("1" (INST 1 "empty_seq") (("1" (EXPAND "member") (("1" (PROP) (("1" (EXPAND "finseq_appl") (("1" (EXPAND "positionsOF") (("1" (LIFT-IF) (("1" (EXPAND* "union" "IUnion" "member" "only_empty_seq") NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (HIDE -1 -2) (("2" (EXPAND "#") (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND "Dom") (("2" (EXPAND "fail") (("2" (FLATTEN) (("2" (REPLACES -1) (("2" (TYPEPRED "xx") (("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|robinson_unification_algorithm_fails_iff_non_unifiable-1| |nil| 3475672712 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (PROP) (("1" (EXPAND ROBINSON_UNIFICATION_ALGORITHM 2) (("1" (NAME-REPLACE "sig!1" "link_of_frst_diff(x!1, x!2)" :HIDE? NIL) (("1" (NAME-REPLACE "sig!2" "robinson_unification_algorithm(ext(sig!1)(x!1),ext(sig!1)(x!2))" :HIDE? NIL) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT (-1 2)) (("1" (EXPAND UNIFIABLE) (("1" (INST 1 IDENTITY) (("1" (EXPAND UNIFIER) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND SUB?) (("2" (CASE-REPLACE "Dom(identity) = emptyset") (("1" (HIDE -) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -1 2) (("2" (EXPAND* DOM EMPTYSET) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (INST -3 "ext(sig!1)(x!1)" "ext(sig!1)(x!2)") (("2" (LEMMA TERMINATION_LEMMA) (("2" (INST -1 X!1 X!2) (("2" (REPLACE -3) (("2" (ASSERT) (("2" (ASSERT) (("2" (HIDE-ALL-BUT (-4 5)) (("2" (EXPAND* UNIFIABLE UNIFIER) (("2" (SKOSIMP) (("2" (INST 1 "comp(sigma!1, sig!1)") (("1" (REWRITE EXT_O) (("1" (EXPAND O) (("1" (PROPAX) NIL NIL)) NIL)) NIL) ("2" (REWRITE SUBS_O) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 3) (("2" (FLATTEN) (("2" (EXPAND UNIFIABLE) (("2" (INST 1 IDENTITY) (("1" (EXPAND UNIFIER) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND SUB?) (("2" (CASE-REPLACE "Dom(identity) = emptyset") (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL) ("2" (HIDE 2) (("2" (EXPAND* DOM EMPTYSET) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -3) (("2" (LEMMA ROB_UNI_ALG_DOM_RAN_DISJOINT) (("2" (INST -1 X!1 X!2) (("2" (ASSERT) (("2" (NAME-REPLACE "sig!1" "robinson_unification_algorithm(x!1, x!2)") (("2" (DECOMPOSE-EQUALITY -2) (("2" (EXPAND* SUBSET? DIFFERENCE UNION MEMBER) (("2" (INST -2 XX) (("2" (INST -1 XX) (("2" (PROP) (("1" (EXPAND FAIL) (("1" (EXPAND DOM) (("1" (FLATTEN) (("1" (HIDE -1 -4) (("1" (REPLACES -1) (("1" (TYPEPRED XX) (("1" (EXPAND V) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND FAIL) (("2" (EXPAND DOM) (("2" (FLATTEN) (("2" (HIDE -1 -4) (("2" (REPLACES -1) (("2" (TYPEPRED XX) (("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (EXPAND VRAN) (("3" (EXPAND IUNION) (("3" (INST 1 XX) (("1" (EXPAND FAIL) (("1" (HIDE -2) (("1" (EXPAND VARS) (("1" (INST 1 "#(1)") (("1" (EXPAND SUBTERMOF) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL) ("2" (EXPAND FINSEQ_APPL) (("2" (REPLACES -1) (("2" (HIDE 1) (("2" (CASE "args(app(ff,  #(xx)))`seq(first( #(1)) - 1) = xx") (("1" (REPLACES -1) (("1" (CASE "rest( #(1)) = empty_seq") (("1" (REPLACES -1) (("1" (EXPAND SUBTERMOF) (("1" (REWRITE EMPTY_0) NIL NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL) ("3" (HIDE 2) (("3" (EXPAND FIRST) (("3" (EXPAND FINSEQ_APPL) (("3" (PROP) (("1" (ASSERT) NIL NIL) ("2" (EXPAND "#") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (EXPAND POSITIONSOF) (("2" (LIFT-IF) (("2" (PROP) (("1" (ASSERT) NIL NIL) ("2" (DECOMPOSE-EQUALITY -2) (("2" (HIDE -1 -2 -5 +) (("2" (EXPAND "#") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("3" (HIDE -1 1) (("3" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) (("3" (FLATTEN) (("3" (HIDE 1) (("3" (INST 1 1) (("1" (EXPAND CATENATE) (("1" (INST 1 EMPTY_SEQ) (("1" (EXPAND MEMBER) (("1" (PROP) (("1" (EXPAND FINSEQ_APPL) (("1" (EXPAND POSITIONSOF) (("1" (LIFT-IF) (("1" (EXPAND* UNION IUNION MEMBER ONLY_EMPTY_SEQ) NIL NIL)) NIL)) NIL)) NIL) ("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (REVEAL -1) (("2" (DECOMPOSE-EQUALITY -1) (("2" (HIDE -1 -2) (("2" (EXPAND "#") (("2" (DECOMPOSE-EQUALITY -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -2) (("2" (EXPAND DOM) (("2" (EXPAND FAIL) (("2" (FLATTEN) (("2" (REPLACES -1) (("2" (TYPEPRED XX) (("2" (EXPAND V) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL)) NIL) ((|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL) (|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|subs_o| FORMULA-DECL NIL |substitution| NIL) (|ext_o| FORMULA-DECL NIL |substitution| NIL) (O CONST-DECL "T3" |function_props| NIL) (|comp| CONST-DECL "term" |substitution| NIL) (|sigma!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|termination_lemma| FORMULA-DECL NIL |robinsonunification| NIL) (|identity| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (|Dom| CONST-DECL "set[(V)]" |substitution| NIL) (|emptyset| CONST-DECL "set" |sets| NIL) (|finite_emptyset| NAME-JUDGEMENT "finite_set[(V)]" |robinsonunification| NIL) (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|rob_uni_alg_dom_ran_disjoint| FORMULA-DECL NIL |robinsonunification| NIL) (|subset_is_partial_order| NAME-JUDGEMENT "(partial_order?[set[T]])" |sets_lemmas| NIL) (|xx| CONST-DECL "(V)" |robinsonunification| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|IUnion| CONST-DECL "set[T]" |indexed_sets| NIL) (|only_empty_seq| CONST-DECL "positions" |positions| NIL) (|odd?| CONST-DECL "bool" |integers| NIL) (|catenate| CONST-DECL "positions" |positions| NIL) (|add_first| CONST-DECL "finseq" |seq_extras| |structures|) (|insert?| CONST-DECL "finseq" |seq_extras| |structures|) (|upto?| NONEMPTY-TYPE-EQ-DECL NIL |IUnion_extra| NIL) (<= CONST-DECL "bool" |reals| NIL) (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL) (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (|subtermOF| DEF-DECL "term" |subterm| NIL) (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) (|first| CONST-DECL "T" |seq_extras| |structures|) (|not_empty_seq| TYPE-EQ-DECL NIL |seq_extras| |structures|) (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL) (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL) (|ff| CONST-DECL "{f: symbol | arity(f) = 1}" |robinsonunification| NIL) (|app| ADT-CONSTRUCTOR-DECL "[[f: symbol, {args: finite_sequence[term] | args`length = arity(f)}] ->
   (app?)]" |term_adt| NIL) (|args| ADT-ACCESSOR-DECL "[d: (app?) -> {args: finite_sequence[term] | args`length = arity(f(d))}]" |term_adt| NIL) (|f| ADT-ACCESSOR-DECL "[(app?) -> symbol]" |term_adt| NIL) (|app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL) (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])" |real_props| NIL) (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL) (|rest| CONST-DECL "finseq" |seq_extras| |structures|) (|empty_0| FORMULA-DECL NIL |seq_extras| |structures|) (|int_min| APPLICATION-JUDGEMENT "{k: int | k <= i AND k <= j}" |real_defs| NIL) (|nat_min| APPLICATION-JUDGEMENT "{k: nat | k <= i AND k <= j}" |real_defs| NIL) (|real_gt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (^ CONST-DECL "finseq" |finite_sequences| NIL) (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences| NIL) (|positions?| TYPE-EQ-DECL NIL |positions| NIL) (|below| TYPE-EQ-DECL NIL |nat_types| NIL) (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (> CONST-DECL "bool" |reals| NIL) (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|position| TYPE-EQ-DECL NIL |positions| NIL) (|positions| TYPE-EQ-DECL NIL |positions| NIL) (|positionsOF| DEF-DECL "positions" |positions| NIL) (|finite_sequence| TYPE-EQ-DECL NIL |finite_sequences| NIL) (|#| CONST-DECL "finite_sequence[T]" |set2seq| |structures|) (|sig!1| SKOLEM-CONST-DECL "Sub[variable, symbol, arity]" |robinsonunification| NIL) (|VRan| CONST-DECL "set[(V)]" |substitution| NIL) (|subset?| CONST-DECL "bool" |sets| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|difference| CONST-DECL "set" |sets| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|fail| CONST-DECL "Sub" |robinsonunification| NIL) (|robinson_unification_algorithm| DEF-DECL "Sub" |robinsonunification| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (NOT CONST-DECL "[bool -> bool]" |booleans| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Card| CONST-DECL "nat" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|robinson_unification_algorithm_gives_unifier| 0 (|robinson_unification_algorithm_gives_unifier-2| "" 3885002057 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (EXPAND "robinson_unification_algorithm") (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "member" "U" "unifier") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND "unifiable") (("2" (INST 1 "identity") (("1" (EXPAND "unifier") (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE "iden_subs") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("1" (INST -2 "ext(link_of_frst_diff(x!1, x!2))(x!1)" "ext(link_of_frst_diff(x!1, x!2))(x!2)") (("1" (LEMMA "termination_lemma") (("1" (INST -1 "x!1" "x!2") (("1" (ASSERT) (("1" (LEMMA "unifiable_implies_not_fail") (("1" (INST -1 "x!1" "x!2") (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA "unifiable_preserves_unifiability") (("1" (INST -1 "x!1" "x!2") (("1" (ASSERT) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (LEMMA "unifier_o") (("1" (INST -1 "x!1" "robinson_unification_algorithm(ext(link_of_frst_diff(x!1, x!2))(x!1),
                                                                                              ext(link_of_frst_diff(x!1, x!2))(x!2))" "x!2" "link_of_frst_diff(x!1, x!2)") (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "robinson_unification_algorithm" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (REVEAL -5) (("1" (LEMMA "robinson_unification_algorithm_fails_iff_non_unifiable") (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -2 2) (("2" (EXPAND* "member" "U" "unifiable") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) ("3" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) NIL SHOSTAK) (|robinson_unification_algorithm_gives_unifier-1| |nil| 3468663996 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (EXPAND "robinson_unification_algorithm") (("1" (ASSERT) (("1" (PROP) (("1" (EXPAND* "member" "U" "unifier") (("1" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -1) (("2" (EXPAND UNIFIABLE) (("2" (INST 1 IDENTITY) (("1" (EXPAND UNIFIER) (("1" (ASSERT) NIL NIL)) NIL) ("2" (REWRITE IDEN_SUBS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (PROP) (("1" (INST -2 "ext(link_of_frst_diff(x!1, x!2))(x!1)" "ext(link_of_frst_diff(x!1, x!2))(x!2)") (("1" (LEMMA TERMINATION_LEMMA) (("1" (INST -1 X!1 X!2) (("1" (ASSERT) (("1" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("1" (INST -1 X!1 X!2) (("1" (ASSERT) (("1" (HIDE -1) (("1" (LEMMA UNIFIABLE_PRESERVES_UNIFIABILITY) (("1" (INST -1 X!1 X!2) (("1" (ASSERT) (("1" (HIDE -1) (("1" (HIDE -1) (("1" (LEMMA "unifier_o") (("1" (INST -1 "x!1" "robinson_unification_algorithm(ext(link_of_frst_diff(x!1, x!2))(x!1),
                                                                                              ext(link_of_frst_diff(x!1, x!2))(x!2))" "x!2" "link_of_frst_diff(x!1, x!2)") (("1" (ASSERT) (("1" (HIDE -2) (("1" (EXPAND "robinson_unification_algorithm" 2) (("1" (LIFT-IF) (("1" (PROP) (("1" (HIDE-ALL-BUT -1) (("1" (REVEAL -5) (("1" (LEMMA ROBINSON_UNIFICATION_ALGORITHM_FAILS_IFF_NON_UNIFIABLE) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL) ("2" (HIDE -2 2) (("2" (EXPAND* MEMBER U UNIFIABLE) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ("3" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ((|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL) (|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (|iden_subs| FORMULA-DECL NIL |substitution| NIL) (|bijective?| CONST-DECL "bool" |functions| NIL) (|identity| CONST-DECL "(bijective?[T, T])" |identity| NIL) (|x!2| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|x!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|unifiable_implies_not_fail| FORMULA-DECL NIL |robinsonunification| NIL) (|unifiable_preserves_unifiability| FORMULA-DECL NIL |robinsonunification| NIL) (|robinson_unification_algorithm_fails_iff_non_unifiable| FORMULA-DECL NIL |robinsonunification| NIL) (|unifier_o| FORMULA-DECL NIL |unification| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|termination_lemma| FORMULA-DECL NIL |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (U CONST-DECL "set[Sub[variable, symbol, arity]]" |unification| NIL) (|robinson_unification_algorithm| DEF-DECL "Sub" |robinsonunification| NIL) (|member| CONST-DECL "bool" |sets| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Card| CONST-DECL "nat" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|robinson_unification_algorithm_gives_mg_subs| 0 (|robinson_unification_algorithm_gives_mg_subs-2| "" 3885002195 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (SKOSIMP) (("1" (EXPAND "robinson_unification_algorithm") (("1" (ASSERT) (("1" (EXPAND <=) (("1" (INST?) (("1" (REWRITE "subs_o_identity") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -1 "ext(link_of_frst_diff(x!1, x!2))(x!1)" "ext(link_of_frst_diff(x!1, x!2))(x!2)") (("1" (LEMMA "preserving_generality") (("1" (INST -1 "rho!1" "x!1" "x!2") (("1" (ASSERT) (("1" (SKOSIMP) (("1" (NAME-REPLACE "sig!1" "link_of_frst_diff(x!1, x!2)" :HIDE? NIL) (("1" (INST -3 "theta!1") (("1" (LEMMA "termination_lemma") (("1" (INST -1 "x!1" "x!2") (("1" (ASSERT) (("1" (SPLIT -1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (PROP) (("1" (EXPAND <=) (("1" (SKOSIMP) (("1" (INST 2 "tau!1") (("1" (EXPAND "robinson_unification_algorithm" 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (LEMMA "unifiable_implies_not_fail") (("1" (INST?) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE-ALL-BUT (-5 1)) (("1" (EXPAND* "member" "U") (("1" (EXPAND "unifiable") (("1" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "robinson_unification_algorithm_fails_iff_non_unifiable") (("2" (INST?) (("2" (PROP) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT (-5 -6 1)) (("2" (REPLACES -1) (("2" (EXPAND* "member" "U") (("2" (EXPAND "unifiable") (("2" (INST 1 "theta!1") (("2" (EXPAND "unifier") (("2" (REWRITE "ext_o") (("2" (EXPAND "o") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -2 2) (("3" (HIDE-ALL-BUT (-1 -3 2)) (("3" (REPLACES -1) (("3" (REWRITE "o_ass") NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2 3) (("2" (REPLACES -1) (("2" (EXPAND* "member" U) (("2" (EXPAND "unifier") (("2" (REWRITE "ext_o") (("2" (EXPAND "o") (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "unifiable_implies_not_fail") (("2" (INST?) (("2" (ASSERT) (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE-ALL-BUT (-5 1)) (("2" (EXPAND* "member" "U" "unifiable") (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REWRITE "finite_union") (("1" (REWRITE "vars_of_term_finite") NIL NIL) ("2" (REWRITE "vars_of_term_finite") NIL NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|robinson_unification_algorithm_gives_mg_subs-1| |nil| 3468758236 ("" (MEASURE-INDUCT+ "Card(union(Vars(s), Vars(t)))" ("s" "t")) (("1" (CASE "x!1 = x!2") (("1" (HIDE -2) (("1" (SKOSIMP) (("1" (EXPAND "robinson_unification_algorithm") (("1" (ASSERT) (("1" (EXPAND <=) (("1" (INST?) (("1" (REWRITE SUBS_O_IDENTITY) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (SKOSIMP) (("2" (INST -1 "ext(link_of_frst_diff(x!1, x!2))(x!1)" "ext(link_of_frst_diff(x!1, x!2))(x!2)") (("1" (LEMMA PRESERVING_GENERALITY) (("1" (INST -1 RHO!1 X!1 X!2) (("1" (ASSERT) (("1" (SKOSIMP) (("1" (NAME-REPLACE "sig!1" "link_of_frst_diff(x!1, x!2)" :HIDE? NIL) (("1" (INST -3 THETA!1) (("1" (LEMMA TERMINATION_LEMMA) (("1" (INST -1 X!1 X!2) (("1" (ASSERT) (("1" (SPLIT -1) (("1" (ASSERT) (("1" (HIDE -1) (("1" (PROP) (("1" (EXPAND <=) (("1" (SKOSIMP) (("1" (INST 2 TAU!1) (("1" (EXPAND ROBINSON_UNIFICATION_ALGORITHM 2) (("1" (ASSERT) (("1" (LIFT-IF) (("1" (PROP) (("1" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("1" (INST?) (("1" (ASSERT) (("1" (PROP) (("1" (HIDE-ALL-BUT (-5 1)) (("1" (EXPAND* MEMBER U) (("1" (EXPAND UNIFIABLE) (("1" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA ROBINSON_UNIFICATION_ALGORITHM_FAILS_IFF_NON_UNIFIABLE) (("2" (INST?) (("2" (PROP) (("2" (REPLACE -4 1) (("2" (HIDE-ALL-BUT (-5 -6 1)) (("2" (REPLACES -1) (("2" (EXPAND* MEMBER U) (("2" (EXPAND UNIFIABLE) (("2" (INST 1 THETA!1) (("2" (EXPAND UNIFIER) (("2" (REWRITE EXT_O) (("2" (EXPAND O) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("3" (REPLACE -2 2) (("3" (HIDE-ALL-BUT (-1 -3 2)) (("3" (REPLACES -1) (("3" (REWRITE O_ASS) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2 3) (("2" (REPLACES -1) (("2" (EXPAND* MEMBER U) (("2" (EXPAND UNIFIER) (("2" (REWRITE EXT_O) (("2" (EXPAND O) (("2" (PROPAX) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA UNIFIABLE_IMPLIES_NOT_FAIL) (("2" (INST?) (("2" (ASSERT) (("2" (SPLIT -1) (("1" (PROPAX) NIL NIL) ("2" (HIDE-ALL-BUT (-5 1)) (("2" (EXPAND* MEMBER U UNIFIABLE) (("2" (INST?) NIL NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL) ("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL) ("2" (HIDE -1 2) (("2" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ("3" (HIDE 2) (("3" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL) ("4" (HIDE 2) (("4" (REWRITE FINITE_UNION) (("1" (REWRITE VARS_OF_TERM_FINITE) NIL NIL) ("2" (REWRITE VARS_OF_TERM_FINITE) NIL NIL)) NIL)) NIL)) NIL) ((|vars_of_term_finite| FORMULA-DECL NIL |subterm| NIL) (|finite_union| JUDGEMENT-TCC NIL |finite_sets| NIL) (|subs_o_identity| FORMULA-DECL NIL |substitution| NIL) (|x!2| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (|x!1| SKOLEM-CONST-DECL "term[variable, symbol, arity]" |robinsonunification| NIL) (/= CONST-DECL "boolean" |notequal| NIL) (|ext| DEF-DECL "term" |substitution| NIL) (|link_of_frst_diff| CONST-DECL "Sub" |robinsonunification| NIL) (|unifiable| CONST-DECL "bool" |unification| NIL) (|unifiable_implies_not_fail| FORMULA-DECL NIL |robinsonunification| NIL) (TRUE CONST-DECL "bool" |booleans| NIL) (|unifier| CONST-DECL "bool" |unification| NIL) (O CONST-DECL "T3" |function_props| NIL) (|ext_o| FORMULA-DECL NIL |substitution| NIL) (|robinson_unification_algorithm_fails_iff_non_unifiable| FORMULA-DECL NIL |robinsonunification| NIL) (|o_ass| FORMULA-DECL NIL |substitution| NIL) (|real_lt_is_strict_total_order| NAME-JUDGEMENT "(strict_total_order?[real])" |real_props| NIL) (|termination_lemma| FORMULA-DECL NIL |robinsonunification| NIL) (|preserving_generality| FORMULA-DECL NIL |robinsonunification| NIL) (= CONST-DECL "[T, T -> boolean]" |equalities| NIL) (|robinson_unification_algorithm| DEF-DECL "Sub" |robinsonunification| NIL) (<= CONST-DECL "bool" |unification| NIL) (U CONST-DECL "set[Sub[variable, symbol, arity]]" |unification| NIL) (|member| CONST-DECL "bool" |sets| NIL) (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL) (< CONST-DECL "bool" |reals| NIL) (|Vars| CONST-DECL "set[(V)]" |subterm| NIL) (|union| CONST-DECL "set" |sets| NIL) (|Card| CONST-DECL "nat" |finite_sets| NIL) (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) (|is_finite| CONST-DECL "bool" |finite_sets| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (>= CONST-DECL "bool" |reals| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL) (|well_founded?| CONST-DECL "bool" |orders| NIL) (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)) SHOSTAK)) (|completeness_robinson_unification_algorithm| 0 (|completeness_robinson_unification_algorithm-2| "" 3885002285 ("" (SKEEP) (("" (GROUND) (("1" (EXPAND "mgu") (("1" (REWRITE "robinson_unification_algorithm_gives_unifier") (("1" (ASSERT) (("1" (SKEEP) (("1" (REWRITE "robinson_unification_algorithm_gives_mg_subs") NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA "robinson_unification_algorithm_fails_iff_non_unifiable") (("2" (INST -1 "s" "t") (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) NIL SHOSTAK) (|completeness_robinson_unification_algorithm-1| |nil| 3475672917 ("" (SKEEP) (("" (GROUND) (("1" (EXPAND MGU) (("1" (REWRITE ROBINSON_UNIFICATION_ALGORITHM_GIVES_UNIFIER) (("1" (ASSERT) (("1" (SKEEP) (("1" (REWRITE ROBINSON_UNIFICATION_ALGORITHM_GIVES_MG_SUBS) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (LEMMA ROBINSON_UNIFICATION_ALGORITHM_FAILS_IFF_NON_UNIFIABLE) (("2" (INST -1 S T) (("2" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ((|robinson_unification_algorithm_gives_unifier| FORMULA-DECL NIL |robinsonunification| NIL) (|variable| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|symbol| FORMAL-NONEMPTY-TYPE-DECL NIL |robinsonunification| NIL) (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL) (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL) (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL) (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL) (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL) (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL) (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL) (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL) (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL) (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL) (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL) (>= CONST-DECL "bool" |reals| NIL) (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL) (|arity| FORMAL-CONST-DECL "[symbol -> nat]" |robinsonunification| NIL) (|term| TYPE-DECL NIL |term_adt| NIL) (|Sub| TYPE-EQ-DECL NIL |substitution| NIL) (|Sub?| CONST-DECL "bool" |substitution| NIL) (V CONST-DECL "set[term[variable, symbol, arity]]" |variables_term| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL) (|robinson_unification_algorithm_gives_mg_subs| FORMULA-DECL NIL |robinsonunification| NIL) (|mgu| CONST-DECL "bool" |unification| NIL) (|robinson_unification_algorithm_fails_iff_non_unifiable| FORMULA-DECL NIL |robinsonunification| NIL)) SHOSTAK)))
