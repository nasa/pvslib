(integral_convergence
 (monotone_convergence 0
  (monotone_convergence-5 "" 3792163752
   ("" (skosimp*)
    ((""
      (case-replace
       "(EXISTS f: ae_convergence?(F!1, f)) IFF bounded?(integral o F!1)")
      (("1" (assert)
        (("1" (skolem!)
          (("1" (flatten)
            (("1" (hide -2)
              (("1" (split -1)
                (("1" (expand "ae_increasing?")
                  (("1" (expand "ae_convergence?")
                    (("1" (expand "fullset")
                      (("1" (expand "ae_convergence_in?")
                        (("1" (expand "ae_in?")
                          (("1" (skolem - "E1")
                            (("1" (skolem - "E2")
                              (("1"
                                (typepred "union(E1,E2)")
                                (("1"
                                  (expand "negligible_set?")
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (copy -1)
                                      (("1"
                                        (expand "null_set?" -2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (hide -3 -4)
                                            (("1"
                                              (lemma
                                               "monotone_convergence_scaf"
                                               ("f"
                                                "phi(complement(X!1))*f!1"
                                                "F"
                                                "lambda n: phi(complement(X!1))*F!1(n)"))
                                              (("1"
                                                (case-replace
                                                 "integral o (LAMBDA n: phi(complement(X!1)) * F!1(n))=integral o F!1")
                                                (("1"
                                                  (hide -1)
                                                  (("1"
                                                    (replace -5)
                                                    (("1"
                                                      (case-replace
                                                       "integral(phi(complement(X!1)) * f!1)=integral(f!1)")
                                                      (("1"
                                                        (split -2)
                                                        (("1"
                                                          (flatten)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (expand
                                                             "pointwise_converges_upto?")
                                                            (("2"
                                                              (case-replace
                                                               "pointwise_increasing?(LAMBDA n: phi(complement(X!1)) * F!1(n))")
                                                              (("1"
                                                                (expand
                                                                 "pointwise_convergence?")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (inst
                                                                     -8
                                                                     "x!1")
                                                                    (("1"
                                                                      (expand
                                                                       "complement")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (expand
                                                                           "phi")
                                                                          (("1"
                                                                            (expand
                                                                             "member")
                                                                            (("1"
                                                                              (hide
                                                                               -1
                                                                               -2)
                                                                              (("1"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "union")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "*"
                                                                                         1)
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "E2(x!1)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "convergence?")
                                                                                                (("1"
                                                                                                  (skosimp)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "0")
                                                                                                    (("1"
                                                                                                      (skosimp)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "X!1(x!1)")
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "convergence?")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "0")
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (hide
                                                                   -1
                                                                   -5
                                                                   -7)
                                                                  (("2"
                                                                    (expand
                                                                     "pointwise_increasing?")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (expand
                                                                         "*")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "phi")
                                                                            (("2"
                                                                              (expand
                                                                               "member")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "x!1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "union")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "X!1(x!1)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "increasing?")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!2"
                                                                                                     "y!1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide -1 2)
                                                        (("2"
                                                          (lemma
                                                           "integral_ae_eq"
                                                           ("f"
                                                            "f!1"
                                                            "h"
                                                            "phi(complement(X!1)) * f!1"))
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (expand
                                                                 "ae_eq?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "ae?")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_in?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "X!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "negligible_set?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "X!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (rewrite
                                                               "integrable_is_measurable")
                                                              (("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (rewrite
                                                                   "indefinite_integrable")
                                                                  (("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (rewrite
                                                                       "measurable_complement")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (hide 2)
                                                        (("3"
                                                          (rewrite
                                                           "indefinite_integrable")
                                                          (("3"
                                                            (rewrite
                                                             "measurable_complement")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 2)
                                                  (("2"
                                                    (expand "o ")
                                                    (("2"
                                                      (apply-extensionality
                                                       :hide?
                                                       t)
                                                      (("1"
                                                        (lemma
                                                         "integral_ae_eq"
                                                         ("f"
                                                          "F!1(x!1)"
                                                          "h"
                                                          "phi(complement(X!1)) * F!1(x!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (expand
                                                               "ae_eq?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_ae?")
                                                                (("2"
                                                                  (expand
                                                                   "*"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "complement")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (expand
                                                                           "ae?")
                                                                          (("2"
                                                                            (expand
                                                                             "fullset")
                                                                            (("2"
                                                                              (expand
                                                                               "ae_in?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "negligible_set?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "X!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (rewrite
                                                             "integrable_is_measurable")
                                                            (("2"
                                                              (rewrite
                                                               "indefinite_integrable")
                                                              (("2"
                                                                (rewrite
                                                                 "measurable_complement")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (skosimp)
                                                        (("2"
                                                          (rewrite
                                                           "indefinite_integrable")
                                                          (("2"
                                                            (rewrite
                                                             "measurable_complement")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp)
                                                (("2"
                                                  (rewrite
                                                   "indefinite_integrable")
                                                  (("2"
                                                    (rewrite
                                                     "measurable_complement")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (inst + "f!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (split)
          (("1" (skosimp*)
            (("1" (expand "bounded?")
              (("1" (split)
                (("1" (expand "bounded_above?")
                  (("1" (inst + "integral(f!1)")
                    (("1" (skolem + ("n!1"))
                      (("1" (expand "o ")
                        (("1" (expand "ae_convergence?")
                          (("1" (expand "ae_increasing?")
                            (("1" (expand "ae_convergence_in?")
                              (("1"
                                (expand "fullset")
                                (("1"
                                  (expand "ae_in?")
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (typepred "union(E!1,E!2)")
                                      (("1"
                                        (expand "negligible_set?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (lemma
                                             "integral_ae_le"
                                             ("f1"
                                              "phi(complement(X!1))*F!1(n!1)"
                                              "f2"
                                              "phi(complement(X!1))*f!1"))
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (lemma
                                                 "integral_ae_eq"
                                                 ("f"
                                                  "f!1"
                                                  "h"
                                                  "phi(complement(X!1)) * f!1"))
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replace -2 * rl)
                                                      (("1"
                                                        (lemma
                                                         "integral_ae_eq"
                                                         ("f"
                                                          "F!1(n!1)"
                                                          "h"
                                                          "phi(complement(X!1)) * F!1(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 -5 1))
                                                            (("2"
                                                              (expand
                                                               "ae_eq?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_ae?")
                                                                (("2"
                                                                  (expand
                                                                   "ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "fullset")
                                                                            (("2"
                                                                              (expand
                                                                               "ae_in?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (rewrite
                                                                                   "null_is_negligible")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 -4 -5 2)
                                                    (("2"
                                                      (expand "ae_eq?")
                                                      (("2"
                                                        (expand
                                                         "pointwise_ae?")
                                                        (("2"
                                                          (expand
                                                           "complement")
                                                          (("2"
                                                            (expand
                                                             "phi")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (expand
                                                                 "ae?")
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (expand
                                                                     "ae_in?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "X!1")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "*")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (rewrite
                                                                         "null_is_negligible")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "integrable_is_measurable")
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "ae_le?")
                                                  (("2"
                                                    (expand "*")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand
                                                         "complement")
                                                        (("2"
                                                          (expand
                                                           "phi")
                                                          (("2"
                                                            (expand
                                                             "member")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "union")
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E!1(x!1)")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "E!2(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "metric_convergence_def")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "F!1(n!1)(x!1)-f!1(x!1)>0")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "metric_converges_to")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "F!1(n!1)(x!1) - f!1(x!1)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "n!1+n!2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "n!1"
                                                                                                               "n!1+n!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "ball")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                (("2"
                                                  (expand "null_set?")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("3"
                                                (rewrite
                                                 "measurable_complement")
                                                (("3"
                                                  (expand "null_set?")
                                                  (("3"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "bounded_below?")
                  (("2" (inst + "integral(F!1(0))")
                    (("2" (skolem + ("n!1"))
                      (("2" (expand "o ")
                        (("2" (expand "ae_increasing?")
                          (("2" (skosimp)
                            (("2"
                              (lemma "integral_ae_le"
                               ("f1" "F!1(0)" "f2" "F!1(n!1)"))
                              (("2"
                                (assert)
                                (("2"
                                  (hide 2)
                                  (("2"
                                    (expand "ae_le?")
                                    (("2"
                                      (expand "pointwise_ae?")
                                      (("2"
                                        (expand "ae?")
                                        (("2"
                                          (expand "fullset")
                                          (("2"
                                            (expand "ae_in?")
                                            (("2"
                                              (inst + "E!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "0"
                                                       "n!1")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ae_increasing?")
              (("2" (skosimp)
                (("2" (typepred "E!1")
                  (("2" (expand "negligible_set?")
                    (("2" (skosimp)
                      (("2"
                        (case "forall (F:sequence[nn_integrable]): bounded?(integral o F)&pointwise_increasing?(F)=>EXISTS (f:nn_integrable): ae_convergence?(F, f)")
                        (("1"
                          (inst -
                           "lambda n: phi(complement(X!1))*(F!1(n)-F!1(0))")
                          (("1" (split -1)
                            (("1" (skosimp)
                              (("1"
                                (typepred "f!1")
                                (("1"
                                  (inst
                                   +
                                   "f!1+phi(complement(X!1)) *F!1(0)")
                                  (("1"
                                    (expand "ae_convergence?")
                                    (("1"
                                      (expand "fullset")
                                      (("1"
                                        (expand "ae_convergence_in?")
                                        (("1"
                                          (expand "ae_in?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "union(X!1,E!2)")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "+ ")
                                                        (("1"
                                                          (expand "*")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "phi")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-2
                                                                          3))
                                                                        (("1"
                                                                          (rewrite
                                                                           "metric_convergence_def")
                                                                          (("1"
                                                                            (rewrite
                                                                             "metric_convergence_def")
                                                                            (("1"
                                                                              (expand
                                                                               "metric_converges_to")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "ball")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "negligible_union")
                                                (("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "integrable_add")
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integral_ae_eq"
                                         ("f"
                                          "F!1(0)"
                                          "h"
                                          "*[T](phi[T, S](complement[T](X!1)), F!1(0))"))
                                        (("1"
                                          (split -1)
                                          (("1" (flatten) nil nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (expand "ae_eq?")
                                              (("2"
                                                (expand
                                                 "pointwise_ae?")
                                                (("2"
                                                  (expand "ae?")
                                                  (("2"
                                                    (expand "fullset")
                                                    (("2"
                                                      (expand "ae_in?")
                                                      (("2"
                                                        (inst + "X!1")
                                                        (("1"
                                                          (skosimp)
                                                          (("1"
                                                            (expand
                                                             "*")
                                                            (("1"
                                                              (expand
                                                               "complement")
                                                              (("1"
                                                                (expand
                                                                 "phi")
                                                                (("1"
                                                                  (expand
                                                                   "member")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "null_is_negligible")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (expand "simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (rewrite
                                                   "prod_measurable")
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (expand "bounded?")
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "bounded_above?")
                                      (("1"
                                        (skosimp)
                                        (("1"
                                          (hide -4)
                                          (("1"
                                            (inst
                                             +
                                             "a!1-integral(F!1(0))")
                                            (("1"
                                              (skolem + ("n!1"))
                                              (("1"
                                                (expand "o")
                                                (("1"
                                                  (inst - "n!1")
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(n!1) - F!1(0)"
                                                      "h"
                                                      "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -2
                                                           1
                                                           rl)
                                                          (("1"
                                                            (rewrite
                                                             "integral_diff")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide -3 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "pointwise_ae?")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (expand
                                                                         "subset?")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (expand
                                                                                 "phi")
                                                                                (("1"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "-")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "integrable_diff"
                                                         ("f1"
                                                          "F!1(n!1)"
                                                          "f2"
                                                          "F!1(0)"))
                                                        (("2"
                                                          (lemma
                                                           "integrable_is_measurable"
                                                           ("x"
                                                            "(-[T])(F!1(n!1), F!1(0))"))
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "complement[T](X!1)"))
                                                            (("1"
                                                              (expand
                                                               "simple?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (rewrite
                                                                   "prod_measurable")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "null_set?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "measurable_complement"
                                                                   ("a"
                                                                    "X!1"))
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -3)
                                    (("2"
                                      (expand "bounded_below?")
                                      (("2"
                                        (inst + "0")
                                        (("2"
                                          (skolem + ("n!1"))
                                          (("2"
                                            (expand "o ")
                                            (("2"
                                              (lemma
                                               "integral_nonneg"
                                               ("f"
                                                "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                              (("2"
                                                (split -1)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (expand "*")
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (expand
                                                                 "complement")
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (case-replace
                                                                       "X!1(x!1)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0"
                                                                           "n!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide 2)
                              (("3"
                                (expand "pointwise_increasing?")
                                (("3"
                                  (skosimp)
                                  (("3"
                                    (inst - "x!1")
                                    (("3"
                                      (expand "subset?")
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "member")
                                          (("3"
                                            (expand "increasing?")
                                            (("3"
                                              (skolem + ("i!1" "j!1"))
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "*")
                                                  (("3"
                                                    (expand "-")
                                                    (("3"
                                                      (expand
                                                       "complement")
                                                      (("3"
                                                        (expand "phi")
                                                        (("3"
                                                          (expand
                                                           "member")
                                                          (("3"
                                                            (case-replace
                                                             "X!1(x!1)")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (skosimp)
                              (("2"
                                (split)
                                (("1"
                                  (skolem + "x!1")
                                  (("1"
                                    (expand "*")
                                    (("1"
                                      (expand "complement")
                                      (("1"
                                        (expand "phi")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (inst - "x!1")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst - "x!1")
                                                  (("1"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "0"
                                                           "n!1")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (lemma
                                   "integrable_diff"
                                   ("f1" "F!1(n!1)" "f2" "F!1(0)"))
                                  (("2"
                                    (lemma
                                     "integral_ae_eq"
                                     ("f"
                                      "(-[T])(F!1(n!1), F!1(0))"
                                      "h"
                                      "*[T](phi[T, S](complement[T](X!1)), ((-[T])(F!1(n!1), F!1(0))))"))
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (rewrite
                                           "nn_integrable_is_nn_integrable")
                                          (("1"
                                            (hide-all-but (-5 -7 1))
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "*")
                                                (("1"
                                                  (expand "complement")
                                                  (("1"
                                                    (expand "phi")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (expand "-")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (case-replace
                                                                   "X!1(x!1)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "n!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (expand "ae_eq?")
                                          (("2"
                                            (expand "pointwise_ae?")
                                            (("2"
                                              (expand "ae?")
                                              (("2"
                                                (expand "fullset")
                                                (("2"
                                                  (expand "ae_in?")
                                                  (("2"
                                                    (inst + "X!1")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (expand
                                                               "*")
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (rewrite
                                                       "null_is_negligible")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integrable_is_measurable"
                                         ("x"
                                          "(-[T])(F!1(n!1), F!1(0))"))
                                        (("2"
                                          (rewrite "prod_measurable")
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (expand "simple?")
                                              (("1" (propax) nil nil))
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1)
                          (("2" (skosimp)
                            (("2"
                              (name "H"
                                    "LAMBDA n: LAMBDA (m: nat): {x | F!2(n)(x) >= m+1}")
                              (("2"
                                (name
                                 "HH"
                                 "LAMBDA (m: nat): IUnion(LAMBDA n: H(n)(m))")
                                (("2"
                                  (hide -1 -2)
                                  (("2"
                                    (case
                                     "forall (n,m:nat): measurable_set?(H(n)(m))")
                                    (("1"
                                      (case
                                       "forall (m:nat): measurable_set?(HH(m))")
                                      (("1"
                                        (lemma
                                         "measurable_IIntersection"
                                         ("SS" "HH"))
                                        (("1"
                                          (case
                                           "FORALL x:
                           (NOT IIntersection[nat, T](HH)(x)) IFF
                            (EXISTS (k: posnat): FORALL n: F!2(n)(x) < k)")
                                          (("1"
                                            (case
                                             "forall (n,m:nat): mu_fin?(H(n)(m))")
                                            (("1"
                                              (case
                                               "forall (n,m:nat,x:T): ((m+1)*phi(H(n)(m)))(x) <= F!2(n)(x)")
                                              (("1"
                                                (case
                                                 "forall (n,m:nat): (m+1)*mu(H(n)(m)) <= nn_integral(F!2(n))")
                                                (("1"
                                                  (expand "bounded?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide -9)
                                                      (("1"
                                                        (expand
                                                         "bounded_above?")
                                                        (("1"
                                                          (skolem
                                                           -
                                                           "M")
                                                          (("1"
                                                            (expand
                                                             "o ")
                                                            (("1"
                                                              (case
                                                               "forall (n,m:nat): subset?(H(n)(m),HH(m))")
                                                              (("1"
                                                                (case
                                                                 "forall (n,m:nat): mu(H(n)(m)) <= M/(1+m)")
                                                                (("1"
                                                                  (name-replace
                                                                   "DIVERGENT"
                                                                   "IIntersection[nat, T](HH)")
                                                                  (("1"
                                                                    (case
                                                                     "null_set?(DIVERGENT)")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_bounded?(lambda n: phi(complement(DIVERGENT))*F!2(n))")
                                                                      (("1"
                                                                        (name
                                                                         "SUP"
                                                                         "lambda x: sup(Im(lambda n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                        (("1"
                                                                          (case
                                                                           "forall x: least_upper_bound(<=)(SUP(x),Im(LAMBDA n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                          (("1"
                                                                            (lemma
                                                                             "monotone_convergence_scaf"
                                                                             ("F"
                                                                              "lambda n: phi(complement(DIVERGENT)) * F!2(n)"
                                                                              "f"
                                                                              "SUP"))
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   -4)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "nn_integrable_is_nn_integrable"
                                                                                     ("f"
                                                                                      "SUP"))
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "SUP")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_convergence?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_convergence_in?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "ae_in?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "DIVERGENT")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "*"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complement")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "phi"
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     1
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-3
                                                                                                                        -15
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "pointwise_increasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "metric_convergence_def")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ball")
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "LIMIT"
                                                                                                                                       "SUP(x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Im")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "least_upper_bound")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "LIMIT-r!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "upper_bound")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "z!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         -
                                                                                                                                                         "n!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "z!1>LIMIT-r!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "n!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "increasing?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "F!2(i!1)(x!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "null_is_negligible")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-15
                                                                                          1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "least_upper_bound")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Im")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "upper_bound")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "(phi(complement(DIVERGENT)) * F!2(0))(x!1)")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "phi")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "pointwise_converges_upto?")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "pointwise_increasing?(LAMBDA n: phi(complement(DIVERGENT)) * F!2(n))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "pointwise_convergence?")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -16)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "G"
                                                                                                   "LAMBDA (n_1: nat):
                                                             (phi(complement(DIVERGENT)) * F!2(n_1))(x!1)")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "LIMIT"
                                                                                                     "SUP(x!1)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "metric_convergence_def")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "metric_converges_to")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "least_upper_bound")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "LIMIT-r!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "upper_bound")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "z!1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "z!1>LIMIT-r!1")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Im")
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       -
                                                                                                                                       "n!1")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "n!1")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "G(i!1)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "increasing?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "n!1"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "Im")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "i!1")
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-15
                                                                                        1))
                                                                                      (("2"
                                                                                        (expand
                                                                                         "pointwise_increasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 +
                                                                                                 ("i!1"
                                                                                                  "j!1"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "j!1")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "*")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "phi")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -14
                                                                                  -15
                                                                                  -4
                                                                                  -11))
                                                                                (("3"
                                                                                  (expand
                                                                                   "bounded?")
                                                                                  (("3"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "bounded_above?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "M")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "integral_ae_eq"
                                                                                                 ("f"
                                                                                                  "F!2(n!1)"
                                                                                                  "h"
                                                                                                  "phi(complement(DIVERGENT)) * F!2(n!1)"))
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       *
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2
                                                                                                     -4
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ae_eq?")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "pointwise_ae?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "fullset")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae_in?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "DIVERGENT")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "complement")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "phi")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   "null_is_negligible")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -3
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "indefinite_integrable"
                                                                                                     ("E"
                                                                                                      "complement[T](DIVERGENT)"
                                                                                                      "f"
                                                                                                      "F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "measurable_complement")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_below?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "0")
                                                                                        (("2"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("2"
                                                                                              (hide
                                                                                               -3
                                                                                               -4)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "measurable_complement"
                                                                                                 ("a"
                                                                                                  "DIVERGENT"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "indefinite_integrable"
                                                                                                   ("E"
                                                                                                    "complement[T](DIVERGENT)"
                                                                                                    "f"
                                                                                                    "F!2(n!1)"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "integral_ae_eq"
                                                                                                     ("f"
                                                                                                      "F!2(n!1)"
                                                                                                      "h"
                                                                                                      "phi(complement[T](DIVERGENT)) * F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           *
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "integral_nonneg"
                                                                                                             ("f"
                                                                                                              "F!2(n!1)"))
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae_eq?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "pointwise_ae?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "fullset")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ae_in?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "DIVERGENT")
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "*")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "complement")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "phi")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (rewrite
                                                                                                                       "null_is_negligible")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "indefinite_integrable"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "measurable_complement")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (replace
                                                                                 -1
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -1
                                                                            -13
                                                                            -8))
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise_bounded?")
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "bounded_seq?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "fullset")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Im")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "bounded?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "above_bounded")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "x!2+r!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "upper_bound")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "z!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "ball")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "x!3")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-7
                                                                          -12
                                                                          1))
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise_bounded?")
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_increasing?")
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "complement")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "phi")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "DIVERGENT(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bounded_seq?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "image")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bounded?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "abs")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "bounded_seq?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "image")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "bounded?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0"
                                                                                                             "k!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "ball")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!3")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "null_set?")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "FORALL (n, m,k: nat): n<=k=>subset?(H(n)(m), H(k)(m))")
                                                                            (("1"
                                                                              (hide
                                                                               -4
                                                                               -5)
                                                                              (("1"
                                                                                (lemma
                                                                                 "m_decreasing_convergence"
                                                                                 ("E"
                                                                                  "HH"))
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "decreasing?(HH)")
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "mu_fin?[T, S, m](HH(0))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_converges?"
                                                                                       -3)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "o"
                                                                                         -3)
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "(FORALL (i:nat): m(HH(i))`1)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -9)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "DIVERGENT")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "m(IIntersection(HH))`1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "mu_fin?")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "mH"
                                                                                                       "lambda n: m(HH(n))`2")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "bounded_below_is_convergent"
                                                                                                         ("u"
                                                                                                          "mH"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "convergent(mH)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "forall n: mH(n) <= M / (1 + n)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "mu"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -4
                                                                                                                     -8
                                                                                                                     -13)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "limit_def"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "convergent_downto?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "converges_downto?")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -4
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "convergence")
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "mH"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "0<=M")
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "<="
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "posreal_div_posreal_is_posreal"
                                                                                                                                                 ("px"
                                                                                                                                                  "epsilon!1"
                                                                                                                                                  "py"
                                                                                                                                                  "M"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "archimedean"
                                                                                                                                                   ("px"
                                                                                                                                                    "epsilon!1 / M"))
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "n!1-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "n!1-1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "decreasing?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "n!1-1"
                                                                                                                                                                 "i!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "div_mult_pos_lt2"
                                                                                                                                                                         -1)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 *
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "mH")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "abs")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "m(HH(i!1))`2")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2
                                                                                                                 -3
                                                                                                                 -7
                                                                                                                 -12)
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "convergent_downto?")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "converges_downto_def"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -9
                                                                                                                             "_"
                                                                                                                             "n!1")
                                                                                                                            (("2"
                                                                                                                              (name-replace
                                                                                                                               "RHS"
                                                                                                                               "M / (1 + n!1)")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -15
                                                                                                                                 -14)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "m_increasing_convergence"
                                                                                                                                   ("E"
                                                                                                                                    "lambda n: H(n)(n!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (case-replace
                                                                                                                                     "increasing?(LAMBDA n: H(n)(n!1))")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "o ")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_converges?")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -13
                                                                                                                                           "_"
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13)
                                                                                                                                            (("1"
                                                                                                                                              (case-replace
                                                                                                                                               "convergent(LAMBDA i: m(H(i)(n!1))`2)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mH")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "HH")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -4)
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "UU"
                                                                                                                                                         "LAMBDA (i:nat): m(H(i)(n!1))`2")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "increasing?(UU)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "forall n: UU(n)<=RHS")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                -3
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "increasing_bounded_convergence"
                                                                                                                                                                 ("v1"
                                                                                                                                                                  "UU"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "limit_def"
                                                                                                                                                                     -1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "supfun_is_sup2")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   2
                                                                                                                                                                   -3)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bounded_above?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "RHS")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "UU")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -14
                                                                                                                                                                   "n!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "increasing?")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "UU")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2"
                                                                                                                                                                     "y!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst-cp
                                                                                                                                                                         -17
                                                                                                                                                                         "x!2"
                                                                                                                                                                         "n!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -17
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "n!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -15
                                                                                                                                                                             "y!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "m_monotone"
                                                                                                                                                                               ("a"
                                                                                                                                                                                "H(x!2)(n!1)"
                                                                                                                                                                                "b"
                                                                                                                                                                                "H(y!1)(n!1)"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "x_le")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -17
                                                                                                                                                             "i!1"
                                                                                                                                                             "n!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "measurable_set?")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "bounded_above_is_convergent"
                                                                                                                                                 ("u"
                                                                                                                                                  "LAMBDA n: m(H(n)(n!1))`2"))
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent_upto?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "converges_upto?")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "metric_convergence_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ball")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergent?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "convergence")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "epsilon!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!2")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -11))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "bounded_above?")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "RHS")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "mu")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-11
                                                                                                                                                      -13
                                                                                                                                                      -15
                                                                                                                                                      1
                                                                                                                                                      -1))
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "increasing?")
                                                                                                                                                      (("3"
                                                                                                                                                        (skolem
                                                                                                                                                         +
                                                                                                                                                         ("i!1"
                                                                                                                                                          "j!1"))
                                                                                                                                                        (("3"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1"
                                                                                                                                                             "j!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -
                                                                                                                                                                 "i!1"
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1"
                                                                                                                                                                   "n!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "m_monotone"
                                                                                                                                                                     ("a"
                                                                                                                                                                      "H(i!1)(n!1)"
                                                                                                                                                                      "b"
                                                                                                                                                                      "H(j!1)(n!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -4
                                                                                                                                                                           "j!1")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -15
                                                                                                                                                     "n!2"
                                                                                                                                                     "n!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "measurable_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (skosimp)
                                                                                                                                                (("3"
                                                                                                                                                  (inst
                                                                                                                                                   -15
                                                                                                                                                   "i!1"
                                                                                                                                                   "n!1")
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("3"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-9
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "increasing?")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!2"
                                                                                                                                             "n!1"
                                                                                                                                             "y!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "n!2"
                                                                                                                                       "n!1")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "convergent_downto?")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "converges_downto?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "metric_convergence_def")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "ball")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "convergence")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "x!1")
                                                                                                                                      (("2"
                                                                                                                                        (skosimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "epsilon!1")
                                                                                                                                          (("2"
                                                                                                                                            (skosimp)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "n!1")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "i!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "bounded_below?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "mH")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             -5
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("3"
                                                                                                                (skolem
                                                                                                                 +
                                                                                                                 ("i!1"
                                                                                                                  "j!1"))
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1"
                                                                                                                   "j!1")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (hide-all-but
                                                                                                                           (-3
                                                                                                                            -5
                                                                                                                            -11
                                                                                                                            1))
                                                                                                                          (("3"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "j!1")
                                                                                                                              (("3"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "i!1")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j!1")
                                                                                                                                  (("3"
                                                                                                                                    (lemma
                                                                                                                                     "m_monotone"
                                                                                                                                     ("a"
                                                                                                                                      "HH(j!1)"
                                                                                                                                      "b"
                                                                                                                                      "HH(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_le")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "mH")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "n!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "m_monotone"
                                                                                                       ("a"
                                                                                                        "IIntersection(HH)"
                                                                                                        "b"
                                                                                                        "HH(0)"))
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         -9
                                                                                                         "0")
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (expand
                                                                                                   "measurable_set?")
                                                                                                  (("3"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "decreasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0"
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_monotone"
                                                                                                     ("a"
                                                                                                      "HH(i!1)"
                                                                                                      "b"
                                                                                                      "HH(0)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "mu_fin?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "x_le")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "i!1")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -10
                                                                                               "i!1")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -2
                                                                                         -5)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "HH")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "_"
                                                                                             "0")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "_"
                                                                                               "0")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "_"
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_increasing_convergence"
                                                                                                     ("E"
                                                                                                      "LAMBDA n: H(n)(0)"))
                                                                                                    (("1"
                                                                                                      (case-replace
                                                                                                       "increasing?(LAMBDA n: H(n)(0))")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_converges?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "mu_fin?"
                                                                                                             (-5
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               1
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "mH"
                                                                                                                       "LAMBDA n: m(H(n)(0))`2")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "increasing?(mH)")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "forall n: mH(n)<=M")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              1))
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "bounded_above_is_convergent"
                                                                                                                               ("u"
                                                                                                                                "mH"))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergent_upto?")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "converges_upto?")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "metric_convergence_def")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "metric_converges_to")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "ball")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -2
                                                                                                                                                     -3
                                                                                                                                                     -4)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "convergence")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "epsilon!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   " n!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "bounded_above?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "M")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -4
                                                                                                                               "n!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "mu")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "mH")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2
                                                                                                                           -10
                                                                                                                           -9
                                                                                                                           -5
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "increasing?")
                                                                                                                            (("2"
                                                                                                                              (skolem
                                                                                                                               +
                                                                                                                               ("i!1"
                                                                                                                                "j!1"))
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "i!1"
                                                                                                                                   "j!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "mH")
                                                                                                                                      (("2"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "j!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "j!1")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "m_monotone"
                                                                                                                                                 ("a"
                                                                                                                                                  "H(i!1)(0)"
                                                                                                                                                  "b"
                                                                                                                                                  "H(j!1)(0)"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "x_le")
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "n!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "measurable_set?")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "increasing?")
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             +
                                                                                                             ("i!1"
                                                                                                              "j!1"))
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1"
                                                                                                                 "0"
                                                                                                                 "j!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (inst
                                                                                       -9
                                                                                       "0")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (1
                                                                                      -11))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "decreasing?")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         +
                                                                                         ("i!1"
                                                                                          "j!1"))
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "pointwise_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "HH")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "H")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-11
                                                                                1))
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "H")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n!1"
                                                                                                 "k!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -9
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "n!1"
                                                                       "m!1")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "n!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "div_mult_pos_le2"
                                                                           ("py"
                                                                            "m!1 + 1"
                                                                            "x"
                                                                            "mu(H(n!1)(m!1))"
                                                                            "z"
                                                                            "M"))
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "integral_nn")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "HH")
                                                                  (("2"
                                                                    (expand
                                                                     "IUnion")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1"
                                                     "_")
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "nn_integrable_le"
                                                         ("g"
                                                          "(m!1 + 1) * phi(H(n!1)(m!1))"
                                                          "f"
                                                          "F!2(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "isf_phi"
                                                               ("E"
                                                                "H(n!1)(m!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "isf_scal"
                                                                 ("c"
                                                                  "m!1+1"
                                                                  "i"
                                                                  "phi[T, S](H(n!1)(m!1))"))
                                                                (("1"
                                                                  (name-replace
                                                                   "RHS"
                                                                   "nn_integral(F!2(n!1))")
                                                                  (("1"
                                                                    (rewrite
                                                                     "integral_nn"
                                                                     -4
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (rewrite
                                                                       "integral_scal"
                                                                       -4)
                                                                      (("1"
                                                                        (rewrite
                                                                         "integral_phi"
                                                                         -4)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-2
                                                                          1))
                                                                        (("2"
                                                                          (lemma
                                                                           "nn_isf_is_nn_integrable")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "phi[T, S](H(n!1)(m!1))")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nn_integrable_is_nn_integrable")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nn_integrable_is_integrable")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "phi[T, S](H(n!1)(m!1))")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "nn_isf?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "phi")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (case-replace
                                                                                         "H(n!1)(m!1)(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -8
                                                                 "n!1"
                                                                 "m!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (case-replace
                                                                           "H(n!1)(m!1)(x!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "scal_measurable")
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "H(n!1)(m!1)"))
                                                            (("2"
                                                              (expand
                                                               "simple?")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst
                                                     -2
                                                     "n!1"
                                                     "m!1")
                                                    (("3"
                                                      (inst
                                                       -6
                                                       "n!1"
                                                       "m!1")
                                                      (("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2 -2 -1)
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (expand "phi")
                                                    (("2"
                                                      (expand "H")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (expand "*")
                                                          (("2"
                                                            (case-replace
                                                             "F!2(n!1)(x!1) >= 1 + m!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (1 -4))
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1")
                                                    (("2"
                                                      (lemma
                                                       "integrable_nz_finite"
                                                       ("f"
                                                        "F!2(n!1)"
                                                        "epsilon"
                                                        "m!1+1/2"))
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (case-replace
                                                           "{x: T | abs(F!2(n!1)(x)) >= m!1 + 1 / 2}={x | F!2(n!1)(x) >= m!1 + 1 / 2}")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (lemma
                                                               "m_monotone"
                                                               ("a"
                                                                "{x | F!2(n!1)(x) >= 1 + m!1}"
                                                                "b"
                                                                "{x | F!2(n!1)(x) >= m!1 + 1 / 2}"))
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "x_le")
                                                                  (("1"
                                                                    (expand
                                                                     "mu_fin?")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (expand
                                                               "abs")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "IIntersection")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "HH")
                                                        (("1"
                                                          (expand
                                                           "IUnion")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (inst
                                                               2
                                                               "1+i!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "n!1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (expand
                                                     "IIntersection")
                                                    (("2"
                                                      (expand "HH")
                                                      (("2"
                                                        (expand
                                                         "IUnion")
                                                        (("2"
                                                          (expand "H")
                                                          (("2"
                                                            (typepred
                                                             "k!1")
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "k!1-1")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "HH")
                                            (("2"
                                              (rewrite
                                               "measurable_IUnion")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "n!1" "m!1")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (expand "H")
                                            (("2"
                                              (typepred "F!2(n!1)")
                                              (("2"
                                                (lemma
                                                 "nn_integrable_is_measurable")
                                                (("2"
                                                  (inst - "F!2(n!1)")
                                                  (("2"
                                                    (rewrite
                                                     "measurable_ge")
                                                    (("2"
                                                      (inst - "1+m!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (T formal-type-decl nil integral_convergence nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" integral_convergence nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (m formal-const-decl "measure_type" integral_convergence nil)
    (integrable? const-decl "bool" integral nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (bounded? const-decl "bool" real_fun_preds reals)
    (O const-decl "T3" function_props nil)
    (integral const-decl "real" integral nil)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (fullset const-decl "set" sets nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (monotone_convergence_scaf formula-decl nil
     integral_convergence_scaf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (phi const-decl "nat" measure_space nil)
    (complement const-decl "set" sets nil)
    (F!1 skolem-const-decl "sequence[integrable[T, S, m]]"
     integral_convergence nil)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (convergence? const-decl "bool" topological_convergence topology)
    (real_times_real_is_real application-judgement "real" reals nil)
    (subset? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (TRUE const-decl "bool" booleans nil)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (increasing? const-decl "bool" real_fun_preds reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pointwise_converges_upto? const-decl "bool" pointwise_convergence
     nil)
    (integral_ae_eq formula-decl nil integral nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (X!1 skolem-const-decl "set[T]" integral_convergence nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (ae? const-decl "bool" measure_theory nil)
    (subset_algebra_fullset name-judgement "(S)" integral_convergence
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     integral_convergence nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (indefinite_integrable formula-decl nil integral nil)
    (measurable_complement judgement-tcc nil measure_space_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (null_set? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (union const-decl "set" sets nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (negligible_union application-judgement "negligible"
     integral_convergence nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (bounded_below? const-decl "bool" real_fun_preds reals)
    (bounded_above? const-decl "bool" real_fun_preds reals)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (null_is_negligible judgement-tcc nil measure_theory nil)
    (X!1 skolem-const-decl "set[T]" integral_convergence nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (metric_converges_to const-decl "bool" metric_space_def
     metric_space)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (> const-decl "bool" reals nil)
    (integral_ae_le formula-decl nil integral nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (measurable_ge formula-decl nil measure_space_def nil)
    (nn_integrable_is_measurable judgement-tcc nil nn_integral nil)
    (IIntersection const-decl "set[T]" indexed_sets nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nnrat_plus_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (integrable_nz_finite formula-decl nil integral nil)
    (posrat_plus_nnrat_is_posrat application-judgement "posrat"
     rationals nil)
    (<= const-decl "bool" reals nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (scal_measurable judgement-tcc nil measure_space_def nil)
    (isf_phi judgement-tcc nil isf nil)
    (integral_scal formula-decl nil integral nil)
    (integral_phi formula-decl nil integral nil)
    (nn_isf_is_nn_integrable judgement-tcc nil nn_integral nil)
    (nn_integrable_is_integrable judgement-tcc nil integral nil)
    (nn_isf nonempty-type-eq-decl nil nn_integral nil)
    (m!1 skolem-const-decl "nat" integral_convergence nil)
    (n!1 skolem-const-decl "nat" integral_convergence nil)
    (nn_isf? const-decl "bool" nn_integral nil)
    (isf nonempty-type-eq-decl nil isf nil)
    (isf? const-decl "bool" isf nil)
    (isf_scal judgement-tcc nil isf nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nn_integrable_le formula-decl nil nn_integral nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (integral_nn formula-decl nil integral nil)
    (decreasing? const-decl "bool" fun_preds_partial structures)
    (restrict const-decl "R" restrict nil)
    (total_order_restrict application-judgement "(total_order?[S])"
     restrict_order_props nil)
    (mH skolem-const-decl "[nat -> nnreal]" integral_convergence nil)
    (x_converges? const-decl "bool" extended_nnreal extended_nnreal)
    (limit_def formula-decl nil convergence_sequences analysis)
    (converges_downto? const-decl "bool" convergence_aux metric_space)
    (mH skolem-const-decl "[nat -> nnreal]" integral_convergence nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (archimedean formula-decl nil real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (decreasing? const-decl "bool" real_fun_preds reals)
    (div_mult_pos_lt2 formula-decl nil real_props nil)
    (posreal_div_posreal_is_posreal judgement-tcc nil real_types nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (convergence const-decl "bool" convergence_sequences analysis)
    (convergent_downto? const-decl "bool" convergence_aux metric_space)
    (m_increasing_convergence formula-decl nil measure_props nil)
    (UU skolem-const-decl "[nat -> nnreal]" integral_convergence nil)
    (supfun_is_sup2 formula-decl nil real_fun_supinf analysis)
    (sup const-decl "real" real_fun_supinf analysis)
    (increasing_bounded_convergence formula-decl nil
     convergence_sequences analysis)
    (m_monotone formula-decl nil measure_props nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (HH skolem-const-decl "[nat -> set[T]]" integral_convergence nil)
    (convergent_upto? const-decl "bool" convergence_aux metric_space)
    (converges_upto? const-decl "bool" convergence_aux metric_space)
    (bounded_above_is_convergent formula-decl nil convergence_aux
     metric_space)
    (increasing? const-decl "bool" fun_preds_partial structures)
    (converges_downto_def formula-decl nil convergence_aux
     metric_space)
    (convergent? const-decl "bool" convergence_sequences analysis)
    (bounded_below_is_convergent formula-decl nil convergence_aux
     metric_space)
    (H skolem-const-decl "[nat -> [nat -> [T -> bool]]]"
     integral_convergence nil)
    (m_decreasing_convergence formula-decl nil measure_props nil)
    (pointwise_bounded? const-decl "bool" pointwise_convergence nil)
    (bounded? const-decl "bool" metric_space_def metric_space)
    (image const-decl "set[R]" function_image nil)
    (bounded_seq? const-decl "bool" convergence_aux metric_space)
    (pointwise? const-decl "bool" pointwise_convergence nil)
    (upper_bound const-decl "bool" bound_defs reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (i!1 skolem-const-decl "nat" integral_convergence nil)
    (SUP skolem-const-decl "[x: T ->
   {x_1 |
      least_upper_bound(<=)
                       (x_1,
                        Im(LAMBDA n:
                             (phi(complement(DIVERGENT)) * F!2(n))(x)))}]"
     integral_convergence nil)
    (F!2 skolem-const-decl "sequence[nn_integrable[T, S, m]]"
     integral_convergence nil)
    (DIVERGENT skolem-const-decl "set[T]" integral_convergence nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (i!1 skolem-const-decl "nat" integral_convergence nil)
    (G skolem-const-decl "[nat -> real]" integral_convergence nil)
    (sup const-decl "{x | least_upper_bound(<=)(x, Su)}" bounded_reals
         reals)
    (above_bounded const-decl "bool" bounded_reals reals)
    (nonempty? const-decl "bool" sets nil)
    (sup_set type-eq-decl nil bounded_reals reals)
    (Im const-decl "setof[real]" real_fun_props reals)
    (least_upper_bound const-decl "bool" bound_defs reals)
    (pred type-eq-decl nil defined_types nil)
    (nonempty_image application-judgement "(nonempty?[real])"
     double_nn_sequence extended_nnreal)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nn_integral const-decl "nnreal" nn_integral nil)
    (mu const-decl "nnreal" measure_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (measurable_IIntersection judgement-tcc nil measure_space_def nil)
    (measurable_IUnion judgement-tcc nil measure_space_def nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (integrable_diff application-judgement "integrable"
     integral_convergence nil)
    (X!1 skolem-const-decl "set[T]" integral_convergence nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (integrable_diff judgement-tcc nil integral nil)
    (integral_diff formula-decl nil integral nil)
    (integral_nonneg formula-decl nil integral nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (f!1 skolem-const-decl "nn_integrable[T, S, m]"
     integral_convergence nil)
    (E!2 skolem-const-decl "negligible[T, S, m]" integral_convergence
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (negligible_union judgement-tcc nil measure_theory nil)
    (simple? const-decl "bool" measure_space nil)
    (prod_measurable judgement-tcc nil measure_space nil)
    (phi_is_simple judgement-tcc nil measure_space nil)
    (integrable_add judgement-tcc nil integral nil)
    (nn_integrable_is_nn_integrable formula-decl nil integral nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nn_integrable nonempty-type-eq-decl nil nn_integral nil)
    (nn_integrable? const-decl "bool" nn_integral nil))
   nil)
  (monotone_convergence-4 "" 3792162701
   ("" (skosimp*)
    ((""
      (case-replace
       "(EXISTS f: ae_convergence?(F!1, f)) IFF bounded?(integral o F!1)")
      (("1" (assert)
        (("1" (skolem!)
          (("1" (flatten)
            (("1" (hide -2)
              (("1" (split -1)
                (("1" (expand "ae_increasing?")
                  (("1" (expand "ae_convergence?")
                    (("1" (expand "fullset")
                      (("1" (expand "ae_convergence_in?")
                        (("1" (expand "ae_in?")
                          (("1" (skolem - "E1")
                            (("1" (skolem - "E2")
                              (("1"
                                (typepred "union(E1,E2)")
                                (("1"
                                  (expand "negligible_set?")
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (copy -1)
                                      (("1"
                                        (expand "null_set?" -2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (hide -3 -4)
                                            (("1"
                                              (inst - "X!1")
                                              (("1"
                                                (lemma
                                                 "monotone_convergence_scaf"
                                                 ("f"
                                                  "phi(complement(X!1))*f!1"
                                                  "F"
                                                  "lambda n: phi(complement(X!1))*F!1(n)"))
                                                (("1"
                                                  (case-replace
                                                   "integral o (LAMBDA n: phi(complement(X!1)) * F!1(n))=integral o F!1")
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (replace -5)
                                                      (("1"
                                                        (case-replace
                                                         "integral(phi(complement(X!1)) * f!1)=integral(f!1)")
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (expand
                                                               "pointwise_converges_upto?")
                                                              (("2"
                                                                (case-replace
                                                                 "pointwise_increasing?(LAMBDA n: phi(complement(X!1)) * F!1(n))")
                                                                (("1"
                                                                  (expand
                                                                   "pointwise_convergence?")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -8
                                                                       "x!1")
                                                                      (("1"
                                                                        (expand
                                                                         "complement")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (expand
                                                                             "phi")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (hide
                                                                                 -1
                                                                                 -2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "union")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "*"
                                                                                           1)
                                                                                          (("1"
                                                                                            (case-replace
                                                                                             "E2(x!1)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "convergence?")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "0")
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case-replace
                                                                                                 "X!1(x!1)")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "convergence?")
                                                                                                    (("1"
                                                                                                      (skosimp)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (skosimp)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)))))))))))
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (hide
                                                                     -1
                                                                     -5
                                                                     -7)
                                                                    (("2"
                                                                      (expand
                                                                       "pointwise_increasing?")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (expand
                                                                           "*")
                                                                          (("2"
                                                                            (expand
                                                                             "complement")
                                                                            (("2"
                                                                              (expand
                                                                               "phi")
                                                                              (("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "union")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (case-replace
                                                                                             "X!1(x!1)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil)))
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "increasing?")
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!2"
                                                                                                       "y!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide -1 2)
                                                          (("2"
                                                            (lemma
                                                             "integral_ae_eq"
                                                             ("f"
                                                              "f!1"
                                                              "h"
                                                              "phi(complement(X!1)) * f!1"))
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  nil)))
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (expand
                                                                   "ae_eq?")
                                                                  (("2"
                                                                    (expand
                                                                     "pointwise_ae?")
                                                                    (("2"
                                                                      (expand
                                                                       "*")
                                                                      (("2"
                                                                        (expand
                                                                         "complement")
                                                                        (("2"
                                                                          (expand
                                                                           "phi")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (expand
                                                                               "ae?")
                                                                              (("2"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("2"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "X!1")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))
                                                                                     ("2"
                                                                                      (expand
                                                                                       "negligible_set?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "X!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil)))))))))))))))))))))))))))))))))
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_is_measurable")
                                                                (("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (rewrite
                                                                     "indefinite_integrable")
                                                                    (("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (rewrite
                                                                         "measurable_complement")
                                                                        nil)))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (rewrite
                                                             "indefinite_integrable")
                                                            (("3"
                                                              (rewrite
                                                               "measurable_complement")
                                                              nil)))))))))))
                                                   ("2"
                                                    (hide -1 2)
                                                    (("2"
                                                      (expand "o ")
                                                      (("2"
                                                        (apply-extensionality
                                                         :hide?
                                                         t)
                                                        (("1"
                                                          (lemma
                                                           "integral_ae_eq"
                                                           ("f"
                                                            "F!1(x!1)"
                                                            "h"
                                                            "phi(complement(X!1)) * F!1(x!1)"))
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil)))
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (expand
                                                                 "ae_eq?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "ae?")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_in?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "X!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (expand
                                                                                     "negligible_set?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "X!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (rewrite
                                                               "integrable_is_measurable")
                                                              (("2"
                                                                (rewrite
                                                                 "indefinite_integrable")
                                                                (("2"
                                                                  (rewrite
                                                                   "measurable_complement")
                                                                  nil)))))))))
                                                         ("2"
                                                          (skosimp)
                                                          (("2"
                                                            (rewrite
                                                             "indefinite_integrable")
                                                            (("2"
                                                              (rewrite
                                                               "measurable_complement")
                                                              nil)))))))))))))
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (rewrite
                                                     "indefinite_integrable")
                                                    (("2"
                                                      (rewrite
                                                       "measurable_complement")
                                                      nil)))))))))))))))))))))))))))))))))))))
                 ("2" (inst + "f!1") nil)))))))))))
       ("2" (hide 2)
        (("2" (split)
          (("1" (skosimp*)
            (("1" (expand "bounded?")
              (("1" (split)
                (("1" (expand "bounded_above?")
                  (("1" (inst + "integral(f!1)")
                    (("1" (skolem + ("n!1"))
                      (("1" (expand "o ")
                        (("1" (expand "ae_convergence?")
                          (("1" (expand "ae_increasing?")
                            (("1" (expand "ae_convergence_in?")
                              (("1"
                                (expand "fullset")
                                (("1"
                                  (expand "ae_in?")
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (typepred "union(E!1,E!2)")
                                      (("1"
                                        (expand "negligible_set?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (lemma
                                             "integral_ae_le"
                                             ("f1"
                                              "phi(complement(X!1))*F!1(n!1)"
                                              "f2"
                                              "phi(complement(X!1))*f!1"))
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (lemma
                                                 "integral_ae_eq"
                                                 ("f"
                                                  "f!1"
                                                  "h"
                                                  "phi(complement(X!1)) * f!1"))
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replace -2 * rl)
                                                      (("1"
                                                        (lemma
                                                         "integral_ae_eq"
                                                         ("f"
                                                          "F!1(n!1)"
                                                          "h"
                                                          "phi(complement(X!1)) * F!1(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              nil)))
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 -5 1))
                                                            (("2"
                                                              (expand
                                                               "ae_eq?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_ae?")
                                                                (("2"
                                                                  (expand
                                                                   "ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "fullset")
                                                                            (("2"
                                                                              (expand
                                                                               "ae_in?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil)))
                                                                                 ("2"
                                                                                  (rewrite
                                                                                   "null_is_negligible")
                                                                                  nil)))))))))))))))))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          nil)))))))
                                                   ("2"
                                                    (hide -1 -4 -5 2)
                                                    (("2"
                                                      (expand "ae_eq?")
                                                      (("2"
                                                        (expand
                                                         "pointwise_ae?")
                                                        (("2"
                                                          (expand
                                                           "complement")
                                                          (("2"
                                                            (expand
                                                             "phi")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (expand
                                                                 "ae?")
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (expand
                                                                     "ae_in?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "X!1")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "*")
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (rewrite
                                                                         "null_is_negligible")
                                                                        nil)))))))))))))))))))))))
                                                 ("2"
                                                  (rewrite
                                                   "integrable_is_measurable")
                                                  nil)))
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "ae_le?")
                                                  (("2"
                                                    (expand "*")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand
                                                         "complement")
                                                        (("2"
                                                          (expand
                                                           "phi")
                                                          (("2"
                                                            (expand
                                                             "member")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "union")
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E!1(x!1)")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "E!2(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "metric_convergence_def")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "F!1(n!1)(x!1)-f!1(x!1)>0")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "metric_converges_to")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "F!1(n!1)(x!1) - f!1(x!1)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "n!1+n!2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "n!1"
                                                                                                               "n!1+n!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "ball")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil)))))))))))))))))))))))))
                                             ("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                (("2"
                                                  (expand "null_set?")
                                                  (("2"
                                                    (propax)
                                                    nil)))))))
                                             ("3"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("3"
                                                (rewrite
                                                 "measurable_complement")
                                                (("3"
                                                  (expand "null_set?")
                                                  (("3"
                                                    (propax)
                                                    nil)))))))))))))))))))))))))))))))))))
                 ("2" (expand "bounded_below?")
                  (("2" (inst + "integral(F!1(0))")
                    (("2" (skolem + ("n!1"))
                      (("2" (expand "o ")
                        (("2" (expand "ae_increasing?")
                          (("2" (skosimp)
                            (("2"
                              (lemma "integral_ae_le"
                               ("f1" "F!1(0)" "f2" "F!1(n!1)"))
                              (("2"
                                (assert)
                                (("2"
                                  (hide 2)
                                  (("2"
                                    (expand "ae_le?")
                                    (("2"
                                      (expand "pointwise_ae?")
                                      (("2"
                                        (expand "ae?")
                                        (("2"
                                          (expand "fullset")
                                          (("2"
                                            (expand "ae_in?")
                                            (("2"
                                              (inst + "E!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "0"
                                                       "n!1")
                                                      (("2"
                                                        (assert)
                                                        nil)))))))))))))))))))))))))))))))))))))))))))))
           ("2" (flatten)
            (("2" (expand "ae_increasing?")
              (("2" (skosimp)
                (("2" (typepred "E!1")
                  (("2" (expand "negligible_set?")
                    (("2" (skosimp)
                      (("2"
                        (case "forall (F:sequence[nn_integrable]): bounded?(integral o F)&pointwise_increasing?(F)=>EXISTS (f:nn_integrable): ae_convergence?(F, f)")
                        (("1"
                          (inst -
                           "lambda n: phi(complement(X!1))*(F!1(n)-F!1(0))")
                          (("1" (split -1)
                            (("1" (skosimp)
                              (("1"
                                (typepred "f!1")
                                (("1"
                                  (inst
                                   +
                                   "f!1+phi(complement(X!1)) *F!1(0)")
                                  (("1"
                                    (expand "ae_convergence?")
                                    (("1"
                                      (expand "fullset")
                                      (("1"
                                        (expand "ae_convergence_in?")
                                        (("1"
                                          (expand "ae_in?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "union(X!1,E!2)")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "+ ")
                                                        (("1"
                                                          (expand "*")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "phi")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-2
                                                                          3))
                                                                        (("1"
                                                                          (rewrite
                                                                           "metric_convergence_def")
                                                                          (("1"
                                                                            (rewrite
                                                                             "metric_convergence_def")
                                                                            (("1"
                                                                              (expand
                                                                               "metric_converges_to")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "ball")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil)))))
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil)))))))))))))))))))))))))))))))
                                               ("2"
                                                (rewrite
                                                 "negligible_union")
                                                (("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil)))))))))))))))
                                   ("2"
                                    (rewrite "integrable_add")
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integral_ae_eq"
                                         ("f"
                                          "F!1(0)"
                                          "h"
                                          "*[T](phi[T, S](complement[T](X!1)), F!1(0))"))
                                        (("1"
                                          (split -1)
                                          (("1" (flatten) nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (expand "ae_eq?")
                                              (("2"
                                                (expand
                                                 "pointwise_ae?")
                                                (("2"
                                                  (expand "ae?")
                                                  (("2"
                                                    (expand "fullset")
                                                    (("2"
                                                      (expand "ae_in?")
                                                      (("2"
                                                        (inst + "X!1")
                                                        (("1"
                                                          (skosimp)
                                                          (("1"
                                                            (expand
                                                             "*")
                                                            (("1"
                                                              (expand
                                                               "complement")
                                                              (("1"
                                                                (expand
                                                                 "phi")
                                                                (("1"
                                                                  (expand
                                                                   "member")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "null_is_negligible")
                                                          nil)))))))))))))))))
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (expand "simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (rewrite
                                                   "prod_measurable")
                                                  nil)))))
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil)))))))))))))))))))))))))
                             ("2" (hide 2)
                              (("2"
                                (expand "bounded?")
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "bounded_above?")
                                      (("1"
                                        (skosimp)
                                        (("1"
                                          (hide -4)
                                          (("1"
                                            (inst
                                             +
                                             "a!1-integral(F!1(0))")
                                            (("1"
                                              (skolem + ("n!1"))
                                              (("1"
                                                (expand "o")
                                                (("1"
                                                  (inst - "n!1")
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(n!1) - F!1(0)"
                                                      "h"
                                                      "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -2
                                                           1
                                                           rl)
                                                          (("1"
                                                            (rewrite
                                                             "integral_diff")
                                                            (("1"
                                                              (assert)
                                                              nil)))))))
                                                       ("2"
                                                        (hide -3 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "pointwise_ae?")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (expand
                                                                         "subset?")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (expand
                                                                                 "phi")
                                                                                (("1"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "-")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))))))))))))))))))
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil)))))))))))))))))
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "integrable_diff"
                                                         ("f1"
                                                          "F!1(n!1)"
                                                          "f2"
                                                          "F!1(0)"))
                                                        (("2"
                                                          (lemma
                                                           "integrable_is_measurable"
                                                           ("x"
                                                            "(-[T])(F!1(n!1), F!1(0))"))
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "complement[T](X!1)"))
                                                            (("1"
                                                              (expand
                                                               "simple?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (rewrite
                                                                   "prod_measurable")
                                                                  nil)))))
                                                             ("2"
                                                              (expand
                                                               "null_set?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "measurable_complement"
                                                                   ("a"
                                                                    "X!1"))
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil)))))))))))))))))))))))))))))))))))
                                   ("2"
                                    (hide -3)
                                    (("2"
                                      (expand "bounded_below?")
                                      (("2"
                                        (inst + "0")
                                        (("2"
                                          (skolem + ("n!1"))
                                          (("2"
                                            (expand "o ")
                                            (("2"
                                              (lemma
                                               "integral_nonneg"
                                               ("f"
                                                "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                              (("2"
                                                (split -1)
                                                (("1" (assert) nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (expand "*")
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (expand
                                                                 "complement")
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (case-replace
                                                                       "X!1(x!1)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0"
                                                                           "n!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))
                             ("3" (hide 2)
                              (("3"
                                (expand "pointwise_increasing?")
                                (("3"
                                  (skosimp)
                                  (("3"
                                    (inst - "x!1")
                                    (("3"
                                      (expand "subset?")
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "member")
                                          (("3"
                                            (expand "increasing?")
                                            (("3"
                                              (skolem + ("i!1" "j!1"))
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "*")
                                                  (("3"
                                                    (expand "-")
                                                    (("3"
                                                      (expand
                                                       "complement")
                                                      (("3"
                                                        (expand "phi")
                                                        (("3"
                                                          (expand
                                                           "member")
                                                          (("3"
                                                            (case-replace
                                                             "X!1(x!1)")
                                                            (("1"
                                                              (assert)
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))))))))))))))))))))))))
                           ("2" (hide 2)
                            (("2" (skosimp)
                              (("2"
                                (split)
                                (("1"
                                  (skolem + "x!1")
                                  (("1"
                                    (expand "*")
                                    (("1"
                                      (expand "complement")
                                      (("1"
                                        (expand "phi")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (inst - "x!1")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst - "x!1")
                                                  (("1"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1" (assert) nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "0"
                                                           "n!1")
                                                          (("2"
                                                            (assert)
                                                            nil)))))))))))))))))))))))))))
                                 ("2"
                                  (lemma
                                   "integrable_diff"
                                   ("f1" "F!1(n!1)" "f2" "F!1(0)"))
                                  (("2"
                                    (lemma
                                     "integral_ae_eq"
                                     ("f"
                                      "(-[T])(F!1(n!1), F!1(0))"
                                      "h"
                                      "*[T](phi[T, S](complement[T](X!1)), ((-[T])(F!1(n!1), F!1(0))))"))
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (rewrite
                                           "nn_integrable_is_nn_integrable")
                                          (("1"
                                            (hide-all-but (-5 -7 1))
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "*")
                                                (("1"
                                                  (expand "complement")
                                                  (("1"
                                                    (expand "phi")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (expand "-")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (case-replace
                                                                   "X!1(x!1)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "n!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil)))))))))))))))))))))))))))))))))
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (expand "ae_eq?")
                                          (("2"
                                            (expand "pointwise_ae?")
                                            (("2"
                                              (expand "ae?")
                                              (("2"
                                                (expand "fullset")
                                                (("2"
                                                  (expand "ae_in?")
                                                  (("2"
                                                    (inst + "X!1")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (expand
                                                               "*")
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))))))))))
                                                     ("2"
                                                      (rewrite
                                                       "null_is_negligible")
                                                      nil)))))))))))))))))
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integrable_is_measurable"
                                         ("x"
                                          "(-[T])(F!1(n!1), F!1(0))"))
                                        (("2"
                                          (rewrite "prod_measurable")
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (rewrite
                                               "simple_is_measurable")
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil)))))))))))))))))))))))))))))
                         ("2" (hide-all-but 1)
                          (("2" (skosimp)
                            (("2"
                              (name "H"
                                    "LAMBDA n: LAMBDA (m: nat): {x | F!2(n)(x) >= m+1}")
                              (("2"
                                (name
                                 "HH"
                                 "LAMBDA (m: nat): IUnion(LAMBDA n: H(n)(m))")
                                (("2"
                                  (hide -1 -2)
                                  (("2"
                                    (case
                                     "forall (n,m:nat): measurable_set?(H(n)(m))")
                                    (("1"
                                      (case
                                       "forall (m:nat): measurable_set?(HH(m))")
                                      (("1"
                                        (lemma
                                         "measurable_IIntersection"
                                         ("SS" "HH"))
                                        (("1"
                                          (case
                                           "FORALL x:
                           (NOT IIntersection[nat, T](HH)(x)) IFF
                            (EXISTS (k: posnat): FORALL n: F!2(n)(x) < k)")
                                          (("1"
                                            (case
                                             "forall (n,m:nat): mu_fin?(H(n)(m))")
                                            (("1"
                                              (case
                                               "forall (n,m:nat,x:T): ((m+1)*phi(H(n)(m)))(x) <= F!2(n)(x)")
                                              (("1"
                                                (case
                                                 "forall (n,m:nat): (m+1)*mu(H(n)(m)) <= nn_integral(F!2(n))")
                                                (("1"
                                                  (expand "bounded?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide -9)
                                                      (("1"
                                                        (expand
                                                         "bounded_above?")
                                                        (("1"
                                                          (skolem
                                                           -
                                                           "M")
                                                          (("1"
                                                            (expand
                                                             "o ")
                                                            (("1"
                                                              (case
                                                               "forall (n,m:nat): subset?(H(n)(m),HH(m))")
                                                              (("1"
                                                                (case
                                                                 "forall (n,m:nat): mu(H(n)(m)) <= M/(1+m)")
                                                                (("1"
                                                                  (name-replace
                                                                   "DIVERGENT"
                                                                   "IIntersection[nat, T](HH)")
                                                                  (("1"
                                                                    (case
                                                                     "null_set?(DIVERGENT)")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_bounded?(lambda n: phi(complement(DIVERGENT))*F!2(n))")
                                                                      (("1"
                                                                        (name
                                                                         "SUP"
                                                                         "lambda x: sup(Im(lambda n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                        (("1"
                                                                          (case
                                                                           "forall x: least_upper_bound(<=)(SUP(x),Im(LAMBDA n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                          (("1"
                                                                            (lemma
                                                                             "monotone_convergence_scaf"
                                                                             ("F"
                                                                              "lambda n: phi(complement(DIVERGENT)) * F!2(n)"
                                                                              "f"
                                                                              "SUP"))
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   -4)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "nn_integrable_is_nn_integrable"
                                                                                     ("f"
                                                                                      "SUP"))
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "SUP")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_convergence?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_convergence_in?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "ae_in?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "DIVERGENT")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "*"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complement")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "phi"
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     1
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-3
                                                                                                                        -15
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "pointwise_increasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "metric_convergence_def")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ball")
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "LIMIT"
                                                                                                                                       "SUP(x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Im")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "least_upper_bound")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "LIMIT-r!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "upper_bound")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "z!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         -
                                                                                                                                                         "n!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "z!1>LIMIT-r!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "n!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "increasing?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "F!2(i!1)(x!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil)))
                                                                                                                                                                         ("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil)))))))))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil)))))))))))))))))))))))))))))))
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil)))))))))))))))))))))))))))))
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "null_is_negligible")
                                                                                                    nil)))))))))))))
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-15
                                                                                          1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "least_upper_bound")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Im")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "upper_bound")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "(phi(complement(DIVERGENT)) * F!2(0))(x!1)")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "phi")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil)))))))
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              nil)))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil)))))))
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "pointwise_converges_upto?")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "pointwise_increasing?(LAMBDA n: phi(complement(DIVERGENT)) * F!2(n))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "pointwise_convergence?")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -16)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "G"
                                                                                                   "LAMBDA (n_1: nat):
                                                             (phi(complement(DIVERGENT)) * F!2(n_1))(x!1)")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "LIMIT"
                                                                                                     "SUP(x!1)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "metric_convergence_def")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "metric_converges_to")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "least_upper_bound")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "LIMIT-r!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "upper_bound")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "z!1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "z!1>LIMIT-r!1")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Im")
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       -
                                                                                                                                       "n!1")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "n!1")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "G(i!1)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "increasing?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "n!1"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil)))))))
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "Im")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "i!1")
                                                                                                                                                nil)))))))))))))))
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-15
                                                                                        1))
                                                                                      (("2"
                                                                                        (expand
                                                                                         "pointwise_increasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 +
                                                                                                 ("i!1"
                                                                                                  "j!1"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "j!1")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "*")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "phi")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))))))))
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -14
                                                                                  -15
                                                                                  -4
                                                                                  -11))
                                                                                (("3"
                                                                                  (expand
                                                                                   "bounded?")
                                                                                  (("3"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "bounded_above?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "M")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "integral_ae_eq"
                                                                                                 ("f"
                                                                                                  "F!2(n!1)"
                                                                                                  "h"
                                                                                                  "phi(complement(DIVERGENT)) * F!2(n!1)"))
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       *
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil)))))
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2
                                                                                                     -4
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ae_eq?")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "pointwise_ae?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "fullset")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae_in?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "DIVERGENT")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "complement")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "phi")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   "null_is_negligible")
                                                                                                                  nil)))))))))))))))))
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -3
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "indefinite_integrable"
                                                                                                     ("E"
                                                                                                      "complement[T](DIVERGENT)"
                                                                                                      "f"
                                                                                                      "F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "measurable_complement")
                                                                                                      nil)))))))))))))))))
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_below?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "0")
                                                                                        (("2"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("2"
                                                                                              (hide
                                                                                               -3
                                                                                               -4)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "measurable_complement"
                                                                                                 ("a"
                                                                                                  "DIVERGENT"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "indefinite_integrable"
                                                                                                   ("E"
                                                                                                    "complement[T](DIVERGENT)"
                                                                                                    "f"
                                                                                                    "F!2(n!1)"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "integral_ae_eq"
                                                                                                     ("f"
                                                                                                      "F!2(n!1)"
                                                                                                      "h"
                                                                                                      "phi(complement[T](DIVERGENT)) * F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           *
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "integral_nonneg"
                                                                                                             ("f"
                                                                                                              "F!2(n!1)"))
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae_eq?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "pointwise_ae?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "fullset")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ae_in?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "DIVERGENT")
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "*")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "complement")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "phi")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil)))))))))))
                                                                                                                     ("2"
                                                                                                                      (rewrite
                                                                                                                       "null_is_negligible")
                                                                                                                      nil)))))))))))))))))
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil)))
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))
                                                                             ("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "indefinite_integrable"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "measurable_complement")
                                                                                  nil)))))))
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (replace
                                                                                 -1
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -1
                                                                            -13
                                                                            -8))
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise_bounded?")
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "bounded_seq?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "fullset")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Im")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "bounded?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "above_bounded")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "x!2+r!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "upper_bound")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "z!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "ball")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil)))))
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "x!3")
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-7
                                                                          -12
                                                                          1))
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise_bounded?")
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_increasing?")
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "complement")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "phi")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "DIVERGENT(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bounded_seq?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "image")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bounded?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "abs")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil)))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "bounded_seq?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "image")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "bounded?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0"
                                                                                                             "k!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "ball")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!3")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "null_set?")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "FORALL (n, m,k: nat): n<=k=>subset?(H(n)(m), H(k)(m))")
                                                                            (("1"
                                                                              (hide
                                                                               -4
                                                                               -5)
                                                                              (("1"
                                                                                (lemma
                                                                                 "m_decreasing_convergence"
                                                                                 ("E"
                                                                                  "HH"))
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "decreasing?(HH)")
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "mu_fin?[T, S, m](HH(0))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_converges?"
                                                                                       -3)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "o"
                                                                                         -3)
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "(FORALL (i:nat): m(HH(i))`1)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -9)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "DIVERGENT")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "m(IIntersection(HH))`1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "mu_fin?")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "mH"
                                                                                                       "lambda n: m(HH(n))`2")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "bounded_below_is_convergent"
                                                                                                         ("u"
                                                                                                          "mH"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "convergent(mH)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "forall n: mH(n) <= M / (1 + n)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "mu"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -4
                                                                                                                     -8
                                                                                                                     -13)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "limit_def"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "convergent_downto?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "converges_downto?")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -4
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "convergence")
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "mH"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "0<=M")
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "<="
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "posreal_div_posreal_is_posreal"
                                                                                                                                                 ("px"
                                                                                                                                                  "epsilon!1"
                                                                                                                                                  "py"
                                                                                                                                                  "M"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "archimedean"
                                                                                                                                                   ("px"
                                                                                                                                                    "epsilon!1 / M"))
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "n!1-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "n!1-1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "decreasing?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "n!1-1"
                                                                                                                                                                 "i!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "div_mult_pos_lt2"
                                                                                                                                                                         -1)
                                                                                                                                                                        nil)))))))))))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil)))
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 *
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "mH")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "abs")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "m(HH(i!1))`2")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))))))))))))))))))))))
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil)))))))))))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2
                                                                                                                 -3
                                                                                                                 -7
                                                                                                                 -12)
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "convergent_downto?")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "converges_downto_def"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -9
                                                                                                                             "_"
                                                                                                                             "n!1")
                                                                                                                            (("2"
                                                                                                                              (name-replace
                                                                                                                               "RHS"
                                                                                                                               "M / (1 + n!1)")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -15
                                                                                                                                 -14)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "m_increasing_convergence"
                                                                                                                                   ("E"
                                                                                                                                    "lambda n: H(n)(n!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (case-replace
                                                                                                                                     "increasing?(LAMBDA n: H(n)(n!1))")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "o ")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_converges?")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -13
                                                                                                                                           "_"
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13)
                                                                                                                                            (("1"
                                                                                                                                              (case-replace
                                                                                                                                               "convergent(LAMBDA i: m(H(i)(n!1))`2)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mH")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "HH")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -4)
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "UU"
                                                                                                                                                         "LAMBDA (i:nat): m(H(i)(n!1))`2")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "increasing?(UU)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "forall n: UU(n)<=RHS")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                -3
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "increasing_bounded_convergence"
                                                                                                                                                                 ("v1"
                                                                                                                                                                  "UU"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "limit_def"
                                                                                                                                                                     -1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "supfun_is_sup2")
                                                                                                                                                                          nil)))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil)))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   2
                                                                                                                                                                   -3)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bounded_above?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "RHS")
                                                                                                                                                                      nil)))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "UU")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -14
                                                                                                                                                                   "n!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "increasing?")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "UU")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2"
                                                                                                                                                                     "y!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst-cp
                                                                                                                                                                         -17
                                                                                                                                                                         "x!2"
                                                                                                                                                                         "n!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -17
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "n!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -15
                                                                                                                                                                             "y!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "m_monotone"
                                                                                                                                                                               ("a"
                                                                                                                                                                                "H(x!2)(n!1)"
                                                                                                                                                                                "b"
                                                                                                                                                                                "H(y!1)(n!1)"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "x_le")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil)))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil)))))))))))))))))))))))
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -17
                                                                                                                                                             "i!1"
                                                                                                                                                             "n!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "measurable_set?")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil)))))))))))))))))
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "bounded_above_is_convergent"
                                                                                                                                                 ("u"
                                                                                                                                                  "LAMBDA n: m(H(n)(n!1))`2"))
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent_upto?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "converges_upto?")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "metric_convergence_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ball")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergent?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "convergence")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "epsilon!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!2")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil)))))))))))))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (grind)
                                                                                                                                                                nil)))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -11))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "bounded_above?")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "RHS")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "mu")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil)))))))))))))
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-11
                                                                                                                                                      -13
                                                                                                                                                      -15
                                                                                                                                                      1
                                                                                                                                                      -1))
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "increasing?")
                                                                                                                                                      (("3"
                                                                                                                                                        (skolem
                                                                                                                                                         +
                                                                                                                                                         ("i!1"
                                                                                                                                                          "j!1"))
                                                                                                                                                        (("3"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1"
                                                                                                                                                             "j!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -
                                                                                                                                                                 "i!1"
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1"
                                                                                                                                                                   "n!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "m_monotone"
                                                                                                                                                                     ("a"
                                                                                                                                                                      "H(i!1)(n!1)"
                                                                                                                                                                      "b"
                                                                                                                                                                      "H(j!1)(n!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -4
                                                                                                                                                                           "j!1")
                                                                                                                                                                          nil)))))
                                                                                                                                                                     ("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)))))))))))))))))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -15
                                                                                                                                                     "n!2"
                                                                                                                                                     "n!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "measurable_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil)))))))))
                                                                                                                                               ("3"
                                                                                                                                                (skosimp)
                                                                                                                                                (("3"
                                                                                                                                                  (inst
                                                                                                                                                   -15
                                                                                                                                                   "i!1"
                                                                                                                                                   "n!1")
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("3"
                                                                                                                                                      (propax)
                                                                                                                                                      nil)))))))))))))))))
                                                                                                                                     ("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-9
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "increasing?")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!2"
                                                                                                                                             "n!1"
                                                                                                                                             "y!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil)))))))))))
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "n!2"
                                                                                                                                       "n!1")
                                                                                                                                      nil)))))))))))))))))))))))))
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "convergent_downto?")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "converges_downto?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "metric_convergence_def")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ball")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergence")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "epsilon!1")
                                                                                                                                          (("1"
                                                                                                                                            (skosimp)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "n!1")
                                                                                                                                              (("1"
                                                                                                                                                (skosimp)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (grind)
                                                                                                                                                    nil)))))))))))))))))))))))))))
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil)))))))))))))))))
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "bounded_below?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "mH")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             -5
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("3"
                                                                                                                (skolem
                                                                                                                 +
                                                                                                                 ("i!1"
                                                                                                                  "j!1"))
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1"
                                                                                                                   "j!1")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (hide-all-but
                                                                                                                           (-3
                                                                                                                            -5
                                                                                                                            -11
                                                                                                                            1))
                                                                                                                          (("3"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "j!1")
                                                                                                                              (("3"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "i!1")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j!1")
                                                                                                                                  (("3"
                                                                                                                                    (lemma
                                                                                                                                     "m_monotone"
                                                                                                                                     ("a"
                                                                                                                                      "HH(j!1)"
                                                                                                                                      "b"
                                                                                                                                      "HH(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_le")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "mH")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil)))))))
                                                                                                                                     ("2"
                                                                                                                                      (propax)
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (propax)
                                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "n!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil)))))))))))))
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "m_monotone"
                                                                                                       ("a"
                                                                                                        "IIntersection(HH)"
                                                                                                        "b"
                                                                                                        "HH(0)"))
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)))
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil)))))))))))))
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         -9
                                                                                                         "0")
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil)))))))
                                                                                                 ("3"
                                                                                                  (expand
                                                                                                   "measurable_set?")
                                                                                                  (("3"
                                                                                                    (propax)
                                                                                                    nil)))))))))
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "decreasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0"
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_monotone"
                                                                                                     ("a"
                                                                                                      "HH(i!1)"
                                                                                                      "b"
                                                                                                      "HH(0)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "mu_fin?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "x_le")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "i!1")
                                                                                                      nil)))))))))))
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -10
                                                                                               "i!1")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -2
                                                                                         -5)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "HH")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "_"
                                                                                             "0")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "_"
                                                                                               "0")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "_"
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_increasing_convergence"
                                                                                                     ("E"
                                                                                                      "LAMBDA n: H(n)(0)"))
                                                                                                    (("1"
                                                                                                      (case-replace
                                                                                                       "increasing?(LAMBDA n: H(n)(0))")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_converges?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "mu_fin?"
                                                                                                             (-5
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               1
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "mH"
                                                                                                                       "LAMBDA n: m(H(n)(0))`2")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "increasing?(mH)")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "forall n: mH(n)<=M")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              1))
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "bounded_above_is_convergent"
                                                                                                                               ("u"
                                                                                                                                "mH"))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergent_upto?")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "converges_upto?")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "metric_convergence_def")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "metric_converges_to")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "ball")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -2
                                                                                                                                                     -3
                                                                                                                                                     -4)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "convergence")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "epsilon!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   " n!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil)))))))))))))))))))))))))))))
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil)))))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "bounded_above?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "M")
                                                                                                                                        nil)))))))))))))
                                                                                                                           ("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -4
                                                                                                                               "n!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "mu")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "mH")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil)))))))))))
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2
                                                                                                                           -10
                                                                                                                           -9
                                                                                                                           -5
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "increasing?")
                                                                                                                            (("2"
                                                                                                                              (skolem
                                                                                                                               +
                                                                                                                               ("i!1"
                                                                                                                                "j!1"))
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "i!1"
                                                                                                                                   "j!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "mH")
                                                                                                                                      (("2"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "j!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "j!1")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "m_monotone"
                                                                                                                                                 ("a"
                                                                                                                                                  "H(i!1)(0)"
                                                                                                                                                  "b"
                                                                                                                                                  "H(j!1)(0)"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "x_le")
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil)))))
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                                                       ("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "n!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "measurable_set?")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil)))))))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "increasing?")
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             +
                                                                                                             ("i!1"
                                                                                                              "j!1"))
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1"
                                                                                                                 "0"
                                                                                                                 "j!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil)))))))))))))))))
                                                                                     ("3"
                                                                                      (inst
                                                                                       -9
                                                                                       "0")
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (1
                                                                                      -11))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "decreasing?")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         +
                                                                                         ("i!1"
                                                                                          "j!1"))
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "pointwise_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "HH")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "H")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-11
                                                                                1))
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "H")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n!1"
                                                                                                 "k!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -9
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "n!1"
                                                                       "m!1")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "n!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "div_mult_pos_le2"
                                                                           ("py"
                                                                            "m!1 + 1"
                                                                            "x"
                                                                            "mu(H(n!1)(m!1))"
                                                                            "z"
                                                                            "M"))
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "integral_nn")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "HH")
                                                                  (("2"
                                                                    (expand
                                                                     "IUnion")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil)))))))))))))))))))))))))))
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1"
                                                     "_")
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "nn_integrable_le"
                                                         ("g"
                                                          "(m!1 + 1) * phi(H(n!1)(m!1))"
                                                          "f"
                                                          "F!2(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "isf_phi"
                                                               ("E"
                                                                "H(n!1)(m!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "isf_scal"
                                                                 ("c"
                                                                  "m!1+1"
                                                                  "i"
                                                                  "phi[T, S](H(n!1)(m!1))"))
                                                                (("1"
                                                                  (name-replace
                                                                   "RHS"
                                                                   "nn_integral(F!2(n!1))")
                                                                  (("1"
                                                                    (rewrite
                                                                     "integral_nn"
                                                                     -4
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (rewrite
                                                                       "integral_scal"
                                                                       -4)
                                                                      (("1"
                                                                        (rewrite
                                                                         "integral_phi"
                                                                         -4)
                                                                        (("1"
                                                                          (assert)
                                                                          nil)))
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-2
                                                                          1))
                                                                        (("2"
                                                                          (lemma
                                                                           "nn_isf_is_nn_integrable")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "phi[T, S](H(n!1)(m!1))")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nn_integrable_is_nn_integrable")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nn_integrable_is_integrable")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "phi[T, S](H(n!1)(m!1))")
                                                                                    nil)))))))
                                                                             ("2"
                                                                              (expand
                                                                               "nn_isf?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "phi")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (case-replace
                                                                                         "H(n!1)(m!1)(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))))))))))
                                                                 ("2"
                                                                  (propax)
                                                                  nil)))
                                                               ("2"
                                                                (inst
                                                                 -8
                                                                 "n!1"
                                                                 "m!1")
                                                                nil)))))
                                                           ("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (case-replace
                                                                           "H(n!1)(m!1)(x!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil)))))))))))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "scal_measurable")
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "H(n!1)(m!1)"))
                                                            (("2"
                                                              (rewrite
                                                               "simple_is_measurable")
                                                              nil)))))))))))))
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst
                                                     -2
                                                     "n!1"
                                                     "m!1")
                                                    (("3"
                                                      (inst
                                                       -6
                                                       "n!1"
                                                       "m!1")
                                                      (("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (assert)
                                                          nil)))))))))))
                                               ("2"
                                                (hide 2 -2 -1)
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (expand "phi")
                                                    (("2"
                                                      (expand "H")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (expand "*")
                                                          (("2"
                                                            (case-replace
                                                             "F!2(n!1)(x!1) >= 1 + m!1")
                                                            (("1"
                                                              (assert)
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))))
                                             ("2"
                                              (hide-all-but (1 -4))
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1")
                                                    (("2"
                                                      (lemma
                                                       "integrable_nz_finite"
                                                       ("f"
                                                        "F!2(n!1)"
                                                        "epsilon"
                                                        "m!1+1/2"))
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (case-replace
                                                           "{x: T | abs(F!2(n!1)(x)) >= m!1 + 1 / 2}={x | F!2(n!1)(x) >= m!1 + 1 / 2}")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (lemma
                                                               "m_monotone"
                                                               ("a"
                                                                "{x | F!2(n!1)(x) >= 1 + m!1}"
                                                                "b"
                                                                "{x | F!2(n!1)(x) >= m!1 + 1 / 2}"))
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "x_le")
                                                                  (("1"
                                                                    (expand
                                                                     "mu_fin?")
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))))
                                                               ("2"
                                                                (assert)
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil)))))
                                                           ("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (expand
                                                               "abs")
                                                              (("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("3" (propax) nil)))
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "IIntersection")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "HH")
                                                        (("1"
                                                          (expand
                                                           "IUnion")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (inst
                                                               2
                                                               "1+i!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "n!1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))))))))))))))))
                                                 ("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (expand
                                                     "IIntersection")
                                                    (("2"
                                                      (expand "HH")
                                                      (("2"
                                                        (expand
                                                         "IUnion")
                                                        (("2"
                                                          (expand "H")
                                                          (("2"
                                                            (typepred
                                                             "k!1")
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "k!1-1")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil)))))))))))))))))))))))))))
                                         ("2" (propax) nil)))
                                       ("2"
                                        (hide-all-but (-1 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "HH")
                                            (("2"
                                              (rewrite
                                               "measurable_IUnion")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "n!1" "m!1")
                                                  nil)))))))))))))
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (expand "H")
                                            (("2"
                                              (typepred "F!2(n!1)")
                                              (("2"
                                                (lemma
                                                 "nn_integrable_is_measurable")
                                                (("2"
                                                  (inst - "F!2(n!1)")
                                                  (("2"
                                                    (rewrite
                                                     "measurable_ge")
                                                    (("2"
                                                      (inst - "1+m!1")
                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (monotone_convergence-3 "" 3792161876
   ("" (skosimp*)
    ((""
      (case-replace
       "(EXISTS f: ae_convergence?(F!1, f)) IFF bounded?(integral o F!1)")
      (("1" (assert)
        (("1" (skolem!)
          (("1" (flatten)
            (("1" (hide -2)
              (("1" (split -1)
                (("1" (expand "ae_increasing?")
                  (("1" (expand "ae_convergence?")
                    (("1" (expand "fullset")
                      (("1" (expand "ae_convergence_in?")
                        (("1" (expand "ae_in?")
                          (("1" (skolem - "E1")
                            (("1" (skolem - "E2")
                              (("1"
                                (typepred "union(E1,E2)")
                                (("1"
                                  (expand "negligible_set?")
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (copy -1)
                                      (("1"
                                        (expand "null_set?" -2)
                                        (("1"
                                          (";; (lemma \"null_set_is_measurable\")"
                                           flatten)
                                          (("1"
                                            (hide -3 -4)
                                            (("1"
                                              (inst - "X!1")
                                              (("1"
                                                (lemma
                                                 "monotone_convergence_scaf"
                                                 ("f"
                                                  "phi(complement(X!1))*f!1"
                                                  "F"
                                                  "lambda n: phi(complement(X!1))*F!1(n)"))
                                                (("1"
                                                  (case-replace
                                                   "integral o (LAMBDA n: phi(complement(X!1)) * F!1(n))=integral o F!1")
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (replace -5)
                                                      (("1"
                                                        (case-replace
                                                         "integral(phi(complement(X!1)) * f!1)=integral(f!1)")
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (expand
                                                               "pointwise_converges_upto?")
                                                              (("2"
                                                                (case-replace
                                                                 "pointwise_increasing?(LAMBDA n: phi(complement(X!1)) * F!1(n))")
                                                                (("1"
                                                                  (expand
                                                                   "pointwise_convergence?")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -8
                                                                       "x!1")
                                                                      (("1"
                                                                        (expand
                                                                         "complement")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (expand
                                                                             "phi")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (hide
                                                                                 -1
                                                                                 -2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "union")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "*"
                                                                                           1)
                                                                                          (("1"
                                                                                            (case-replace
                                                                                             "E2(x!1)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "convergence?")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "0")
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case-replace
                                                                                                 "X!1(x!1)")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "convergence?")
                                                                                                    (("1"
                                                                                                      (skosimp)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (skosimp)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)))))))))))
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (hide
                                                                     -1
                                                                     -5
                                                                     -7)
                                                                    (("2"
                                                                      (expand
                                                                       "pointwise_increasing?")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (expand
                                                                           "*")
                                                                          (("2"
                                                                            (expand
                                                                             "complement")
                                                                            (("2"
                                                                              (expand
                                                                               "phi")
                                                                              (("2"
                                                                                (expand
                                                                                 "member")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "union")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (case-replace
                                                                                             "X!1(x!1)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil)))
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "increasing?")
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!2"
                                                                                                       "y!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide -1 2)
                                                          (("2"
                                                            (lemma
                                                             "integral_ae_eq"
                                                             ("f"
                                                              "f!1"
                                                              "h"
                                                              "phi(complement(X!1)) * f!1"))
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  nil)))
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (expand
                                                                   "ae_eq?")
                                                                  (("2"
                                                                    (expand
                                                                     "pointwise_ae?")
                                                                    (("2"
                                                                      (expand
                                                                       "*")
                                                                      (("2"
                                                                        (expand
                                                                         "complement")
                                                                        (("2"
                                                                          (expand
                                                                           "phi")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (expand
                                                                               "ae?")
                                                                              (("2"
                                                                                (expand
                                                                                 "fullset")
                                                                                (("2"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "X!1")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))
                                                                                     ("2"
                                                                                      (expand
                                                                                       "negligible_set?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "X!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil)))))))))))))))))))))))))))))))))
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_is_measurable")
                                                                (("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (rewrite
                                                                     "indefinite_integrable")
                                                                    (("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (rewrite
                                                                         "measurable_complement")
                                                                        nil)))))))))))))))
                                                         ("3"
                                                          (hide 2)
                                                          (("3"
                                                            (rewrite
                                                             "indefinite_integrable")
                                                            (("3"
                                                              (rewrite
                                                               "measurable_complement")
                                                              nil)))))))))))
                                                   ("2"
                                                    (hide -1 2)
                                                    (("2"
                                                      (expand "o ")
                                                      (("2"
                                                        (apply-extensionality
                                                         :hide?
                                                         t)
                                                        (("1"
                                                          (lemma
                                                           "integral_ae_eq"
                                                           ("f"
                                                            "F!1(x!1)"
                                                            "h"
                                                            "phi(complement(X!1)) * F!1(x!1)"))
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil)))
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (expand
                                                                 "ae_eq?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "ae?")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_in?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "X!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (expand
                                                                                     "negligible_set?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "X!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (rewrite
                                                               "integrable_is_measurable")
                                                              (("2"
                                                                (rewrite
                                                                 "indefinite_integrable")
                                                                (("2"
                                                                  (rewrite
                                                                   "measurable_complement")
                                                                  nil)))))))))
                                                         ("2"
                                                          (skosimp)
                                                          (("2"
                                                            (rewrite
                                                             "indefinite_integrable")
                                                            (("2"
                                                              (rewrite
                                                               "measurable_complement")
                                                              nil)))))))))))))
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (rewrite
                                                     "indefinite_integrable")
                                                    (("2"
                                                      (rewrite
                                                       "measurable_complement")
                                                      nil)))))))))))))))))))))))))))))))))))))
                 ("2" (inst + "f!1") nil)))))))))))
       ("2" (hide 2)
        (("2" (split)
          (("1" (skosimp*)
            (("1" (expand "bounded?")
              (("1" (split)
                (("1" (expand "bounded_above?")
                  (("1" (inst + "integral(f!1)")
                    (("1" (skolem + ("n!1"))
                      (("1" (expand "o ")
                        (("1" (expand "ae_convergence?")
                          (("1" (expand "ae_increasing?")
                            (("1" (expand "ae_convergence_in?")
                              (("1"
                                (expand "fullset")
                                (("1"
                                  (expand "ae_in?")
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (typepred "union(E!1,E!2)")
                                      (("1"
                                        (expand "negligible_set?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (lemma
                                             "integral_ae_le"
                                             ("f1"
                                              "phi(complement(X!1))*F!1(n!1)"
                                              "f2"
                                              "phi(complement(X!1))*f!1"))
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (lemma
                                                 "integral_ae_eq"
                                                 ("f"
                                                  "f!1"
                                                  "h"
                                                  "phi(complement(X!1)) * f!1"))
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replace -2 * rl)
                                                      (("1"
                                                        (lemma
                                                         "integral_ae_eq"
                                                         ("f"
                                                          "F!1(n!1)"
                                                          "h"
                                                          "phi(complement(X!1)) * F!1(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              nil)))
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 -5 1))
                                                            (("2"
                                                              (expand
                                                               "ae_eq?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_ae?")
                                                                (("2"
                                                                  (expand
                                                                   "ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "fullset")
                                                                            (("2"
                                                                              (expand
                                                                               "ae_in?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil)))
                                                                                 ("2"
                                                                                  (rewrite
                                                                                   "null_is_negligible")
                                                                                  nil)))))))))))))))))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          nil)))))))
                                                   ("2"
                                                    (hide -1 -4 -5 2)
                                                    (("2"
                                                      (expand "ae_eq?")
                                                      (("2"
                                                        (expand
                                                         "pointwise_ae?")
                                                        (("2"
                                                          (expand
                                                           "complement")
                                                          (("2"
                                                            (expand
                                                             "phi")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (expand
                                                                 "ae?")
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (expand
                                                                     "ae_in?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "X!1")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "*")
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (rewrite
                                                                         "null_is_negligible")
                                                                        nil)))))))))))))))))))))))
                                                 ("2"
                                                  (rewrite
                                                   "integrable_is_measurable")
                                                  nil)))
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "ae_le?")
                                                  (("2"
                                                    (expand "*")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand
                                                         "complement")
                                                        (("2"
                                                          (expand
                                                           "phi")
                                                          (("2"
                                                            (expand
                                                             "member")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "union")
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E!1(x!1)")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "E!2(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "metric_convergence_def")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "F!1(n!1)(x!1)-f!1(x!1)>0")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "metric_converges_to")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "F!1(n!1)(x!1) - f!1(x!1)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "n!1+n!2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "n!1"
                                                                                                               "n!1+n!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "ball")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil)))))))))))))))))))))))))
                                             ("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                (("2"
                                                  (expand "null_set?")
                                                  (("2"
                                                    (propax)
                                                    nil)))))))
                                             ("3"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("3"
                                                (rewrite
                                                 "measurable_complement")
                                                (("3"
                                                  (expand "null_set?")
                                                  (("3"
                                                    (propax)
                                                    nil)))))))))))))))))))))))))))))))))))
                 ("2" (expand "bounded_below?")
                  (("2" (inst + "integral(F!1(0))")
                    (("2" (skolem + ("n!1"))
                      (("2" (expand "o ")
                        (("2" (expand "ae_increasing?")
                          (("2" (skosimp)
                            (("2"
                              (lemma "integral_ae_le"
                               ("f1" "F!1(0)" "f2" "F!1(n!1)"))
                              (("2"
                                (assert)
                                (("2"
                                  (hide 2)
                                  (("2"
                                    (expand "ae_le?")
                                    (("2"
                                      (expand "pointwise_ae?")
                                      (("2"
                                        (expand "ae?")
                                        (("2"
                                          (expand "fullset")
                                          (("2"
                                            (expand "ae_in?")
                                            (("2"
                                              (inst + "E!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "0"
                                                       "n!1")
                                                      (("2"
                                                        (assert)
                                                        nil)))))))))))))))))))))))))))))))))))))))))))))
           ("2" (flatten)
            (("2" (expand "ae_increasing?")
              (("2" (skosimp)
                (("2" (typepred "E!1")
                  (("2" (expand "negligible_set?")
                    (("2" (skosimp)
                      (("2"
                        (case "forall (F:sequence[nn_integrable]): bounded?(integral o F)&pointwise_increasing?(F)=>EXISTS (f:nn_integrable): ae_convergence?(F, f)")
                        (("1"
                          (inst -
                           "lambda n: phi(complement(X!1))*(F!1(n)-F!1(0))")
                          (("1" (split -1)
                            (("1" (skosimp)
                              (("1"
                                (typepred "f!1")
                                (("1"
                                  (inst
                                   +
                                   "f!1+phi(complement(X!1)) *F!1(0)")
                                  (("1"
                                    (expand "ae_convergence?")
                                    (("1"
                                      (expand "fullset")
                                      (("1"
                                        (expand "ae_convergence_in?")
                                        (("1"
                                          (expand "ae_in?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "union(X!1,E!2)")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "+ ")
                                                        (("1"
                                                          (expand "*")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "phi")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-2
                                                                          3))
                                                                        (("1"
                                                                          (rewrite
                                                                           "metric_convergence_def")
                                                                          (("1"
                                                                            (rewrite
                                                                             "metric_convergence_def")
                                                                            (("1"
                                                                              (expand
                                                                               "metric_converges_to")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "ball")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil)))))
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil)))))))))))))))))))))))))))))))
                                               ("2"
                                                (rewrite
                                                 "negligible_union")
                                                (("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil)))))))))))))))
                                   ("2"
                                    (rewrite "integrable_add")
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integral_ae_eq"
                                         ("f"
                                          "F!1(0)"
                                          "h"
                                          "*[T](phi[T, S](complement[T](X!1)), F!1(0))"))
                                        (("1"
                                          (split -1)
                                          (("1" (flatten) nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (expand "ae_eq?")
                                              (("2"
                                                (expand
                                                 "pointwise_ae?")
                                                (("2"
                                                  (expand "ae?")
                                                  (("2"
                                                    (expand "fullset")
                                                    (("2"
                                                      (expand "ae_in?")
                                                      (("2"
                                                        (inst + "X!1")
                                                        (("1"
                                                          (skosimp)
                                                          (("1"
                                                            (expand
                                                             "*")
                                                            (("1"
                                                              (expand
                                                               "complement")
                                                              (("1"
                                                                (expand
                                                                 "phi")
                                                                (("1"
                                                                  (expand
                                                                   "member")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "null_is_negligible")
                                                          nil)))))))))))))))))
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (expand "simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (rewrite
                                                   "prod_measurable")
                                                  nil)))))
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil)))))))))))))))))))))))))
                             ("2" (hide 2)
                              (("2"
                                (expand "bounded?")
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "bounded_above?")
                                      (("1"
                                        (skosimp)
                                        (("1"
                                          (hide -4)
                                          (("1"
                                            (inst
                                             +
                                             "a!1-integral(F!1(0))")
                                            (("1"
                                              (skolem + ("n!1"))
                                              (("1"
                                                (expand "o")
                                                (("1"
                                                  (inst - "n!1")
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(n!1) - F!1(0)"
                                                      "h"
                                                      "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -2
                                                           1
                                                           rl)
                                                          (("1"
                                                            (rewrite
                                                             "integral_diff")
                                                            (("1"
                                                              (assert)
                                                              nil)))))))
                                                       ("2"
                                                        (hide -3 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "pointwise_ae?")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (expand
                                                                         "subset?")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (expand
                                                                                 "phi")
                                                                                (("1"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "-")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)))))))))))))))))))
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil)))))))))))))))))
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "integrable_diff"
                                                         ("f1"
                                                          "F!1(n!1)"
                                                          "f2"
                                                          "F!1(0)"))
                                                        (("2"
                                                          (lemma
                                                           "integrable_is_measurable"
                                                           ("x"
                                                            "(-[T])(F!1(n!1), F!1(0))"))
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "complement[T](X!1)"))
                                                            (("1"
                                                              (expand
                                                               "simple?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (rewrite
                                                                   "prod_measurable")
                                                                  nil)))))
                                                             ("2"
                                                              (expand
                                                               "null_set?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "measurable_complement"
                                                                   ("a"
                                                                    "X!1"))
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil)))))))))))))))))))))))))))))))))))
                                   ("2"
                                    (hide -3)
                                    (("2"
                                      (expand "bounded_below?")
                                      (("2"
                                        (inst + "0")
                                        (("2"
                                          (skolem + ("n!1"))
                                          (("2"
                                            (expand "o ")
                                            (("2"
                                              (lemma
                                               "integral_nonneg"
                                               ("f"
                                                "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                              (("2"
                                                (split -1)
                                                (("1" (assert) nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (expand "*")
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (expand
                                                                 "complement")
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (case-replace
                                                                       "X!1(x!1)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0"
                                                                           "n!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))
                             ("3" (hide 2)
                              (("3"
                                (expand "pointwise_increasing?")
                                (("3"
                                  (skosimp)
                                  (("3"
                                    (inst - "x!1")
                                    (("3"
                                      (expand "subset?")
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "member")
                                          (("3"
                                            (expand "increasing?")
                                            (("3"
                                              (skolem + ("i!1" "j!1"))
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "*")
                                                  (("3"
                                                    (expand "-")
                                                    (("3"
                                                      (expand
                                                       "complement")
                                                      (("3"
                                                        (expand "phi")
                                                        (("3"
                                                          (expand
                                                           "member")
                                                          (("3"
                                                            (case-replace
                                                             "X!1(x!1)")
                                                            (("1"
                                                              (assert)
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))))))))))))))))))))))))
                           ("2" (hide 2)
                            (("2" (skosimp)
                              (("2"
                                (split)
                                (("1"
                                  (skolem + "x!1")
                                  (("1"
                                    (expand "*")
                                    (("1"
                                      (expand "complement")
                                      (("1"
                                        (expand "phi")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (inst - "x!1")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst - "x!1")
                                                  (("1"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1" (assert) nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "0"
                                                           "n!1")
                                                          (("2"
                                                            (assert)
                                                            nil)))))))))))))))))))))))))))
                                 ("2"
                                  (lemma
                                   "integrable_diff"
                                   ("f1" "F!1(n!1)" "f2" "F!1(0)"))
                                  (("2"
                                    (lemma
                                     "integral_ae_eq"
                                     ("f"
                                      "(-[T])(F!1(n!1), F!1(0))"
                                      "h"
                                      "*[T](phi[T, S](complement[T](X!1)), ((-[T])(F!1(n!1), F!1(0))))"))
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (rewrite
                                           "nn_integrable_is_nn_integrable")
                                          (("1"
                                            (hide-all-but (-5 -7 1))
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "*")
                                                (("1"
                                                  (expand "complement")
                                                  (("1"
                                                    (expand "phi")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (expand "-")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (case-replace
                                                                   "X!1(x!1)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "n!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil)))))))))))))))))))))))))))))))))
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (expand "ae_eq?")
                                          (("2"
                                            (expand "pointwise_ae?")
                                            (("2"
                                              (expand "ae?")
                                              (("2"
                                                (expand "fullset")
                                                (("2"
                                                  (expand "ae_in?")
                                                  (("2"
                                                    (inst + "X!1")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (expand
                                                               "*")
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))))))))))))
                                                     ("2"
                                                      (rewrite
                                                       "null_is_negligible")
                                                      nil)))))))))))))))))
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integrable_is_measurable"
                                         ("x"
                                          "(-[T])(F!1(n!1), F!1(0))"))
                                        (("2"
                                          (rewrite "prod_measurable")
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (rewrite
                                               "simple_is_measurable")
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil)))))))))))))))))))))))))))))
                         ("2" (hide-all-but 1)
                          (("2" (skosimp)
                            (("2"
                              (name "H"
                                    "LAMBDA n: LAMBDA (m: nat): {x | F!2(n)(x) >= m+1}")
                              (("2"
                                (name
                                 "HH"
                                 "LAMBDA (m: nat): IUnion(LAMBDA n: H(n)(m))")
                                (("2"
                                  (hide -1 -2)
                                  (("2"
                                    (case
                                     "forall (n,m:nat): measurable_set?(H(n)(m))")
                                    (("1"
                                      (case
                                       "forall (m:nat): measurable_set?(HH(m))")
                                      (("1"
                                        (lemma
                                         "measurable_IIntersection"
                                         ("SS" "HH"))
                                        (("1"
                                          (case
                                           "FORALL x:
                           (NOT IIntersection[nat, T](HH)(x)) IFF
                            (EXISTS (k: posnat): FORALL n: F!2(n)(x) < k)")
                                          (("1"
                                            (case
                                             "forall (n,m:nat): mu_fin?(H(n)(m))")
                                            (("1"
                                              (case
                                               "forall (n,m:nat,x:T): ((m+1)*phi(H(n)(m)))(x) <= F!2(n)(x)")
                                              (("1"
                                                (case
                                                 "forall (n,m:nat): (m+1)*mu(H(n)(m)) <= nn_integral(F!2(n))")
                                                (("1"
                                                  (expand "bounded?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide -9)
                                                      (("1"
                                                        (expand
                                                         "bounded_above?")
                                                        (("1"
                                                          (skolem
                                                           -
                                                           "M")
                                                          (("1"
                                                            (expand
                                                             "o ")
                                                            (("1"
                                                              (case
                                                               "forall (n,m:nat): subset?(H(n)(m),HH(m))")
                                                              (("1"
                                                                (case
                                                                 "forall (n,m:nat): mu(H(n)(m)) <= M/(1+m)")
                                                                (("1"
                                                                  (name-replace
                                                                   "DIVERGENT"
                                                                   "IIntersection[nat, T](HH)")
                                                                  (("1"
                                                                    (case
                                                                     "null_set?(DIVERGENT)")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_bounded?(lambda n: phi(complement(DIVERGENT))*F!2(n))")
                                                                      (("1"
                                                                        (name
                                                                         "SUP"
                                                                         "lambda x: sup(Im(lambda n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                        (("1"
                                                                          (case
                                                                           "forall x: least_upper_bound(<=)(SUP(x),Im(LAMBDA n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                          (("1"
                                                                            (lemma
                                                                             "monotone_convergence_scaf"
                                                                             ("F"
                                                                              "lambda n: phi(complement(DIVERGENT)) * F!2(n)"
                                                                              "f"
                                                                              "SUP"))
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   -4)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "nn_integrable_is_nn_integrable"
                                                                                     ("f"
                                                                                      "SUP"))
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "SUP")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_convergence?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_convergence_in?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "ae_in?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "DIVERGENT")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "*"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complement")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "phi"
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     1
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-3
                                                                                                                        -15
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "pointwise_increasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "metric_convergence_def")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ball")
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "LIMIT"
                                                                                                                                       "SUP(x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Im")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "least_upper_bound")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "LIMIT-r!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "upper_bound")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "z!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         -
                                                                                                                                                         "n!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "z!1>LIMIT-r!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "n!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "increasing?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "F!2(i!1)(x!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil)))
                                                                                                                                                                         ("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil)))))))))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil)))))))))))))))))))))))))))))))
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil)))))))))))))))))))))))))))))
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "null_is_negligible")
                                                                                                    nil)))))))))))))
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-15
                                                                                          1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "least_upper_bound")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Im")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "upper_bound")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "(phi(complement(DIVERGENT)) * F!2(0))(x!1)")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "phi")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil)))))))
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              nil)))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil)))))))
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "pointwise_converges_upto?")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "pointwise_increasing?(LAMBDA n: phi(complement(DIVERGENT)) * F!2(n))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "pointwise_convergence?")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -16)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "G"
                                                                                                   "LAMBDA (n_1: nat):
                                                             (phi(complement(DIVERGENT)) * F!2(n_1))(x!1)")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "LIMIT"
                                                                                                     "SUP(x!1)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "metric_convergence_def")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "metric_converges_to")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "least_upper_bound")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "LIMIT-r!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "upper_bound")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "z!1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "z!1>LIMIT-r!1")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Im")
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       -
                                                                                                                                       "n!1")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "n!1")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "G(i!1)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "increasing?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "n!1"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil)))))))
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "Im")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "i!1")
                                                                                                                                                nil)))))))))))))))
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-15
                                                                                        1))
                                                                                      (("2"
                                                                                        (expand
                                                                                         "pointwise_increasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 +
                                                                                                 ("i!1"
                                                                                                  "j!1"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "j!1")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "*")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "phi")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil)))))))))))))))))))))))))))))
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -14
                                                                                  -15
                                                                                  -4
                                                                                  -11))
                                                                                (("3"
                                                                                  (expand
                                                                                   "bounded?")
                                                                                  (("3"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "bounded_above?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "M")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "integral_ae_eq"
                                                                                                 ("f"
                                                                                                  "F!2(n!1)"
                                                                                                  "h"
                                                                                                  "phi(complement(DIVERGENT)) * F!2(n!1)"))
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       *
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil)))))
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2
                                                                                                     -4
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ae_eq?")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "pointwise_ae?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "fullset")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae_in?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "DIVERGENT")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "complement")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "phi")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   "null_is_negligible")
                                                                                                                  nil)))))))))))))))))
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -3
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "indefinite_integrable"
                                                                                                     ("E"
                                                                                                      "complement[T](DIVERGENT)"
                                                                                                      "f"
                                                                                                      "F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "measurable_complement")
                                                                                                      nil)))))))))))))))))
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_below?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "0")
                                                                                        (("2"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("2"
                                                                                              (hide
                                                                                               -3
                                                                                               -4)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "measurable_complement"
                                                                                                 ("a"
                                                                                                  "DIVERGENT"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "indefinite_integrable"
                                                                                                   ("E"
                                                                                                    "complement[T](DIVERGENT)"
                                                                                                    "f"
                                                                                                    "F!2(n!1)"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "integral_ae_eq"
                                                                                                     ("f"
                                                                                                      "F!2(n!1)"
                                                                                                      "h"
                                                                                                      "phi(complement[T](DIVERGENT)) * F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           *
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "integral_nonneg"
                                                                                                             ("f"
                                                                                                              "F!2(n!1)"))
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae_eq?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "pointwise_ae?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "fullset")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ae_in?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "DIVERGENT")
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "*")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "complement")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "phi")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil)))))))))))
                                                                                                                     ("2"
                                                                                                                      (rewrite
                                                                                                                       "null_is_negligible")
                                                                                                                      nil)))))))))))))))))
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil)))
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))
                                                                             ("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "indefinite_integrable"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "measurable_complement")
                                                                                  nil)))))))
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (replace
                                                                                 -1
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -1
                                                                            -13
                                                                            -8))
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise_bounded?")
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "bounded_seq?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "fullset")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Im")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "bounded?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "above_bounded")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "x!2+r!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "upper_bound")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "z!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "ball")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil)))))
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "x!3")
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-7
                                                                          -12
                                                                          1))
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise_bounded?")
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_increasing?")
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "complement")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "phi")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "DIVERGENT(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bounded_seq?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "image")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bounded?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "abs")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil)))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "bounded_seq?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "image")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "bounded?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0"
                                                                                                             "k!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "ball")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!3")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "null_set?")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "FORALL (n, m,k: nat): n<=k=>subset?(H(n)(m), H(k)(m))")
                                                                            (("1"
                                                                              (hide
                                                                               -4
                                                                               -5)
                                                                              (("1"
                                                                                (lemma
                                                                                 "m_decreasing_convergence"
                                                                                 ("E"
                                                                                  "HH"))
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "decreasing?(HH)")
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "mu_fin?[T, S, m](HH(0))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_converges?"
                                                                                       -3)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "o"
                                                                                         -3)
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "(FORALL (i:nat): m(HH(i))`1)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -9)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "DIVERGENT")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "m(IIntersection(HH))`1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "mu_fin?")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "mH"
                                                                                                       "lambda n: m(HH(n))`2")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "bounded_below_is_convergent"
                                                                                                         ("u"
                                                                                                          "mH"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "convergent(mH)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "forall n: mH(n) <= M / (1 + n)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "mu"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -4
                                                                                                                     -8
                                                                                                                     -13)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "limit_def"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "convergent_downto?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "converges_downto?")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -4
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "convergence")
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "mH"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "0<=M")
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "<="
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "posreal_div_posreal_is_posreal"
                                                                                                                                                 ("px"
                                                                                                                                                  "epsilon!1"
                                                                                                                                                  "py"
                                                                                                                                                  "M"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "archimedean"
                                                                                                                                                   ("px"
                                                                                                                                                    "epsilon!1 / M"))
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "n!1-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "n!1-1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "decreasing?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "n!1-1"
                                                                                                                                                                 "i!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "div_mult_pos_lt2"
                                                                                                                                                                         -1)
                                                                                                                                                                        nil)))))))))))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil)))
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 *
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "mH")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "abs")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "m(HH(i!1))`2")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))))))))))))))))))))))
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil)))))))))))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2
                                                                                                                 -3
                                                                                                                 -7
                                                                                                                 -12)
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "convergent_downto?")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "converges_downto_def"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -9
                                                                                                                             "_"
                                                                                                                             "n!1")
                                                                                                                            (("2"
                                                                                                                              (name-replace
                                                                                                                               "RHS"
                                                                                                                               "M / (1 + n!1)")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -15
                                                                                                                                 -14)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "m_increasing_convergence"
                                                                                                                                   ("E"
                                                                                                                                    "lambda n: H(n)(n!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (case-replace
                                                                                                                                     "increasing?(LAMBDA n: H(n)(n!1))")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "o ")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_converges?")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -13
                                                                                                                                           "_"
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13)
                                                                                                                                            (("1"
                                                                                                                                              (case-replace
                                                                                                                                               "convergent(LAMBDA i: m(H(i)(n!1))`2)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mH")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "HH")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -4)
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "UU"
                                                                                                                                                         "LAMBDA (i:nat): m(H(i)(n!1))`2")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "increasing?(UU)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "forall n: UU(n)<=RHS")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                -3
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "increasing_bounded_convergence"
                                                                                                                                                                 ("v1"
                                                                                                                                                                  "UU"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "limit_def"
                                                                                                                                                                     -1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "supfun_is_sup2")
                                                                                                                                                                          nil)))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil)))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   2
                                                                                                                                                                   -3)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bounded_above?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "RHS")
                                                                                                                                                                      nil)))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "UU")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -14
                                                                                                                                                                   "n!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "increasing?")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "UU")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2"
                                                                                                                                                                     "y!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst-cp
                                                                                                                                                                         -17
                                                                                                                                                                         "x!2"
                                                                                                                                                                         "n!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -17
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "n!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -15
                                                                                                                                                                             "y!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "m_monotone"
                                                                                                                                                                               ("a"
                                                                                                                                                                                "H(x!2)(n!1)"
                                                                                                                                                                                "b"
                                                                                                                                                                                "H(y!1)(n!1)"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "x_le")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil)))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil)))))))))))))))))))))))
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -17
                                                                                                                                                             "i!1"
                                                                                                                                                             "n!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "measurable_set?")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil)))))))))))))))))
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "bounded_above_is_convergent"
                                                                                                                                                 ("u"
                                                                                                                                                  "LAMBDA n: m(H(n)(n!1))`2"))
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent_upto?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "converges_upto?")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "metric_convergence_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ball")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergent?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "convergence")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "epsilon!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!2")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil)))))))))))))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (grind)
                                                                                                                                                                nil)))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -11))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "bounded_above?")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "RHS")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "mu")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil)))))))))))))
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-11
                                                                                                                                                      -13
                                                                                                                                                      -15
                                                                                                                                                      1
                                                                                                                                                      -1))
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "increasing?")
                                                                                                                                                      (("3"
                                                                                                                                                        (skolem
                                                                                                                                                         +
                                                                                                                                                         ("i!1"
                                                                                                                                                          "j!1"))
                                                                                                                                                        (("3"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1"
                                                                                                                                                             "j!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -
                                                                                                                                                                 "i!1"
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1"
                                                                                                                                                                   "n!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "m_monotone"
                                                                                                                                                                     ("a"
                                                                                                                                                                      "H(i!1)(n!1)"
                                                                                                                                                                      "b"
                                                                                                                                                                      "H(j!1)(n!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -4
                                                                                                                                                                           "j!1")
                                                                                                                                                                          nil)))))
                                                                                                                                                                     ("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)))))))))))))))))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -15
                                                                                                                                                     "n!2"
                                                                                                                                                     "n!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "measurable_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil)))))))))
                                                                                                                                               ("3"
                                                                                                                                                (skosimp)
                                                                                                                                                (("3"
                                                                                                                                                  (inst
                                                                                                                                                   -15
                                                                                                                                                   "i!1"
                                                                                                                                                   "n!1")
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("3"
                                                                                                                                                      (propax)
                                                                                                                                                      nil)))))))))))))))))
                                                                                                                                     ("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-9
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "increasing?")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!2"
                                                                                                                                             "n!1"
                                                                                                                                             "y!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil)))))))))))
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "n!2"
                                                                                                                                       "n!1")
                                                                                                                                      nil)))))))))))))))))))))))))
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "convergent_downto?")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "converges_downto?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "metric_convergence_def")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ball")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergence")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "epsilon!1")
                                                                                                                                          (("1"
                                                                                                                                            (skosimp)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "n!1")
                                                                                                                                              (("1"
                                                                                                                                                (skosimp)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (grind)
                                                                                                                                                    nil)))))))))))))))))))))))))))
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil)))))))))))))))))
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "bounded_below?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "mH")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             -5
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("3"
                                                                                                                (skolem
                                                                                                                 +
                                                                                                                 ("i!1"
                                                                                                                  "j!1"))
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1"
                                                                                                                   "j!1")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (hide-all-but
                                                                                                                           (-3
                                                                                                                            -5
                                                                                                                            -11
                                                                                                                            1))
                                                                                                                          (("3"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "j!1")
                                                                                                                              (("3"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "i!1")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j!1")
                                                                                                                                  (("3"
                                                                                                                                    (lemma
                                                                                                                                     "m_monotone"
                                                                                                                                     ("a"
                                                                                                                                      "HH(j!1)"
                                                                                                                                      "b"
                                                                                                                                      "HH(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_le")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "mH")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil)))))))
                                                                                                                                     ("2"
                                                                                                                                      (propax)
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (propax)
                                                                                                                                      nil)))))))))))))))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "n!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil)))))))))))))
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "m_monotone"
                                                                                                       ("a"
                                                                                                        "IIntersection(HH)"
                                                                                                        "b"
                                                                                                        "HH(0)"))
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)))
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil)))))))))))))
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         -9
                                                                                                         "0")
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil)))))))
                                                                                                 ("3"
                                                                                                  (expand
                                                                                                   "measurable_set?")
                                                                                                  (("3"
                                                                                                    (propax)
                                                                                                    nil)))))))))
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "decreasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0"
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_monotone"
                                                                                                     ("a"
                                                                                                      "HH(i!1)"
                                                                                                      "b"
                                                                                                      "HH(0)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "mu_fin?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "x_le")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "i!1")
                                                                                                      nil)))))))))))
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -10
                                                                                               "i!1")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -2
                                                                                         -5)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "HH")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "_"
                                                                                             "0")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "_"
                                                                                               "0")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "_"
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_increasing_convergence"
                                                                                                     ("E"
                                                                                                      "LAMBDA n: H(n)(0)"))
                                                                                                    (("1"
                                                                                                      (case-replace
                                                                                                       "increasing?(LAMBDA n: H(n)(0))")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_converges?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "mu_fin?"
                                                                                                             (-5
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               1
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "mH"
                                                                                                                       "LAMBDA n: m(H(n)(0))`2")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "increasing?(mH)")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "forall n: mH(n)<=M")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              1))
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "bounded_above_is_convergent"
                                                                                                                               ("u"
                                                                                                                                "mH"))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergent_upto?")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "converges_upto?")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "metric_convergence_def")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "metric_converges_to")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "ball")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -2
                                                                                                                                                     -3
                                                                                                                                                     -4)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "convergence")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "epsilon!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   " n!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil)))))))))))))))))))))))))))))
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil)))))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "bounded_above?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "M")
                                                                                                                                        nil)))))))))))))
                                                                                                                           ("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -4
                                                                                                                               "n!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "mu")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "mH")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil)))))))))))
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2
                                                                                                                           -10
                                                                                                                           -9
                                                                                                                           -5
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "increasing?")
                                                                                                                            (("2"
                                                                                                                              (skolem
                                                                                                                               +
                                                                                                                               ("i!1"
                                                                                                                                "j!1"))
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "i!1"
                                                                                                                                   "j!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "mH")
                                                                                                                                      (("2"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "j!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "j!1")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "m_monotone"
                                                                                                                                                 ("a"
                                                                                                                                                  "H(i!1)(0)"
                                                                                                                                                  "b"
                                                                                                                                                  "H(j!1)(0)"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "x_le")
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil)))))
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                                                       ("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "n!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "measurable_set?")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil)))))))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "increasing?")
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             +
                                                                                                             ("i!1"
                                                                                                              "j!1"))
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1"
                                                                                                                 "0"
                                                                                                                 "j!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil)))))))))))))))))
                                                                                     ("3"
                                                                                      (inst
                                                                                       -9
                                                                                       "0")
                                                                                      nil)))
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (1
                                                                                      -11))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "decreasing?")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         +
                                                                                         ("i!1"
                                                                                          "j!1"))
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "pointwise_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "HH")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "H")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-11
                                                                                1))
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "H")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n!1"
                                                                                                 "k!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -9
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "n!1"
                                                                       "m!1")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "n!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "div_mult_pos_le2"
                                                                           ("py"
                                                                            "m!1 + 1"
                                                                            "x"
                                                                            "mu(H(n!1)(m!1))"
                                                                            "z"
                                                                            "M"))
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "integral_nn")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "HH")
                                                                  (("2"
                                                                    (expand
                                                                     "IUnion")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil)))))))))))))))))))))))))))
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1"
                                                     "_")
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "nn_integrable_le"
                                                         ("g"
                                                          "(m!1 + 1) * phi(H(n!1)(m!1))"
                                                          "f"
                                                          "F!2(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "isf_phi"
                                                               ("E"
                                                                "H(n!1)(m!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "isf_scal"
                                                                 ("c"
                                                                  "m!1+1"
                                                                  "i"
                                                                  "phi[T, S](H(n!1)(m!1))"))
                                                                (("1"
                                                                  (name-replace
                                                                   "RHS"
                                                                   "nn_integral(F!2(n!1))")
                                                                  (("1"
                                                                    (rewrite
                                                                     "integral_nn"
                                                                     -4
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (rewrite
                                                                       "integral_scal"
                                                                       -4)
                                                                      (("1"
                                                                        (rewrite
                                                                         "integral_phi"
                                                                         -4)
                                                                        (("1"
                                                                          (assert)
                                                                          nil)))
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-2
                                                                          1))
                                                                        (("2"
                                                                          (lemma
                                                                           "nn_isf_is_nn_integrable")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "phi[T, S](H(n!1)(m!1))")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nn_integrable_is_nn_integrable")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nn_integrable_is_integrable")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "phi[T, S](H(n!1)(m!1))")
                                                                                    nil)))))))
                                                                             ("2"
                                                                              (expand
                                                                               "nn_isf?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "phi")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (case-replace
                                                                                         "H(n!1)(m!1)(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))))))))))
                                                                 ("2"
                                                                  (propax)
                                                                  nil)))
                                                               ("2"
                                                                (inst
                                                                 -8
                                                                 "n!1"
                                                                 "m!1")
                                                                nil)))))
                                                           ("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (case-replace
                                                                           "H(n!1)(m!1)(x!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil)))))))))))))))))))
                                                         ("2"
                                                          (rewrite
                                                           "scal_measurable")
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "H(n!1)(m!1)"))
                                                            (("2"
                                                              (rewrite
                                                               "simple_is_measurable")
                                                              nil)))))))))))))
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst
                                                     -2
                                                     "n!1"
                                                     "m!1")
                                                    (("3"
                                                      (inst
                                                       -6
                                                       "n!1"
                                                       "m!1")
                                                      (("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (assert)
                                                          nil)))))))))))
                                               ("2"
                                                (hide 2 -2 -1)
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (expand "phi")
                                                    (("2"
                                                      (expand "H")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (expand "*")
                                                          (("2"
                                                            (case-replace
                                                             "F!2(n!1)(x!1) >= 1 + m!1")
                                                            (("1"
                                                              (assert)
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil)))))))))))))))))
                                             ("2"
                                              (hide-all-but (1 -4))
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1")
                                                    (("2"
                                                      (lemma
                                                       "integrable_nz_finite"
                                                       ("f"
                                                        "F!2(n!1)"
                                                        "epsilon"
                                                        "m!1+1/2"))
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (case-replace
                                                           "{x: T | abs(F!2(n!1)(x)) >= m!1 + 1 / 2}={x | F!2(n!1)(x) >= m!1 + 1 / 2}")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (lemma
                                                               "m_monotone"
                                                               ("a"
                                                                "{x | F!2(n!1)(x) >= 1 + m!1}"
                                                                "b"
                                                                "{x | F!2(n!1)(x) >= m!1 + 1 / 2}"))
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "x_le")
                                                                  (("1"
                                                                    (expand
                                                                     "mu_fin?")
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))))
                                                               ("2"
                                                                (assert)
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil)))))
                                                           ("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (expand
                                                               "abs")
                                                              (("2"
                                                                (propax)
                                                                nil)))))))))))))))))))
                                             ("3" (propax) nil)))
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "IIntersection")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "HH")
                                                        (("1"
                                                          (expand
                                                           "IUnion")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (inst
                                                               2
                                                               "1+i!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "n!1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))))))))))))))))
                                                 ("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (expand
                                                     "IIntersection")
                                                    (("2"
                                                      (expand "HH")
                                                      (("2"
                                                        (expand
                                                         "IUnion")
                                                        (("2"
                                                          (expand "H")
                                                          (("2"
                                                            (typepred
                                                             "k!1")
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "k!1-1")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil)))))))))))))))))))))))))))
                                         ("2" (propax) nil)))
                                       ("2"
                                        (hide-all-but (-1 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "HH")
                                            (("2"
                                              (rewrite
                                               "measurable_IUnion")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "n!1" "m!1")
                                                  nil)))))))))))))
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (expand "H")
                                            (("2"
                                              (typepred "F!2(n!1)")
                                              (("2"
                                                (lemma
                                                 "nn_integrable_is_measurable")
                                                (("2"
                                                  (inst - "F!2(n!1)")
                                                  (("2"
                                                    (rewrite
                                                     "measurable_ge")
                                                    (("2"
                                                      (inst - "1+m!1")
                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (monotone_convergence-2 "" 3758904494
   ("" (skosimp*)
    ((""
      (case-replace
       "(EXISTS f: ae_convergence?(F!1, f)) IFF bounded?(integral o F!1)")
      (("1" (assert)
        (("1" (skolem!)
          (("1" (flatten)
            (("1" (hide -2)
              (("1" (split -1)
                (("1" (expand "ae_increasing?")
                  (("1" (expand "ae_convergence?")
                    (("1" (expand "fullset")
                      (("1" (expand "ae_convergence_in?")
                        (("1" (expand "ae_in?")
                          (("1" (skolem - "E1")
                            (("1" (skolem - "E2")
                              (("1"
                                (typepred "union(E1,E2)")
                                (("1"
                                  (expand "negligible_set?")
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (lemma "null_set_is_measurable")
                                      (("1"
                                        (inst - "X!1")
                                        (("1"
                                          (lemma
                                           "monotone_convergence_scaf"
                                           ("f"
                                            "phi(complement(X!1))*f!1"
                                            "F"
                                            "lambda n: phi(complement(X!1))*F!1(n)"))
                                          (("1"
                                            (case-replace
                                             "integral o (LAMBDA n: phi(complement(X!1)) * F!1(n))=integral o F!1")
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (replace -5)
                                                (("1"
                                                  (case-replace
                                                   "integral(phi(complement(X!1)) * f!1)=integral(f!1)")
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand
                                                         "pointwise_converges_upto?")
                                                        (("2"
                                                          (case-replace
                                                           "pointwise_increasing?(LAMBDA n: phi(complement(X!1)) * F!1(n))")
                                                          (("1"
                                                            (expand
                                                             "pointwise_convergence?")
                                                            (("1"
                                                              (skosimp)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "x!1")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "phi")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (hide
                                                                           -1
                                                                           -2)
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "union")
                                                                              (("1"
                                                                                (expand
                                                                                 "member")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*"
                                                                                     1)
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E2(x!1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "convergence?")
                                                                                            (("1"
                                                                                              (skosimp)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("1"
                                                                                                  (skosimp)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "X!1(x!1)")
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "convergence?")
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide
                                                               -1
                                                               -5
                                                               -7)
                                                              (("2"
                                                                (expand
                                                                 "pointwise_increasing?")
                                                                (("2"
                                                                  (skosimp)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("2"
                                                                              (expand
                                                                               "subset?")
                                                                              (("2"
                                                                                (expand
                                                                                 "union")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (case-replace
                                                                                       "X!1(x!1)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "increasing?")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "increasing?")
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!2"
                                                                                                 "y!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 2)
                                                    (("2"
                                                      (lemma
                                                       "integral_ae_eq"
                                                       ("f"
                                                        "f!1"
                                                        "h"
                                                        "phi(complement(X!1)) * f!1"))
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (expand
                                                             "ae_eq?")
                                                            (("2"
                                                              (expand
                                                               "pointwise_ae?")
                                                              (("2"
                                                                (expand
                                                                 "*")
                                                                (("2"
                                                                  (expand
                                                                   "complement")
                                                                  (("2"
                                                                    (expand
                                                                     "phi")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (expand
                                                                         "ae?")
                                                                        (("2"
                                                                          (expand
                                                                           "fullset")
                                                                          (("2"
                                                                            (expand
                                                                             "ae_in?")
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "X!1")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "negligible_set?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "X!1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          (("2"
                                                            (hide 2)
                                                            (("2"
                                                              (rewrite
                                                               "indefinite_integrable")
                                                              (("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (rewrite
                                                                   "measurable_complement")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (hide 2)
                                                    (("3"
                                                      (rewrite
                                                       "indefinite_integrable")
                                                      (("3"
                                                        (rewrite
                                                         "measurable_complement")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 2)
                                              (("2"
                                                (expand "o ")
                                                (("2"
                                                  (apply-extensionality
                                                   :hide?
                                                   t)
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(x!1)"
                                                      "h"
                                                      "phi(complement(X!1)) * F!1(x!1)"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "pointwise_ae?")
                                                            (("2"
                                                              (expand
                                                               "*"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "complement")
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (expand
                                                                       "ae?")
                                                                      (("2"
                                                                        (expand
                                                                         "fullset")
                                                                        (("2"
                                                                          (expand
                                                                           "ae_in?")
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "X!1")
                                                                            (("1"
                                                                              (skosimp)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "negligible_set?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (rewrite
                                                         "integrable_is_measurable")
                                                        (("2"
                                                          (rewrite
                                                           "indefinite_integrable")
                                                          (("2"
                                                            (rewrite
                                                             "measurable_complement")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (skosimp)
                                                    (("2"
                                                      (rewrite
                                                       "indefinite_integrable")
                                                      (("2"
                                                        (rewrite
                                                         "measurable_complement")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skosimp)
                                            (("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (inst + "f!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (split)
          (("1" (skosimp*)
            (("1" (expand "bounded?")
              (("1" (split)
                (("1" (expand "bounded_above?")
                  (("1" (inst + "integral(f!1)")
                    (("1" (skolem + ("n!1"))
                      (("1" (expand "o ")
                        (("1" (expand "ae_convergence?")
                          (("1" (expand "ae_increasing?")
                            (("1" (expand "ae_convergence_in?")
                              (("1"
                                (expand "fullset")
                                (("1"
                                  (expand "ae_in?")
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (typepred "union(E!1,E!2)")
                                      (("1"
                                        (expand "negligible_set?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (lemma
                                             "integral_ae_le"
                                             ("f1"
                                              "phi(complement(X!1))*F!1(n!1)"
                                              "f2"
                                              "phi(complement(X!1))*f!1"))
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (lemma
                                                 "integral_ae_eq"
                                                 ("f"
                                                  "f!1"
                                                  "h"
                                                  "phi(complement(X!1)) * f!1"))
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replace -2 * rl)
                                                      (("1"
                                                        (lemma
                                                         "integral_ae_eq"
                                                         ("f"
                                                          "F!1(n!1)"
                                                          "h"
                                                          "phi(complement(X!1)) * F!1(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 -5 1))
                                                            (("2"
                                                              (expand
                                                               "ae_eq?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_ae?")
                                                                (("2"
                                                                  (expand
                                                                   "ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "fullset")
                                                                            (("2"
                                                                              (expand
                                                                               "ae_in?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (rewrite
                                                                                   "null_is_negligible")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 -4 -5 2)
                                                    (("2"
                                                      (expand "ae_eq?")
                                                      (("2"
                                                        (expand
                                                         "pointwise_ae?")
                                                        (("2"
                                                          (expand
                                                           "complement")
                                                          (("2"
                                                            (expand
                                                             "phi")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (expand
                                                                 "ae?")
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (expand
                                                                     "ae_in?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "X!1")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "*")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (rewrite
                                                                         "null_is_negligible")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "integrable_is_measurable")
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "ae_le?")
                                                  (("2"
                                                    (expand "*")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand
                                                         "complement")
                                                        (("2"
                                                          (expand
                                                           "phi")
                                                          (("2"
                                                            (expand
                                                             "member")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "union")
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E!1(x!1)")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "E!2(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "metric_convergence_def")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "F!1(n!1)(x!1)-f!1(x!1)>0")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "metric_converges_to")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "F!1(n!1)(x!1) - f!1(x!1)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "n!1+n!2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "n!1"
                                                                                                               "n!1+n!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "ball")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                (("2"
                                                  (expand "null_set?")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("3"
                                                (rewrite
                                                 "measurable_complement")
                                                (("3"
                                                  (expand "null_set?")
                                                  (("3"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "bounded_below?")
                  (("2" (inst + "integral(F!1(0))")
                    (("2" (skolem + ("n!1"))
                      (("2" (expand "o ")
                        (("2" (expand "ae_increasing?")
                          (("2" (skosimp)
                            (("2"
                              (lemma "integral_ae_le"
                               ("f1" "F!1(0)" "f2" "F!1(n!1)"))
                              (("2"
                                (assert)
                                (("2"
                                  (hide 2)
                                  (("2"
                                    (expand "ae_le?")
                                    (("2"
                                      (expand "pointwise_ae?")
                                      (("2"
                                        (expand "ae?")
                                        (("2"
                                          (expand "fullset")
                                          (("2"
                                            (expand "ae_in?")
                                            (("2"
                                              (inst + "E!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "0"
                                                       "n!1")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ae_increasing?")
              (("2" (skosimp)
                (("2" (typepred "E!1")
                  (("2" (expand "negligible_set?")
                    (("2" (skosimp)
                      (("2"
                        (case "forall (F:sequence[nn_integrable]): bounded?(integral o F)&pointwise_increasing?(F)=>EXISTS (f:nn_integrable): ae_convergence?(F, f)")
                        (("1"
                          (inst -
                           "lambda n: phi(complement(X!1))*(F!1(n)-F!1(0))")
                          (("1" (split -1)
                            (("1" (skosimp)
                              (("1"
                                (typepred "f!1")
                                (("1"
                                  (inst
                                   +
                                   "f!1+phi(complement(X!1)) *F!1(0)")
                                  (("1"
                                    (expand "ae_convergence?")
                                    (("1"
                                      (expand "fullset")
                                      (("1"
                                        (expand "ae_convergence_in?")
                                        (("1"
                                          (expand "ae_in?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "union(X!1,E!2)")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "+ ")
                                                        (("1"
                                                          (expand "*")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "phi")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-2
                                                                          3))
                                                                        (("1"
                                                                          (rewrite
                                                                           "metric_convergence_def")
                                                                          (("1"
                                                                            (rewrite
                                                                             "metric_convergence_def")
                                                                            (("1"
                                                                              (expand
                                                                               "metric_converges_to")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "ball")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "negligible_union")
                                                (("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "integrable_add")
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integral_ae_eq"
                                         ("f"
                                          "F!1(0)"
                                          "h"
                                          "*[T](phi[T, S](complement[T](X!1)), F!1(0))"))
                                        (("1"
                                          (split -1)
                                          (("1" (flatten) nil nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (expand "ae_eq?")
                                              (("2"
                                                (expand
                                                 "pointwise_ae?")
                                                (("2"
                                                  (expand "ae?")
                                                  (("2"
                                                    (expand "fullset")
                                                    (("2"
                                                      (expand "ae_in?")
                                                      (("2"
                                                        (inst + "X!1")
                                                        (("1"
                                                          (skosimp)
                                                          (("1"
                                                            (expand
                                                             "*")
                                                            (("1"
                                                              (expand
                                                               "complement")
                                                              (("1"
                                                                (expand
                                                                 "phi")
                                                                (("1"
                                                                  (expand
                                                                   "member")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "null_is_negligible")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (expand "simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (rewrite
                                                   "prod_measurable")
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (expand "bounded?")
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "bounded_above?")
                                      (("1"
                                        (skosimp)
                                        (("1"
                                          (hide -4)
                                          (("1"
                                            (inst
                                             +
                                             "a!1-integral(F!1(0))")
                                            (("1"
                                              (skolem + ("n!1"))
                                              (("1"
                                                (expand "o")
                                                (("1"
                                                  (inst - "n!1")
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(n!1) - F!1(0)"
                                                      "h"
                                                      "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -2
                                                           1
                                                           rl)
                                                          (("1"
                                                            (rewrite
                                                             "integral_diff")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide -3 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "pointwise_ae?")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (expand
                                                                         "subset?")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (expand
                                                                                 "phi")
                                                                                (("1"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "-")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "integrable_diff"
                                                         ("f1"
                                                          "F!1(n!1)"
                                                          "f2"
                                                          "F!1(0)"))
                                                        (("2"
                                                          (lemma
                                                           "integrable_is_measurable"
                                                           ("x"
                                                            "(-[T])(F!1(n!1), F!1(0))"))
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "complement[T](X!1)"))
                                                            (("1"
                                                              (expand
                                                               "simple?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (rewrite
                                                                   "prod_measurable")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "null_set?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "measurable_complement"
                                                                   ("a"
                                                                    "X!1"))
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -3)
                                    (("2"
                                      (expand "bounded_below?")
                                      (("2"
                                        (inst + "0")
                                        (("2"
                                          (skolem + ("n!1"))
                                          (("2"
                                            (expand "o ")
                                            (("2"
                                              (lemma
                                               "integral_nonneg"
                                               ("f"
                                                "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                              (("2"
                                                (split -1)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (expand "*")
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (expand
                                                                 "complement")
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (case-replace
                                                                       "X!1(x!1)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0"
                                                                           "n!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide 2)
                              (("3"
                                (expand "pointwise_increasing?")
                                (("3"
                                  (skosimp)
                                  (("3"
                                    (inst - "x!1")
                                    (("3"
                                      (expand "subset?")
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "member")
                                          (("3"
                                            (expand "increasing?")
                                            (("3"
                                              (skolem + ("i!1" "j!1"))
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "*")
                                                  (("3"
                                                    (expand "-")
                                                    (("3"
                                                      (expand
                                                       "complement")
                                                      (("3"
                                                        (expand "phi")
                                                        (("3"
                                                          (expand
                                                           "member")
                                                          (("3"
                                                            (case-replace
                                                             "X!1(x!1)")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (skosimp)
                              (("2"
                                (split)
                                (("1"
                                  (skolem + "x!1")
                                  (("1"
                                    (expand "*")
                                    (("1"
                                      (expand "complement")
                                      (("1"
                                        (expand "phi")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (inst - "x!1")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst - "x!1")
                                                  (("1"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "0"
                                                           "n!1")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (lemma
                                   "integrable_diff"
                                   ("f1" "F!1(n!1)" "f2" "F!1(0)"))
                                  (("2"
                                    (lemma
                                     "integral_ae_eq"
                                     ("f"
                                      "(-[T])(F!1(n!1), F!1(0))"
                                      "h"
                                      "*[T](phi[T, S](complement[T](X!1)), ((-[T])(F!1(n!1), F!1(0))))"))
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (rewrite
                                           "nn_integrable_is_nn_integrable")
                                          (("1"
                                            (hide-all-but (-5 -7 1))
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "*")
                                                (("1"
                                                  (expand "complement")
                                                  (("1"
                                                    (expand "phi")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (expand "-")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (case-replace
                                                                   "X!1(x!1)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "n!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (expand "ae_eq?")
                                          (("2"
                                            (expand "pointwise_ae?")
                                            (("2"
                                              (expand "ae?")
                                              (("2"
                                                (expand "fullset")
                                                (("2"
                                                  (expand "ae_in?")
                                                  (("2"
                                                    (inst + "X!1")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (expand
                                                               "*")
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (rewrite
                                                       "null_is_negligible")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integrable_is_measurable"
                                         ("x"
                                          "(-[T])(F!1(n!1), F!1(0))"))
                                        (("2"
                                          (rewrite "prod_measurable")
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (rewrite
                                               "simple_is_measurable")
                                              nil
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1)
                          (("2" (skosimp)
                            (("2"
                              (name "H"
                                    "LAMBDA n: LAMBDA (m: nat): {x | F!2(n)(x) >= m+1}")
                              (("2"
                                (name
                                 "HH"
                                 "LAMBDA (m: nat): IUnion(LAMBDA n: H(n)(m))")
                                (("2"
                                  (hide -1 -2)
                                  (("2"
                                    (case
                                     "forall (n,m:nat): measurable_set?(H(n)(m))")
                                    (("1"
                                      (case
                                       "forall (m:nat): measurable_set?(HH(m))")
                                      (("1"
                                        (lemma
                                         "measurable_IIntersection"
                                         ("SS" "HH"))
                                        (("1"
                                          (case
                                           "FORALL x:
        (NOT IIntersection[nat, T](HH)(x)) IFF
         (EXISTS (k: posnat): FORALL n: F!2(n)(x) < k)")
                                          (("1"
                                            (case
                                             "forall (n,m:nat): mu_fin?(H(n)(m))")
                                            (("1"
                                              (case
                                               "forall (n,m:nat,x:T): ((m+1)*phi(H(n)(m)))(x) <= F!2(n)(x)")
                                              (("1"
                                                (case
                                                 "forall (n,m:nat): (m+1)*mu(H(n)(m)) <= nn_integral(F!2(n))")
                                                (("1"
                                                  (expand "bounded?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide -9)
                                                      (("1"
                                                        (expand
                                                         "bounded_above?")
                                                        (("1"
                                                          (skolem
                                                           -
                                                           "M")
                                                          (("1"
                                                            (expand
                                                             "o ")
                                                            (("1"
                                                              (case
                                                               "forall (n,m:nat): subset?(H(n)(m),HH(m))")
                                                              (("1"
                                                                (case
                                                                 "forall (n,m:nat): mu(H(n)(m)) <= M/(1+m)")
                                                                (("1"
                                                                  (name-replace
                                                                   "DIVERGENT"
                                                                   "IIntersection[nat, T](HH)")
                                                                  (("1"
                                                                    (case
                                                                     "null_set?(DIVERGENT)")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_bounded?(lambda n: phi(complement(DIVERGENT))*F!2(n))")
                                                                      (("1"
                                                                        (name
                                                                         "SUP"
                                                                         "lambda x: sup(Im(lambda n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                        (("1"
                                                                          (case
                                                                           "forall x: least_upper_bound(<=)(SUP(x),Im(LAMBDA n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                          (("1"
                                                                            (lemma
                                                                             "monotone_convergence_scaf"
                                                                             ("F"
                                                                              "lambda n: phi(complement(DIVERGENT)) * F!2(n)"
                                                                              "f"
                                                                              "SUP"))
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   -4)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "nn_integrable_is_nn_integrable"
                                                                                     ("f"
                                                                                      "SUP"))
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "SUP")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_convergence?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_convergence_in?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "ae_in?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "DIVERGENT")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "*"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complement")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "phi"
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     1
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-3
                                                                                                                        -15
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "pointwise_increasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "metric_convergence_def")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ball")
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "LIMIT"
                                                                                                                                       "SUP(x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Im")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "least_upper_bound")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "LIMIT-r!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "upper_bound")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "z!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         -
                                                                                                                                                         "n!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "z!1>LIMIT-r!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "n!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "increasing?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "F!2(i!1)(x!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "null_is_negligible")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-15
                                                                                          1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "least_upper_bound")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Im")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "upper_bound")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "(phi(complement(DIVERGENT)) * F!2(0))(x!1)")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "phi")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "pointwise_converges_upto?")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "pointwise_increasing?(LAMBDA n: phi(complement(DIVERGENT)) * F!2(n))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "pointwise_convergence?")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -16)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "G"
                                                                                                   "LAMBDA (n_1: nat):
                     (phi(complement(DIVERGENT)) * F!2(n_1))(x!1)")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "LIMIT"
                                                                                                     "SUP(x!1)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "metric_convergence_def")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "metric_converges_to")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "least_upper_bound")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "LIMIT-r!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "upper_bound")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "z!1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "z!1>LIMIT-r!1")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Im")
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       -
                                                                                                                                       "n!1")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "n!1")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "G(i!1)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "increasing?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "n!1"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "Im")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "i!1")
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-15
                                                                                        1))
                                                                                      (("2"
                                                                                        (expand
                                                                                         "pointwise_increasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 +
                                                                                                 ("i!1"
                                                                                                  "j!1"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "j!1")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "*")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "phi")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -14
                                                                                  -15
                                                                                  -4
                                                                                  -11))
                                                                                (("3"
                                                                                  (expand
                                                                                   "bounded?")
                                                                                  (("3"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "bounded_above?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "M")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "integral_ae_eq"
                                                                                                 ("f"
                                                                                                  "F!2(n!1)"
                                                                                                  "h"
                                                                                                  "phi(complement(DIVERGENT)) * F!2(n!1)"))
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       *
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2
                                                                                                     -4
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ae_eq?")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "pointwise_ae?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "fullset")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae_in?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "DIVERGENT")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "complement")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "phi")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   "null_is_negligible")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -3
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "indefinite_integrable"
                                                                                                     ("E"
                                                                                                      "complement[T](DIVERGENT)"
                                                                                                      "f"
                                                                                                      "F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "measurable_complement")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_below?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "0")
                                                                                        (("2"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("2"
                                                                                              (hide
                                                                                               -3
                                                                                               -4)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "measurable_complement"
                                                                                                 ("a"
                                                                                                  "DIVERGENT"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "indefinite_integrable"
                                                                                                   ("E"
                                                                                                    "complement[T](DIVERGENT)"
                                                                                                    "f"
                                                                                                    "F!2(n!1)"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "integral_ae_eq"
                                                                                                     ("f"
                                                                                                      "F!2(n!1)"
                                                                                                      "h"
                                                                                                      "phi(complement[T](DIVERGENT)) * F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           *
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "integral_nonneg"
                                                                                                             ("f"
                                                                                                              "F!2(n!1)"))
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae_eq?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "pointwise_ae?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "fullset")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ae_in?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "DIVERGENT")
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "*")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "complement")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "phi")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (rewrite
                                                                                                                       "null_is_negligible")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "indefinite_integrable"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "measurable_complement")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (replace
                                                                                 -1
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -1
                                                                            -13
                                                                            -8))
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise_bounded?")
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "bounded_seq?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "fullset")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Im")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "bounded?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "above_bounded")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "x!2+r!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "upper_bound")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "z!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "ball")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "x!3")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-7
                                                                          -12
                                                                          1))
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise_bounded?")
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_increasing?")
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "complement")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "phi")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "DIVERGENT(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bounded_seq?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "image")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bounded?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "abs")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "bounded_seq?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "image")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "bounded?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0"
                                                                                                             "k!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "ball")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!3")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "null_set?")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "FORALL (n, m,k: nat): n<=k=>subset?(H(n)(m), H(k)(m))")
                                                                            (("1"
                                                                              (hide
                                                                               -4
                                                                               -5)
                                                                              (("1"
                                                                                (lemma
                                                                                 "m_decreasing_convergence"
                                                                                 ("E"
                                                                                  "HH"))
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "decreasing?(HH)")
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "mu_fin?[T, S, m](HH(0))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_converges?"
                                                                                       -3)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "o"
                                                                                         -3)
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "(FORALL (i:nat): m(HH(i))`1)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -9)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "DIVERGENT")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "m(IIntersection(HH))`1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "mu_fin?")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "mH"
                                                                                                       "lambda n: m(HH(n))`2")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "bounded_below_is_convergent"
                                                                                                         ("u"
                                                                                                          "mH"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "convergent(mH)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "forall n: mH(n) <= M / (1 + n)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "mu"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -4
                                                                                                                     -8
                                                                                                                     -13)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "limit_def"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "convergent_downto?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "converges_downto?")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -4
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "convergence")
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "mH"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "0<=M")
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "<="
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "posreal_div_posreal_is_posreal"
                                                                                                                                                 ("px"
                                                                                                                                                  "epsilon!1"
                                                                                                                                                  "py"
                                                                                                                                                  "M"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "archimedean"
                                                                                                                                                   ("px"
                                                                                                                                                    "epsilon!1 / M"))
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "n!1-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "n!1-1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "decreasing?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "n!1-1"
                                                                                                                                                                 "i!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "div_mult_pos_lt2"
                                                                                                                                                                         -1)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 *
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "mH")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "abs")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "m(HH(i!1))`2")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2
                                                                                                                 -3
                                                                                                                 -7
                                                                                                                 -12)
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "convergent_downto?")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "converges_downto_def"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -9
                                                                                                                             "_"
                                                                                                                             "n!1")
                                                                                                                            (("2"
                                                                                                                              (name-replace
                                                                                                                               "RHS"
                                                                                                                               "M / (1 + n!1)")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -15
                                                                                                                                 -14)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "m_increasing_convergence"
                                                                                                                                   ("E"
                                                                                                                                    "lambda n: H(n)(n!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (case-replace
                                                                                                                                     "increasing?(LAMBDA n: H(n)(n!1))")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "o ")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_converges?")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -13
                                                                                                                                           "_"
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13)
                                                                                                                                            (("1"
                                                                                                                                              (case-replace
                                                                                                                                               "convergent(LAMBDA i: m(H(i)(n!1))`2)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mH")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "HH")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -4)
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "UU"
                                                                                                                                                         "LAMBDA (i:nat): m(H(i)(n!1))`2")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "increasing?(UU)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "forall n: UU(n)<=RHS")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                -3
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "increasing_bounded_convergence"
                                                                                                                                                                 ("v1"
                                                                                                                                                                  "UU"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "limit_def"
                                                                                                                                                                     -1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "supfun_is_sup2")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   2
                                                                                                                                                                   -3)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bounded_above?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "RHS")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "UU")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -14
                                                                                                                                                                   "n!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "increasing?")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "UU")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2"
                                                                                                                                                                     "y!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst-cp
                                                                                                                                                                         -17
                                                                                                                                                                         "x!2"
                                                                                                                                                                         "n!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -17
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "n!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -15
                                                                                                                                                                             "y!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "m_monotone"
                                                                                                                                                                               ("a"
                                                                                                                                                                                "H(x!2)(n!1)"
                                                                                                                                                                                "b"
                                                                                                                                                                                "H(y!1)(n!1)"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "x_le")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -17
                                                                                                                                                             "i!1"
                                                                                                                                                             "n!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "measurable_set?")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "bounded_above_is_convergent"
                                                                                                                                                 ("u"
                                                                                                                                                  "LAMBDA n: m(H(n)(n!1))`2"))
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent_upto?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "converges_upto?")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "metric_convergence_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ball")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergent?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "convergence")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "epsilon!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!2")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -11))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "bounded_above?")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "RHS")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "mu")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-11
                                                                                                                                                      -13
                                                                                                                                                      -15
                                                                                                                                                      1
                                                                                                                                                      -1))
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "increasing?")
                                                                                                                                                      (("3"
                                                                                                                                                        (skolem
                                                                                                                                                         +
                                                                                                                                                         ("i!1"
                                                                                                                                                          "j!1"))
                                                                                                                                                        (("3"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1"
                                                                                                                                                             "j!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -
                                                                                                                                                                 "i!1"
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1"
                                                                                                                                                                   "n!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "m_monotone"
                                                                                                                                                                     ("a"
                                                                                                                                                                      "H(i!1)(n!1)"
                                                                                                                                                                      "b"
                                                                                                                                                                      "H(j!1)(n!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -4
                                                                                                                                                                           "j!1")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -15
                                                                                                                                                     "n!2"
                                                                                                                                                     "n!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "measurable_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (skosimp)
                                                                                                                                                (("3"
                                                                                                                                                  (inst
                                                                                                                                                   -15
                                                                                                                                                   "i!1"
                                                                                                                                                   "n!1")
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("3"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-9
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "increasing?")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!2"
                                                                                                                                             "n!1"
                                                                                                                                             "y!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "n!2"
                                                                                                                                       "n!1")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "convergent_downto?")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "converges_downto?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "metric_convergence_def")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ball")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergence")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "epsilon!1")
                                                                                                                                          (("1"
                                                                                                                                            (skosimp)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "n!1")
                                                                                                                                              (("1"
                                                                                                                                                (skosimp)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (grind)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "bounded_below?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "mH")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             -5
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("3"
                                                                                                                (skolem
                                                                                                                 +
                                                                                                                 ("i!1"
                                                                                                                  "j!1"))
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1"
                                                                                                                   "j!1")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (hide-all-but
                                                                                                                           (-3
                                                                                                                            -5
                                                                                                                            -11
                                                                                                                            1))
                                                                                                                          (("3"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "j!1")
                                                                                                                              (("3"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "i!1")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j!1")
                                                                                                                                  (("3"
                                                                                                                                    (lemma
                                                                                                                                     "m_monotone"
                                                                                                                                     ("a"
                                                                                                                                      "HH(j!1)"
                                                                                                                                      "b"
                                                                                                                                      "HH(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_le")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "mH")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "n!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "m_monotone"
                                                                                                       ("a"
                                                                                                        "IIntersection(HH)"
                                                                                                        "b"
                                                                                                        "HH(0)"))
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         -9
                                                                                                         "0")
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (expand
                                                                                                   "measurable_set?")
                                                                                                  (("3"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "decreasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0"
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_monotone"
                                                                                                     ("a"
                                                                                                      "HH(i!1)"
                                                                                                      "b"
                                                                                                      "HH(0)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "mu_fin?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "x_le")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "i!1")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -10
                                                                                               "i!1")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -2
                                                                                         -5)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "HH")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "_"
                                                                                             "0")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "_"
                                                                                               "0")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "_"
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_increasing_convergence"
                                                                                                     ("E"
                                                                                                      "LAMBDA n: H(n)(0)"))
                                                                                                    (("1"
                                                                                                      (case-replace
                                                                                                       "increasing?(LAMBDA n: H(n)(0))")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_converges?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "mu_fin?"
                                                                                                             (-5
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               1
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "mH"
                                                                                                                       "LAMBDA n: m(H(n)(0))`2")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "increasing?(mH)")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "forall n: mH(n)<=M")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              1))
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "bounded_above_is_convergent"
                                                                                                                               ("u"
                                                                                                                                "mH"))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergent_upto?")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "converges_upto?")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "metric_convergence_def")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "metric_converges_to")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "ball")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -2
                                                                                                                                                     -3
                                                                                                                                                     -4)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "convergence")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "epsilon!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   " n!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "bounded_above?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "M")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -4
                                                                                                                               "n!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "mu")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "mH")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2
                                                                                                                           -10
                                                                                                                           -9
                                                                                                                           -5
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "increasing?")
                                                                                                                            (("2"
                                                                                                                              (skolem
                                                                                                                               +
                                                                                                                               ("i!1"
                                                                                                                                "j!1"))
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "i!1"
                                                                                                                                   "j!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "mH")
                                                                                                                                      (("2"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "j!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "j!1")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "m_monotone"
                                                                                                                                                 ("a"
                                                                                                                                                  "H(i!1)(0)"
                                                                                                                                                  "b"
                                                                                                                                                  "H(j!1)(0)"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "x_le")
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "n!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "measurable_set?")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "increasing?")
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             +
                                                                                                             ("i!1"
                                                                                                              "j!1"))
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1"
                                                                                                                 "0"
                                                                                                                 "j!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (inst
                                                                                       -9
                                                                                       "0")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (1
                                                                                      -11))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "decreasing?")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         +
                                                                                         ("i!1"
                                                                                          "j!1"))
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "pointwise_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "HH")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "H")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-11
                                                                                1))
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "H")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n!1"
                                                                                                 "k!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -9
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "n!1"
                                                                       "m!1")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "n!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "div_mult_pos_le2"
                                                                           ("py"
                                                                            "m!1 + 1"
                                                                            "x"
                                                                            "mu(H(n!1)(m!1))"
                                                                            "z"
                                                                            "M"))
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "integral_nn")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "HH")
                                                                  (("2"
                                                                    (expand
                                                                     "IUnion")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1"
                                                     "_")
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "nn_integrable_le"
                                                         ("g"
                                                          "(m!1 + 1) * phi(H(n!1)(m!1))"
                                                          "f"
                                                          "F!2(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "isf_phi"
                                                               ("E"
                                                                "H(n!1)(m!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "isf_scal"
                                                                 ("c"
                                                                  "m!1+1"
                                                                  "i"
                                                                  "phi[T, S](H(n!1)(m!1))"))
                                                                (("1"
                                                                  (name-replace
                                                                   "RHS"
                                                                   "nn_integral(F!2(n!1))")
                                                                  (("1"
                                                                    (rewrite
                                                                     "integral_nn"
                                                                     -4
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (rewrite
                                                                       "integral_scal"
                                                                       -4)
                                                                      (("1"
                                                                        (rewrite
                                                                         "integral_phi"
                                                                         -4)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-2
                                                                          1))
                                                                        (("2"
                                                                          (lemma
                                                                           "nn_isf_is_nn_integrable")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "phi[T, S](H(n!1)(m!1))")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nn_integrable_is_nn_integrable")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nn_integrable_is_integrable")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "phi[T, S](H(n!1)(m!1))")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "nn_isf?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "phi")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (case-replace
                                                                                         "H(n!1)(m!1)(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -8
                                                                 "n!1"
                                                                 "m!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (case-replace
                                                                           "H(n!1)(m!1)(x!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "scal_measurable")
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "H(n!1)(m!1)"))
                                                            (("2"
                                                              (rewrite
                                                               "simple_is_measurable")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst
                                                     -2
                                                     "n!1"
                                                     "m!1")
                                                    (("3"
                                                      (inst
                                                       -6
                                                       "n!1"
                                                       "m!1")
                                                      (("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2 -2 -1)
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (expand "phi")
                                                    (("2"
                                                      (expand "H")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (expand "*")
                                                          (("2"
                                                            (case-replace
                                                             "F!2(n!1)(x!1) >= 1 + m!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (1 -4))
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1")
                                                    (("2"
                                                      (lemma
                                                       "integrable_nz_finite"
                                                       ("f"
                                                        "F!2(n!1)"
                                                        "epsilon"
                                                        "m!1+1/2"))
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (case-replace
                                                           "{x: T | abs(F!2(n!1)(x)) >= m!1 + 1 / 2}={x | F!2(n!1)(x) >= m!1 + 1 / 2}")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (lemma
                                                               "m_monotone"
                                                               ("a"
                                                                "{x | F!2(n!1)(x) >= 1 + m!1}"
                                                                "b"
                                                                "{x | F!2(n!1)(x) >= m!1 + 1 / 2}"))
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "x_le")
                                                                  (("1"
                                                                    (expand
                                                                     "mu_fin?")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (expand
                                                               "abs")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "IIntersection")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "HH")
                                                        (("1"
                                                          (expand
                                                           "IUnion")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (inst
                                                               2
                                                               "1+i!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "n!1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (expand
                                                     "IIntersection")
                                                    (("2"
                                                      (expand "HH")
                                                      (("2"
                                                        (expand
                                                         "IUnion")
                                                        (("2"
                                                          (expand "H")
                                                          (("2"
                                                            (typepred
                                                             "k!1")
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "k!1-1")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "HH")
                                            (("2"
                                              (rewrite
                                               "measurable_IUnion")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "n!1" "m!1")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (expand "H")
                                            (("2"
                                              (typepred "F!2(n!1)")
                                              (("2"
                                                (lemma
                                                 "nn_integrable_is_measurable")
                                                (("2"
                                                  (inst - "F!2(n!1)")
                                                  (("2"
                                                    (rewrite
                                                     "measurable_ge")
                                                    (("2"
                                                      (inst - "1+m!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (monotone_convergence-1 nil 3409506492
   ("" (skosimp*)
    ((""
      (case-replace
       "(EXISTS f: ae_convergence?(F!1, f)) IFF bounded?(integral o F!1)")
      (("1" (assert)
        (("1" (skolem!)
          (("1" (flatten)
            (("1" (hide -2)
              (("1" (split -1)
                (("1" (expand "ae_increasing?")
                  (("1" (expand "ae_convergence?")
                    (("1" (expand "fullset")
                      (("1" (expand "ae_convergence_in?")
                        (("1" (expand "ae_in?")
                          (("1" (skolem - "E1")
                            (("1" (skolem - "E2")
                              (("1"
                                (typepred "union(E1,E2)")
                                (("1"
                                  (expand "negligible_set?")
                                  (("1"
                                    (skosimp)
                                    (("1"
                                      (lemma "null_set_is_measurable")
                                      (("1"
                                        (inst - "X!1")
                                        (("1"
                                          (lemma
                                           "monotone_convergence_scaf"
                                           ("f"
                                            "phi(complement(X!1))*f!1"
                                            "F"
                                            "lambda n: phi(complement(X!1))*F!1(n)"))
                                          (("1"
                                            (case-replace
                                             "integral o (LAMBDA n: phi(complement(X!1)) * F!1(n))=integral o F!1")
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (replace -5)
                                                (("1"
                                                  (case-replace
                                                   "integral(phi(complement(X!1)) * f!1)=integral(f!1)")
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand
                                                         "pointwise_converges_upto?")
                                                        (("2"
                                                          (case-replace
                                                           "pointwise_increasing?(LAMBDA n: phi(complement(X!1)) * F!1(n))")
                                                          (("1"
                                                            (expand
                                                             "pointwise_convergence?")
                                                            (("1"
                                                              (skosimp)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "x!1")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "phi")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (hide
                                                                           -1
                                                                           -2)
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "union")
                                                                              (("1"
                                                                                (expand
                                                                                 "member")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*"
                                                                                     1)
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E2(x!1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "convergence?")
                                                                                            (("1"
                                                                                              (skosimp)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 +
                                                                                                 "0")
                                                                                                (("1"
                                                                                                  (skosimp)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "X!1(x!1)")
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "convergence?")
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide
                                                               -1
                                                               -5
                                                               -7)
                                                              (("2"
                                                                (expand
                                                                 "pointwise_increasing?")
                                                                (("2"
                                                                  (skosimp)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "complement")
                                                                      (("2"
                                                                        (expand
                                                                         "phi")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("2"
                                                                              (expand
                                                                               "subset?")
                                                                              (("2"
                                                                                (expand
                                                                                 "union")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (case-replace
                                                                                       "X!1(x!1)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "increasing?")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "increasing?")
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!2"
                                                                                                 "y!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 2)
                                                    (("2"
                                                      (lemma
                                                       "integral_ae_eq"
                                                       ("f"
                                                        "f!1"
                                                        "h"
                                                        "phi(complement(X!1)) * f!1"))
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 2)
                                                          (("2"
                                                            (expand
                                                             "ae_eq?")
                                                            (("2"
                                                              (expand
                                                               "restrict")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_ae?")
                                                                (("2"
                                                                  (expand
                                                                   "*")
                                                                  (("2"
                                                                    (expand
                                                                     "complement")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (expand
                                                                           "ae?")
                                                                          (("2"
                                                                            (expand
                                                                             "fullset")
                                                                            (("2"
                                                                              (expand
                                                                               "ae_in?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "X!1")
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "negligible_set?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "X!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          (("2"
                                                            (hide 2)
                                                            (("2"
                                                              (rewrite
                                                               "indefinite_integrable")
                                                              (("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (rewrite
                                                                   "measurable_complement")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (hide 2)
                                                    (("3"
                                                      (rewrite
                                                       "indefinite_integrable")
                                                      (("3"
                                                        (rewrite
                                                         "measurable_complement")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 2)
                                              (("2"
                                                (expand "o ")
                                                (("2"
                                                  (apply-extensionality
                                                   :hide?
                                                   t)
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(x!1)"
                                                      "h"
                                                      "phi(complement(X!1)) * F!1(x!1)"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "restrict")
                                                            (("2"
                                                              (expand
                                                               "pointwise_ae?")
                                                              (("2"
                                                                (expand
                                                                 "*"
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "complement")
                                                                  (("2"
                                                                    (expand
                                                                     "phi")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (expand
                                                                         "ae?")
                                                                        (("2"
                                                                          (expand
                                                                           "fullset")
                                                                          (("2"
                                                                            (expand
                                                                             "ae_in?")
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "X!1")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "negligible_set?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "X!1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (rewrite
                                                         "integrable_is_measurable")
                                                        (("2"
                                                          (rewrite
                                                           "indefinite_integrable")
                                                          (("2"
                                                            (rewrite
                                                             "measurable_complement")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (skosimp)
                                                    (("2"
                                                      (rewrite
                                                       "indefinite_integrable")
                                                      (("2"
                                                        (rewrite
                                                         "measurable_complement")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skosimp)
                                            (("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (inst + "f!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (split)
          (("1" (skosimp*)
            (("1" (expand "bounded?")
              (("1" (split)
                (("1" (expand "bounded_above?")
                  (("1" (inst + "integral(f!1)")
                    (("1" (skolem + ("n!1"))
                      (("1" (expand "o ")
                        (("1" (expand "ae_convergence?")
                          (("1" (expand "ae_increasing?")
                            (("1" (expand "ae_convergence_in?")
                              (("1"
                                (expand "fullset")
                                (("1"
                                  (expand "ae_in?")
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (typepred "union(E!1,E!2)")
                                      (("1"
                                        (expand "negligible_set?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (lemma
                                             "integral_ae_le"
                                             ("f1"
                                              "phi(complement(X!1))*F!1(n!1)"
                                              "f2"
                                              "phi(complement(X!1))*f!1"))
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (lemma
                                                 "integral_ae_eq"
                                                 ("f"
                                                  "f!1"
                                                  "h"
                                                  "phi(complement(X!1)) * f!1"))
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replace -2 * rl)
                                                      (("1"
                                                        (lemma
                                                         "integral_ae_eq"
                                                         ("f"
                                                          "F!1(n!1)"
                                                          "h"
                                                          "phi(complement(X!1)) * F!1(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 -5 1))
                                                            (("2"
                                                              (expand
                                                               "ae_eq?")
                                                              (("2"
                                                                (expand
                                                                 "restrict")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "ae?")
                                                                    (("2"
                                                                      (expand
                                                                       "*")
                                                                      (("2"
                                                                        (expand
                                                                         "complement")
                                                                        (("2"
                                                                          (expand
                                                                           "phi")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_in?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "X!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "null_is_negligible")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "integrable_is_measurable")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 -4 -5 2)
                                                    (("2"
                                                      (expand "ae_eq?")
                                                      (("2"
                                                        (expand
                                                         "restrict")
                                                        (("2"
                                                          (expand
                                                           "pointwise_ae?")
                                                          (("2"
                                                            (expand
                                                             "complement")
                                                            (("2"
                                                              (expand
                                                               "phi")
                                                              (("2"
                                                                (expand
                                                                 "member")
                                                                (("2"
                                                                  (expand
                                                                   "ae?")
                                                                  (("2"
                                                                    (expand
                                                                     "fullset")
                                                                    (("2"
                                                                      (expand
                                                                       "ae_in?")
                                                                      (("2"
                                                                        (inst
                                                                         +
                                                                         "X!1")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "*")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (rewrite
                                                                           "null_is_negligible")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "integrable_is_measurable")
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "ae_le?")
                                                  (("2"
                                                    (expand "*")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand
                                                         "complement")
                                                        (("2"
                                                          (expand
                                                           "phi")
                                                          (("2"
                                                            (expand
                                                             "member")
                                                            (("2"
                                                              (expand
                                                               "ae?")
                                                              (("2"
                                                                (expand
                                                                 "fullset")
                                                                (("2"
                                                                  (expand
                                                                   "ae_in?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "X!1")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "union")
                                                                          (("1"
                                                                            (expand
                                                                             "subset?")
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "E!1(x!1)")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "E!2(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             -1
                                                                                             -2)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "metric_convergence_def")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "F!1(n!1)(x!1)-f!1(x!1)>0")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "metric_converges_to")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "F!1(n!1)(x!1) - f!1(x!1)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "n!1+n!2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "n!1"
                                                                                                               "n!1+n!2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "ball")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "null_is_negligible")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("2"
                                                (rewrite
                                                 "measurable_complement")
                                                (("2"
                                                  (expand "null_set?")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (rewrite
                                               "indefinite_integrable")
                                              (("3"
                                                (rewrite
                                                 "measurable_complement")
                                                (("3"
                                                  (expand "null_set?")
                                                  (("3"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "bounded_below?")
                  (("2" (inst + "integral(F!1(0))")
                    (("2" (skolem + ("n!1"))
                      (("2" (expand "o ")
                        (("2" (expand "ae_increasing?")
                          (("2" (skosimp)
                            (("2"
                              (lemma "integral_ae_le"
                               ("f1" "F!1(0)" "f2" "F!1(n!1)"))
                              (("2"
                                (assert)
                                (("2"
                                  (hide 2)
                                  (("2"
                                    (expand "ae_le?")
                                    (("2"
                                      (expand "pointwise_ae?")
                                      (("2"
                                        (expand "ae?")
                                        (("2"
                                          (expand "fullset")
                                          (("2"
                                            (expand "ae_in?")
                                            (("2"
                                              (inst + "E!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "0"
                                                       "n!1")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ae_increasing?")
              (("2" (skosimp)
                (("2" (typepred "E!1")
                  (("2" (expand "negligible_set?")
                    (("2" (skosimp)
                      (("2"
                        (case "forall (F:sequence[nn_integrable]): bounded?(integral o F)&pointwise_increasing?(F)=>EXISTS (f:nn_integrable): ae_convergence?(F, f)")
                        (("1"
                          (inst -
                           "lambda n: phi(complement(X!1))*(F!1(n)-F!1(0))")
                          (("1" (split -1)
                            (("1" (skosimp)
                              (("1"
                                (typepred "f!1")
                                (("1"
                                  (inst
                                   +
                                   "f!1+phi(complement(X!1)) *F!1(0)")
                                  (("1"
                                    (expand "ae_convergence?")
                                    (("1"
                                      (expand "fullset")
                                      (("1"
                                        (expand "ae_convergence_in?")
                                        (("1"
                                          (expand "ae_in?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "union(X!1,E!2)")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "+ ")
                                                        (("1"
                                                          (expand "*")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "-")
                                                                (("1"
                                                                  (expand
                                                                   "complement")
                                                                  (("1"
                                                                    (expand
                                                                     "phi")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-2
                                                                          3))
                                                                        (("1"
                                                                          (rewrite
                                                                           "metric_convergence_def")
                                                                          (("1"
                                                                            (rewrite
                                                                             "metric_convergence_def")
                                                                            (("1"
                                                                              (expand
                                                                               "metric_converges_to")
                                                                              (("1"
                                                                                (skosimp)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "i!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "ball")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "negligible_union")
                                                (("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "integrable_add")
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integral_ae_eq"
                                         ("f"
                                          "F!1(0)"
                                          "h"
                                          "*[T](phi[T, S](complement[T](X!1)), F!1(0))"))
                                        (("1"
                                          (split -1)
                                          (("1" (flatten) nil nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (expand "ae_eq?")
                                              (("2"
                                                (expand "restrict")
                                                (("2"
                                                  (expand
                                                   "pointwise_ae?")
                                                  (("2"
                                                    (expand "ae?")
                                                    (("2"
                                                      (expand
                                                       "fullset")
                                                      (("2"
                                                        (expand
                                                         "ae_in?")
                                                        (("2"
                                                          (inst
                                                           +
                                                           "X!1")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (expand
                                                               "*")
                                                              (("1"
                                                                (expand
                                                                 "complement")
                                                                (("1"
                                                                  (expand
                                                                   "phi")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             "null_is_negligible")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (expand "simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (rewrite
                                                   "prod_measurable")
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (expand "bounded?")
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "bounded_above?")
                                      (("1"
                                        (skosimp)
                                        (("1"
                                          (hide -4)
                                          (("1"
                                            (inst
                                             +
                                             "a!1-integral(F!1(0))")
                                            (("1"
                                              (skolem + ("n!1"))
                                              (("1"
                                                (expand "o")
                                                (("1"
                                                  (inst - "n!1")
                                                  (("1"
                                                    (lemma
                                                     "integral_ae_eq"
                                                     ("f"
                                                      "F!1(n!1) - F!1(0)"
                                                      "h"
                                                      "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace
                                                           -2
                                                           1
                                                           rl)
                                                          (("1"
                                                            (rewrite
                                                             "integral_diff")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide -3 2)
                                                        (("2"
                                                          (expand
                                                           "ae_eq?")
                                                          (("2"
                                                            (expand
                                                             "restrict")
                                                            (("2"
                                                              (expand
                                                               "pointwise_ae?")
                                                              (("2"
                                                                (expand
                                                                 "ae?")
                                                                (("2"
                                                                  (expand
                                                                   "fullset")
                                                                  (("2"
                                                                    (expand
                                                                     "ae_in?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "X!1")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (expand
                                                                           "subset?")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "x!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "complement")
                                                                                (("1"
                                                                                  (expand
                                                                                   "phi")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "-")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (rewrite
                                                                         "null_is_negligible")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "integrable_diff"
                                                         ("f1"
                                                          "F!1(n!1)"
                                                          "f2"
                                                          "F!1(0)"))
                                                        (("2"
                                                          (lemma
                                                           "integrable_is_measurable"
                                                           ("x"
                                                            "(-[T])(F!1(n!1), F!1(0))"))
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "complement[T](X!1)"))
                                                            (("1"
                                                              (expand
                                                               "simple?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (rewrite
                                                                   "prod_measurable")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "null_set?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "measurable_complement"
                                                                   ("a"
                                                                    "X!1"))
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -3)
                                    (("2"
                                      (expand "bounded_below?")
                                      (("2"
                                        (inst + "0")
                                        (("2"
                                          (skolem + ("n!1"))
                                          (("2"
                                            (expand "o ")
                                            (("2"
                                              (lemma
                                               "integral_nonneg"
                                               ("f"
                                                "phi(complement(X!1)) * (F!1(n!1) - F!1(0))"))
                                              (("2"
                                                (split -1)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (expand "*")
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("2"
                                                            (expand
                                                             "subset?")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (expand
                                                                 "complement")
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (case-replace
                                                                       "X!1(x!1)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "0"
                                                                           "n!1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide 2)
                              (("3"
                                (expand "pointwise_increasing?")
                                (("3"
                                  (skosimp)
                                  (("3"
                                    (inst - "x!1")
                                    (("3"
                                      (expand "subset?")
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "member")
                                          (("3"
                                            (expand "increasing?")
                                            (("3"
                                              (skolem + ("i!1" "j!1"))
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (expand "*")
                                                  (("3"
                                                    (expand "-")
                                                    (("3"
                                                      (expand
                                                       "complement")
                                                      (("3"
                                                        (expand "phi")
                                                        (("3"
                                                          (expand
                                                           "member")
                                                          (("3"
                                                            (case-replace
                                                             "X!1(x!1)")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (skosimp)
                              (("2"
                                (split)
                                (("1"
                                  (skolem + "x!1")
                                  (("1"
                                    (expand "*")
                                    (("1"
                                      (expand "complement")
                                      (("1"
                                        (expand "phi")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (inst - "x!1")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst - "x!1")
                                                  (("1"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "-")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "0"
                                                           "n!1")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (lemma
                                   "integrable_diff"
                                   ("f1" "F!1(n!1)" "f2" "F!1(0)"))
                                  (("2"
                                    (lemma
                                     "integral_ae_eq"
                                     ("f"
                                      "(-[T])(F!1(n!1), F!1(0))"
                                      "h"
                                      "*[T](phi[T, S](complement[T](X!1)), ((-[T])(F!1(n!1), F!1(0))))"))
                                    (("1"
                                      (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (rewrite
                                           "nn_integrable_is_nn_integrable")
                                          (("1"
                                            (hide-all-but (-5 -7 1))
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "*")
                                                (("1"
                                                  (expand "complement")
                                                  (("1"
                                                    (expand "phi")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (expand "-")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "x!1")
                                                          (("1"
                                                            (expand
                                                             "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (case-replace
                                                                   "X!1(x!1)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0"
                                                                       "n!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (expand "ae_eq?")
                                          (("2"
                                            (expand "restrict")
                                            (("2"
                                              (expand "pointwise_ae?")
                                              (("2"
                                                (expand "ae?")
                                                (("2"
                                                  (expand "fullset")
                                                  (("2"
                                                    (expand "ae_in?")
                                                    (("2"
                                                      (inst + "X!1")
                                                      (("1"
                                                        (skosimp)
                                                        (("1"
                                                          (expand
                                                           "complement")
                                                          (("1"
                                                            (expand
                                                             "phi")
                                                            (("1"
                                                              (expand
                                                               "member")
                                                              (("1"
                                                                (expand
                                                                 "*")
                                                                (("1"
                                                                  (expand
                                                                   "-")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (rewrite
                                                         "null_is_negligible")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (lemma
                                         "integrable_is_measurable"
                                         ("x"
                                          "(-[T])(F!1(n!1), F!1(0))"))
                                        (("2"
                                          (rewrite "prod_measurable")
                                          (("2"
                                            (lemma
                                             "phi_is_simple"
                                             ("X"
                                              "complement[T](X!1)"))
                                            (("1"
                                              (rewrite
                                               "simple_is_measurable")
                                              nil
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "measurable_complement"
                                                   ("a" "X!1"))
                                                  (("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1)
                          (("2" (skosimp)
                            (("2"
                              (name "H"
                                    "LAMBDA n: LAMBDA (m: nat): {x | F!2(n)(x) >= m+1}")
                              (("2"
                                (name
                                 "HH"
                                 "LAMBDA (m: nat): IUnion(LAMBDA n: H(n)(m))")
                                (("2"
                                  (hide -1 -2)
                                  (("2"
                                    (case
                                     "forall (n,m:nat): measurable_set?(H(n)(m))")
                                    (("1"
                                      (case
                                       "forall (m:nat): measurable_set?(HH(m))")
                                      (("1"
                                        (lemma
                                         "measurable_IIntersection"
                                         ("SS" "HH"))
                                        (("1"
                                          (case
                                           "FORALL x:
        (NOT IIntersection[nat, T](HH)(x)) IFF
         (EXISTS (k: posnat): FORALL n: F!2(n)(x) < k)")
                                          (("1"
                                            (case
                                             "forall (n,m:nat): mu_fin?(H(n)(m))")
                                            (("1"
                                              (case
                                               "forall (n,m:nat,x:T): ((m+1)*phi(H(n)(m)))(x) <= F!2(n)(x)")
                                              (("1"
                                                (case
                                                 "forall (n,m:nat): (m+1)*mu(H(n)(m)) <= nn_integral(F!2(n))")
                                                (("1"
                                                  (expand "bounded?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide -9)
                                                      (("1"
                                                        (expand
                                                         "bounded_above?")
                                                        (("1"
                                                          (skolem
                                                           -
                                                           "M")
                                                          (("1"
                                                            (expand
                                                             "o ")
                                                            (("1"
                                                              (case
                                                               "forall (n,m:nat): subset?(H(n)(m),HH(m))")
                                                              (("1"
                                                                (case
                                                                 "forall (n,m:nat): mu(H(n)(m)) <= M/(1+m)")
                                                                (("1"
                                                                  (name-replace
                                                                   "DIVERGENT"
                                                                   "IIntersection[nat, T](HH)")
                                                                  (("1"
                                                                    (case
                                                                     "null_set?(DIVERGENT)")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_bounded?(lambda n: phi(complement(DIVERGENT))*F!2(n))")
                                                                      (("1"
                                                                        (name
                                                                         "SUP"
                                                                         "lambda x: sup(Im(lambda n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                        (("1"
                                                                          (case
                                                                           "forall x: least_upper_bound(<=)(SUP(x),Im(LAMBDA n: (phi(complement(DIVERGENT)) * F!2(n))(x)))")
                                                                          (("1"
                                                                            (lemma
                                                                             "monotone_convergence_scaf"
                                                                             ("F"
                                                                              "lambda n: phi(complement(DIVERGENT)) * F!2(n)"
                                                                              "f"
                                                                              "SUP"))
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2
                                                                                   -4)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "nn_integrable_is_nn_integrable"
                                                                                     ("f"
                                                                                      "SUP"))
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "SUP")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_convergence?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "fullset")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_convergence_in?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "ae_in?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "DIVERGENT")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "*"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complement")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "phi"
                                                                                                             -3)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     1
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-3
                                                                                                                        -15
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "pointwise_increasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "metric_convergence_def")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ball")
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "LIMIT"
                                                                                                                                       "SUP(x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "Im")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "least_upper_bound")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "LIMIT-r!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "upper_bound")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "z!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         -
                                                                                                                                                         "n!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "z!1>LIMIT-r!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "n!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "increasing?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "F!2(i!1)(x!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "i!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "null_is_negligible")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-15
                                                                                          1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "least_upper_bound")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Im")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "upper_bound")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "(phi(complement(DIVERGENT)) * F!2(0))(x!1)")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "phi")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "pointwise_converges_upto?")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "pointwise_increasing?(LAMBDA n: phi(complement(DIVERGENT)) * F!2(n))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "pointwise_convergence?")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -16)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "pointwise_increasing?")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "G"
                                                                                                   "LAMBDA (n_1: nat):
                     (phi(complement(DIVERGENT)) * F!2(n_1))(x!1)")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "LIMIT"
                                                                                                     "SUP(x!1)")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        1))
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "metric_convergence_def")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "metric_converges_to")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "least_upper_bound")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "LIMIT-r!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "upper_bound")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "z!1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "z!1>LIMIT-r!1")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Im")
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       -
                                                                                                                                       "n!1")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "n!1")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "G(i!1)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "increasing?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "n!1"
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "Im")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "i!1")
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-15
                                                                                        1))
                                                                                      (("2"
                                                                                        (expand
                                                                                         "pointwise_increasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 +
                                                                                                 ("i!1"
                                                                                                  "j!1"))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "i!1"
                                                                                                   "j!1")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "*")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "phi")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -14
                                                                                  -15
                                                                                  -4
                                                                                  -11))
                                                                                (("3"
                                                                                  (expand
                                                                                   "bounded?")
                                                                                  (("3"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "bounded_above?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "M")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "integral_ae_eq"
                                                                                                 ("f"
                                                                                                  "F!2(n!1)"
                                                                                                  "h"
                                                                                                  "phi(complement(DIVERGENT)) * F!2(n!1)"))
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2
                                                                                                       *
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2
                                                                                                     -4
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ae_eq?")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "restrict")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "pointwise_ae?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "ae?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "fullset")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "ae_in?")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "DIVERGENT")
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "*")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "complement")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "phi")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (rewrite
                                                                                                                     "null_is_negligible")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -3
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "indefinite_integrable"
                                                                                                     ("E"
                                                                                                      "complement[T](DIVERGENT)"
                                                                                                      "f"
                                                                                                      "F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "measurable_complement")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_below?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "0")
                                                                                        (("2"
                                                                                          (skolem
                                                                                           +
                                                                                           ("n!1"))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "o ")
                                                                                            (("2"
                                                                                              (hide
                                                                                               -3
                                                                                               -4)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "measurable_complement"
                                                                                                 ("a"
                                                                                                  "DIVERGENT"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "indefinite_integrable"
                                                                                                   ("E"
                                                                                                    "complement[T](DIVERGENT)"
                                                                                                    "f"
                                                                                                    "F!2(n!1)"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "integral_ae_eq"
                                                                                                     ("f"
                                                                                                      "F!2(n!1)"
                                                                                                      "h"
                                                                                                      "phi(complement[T](DIVERGENT)) * F!2(n!1)"))
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           *
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "integral_nonneg"
                                                                                                             ("f"
                                                                                                              "F!2(n!1)"))
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ae_eq?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "restrict")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "pointwise_ae?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "ae?")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "fullset")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "ae_in?")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       +
                                                                                                                       "DIVERGENT")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "*")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "complement")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "phi")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "member")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (rewrite
                                                                                                                         "null_is_negligible")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "integrable_is_measurable")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "indefinite_integrable"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "measurable_complement")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (replace
                                                                                 -1
                                                                                 1
                                                                                 rl)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -1
                                                                            -13
                                                                            -8))
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise_bounded?")
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "bounded_seq?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "fullset")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Im")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "bounded?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "above_bounded")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "x!2+r!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "upper_bound")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "z!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1")
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "ball")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "x!3")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-7
                                                                          -12
                                                                          1))
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise_bounded?")
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_increasing?")
                                                                            (("2"
                                                                              (expand
                                                                               "pointwise?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "complement")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "phi")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "DIVERGENT(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "bounded_seq?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "image")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "bounded?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "subset?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "abs")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "bounded_seq?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "image")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "bounded?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0"
                                                                                                             "k!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "ball")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!3")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "null_set?")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "FORALL (n, m,k: nat): n<=k=>subset?(H(n)(m), H(k)(m))")
                                                                            (("1"
                                                                              (hide
                                                                               -4
                                                                               -5)
                                                                              (("1"
                                                                                (lemma
                                                                                 "m_decreasing_convergence"
                                                                                 ("E"
                                                                                  "HH"))
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "decreasing?(HH)")
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "mu_fin?[T, S, m](HH(0))")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_converges?"
                                                                                       -3)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "o"
                                                                                         -3)
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "(FORALL (i:nat): m(HH(i))`1)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -9)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "DIVERGENT")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "m(IIntersection(HH))`1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "mu_fin?")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "mH"
                                                                                                       "lambda n: m(HH(n))`2")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "bounded_below_is_convergent"
                                                                                                         ("u"
                                                                                                          "mH"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "convergent(mH)")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "forall n: mH(n) <= M / (1 + n)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "mu"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -8)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -4
                                                                                                                     -8
                                                                                                                     -13)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "limit_def"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "convergent_downto?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "converges_downto?")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -4
                                                                                                                                1))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "convergence")
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "mH"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "0<=M")
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "<="
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "posreal_div_posreal_is_posreal"
                                                                                                                                                 ("px"
                                                                                                                                                  "epsilon!1"
                                                                                                                                                  "py"
                                                                                                                                                  "M"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "archimedean"
                                                                                                                                                   ("px"
                                                                                                                                                    "epsilon!1 / M"))
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "n!1-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "n!1-1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "decreasing?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "n!1-1"
                                                                                                                                                                 "i!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "div_mult_pos_lt2"
                                                                                                                                                                         -1)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 *
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "0")
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "mH")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "abs")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "m(HH(i!1))`2")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2
                                                                                                                 -3
                                                                                                                 -7
                                                                                                                 -12)
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "convergent_downto?")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "converges_downto_def"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -9
                                                                                                                             "_"
                                                                                                                             "n!1")
                                                                                                                            (("2"
                                                                                                                              (name-replace
                                                                                                                               "RHS"
                                                                                                                               "M / (1 + n!1)")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -15
                                                                                                                                 -14)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "m_increasing_convergence"
                                                                                                                                   ("E"
                                                                                                                                    "lambda n: H(n)(n!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (case-replace
                                                                                                                                     "increasing?(LAMBDA n: H(n)(n!1))")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "o ")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_converges?")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -13
                                                                                                                                           "_"
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -13)
                                                                                                                                            (("1"
                                                                                                                                              (case-replace
                                                                                                                                               "convergent(LAMBDA i: m(H(i)(n!1))`2)")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mH")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "HH")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -4)
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "UU"
                                                                                                                                                         "LAMBDA (i:nat): m(H(i)(n!1))`2")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "increasing?(UU)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "forall n: UU(n)<=RHS")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-1
                                                                                                                                                                -2
                                                                                                                                                                -3
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "increasing_bounded_convergence"
                                                                                                                                                                 ("v1"
                                                                                                                                                                  "UU"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "limit_def"
                                                                                                                                                                     -1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1
                                                                                                                                                                         -4)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "supfun_is_sup2")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   2
                                                                                                                                                                   -3)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "bounded_above?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "RHS")
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "UU")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -14
                                                                                                                                                                   "n!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "increasing?")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "UU")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2"
                                                                                                                                                                     "y!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst-cp
                                                                                                                                                                         -17
                                                                                                                                                                         "x!2"
                                                                                                                                                                         "n!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -17
                                                                                                                                                                           "y!1"
                                                                                                                                                                           "n!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -15
                                                                                                                                                                             "y!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "m_monotone"
                                                                                                                                                                               ("a"
                                                                                                                                                                                "H(x!2)(n!1)"
                                                                                                                                                                                "b"
                                                                                                                                                                                "H(y!1)(n!1)"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "x_le")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -17
                                                                                                                                                             "i!1"
                                                                                                                                                             "n!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "measurable_set?")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "bounded_above_is_convergent"
                                                                                                                                                 ("u"
                                                                                                                                                  "LAMBDA n: m(H(n)(n!1))`2"))
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent_upto?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "converges_upto?")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "metric_convergence_def")
                                                                                                                                                            (("1"
                                                                                                                                                              (hide
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ball")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergent?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "convergence")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "epsilon!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!2")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (grind)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -11))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "bounded_above?")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "RHS")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "mu")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-11
                                                                                                                                                      -13
                                                                                                                                                      -15
                                                                                                                                                      1
                                                                                                                                                      -1))
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "increasing?")
                                                                                                                                                      (("3"
                                                                                                                                                        (skolem
                                                                                                                                                         +
                                                                                                                                                         ("i!1"
                                                                                                                                                          "j!1"))
                                                                                                                                                        (("3"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1"
                                                                                                                                                             "j!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -
                                                                                                                                                                 "i!1"
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1"
                                                                                                                                                                   "n!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "m_monotone"
                                                                                                                                                                     ("a"
                                                                                                                                                                      "H(i!1)(n!1)"
                                                                                                                                                                      "b"
                                                                                                                                                                      "H(j!1)(n!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -4
                                                                                                                                                                           "j!1")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -15
                                                                                                                                                     "n!2"
                                                                                                                                                     "n!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "measurable_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (skosimp)
                                                                                                                                                (("3"
                                                                                                                                                  (inst
                                                                                                                                                   -15
                                                                                                                                                   "i!1"
                                                                                                                                                   "n!1")
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("3"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-9
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "increasing?")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!2"
                                                                                                                                             "n!1"
                                                                                                                                             "y!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "n!2"
                                                                                                                                       "n!1")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "convergent_downto?")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "converges_downto?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "metric_convergence_def")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "ball")
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "convergence")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "x!1")
                                                                                                                                      (("2"
                                                                                                                                        (skosimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "epsilon!1")
                                                                                                                                          (("2"
                                                                                                                                            (skosimp)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "n!1")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "i!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (grind)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "bounded_below?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "mH")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             -5
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("3"
                                                                                                                (skolem
                                                                                                                 +
                                                                                                                 ("i!1"
                                                                                                                  "j!1"))
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1"
                                                                                                                   "j!1")
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (hide-all-but
                                                                                                                           (-3
                                                                                                                            -5
                                                                                                                            -11
                                                                                                                            1))
                                                                                                                          (("3"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "j!1")
                                                                                                                              (("3"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "i!1")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "j!1")
                                                                                                                                  (("3"
                                                                                                                                    (lemma
                                                                                                                                     "m_monotone"
                                                                                                                                     ("a"
                                                                                                                                      "HH(j!1)"
                                                                                                                                      "b"
                                                                                                                                      "HH(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "x_le")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "mH")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -11
                                                                                                           "n!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   2
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "m_monotone"
                                                                                                       ("a"
                                                                                                        "IIntersection(HH)"
                                                                                                        "b"
                                                                                                        "HH(0)"))
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         -9
                                                                                                         "0")
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (expand
                                                                                                   "measurable_set?")
                                                                                                  (("3"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "decreasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0"
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_monotone"
                                                                                                     ("a"
                                                                                                      "HH(i!1)"
                                                                                                      "b"
                                                                                                      "HH(0)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          -2
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "mu_fin?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "x_le")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -10
                                                                                                       "i!1")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (inst
                                                                                               -10
                                                                                               "i!1")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1
                                                                                         -2
                                                                                         -5)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "HH")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "_"
                                                                                             "0")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "_"
                                                                                               "0")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "_"
                                                                                                 "0")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_increasing_convergence"
                                                                                                     ("E"
                                                                                                      "LAMBDA n: H(n)(0)"))
                                                                                                    (("1"
                                                                                                      (case-replace
                                                                                                       "increasing?(LAMBDA n: H(n)(0))")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_converges?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "mu_fin?"
                                                                                                             (-5
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               1
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "mH"
                                                                                                                       "LAMBDA n: m(H(n)(0))`2")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "increasing?(mH)")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "forall n: mH(n)<=M")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              1))
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "bounded_above_is_convergent"
                                                                                                                               ("u"
                                                                                                                                "mH"))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "convergent_upto?")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "converges_upto?")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "metric_convergence_def")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "metric_converges_to")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "ball")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     -2
                                                                                                                                                     -3
                                                                                                                                                     -4)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "convergence")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "epsilon!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   " n!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "bounded_above?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "M")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -4
                                                                                                                               "n!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "mu")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "mH")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           2
                                                                                                                           -10
                                                                                                                           -9
                                                                                                                           -5
                                                                                                                           -2
                                                                                                                           -3
                                                                                                                           -6
                                                                                                                           -7)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "increasing?")
                                                                                                                            (("2"
                                                                                                                              (skolem
                                                                                                                               +
                                                                                                                               ("i!1"
                                                                                                                                "j!1"))
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "i!1"
                                                                                                                                   "j!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "mH")
                                                                                                                                      (("2"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "j!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "j!1")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "m_monotone"
                                                                                                                                                 ("a"
                                                                                                                                                  "H(i!1)(0)"
                                                                                                                                                  "b"
                                                                                                                                                  "H(j!1)(0)"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "x_le")
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -8
                                                                                                                           "n!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "measurable_set?")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "increasing?")
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             +
                                                                                                             ("i!1"
                                                                                                              "j!1"))
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1"
                                                                                                                 "0"
                                                                                                                 "j!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (inst
                                                                                       -9
                                                                                       "0")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (1
                                                                                      -11))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "decreasing?")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         +
                                                                                         ("i!1"
                                                                                          "j!1"))
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "pointwise_increasing?")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "HH")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "H")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "increasing?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-11
                                                                                1))
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "H")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_increasing?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "increasing?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n!1"
                                                                                                 "k!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-2
                                                                    -9
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "n!1"
                                                                       "m!1")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "n!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "div_mult_pos_le2"
                                                                           ("py"
                                                                            "m!1 + 1"
                                                                            "x"
                                                                            "mu(H(n!1)(m!1))"
                                                                            "z"
                                                                            "M"))
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "integral_nn")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "HH")
                                                                  (("2"
                                                                    (expand
                                                                     "IUnion")
                                                                    (("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1"
                                                     "_")
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "nn_integrable_le"
                                                         ("g"
                                                          "(m!1 + 1) * phi(H(n!1)(m!1))"
                                                          "f"
                                                          "F!2(n!1)"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "isf_phi"
                                                               ("E"
                                                                "H(n!1)(m!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "isf_scal"
                                                                 ("c"
                                                                  "m!1+1"
                                                                  "i"
                                                                  "phi[T, S](H(n!1)(m!1))"))
                                                                (("1"
                                                                  (name-replace
                                                                   "RHS"
                                                                   "nn_integral(F!2(n!1))")
                                                                  (("1"
                                                                    (rewrite
                                                                     "integral_nn"
                                                                     -4
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (rewrite
                                                                       "integral_scal"
                                                                       -4)
                                                                      (("1"
                                                                        (rewrite
                                                                         "integral_phi"
                                                                         -4)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-2
                                                                          1))
                                                                        (("2"
                                                                          (lemma
                                                                           "nn_isf_is_nn_integrable")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "phi[T, S](H(n!1)(m!1))")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nn_integrable_is_nn_integrable")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "nn_integrable_is_integrable")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "phi[T, S](H(n!1)(m!1))")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "nn_isf?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "phi")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("2"
                                                                                        (case-replace
                                                                                         "H(n!1)(m!1)(x!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -8
                                                                 "n!1"
                                                                 "m!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "x!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "*")
                                                                    (("2"
                                                                      (expand
                                                                       "phi")
                                                                      (("2"
                                                                        (expand
                                                                         "member")
                                                                        (("2"
                                                                          (case-replace
                                                                           "H(n!1)(m!1)(x!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "scal_measurable")
                                                          (("2"
                                                            (lemma
                                                             "phi_is_simple"
                                                             ("X"
                                                              "H(n!1)(m!1)"))
                                                            (("2"
                                                              (rewrite
                                                               "simple_is_measurable")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst
                                                     -2
                                                     "n!1"
                                                     "m!1")
                                                    (("3"
                                                      (inst
                                                       -6
                                                       "n!1"
                                                       "m!1")
                                                      (("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2 -2 -1)
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (expand "phi")
                                                    (("2"
                                                      (expand "H")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (expand "*")
                                                          (("2"
                                                            (case-replace
                                                             "F!2(n!1)(x!1) >= 1 + m!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (1 -4))
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "n!1"
                                                     "m!1")
                                                    (("2"
                                                      (lemma
                                                       "integrable_nz_finite"
                                                       ("f"
                                                        "F!2(n!1)"
                                                        "epsilon"
                                                        "m!1+1/2"))
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (case-replace
                                                           "{x: T | abs(F!2(n!1)(x)) >= m!1 + 1 / 2}={x | F!2(n!1)(x) >= m!1 + 1 / 2}")
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (lemma
                                                               "m_monotone"
                                                               ("a"
                                                                "{x | F!2(n!1)(x) >= 1 + m!1}"
                                                                "b"
                                                                "{x | F!2(n!1)(x) >= m!1 + 1 / 2}"))
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "x_le")
                                                                  (("1"
                                                                    (expand
                                                                     "mu_fin?")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply-extensionality
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (expand
                                                               "abs")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "IIntersection")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "HH")
                                                        (("1"
                                                          (expand
                                                           "IUnion")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (inst
                                                               2
                                                               "1+i!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "n!1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp*)
                                                  (("2"
                                                    (expand
                                                     "IIntersection")
                                                    (("2"
                                                      (expand "HH")
                                                      (("2"
                                                        (expand
                                                         "IUnion")
                                                        (("2"
                                                          (expand "H")
                                                          (("2"
                                                            (typepred
                                                             "k!1")
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "k!1-1")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "HH")
                                            (("2"
                                              (rewrite
                                               "measurable_IUnion")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "n!1" "m!1")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (expand "H")
                                            (("2"
                                              (typepred "F!2(n!1)")
                                              (("2"
                                                (lemma
                                                 "nn_integrable_is_measurable")
                                                (("2"
                                                  (inst - "F!2(n!1)")
                                                  (("2"
                                                    (rewrite
                                                     "measurable_ge")
                                                    (("2"
                                                      (inst - "1+m!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nn_integrable? const-decl "bool" nn_integral nil)
    (nn_integrable nonempty-type-eq-decl nil nn_integral nil)
    (nn_integrable_is_nn_integrable formula-decl nil integral nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (integrable_add judgement-tcc nil integral nil)
    (phi_is_simple judgement-tcc nil measure_space nil)
    (prod_measurable judgement-tcc nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (negligible_union judgement-tcc nil measure_theory nil)
    (metric_zero? const-decl "bool" metric_def metric_space)
    (metric_symmetric? const-decl "bool" metric_def metric_space)
    (metric_triangle? const-decl "bool" metric_def metric_space)
    (metric? const-decl "bool" metric_def metric_space)
    (integral_nonneg formula-decl nil integral nil)
    (integral_diff formula-decl nil integral nil)
    (integrable_diff judgement-tcc nil integral nil)
    (measurable_IUnion judgement-tcc nil measure_space_def nil)
    (measurable_IIntersection judgement-tcc nil measure_space_def nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (mu const-decl "nnreal" measure_props nil)
    (nn_integral const-decl "nnreal" nn_integral nil)
    (least_upper_bound const-decl "bool" bound_defs reals)
    (sup_set type-eq-decl nil bounded_reals reals)
    (nonempty? const-decl "bool" sets nil)
    (above_bounded const-decl "bool" bounded_reals reals)
    (sup const-decl "{x | least_upper_bound(<=)(x, Su)}" bounded_reals
         reals)
    (upper_bound const-decl "bool" bound_defs reals)
    (pointwise? const-decl "bool" pointwise_convergence nil)
    (bounded_seq? const-decl "bool" convergence_aux metric_space)
    (bounded? const-decl "bool" metric_space_def metric_space)
    (pointwise_bounded? const-decl "bool" pointwise_convergence nil)
    (m_decreasing_convergence formula-decl nil measure_props nil)
    (bounded_below_is_convergent formula-decl nil convergence_aux
     metric_space)
    (convergent? const-decl "bool" convergence_sequences analysis)
    (converges_downto_def formula-decl nil convergence_aux
     metric_space)
    (increasing? const-decl "bool" fun_preds_partial structures)
    (bounded_above_is_convergent formula-decl nil convergence_aux
     metric_space)
    (converges_upto? const-decl "bool" convergence_aux metric_space)
    (convergent_upto? const-decl "bool" convergence_aux metric_space)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (m_monotone formula-decl nil measure_props nil)
    (increasing_bounded_convergence formula-decl nil
     convergence_sequences analysis)
    (sup const-decl "real" real_fun_supinf analysis)
    (supfun_is_sup2 formula-decl nil real_fun_supinf analysis)
    (m_increasing_convergence formula-decl nil measure_props nil)
    (convergent_downto? const-decl "bool" convergence_aux metric_space)
    (convergence const-decl "bool" convergence_sequences analysis)
    (decreasing? const-decl "bool" real_fun_preds reals)
    (converges_downto? const-decl "bool" convergence_aux metric_space)
    (limit_def formula-decl nil convergence_sequences analysis)
    (x_converges? const-decl "bool" extended_nnreal extended_nnreal)
    (decreasing? const-decl "bool" fun_preds_partial structures)
    (integral_nn formula-decl nil integral nil)
    (nn_integrable_le formula-decl nil nn_integral nil)
    (isf_scal judgement-tcc nil isf nil)
    (isf? const-decl "bool" isf nil)
    (isf nonempty-type-eq-decl nil isf nil)
    (nn_isf? const-decl "bool" nn_integral nil)
    (nn_isf nonempty-type-eq-decl nil nn_integral nil)
    (nn_integrable_is_integrable judgement-tcc nil integral nil)
    (nn_isf_is_nn_integrable judgement-tcc nil nn_integral nil)
    (integral_phi formula-decl nil integral nil)
    (integral_scal formula-decl nil integral nil)
    (isf_phi judgement-tcc nil isf nil)
    (scal_measurable judgement-tcc nil measure_space_def nil)
    (integrable_nz_finite formula-decl nil integral nil)
    (nn_integrable_is_measurable judgement-tcc nil nn_integral nil)
    (measurable_ge formula-decl nil measure_space_def nil)
    (integral_ae_le formula-decl nil integral nil)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (metric_converges_to const-decl "bool" metric_space_def
     metric_space)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (ae_le? const-decl "bool" measure_theory nil)
    (null_is_negligible judgement-tcc nil measure_theory nil)
    (bounded_above? const-decl "bool" real_fun_preds reals)
    (bounded_below? const-decl "bool" real_fun_preds reals)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (set type-eq-decl nil sets nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (union const-decl "set" sets nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (null_set? const-decl "bool" measure_theory nil)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (measurable_complement judgement-tcc nil measure_space_def nil)
    (indefinite_integrable formula-decl nil integral nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology metric_space)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (integral_ae_eq formula-decl nil integral nil)
    (pointwise_converges_upto? const-decl "bool" pointwise_convergence
     nil)
    (increasing? const-decl "bool" real_fun_preds reals)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (convergence? const-decl "bool" topological_convergence topology)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (complement const-decl "set" sets nil)
    (phi const-decl "nat" measure_space nil)
    (monotone_convergence_scaf formula-decl nil
     integral_convergence_scaf nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (fullset const-decl "set" sets nil)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (integral const-decl "real" integral nil)
    (bounded? const-decl "bool" real_fun_preds reals)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (sequence type-eq-decl nil sequences nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (integrable? const-decl "bool" integral nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil))
   shostak))
 (dominated_convergence 0
  (dominated_convergence-3 "" 3789904196
   (""
    (case "FORALL (F: sequence[integrable], f: integrable[T, S, m]):
               (FORALL n,x: abs(F(n))(x) <= f(x)) AND pointwise_convergent?(F)  =>
                (EXISTS f:
                   pointwise_convergence?(F, f) AND
                    convergence?(integral o F, integral(f)))")
    (("1" (skosimp)
      (("1"
        (case "exists E: forall x: not E(x) => FORALL n: abs(F!1(n))(x) <= f!1(x)")
        (("1"
          (case "EXISTS (E:negligible,f: [T -> real]):
                        FORALL (x: T): not E(x) => convergence?(LAMBDA n: F!1(n)(x), f(x))")
          (("1" (skosimp*)
            (("1" (typepred "union(E!1,E!2)")
              (("1" (expand "negligible_set?")
                (("1" (skosimp)
                  (("1" (lemma "measurable_complement" ("a" "X!1"))
                    (("1"
                      (lemma "indefinite_integrable"
                       ("f" "f!1" "E" "complement[T](X!1)"))
                      (("1"
                        (case "forall n: integrable?(phi(complement[T](X!1)) * F!1(n))")
                        (("1"
                          (inst -8
                           "lambda n: phi(complement[T](X!1)) * F!1(n)"
                           "phi(complement[T](X!1)) * f!1")
                          (("1" (split -8)
                            (("1" (skosimp)
                              (("1"
                                (inst + "f!3")
                                (("1"
                                  (split 1)
                                  (("1"
                                    (hide-all-but (-1 -6 1))
                                    (("1"
                                      (expand "pointwise_convergence?")
                                      (("1"
                                        (expand "ae_convergence?")
                                        (("1"
                                          (expand "fullset")
                                          (("1"
                                            (expand
                                             "ae_convergence_in?")
                                            (("1"
                                              (expand "ae_in?")
                                              (("1"
                                                (inst + "X!1")
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst - "x!1")
                                                    (("1"
                                                      (expand "*")
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but (-2 -6 1 -3 -4))
                                    (("2"
                                      (case-replace
                                       "integral o (LAMBDA n: phi(complement[T](X!1)) * F!1(n))=integral o F!1")
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (expand "o")
                                          (("2"
                                            (hide -1 2)
                                            (("2"
                                              (lemma
                                               "integral_ae_eq"
                                               ("f"
                                                "F!1(x!1)"
                                                "h"
                                                "phi(complement[T](X!1)) * F!1(x!1)"))
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2 -1 -2)
                                                  (("2"
                                                    (expand "ae_eq?")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand "ae?")
                                                        (("2"
                                                          (expand
                                                           "fullset")
                                                          (("2"
                                                            (expand
                                                             "ae_in?")
                                                            (("2"
                                                              (inst
                                                               +
                                                               "X!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (expand
                                                                   "*")
                                                                  (("1"
                                                                    (expand
                                                                     "complement")
                                                                    (("1"
                                                                      (expand
                                                                       "phi")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (rewrite
                                                                 "null_is_negligible")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "integrable_is_measurable")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but (-4 -5 -7 1))
                              (("2"
                                (skosimp)
                                (("2"
                                  (expand "*")
                                  (("2"
                                    (expand "abs")
                                    (("2"
                                      (inst - "x!1")
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "union")
                                          (("2"
                                            (expand "complement")
                                            (("2"
                                              (expand "phi")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "n!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but (-4 -5 -6 1))
                              (("3"
                                (expand "pointwise_convergent?")
                                (("3"
                                  (inst
                                   +
                                   "phi(complement[T](X!1)) * f!2")
                                  (("3"
                                    (expand "pointwise_convergence?")
                                    (("3"
                                      (skosimp)
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "union")
                                          (("3"
                                            (expand "subset?")
                                            (("3"
                                              (expand "*")
                                              (("3"
                                                (expand "complement")
                                                (("3"
                                                  (expand "phi")
                                                  (("3"
                                                    (expand "member")
                                                    (("3"
                                                      (inst - "x!1")
                                                      (("3"
                                                        (case-replace
                                                         "X!1(x!1)")
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "metric_convergence_def")
                                                            (("1"
                                                              (expand
                                                               "metric_converges_to")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "0")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (expand
                                                                       "ball")
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp)
                          (("2" (rewrite "indefinite_integrable") nil
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil))
                      nil)
                     ("2" (expand "null_set?")
                      (("2" (flatten) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide-all-but (1 -4))
            (("2" (expand "ae_convergent?")
              (("2" (skosimp)
                (("2" (expand "ae_convergence?")
                  (("2" (expand "fullset")
                    (("2" (expand "ae_convergence_in?")
                      (("2" (expand "ae_in?")
                        (("2" (skosimp)
                          (("2" (inst + "E!1" "f!2")
                            (("2" (skosimp)
                              (("2"
                                (inst - "x!1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but (-2 1))
          (("2" (expand "ae_le?")
            (("2" (expand "pointwise_ae?")
              (("2" (expand "ae?")
                (("2" (expand "fullset")
                  (("2" (expand "ae_in?")
                    (("2"
                      (name "EN"
                            "lambda n: choose({E| forall x: not E(x)=> abs(F!1(n))(x) <= f!1(x)})")
                      (("1" (inst + "IUnion(EN)")
                        (("1" (skosimp)
                          (("1" (skosimp)
                            (("1" (expand "IUnion")
                              (("1"
                                (inst - "n!1")
                                (("1"
                                  (inst + "n!1")
                                  (("1"
                                    (expand "EN")
                                    (("1"
                                      (typepred
                                       "choose({E | FORALL x: NOT E(x) => abs(F!1(n!1))(x) <= f!1(x)})")
                                      (("1"
                                        (name-replace
                                         "CHOICE"
                                         "choose({E | FORALL x: NOT E(x) => abs(F!1(n!1))(x) <= f!1(x)})")
                                        (("1"
                                          (inst - "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-2 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "nonempty?")
                                            (("2"
                                              (expand "empty?")
                                              (("2"
                                                (inst - "E!1")
                                                (("2"
                                                  (expand "member")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp)
                          (("2" (inst - "n!1")
                            (("2" (skosimp)
                              (("2"
                                (expand "nonempty?")
                                (("2"
                                  (expand "empty?")
                                  (("2"
                                    (inst - "E!1")
                                    (("2"
                                      (expand "member")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (skosimp)
        (("2" (expand "pointwise_convergent?")
          (("2" (skosimp)
            (("2" (lemma "pointwise_measurable" ("u" "F!1" "f" "f!2"))
              (("2" (assert)
                (("2" (lemma "integral_ae_abs" ("h" "f!2" "f" "f!1"))
                  (("2" (case "forall x: abs(f!2)(x) <= f!1(x)")
                    (("1" (split -2)
                      (("1" (flatten)
                        (("1" (name-replace "FF" "f!2")
                          (("1" (name-replace "GG" "f!1")
                            (("1"
                              (case "forall n: integrable?(F!1(n)-FF)")
                              (("1"
                                (case
                                 "forall n,x: abs(F!1(n)-FF)(x)<=2*GG(x)")
                                (("1"
                                  (case
                                   "pointwise_convergence?(lambda n: abs(F!1(n) - FF), lambda x: 0)")
                                  (("1"
                                    (inst + "FF")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma
                                         "integrable_scal"
                                         ("c" "2" "f" "GG"))
                                        (("1"
                                          (case
                                           "pointwise_bounded_above?[T](LAMBDA n: abs[T]((-[T])(F!1(n), FF)))")
                                          (("1"
                                            (name
                                             "H"
                                             "sup(lambda n: abs(F!1(n) - FF))")
                                            (("1"
                                              (case
                                               "forall n: measurable_function?(H(n))")
                                              (("1"
                                                (case
                                                 "forall n,x: least_upper_bound(<=)
                                                (H(n)(x),
                                                 {y: real |
                                                    EXISTS (i: ({m: nat | m >= n})):
                                                      y = abs(F!1(i) - FF)(x)})")
                                                (("1"
                                                  (case
                                                   "forall n,x: 0<=H(n)(x)&H(n)(x)<=2*GG(x)")
                                                  (("1"
                                                    (case
                                                     "pointwise_decreasing?(H)")
                                                    (("1"
                                                      (case
                                                       "forall n: integrable?(H(n))")
                                                      (("1"
                                                        (lemma
                                                         "monotone_convergence"
                                                         ("F" "-H"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -2)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "lambda (x:T): 0")
                                                                (("1"
                                                                  (rewrite
                                                                   "integral_zero")
                                                                  (("1"
                                                                    (case
                                                                     "pointwise_bounded_above?[T](LAMBDA n: abs[T](F!1(n)))")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_convergence?(H, (lambda (x:T): 0))")
                                                                      (("1"
                                                                        (split
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "converges_upto?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (case
                                                                               "forall n,x: FF(x)-H(n)(x)<= F!1(n)(x)& F!1(n)(x) <= FF(x)+H(n)(x)")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -6
                                                                                  -2
                                                                                  -8
                                                                                  -17
                                                                                  1))
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "metric_convergence_def")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "metric_convergence_def")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "metric_converges_to")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "r!1")
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (inst
                                                                                               +
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "i!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ball")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "abs_mult")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "abs"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "o")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "-"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "integral_opp"
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "neg_neg")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "i!1")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "integral[T, S, m].integral(H(i!1))<r!1")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "integral_nonneg"
                                                                                                                           ("f"
                                                                                                                            "H(i!1)"))
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "integral_ae_le"
                                                                                                                               ("f1"
                                                                                                                                "FF-H(i!1)"
                                                                                                                                "f2"
                                                                                                                                "F!1(i!1)"))
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "integral_diff")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "integral_ae_le"
                                                                                                                                     ("f1"
                                                                                                                                      "F!1(i!1)"
                                                                                                                                      "f2"
                                                                                                                                      "FF+H(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "integral_add")
                                                                                                                                        (("1"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            -2
                                                                                                                                            -3
                                                                                                                                            -4
                                                                                                                                            1))
                                                                                                                                          (("1"
                                                                                                                                            (name-replace
                                                                                                                                             "i_H"
                                                                                                                                             "integral[T, S, m].integral(H(i!1))")
                                                                                                                                            (("1"
                                                                                                                                              (name-replace
                                                                                                                                               "i_F"
                                                                                                                                               "integral[T, S, m].integral(F!1(i!1))")
                                                                                                                                              (("1"
                                                                                                                                                (name-replace
                                                                                                                                                 "i_FF"
                                                                                                                                                 "integral[T, S, m].integral(FF)")
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (1
                                                                                                                                          -4))
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ae_le?")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "pointwise_ae?")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "ae?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "fullset")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ae_in?")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "emptyset[T]")
                                                                                                                                                    (("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "i!1"
                                                                                                                                                         "x!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "+")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (rewrite
                                                                                                                                       "integrable_add")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-3
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ae_le?")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "pointwise_ae?")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "ae?")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "ae_in?")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "emptyset[T]")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "i!1"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "-")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (rewrite
                                                                                                                                 "integrable_diff")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (skosimp)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -4
                                                                                                                                 "i!1"
                                                                                                                                 "x!1")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case-replace
                                                                                                                         "-integral((H(i!1))) < 0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst?
                                                                                                                     -3)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-8
                                                                                  -11
                                                                                  -3
                                                                                  1
                                                                                  -6
                                                                                  -7))
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -4
                                                                                     "n!1"
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "least_upper_bound")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "upper_bound")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -4
                                                                                               "abs(F!1(n!1)-FF)(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "triangle"
                                                                                                     ("x"
                                                                                                      "F!1(n!1)(x!1) - FF(x!1)"
                                                                                                      "y"
                                                                                                      "FF(x!1)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "n!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "upper_bound")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "abs(F!1(n!1)-FF)(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "triangle"
                                                                                                     ("x"
                                                                                                      "F!1(n!1)(x!1)"
                                                                                                      "y"
                                                                                                      "-FF(x!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "abs_neg")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         -1
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "n!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (-1
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "ae_convergence?")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_convergence_in?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "emptyset[T]")
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_convergence?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "-")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "-")
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "metric_convergence_def")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "metric_converges_to")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ball")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "metric_convergence_def")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "metric_converges_to")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "r!1")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "n!1")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "i!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "ball")
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4
                                                                            -5
                                                                            -6
                                                                            -9
                                                                            -11
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_convergence?")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise_decreasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "_"
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "_"
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -5
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "metric_convergence_def")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "metric_convergence_def")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "converges_downto_is_glb"
                                                                                               ("u"
                                                                                                "LAMBDA n: H(n)(x!1)"
                                                                                                "x"
                                                                                                "0"))
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "converges_downto?")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "metric_convergence_def")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "bounded_below?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "x!2")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "fullset")
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "image")
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "greatest_lower_bound?")
                                                                                                                  (("3"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "lower_bound?")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "s!1")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "x!2")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "0<y!1")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "lower_bound?")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -7
                                                                                                                                 "y!1/2")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "ball")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "member")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "H(n!1)(x!1)")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -5
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "least_upper_bound")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -6
                                                                                                                                                 "y!1/2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "upper_bound"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "z!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "i!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -9
                                                                                                                                                               "i!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "abs_mult"
                                                                                                                                                                   -9)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs"
                                                                                                                                                                     -9
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "abs"
                                                                                                                                                                       -9
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "abs_abs")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs"
                                                                                                                                                                           -2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "n!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2
                                                                       -1
                                                                       -2
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("2"
                                                                        (expand
                                                                         "pointwise_bounded_above?")
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise?"
                                                                             +)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "bounded_above?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "4*GG(x!1)+abs(FF(x!1))")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -3
                                                                                       "x!2"
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-3
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "abs"
                                                                                           -)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs"
                                                                                             1
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "-"
                                                                                               -)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "triangle"
                                                                                                 ("x"
                                                                                                  "F!1(x!2)(x!1) - FF(x!1)"
                                                                                                  "y"
                                                                                                  "FF(x!1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (lemma
                                                                     "nn_integrable_zero")
                                                                    (("2"
                                                                      (rewrite
                                                                       "nn_integrable_is_integrable")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-2 1))
                                                            (("2"
                                                              (expand
                                                               "ae_increasing?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_decreasing?")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "emptyset[T]")
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("2"
                                                                            (expand
                                                                             "decreasing?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "-")
                                                                                (("2"
                                                                                  (expand
                                                                                   "-")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "x1!1")
                                                            (("2"
                                                              (expand
                                                               "-")
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_opp")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-2 -4 -7 1))
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "n!1")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "n!1"
                                                               "_")
                                                              (("2"
                                                                (lemma
                                                                 "nn_integrable_le"
                                                                 ("g"
                                                                  "H(n!1)"
                                                                  "f"
                                                                  "*[T](2, GG)"))
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (rewrite
                                                                       "nn_integrable_is_integrable")
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (expand
                                                                         "*")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil)
                                                                 ("3"
                                                                  (split)
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x1!1")
                                                                      (("1"
                                                                        (expand
                                                                         "*")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (rewrite
                                                                     "nn_integrable_is_nn_integrable")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "x!1")
                                                                        (("2"
                                                                          (expand
                                                                           "*")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand
                                                         "pointwise_decreasing?")
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (expand
                                                             "decreasing?")
                                                            (("2"
                                                              (skolem
                                                               +
                                                               ("i!1"
                                                                "j!1"))
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -3
                                                                   "i!1"
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     -3
                                                                     "j!1"
                                                                     "x!1")
                                                                    (("2"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -3
                                                                        -4
                                                                        1))
                                                                      (("2"
                                                                        (expand
                                                                         "least_upper_bound")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (expand
                                                                             "upper_bound")
                                                                            (("2"
                                                                              (inst
                                                                               -3
                                                                               "H(i!1)(x!1)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "z!1")
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "i!2")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -5
                                                                                           "abs(F!1(i!2) - FF)(x!1)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             +
                                                                                             "i!2")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1 -7))
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (inst
                                                         -
                                                         "n!1"
                                                         "x!1")
                                                        (("2"
                                                          (expand
                                                           "least_upper_bound")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "upper_bound")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "abs(F!1(n!1) - FF)(x!1)")
                                                                  (("1"
                                                                    (expand
                                                                     "abs"
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     +
                                                                     "n!1")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "2*GG(x!1)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "upper_bound")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (typepred
                                                                         "z!1")
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -4
                                                                               "i!1"
                                                                               "x!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (hide -1 -2)
                                                      (("2"
                                                        (expand "H")
                                                        (("2"
                                                          (expand
                                                           "sup")
                                                          (("2"
                                                            (expand
                                                             "image")
                                                            (("2"
                                                              (typepred
                                                               "sup({y: real |
                                                     EXISTS (x: ({m:nat | m >= n!1})):
                                                       y = abs(F!1(x) - FF)(x!1)})")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1))
                                                                (("2"
                                                                  (split)
                                                                  (("1"
                                                                    (expand
                                                                     "nonempty?")
                                                                    (("1"
                                                                      (expand
                                                                       "empty?")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "abs[T]((-[T])(F!1(n!1), FF))(x!1)")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "pointwise_bounded_above?")
                                                                    (("2"
                                                                      (expand
                                                                       "above_bounded")
                                                                      (("2"
                                                                        (expand
                                                                         "bounded_above?")
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise?")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "upper_bound")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "ceiling(a!1)")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "z!1")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!2")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (rewrite
                                                     "sup_measurable")
                                                    (("1"
                                                      (hide 2 3 -1)
                                                      (("1"
                                                        (expand
                                                         "measurable_bounded_above?")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skosimp)
                                                      (("2"
                                                        (hide-all-but
                                                         (-6 1))
                                                        (("2"
                                                          (inst
                                                           -
                                                           "n!2")
                                                          (("2"
                                                            (rewrite
                                                             "integrable_is_measurable")
                                                            (("2"
                                                              (hide 2)
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_abs")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (1 -3))
                                            (("2"
                                              (expand
                                               "pointwise_bounded_above?")
                                              (("2"
                                                (expand
                                                 "bounded_above?")
                                                (("2"
                                                  (expand "pointwise?")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "_"
                                                       "x!1")
                                                      (("2"
                                                        (inst
                                                         +
                                                         "2 * GG(x!1)")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (expand "pointwise_convergence?")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst -8 "x!1")
                                          (("2"
                                            (hide-all-but (-8 1))
                                            (("2"
                                              (rewrite
                                               "metric_convergence_def")
                                              (("2"
                                                (rewrite
                                                 "metric_convergence_def")
                                                (("2"
                                                  (expand
                                                   "metric_converges_to")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst - "r!1")
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (inst
                                                           +
                                                           "n!1")
                                                          (("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("2"
                                                                (expand
                                                                 "ball")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (skosimp)
                                    (("2"
                                      (expand "abs" 1)
                                      (("2"
                                        (expand "-" 1)
                                        (("2"
                                          (lemma
                                           "triangle"
                                           ("x"
                                            "F!1(n!1)(x!1)"
                                            "y"
                                            "-FF(x!1)"))
                                          (("2"
                                            (rewrite "abs_neg" -1)
                                            (("2"
                                              (hide-all-but
                                               (-1 -5 -7 1))
                                              (("2"
                                                (inst - "x!1")
                                                (("2"
                                                  (inst - "n!1" "x!1")
                                                  (("2"
                                                    (expand "abs" -2)
                                                    (("2"
                                                      (expand "abs" -3)
                                                      (("2"
                                                        (name-replace
                                                         "LHS"
                                                         "abs(F!1(n!1)(x!1) + -FF(x!1))")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp)
                                (("2"
                                  (rewrite "integrable_diff")
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -2 2)
                        (("2" (expand "ae_le?")
                          (("2" (expand "pointwise_ae?")
                            (("2" (expand "ae?")
                              (("2"
                                (expand "fullset")
                                (("2"
                                  (expand "ae_in?")
                                  (("2"
                                    (inst + "emptyset[T]")
                                    (("2"
                                      (skosimp)
                                      (("2"
                                        (hide 1)
                                        (("2"
                                          (inst - "x!1")
                                          (("2"
                                            (inst - "0" "x!1")
                                            (("2"
                                              (expand "abs")
                                              (("2"
                                                (typepred
                                                 "abs(F!1(0)(x!1))")
                                                (("2"
                                                  (expand "abs" 1 2)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (hide -6)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (-3 -4 1))
                      (("2" (skosimp)
                        (("2" (expand "pointwise_convergence?")
                          (("2" (inst - "_" "x!1")
                            (("2" (inst -2 "x!1")
                              (("2"
                                (rewrite "metric_convergence_def")
                                (("2"
                                  (case
                                   "metric_converges_to(LAMBDA n: abs(F!1(n)(x!1)), abs(f!2(x!1)))")
                                  (("1"
                                    (hide -3)
                                    (("1"
                                      (expand "metric_converges_to")
                                      (("1"
                                        (inst
                                         -
                                         "abs(f!2)(x!1) - f!1(x!1)")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst - "n!1")
                                            (("1"
                                              (inst - "n!1")
                                              (("1"
                                                (expand "ball")
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (expand "abs" -1 4)
                                                    (("1"
                                                      (expand "abs" 1)
                                                      (("1"
                                                        (name-replace
                                                         "LIMIT"
                                                         "abs(f!2(x!1))")
                                                        (("1"
                                                          (expand
                                                           "abs"
                                                           -2)
                                                          (("1"
                                                            (name-replace
                                                             "DRL1"
                                                             "abs(F!1(n!1)(x!1))")
                                                            (("1"
                                                              (expand
                                                               "abs")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2 -1)
                                    (("2"
                                      (expand "metric_converges_to")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "r!1")
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (inst + "n!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "i!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand "ball")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pointwise_measurable formula-decl nil measure_space nil)
    (integral_ae_abs formula-decl nil integral nil)
    (f!1 skolem-const-decl "integrable[T, S, m]" integral_convergence
     nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (f!2 skolem-const-decl "[T -> real]" integral_convergence nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (pointwise_bounded_above? const-decl "bool" pointwise_convergence
     nil)
    (sup_set type-eq-decl nil bounded_reals reals)
    (above_bounded const-decl "bool" bounded_reals reals)
    (sup const-decl "{x | least_upper_bound(<=)(x, Su)}" bounded_reals
         reals)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (integer nonempty-type-from-decl nil integers nil)
    (i!1 skolem-const-decl "nat" integral_convergence nil)
    (j!1 skolem-const-decl "nat" integral_convergence nil)
    (i!2 skolem-const-decl "({m: nat | m >= j!1})" integral_convergence
     nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (integrable_opp judgement-tcc nil integral nil)
    (nn_integrable nonempty-type-eq-decl nil nn_integral nil)
    (nn_integrable? const-decl "bool" nn_integral nil)
    (nn_integrable_is_integrable judgement-tcc nil integral nil)
    (nn_integrable_zero formula-decl nil nn_integral nil)
    (integral_zero formula-decl nil integral nil)
    (bounded_above? const-decl "bool" real_fun_preds reals)
    (pointwise? const-decl "bool" pointwise_convergence nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (converges_upto? const-decl "bool" convergence_aux metric_space)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (neg_neg formula-decl nil extra_tegies nil)
    (< const-decl "bool" reals nil)
    (integral_nonneg formula-decl nil integral nil)
    (integral_ae_le formula-decl nil integral nil)
    (integral_diff formula-decl nil integral nil)
    (integrable_add judgement-tcc nil integral nil)
    (integral_add formula-decl nil integral nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set" countable_props
     sets_aux)
    (finite_emptyset name-judgement "finite_set" countable_setofsets
     sets_aux)
    (finite_emptyset name-judgement "finite_set" sigma_countable
     sigma_set)
    (null_emptyset name-judgement "null_set" integral_convergence nil)
    (subset_algebra_emptyset name-judgement "(S)" integral_convergence
     nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (integrable_diff judgement-tcc nil integral nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (integral_opp formula-decl nil integral nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nzint_abs_is_pos application-judgement "{j: posint | j >= i}"
     real_defs nil)
    (abs_mult formula-decl nil real_props nil)
    (ball_is_metric_open application-judgement "metric_open"
     convergence_aux metric_space)
    (n!1 skolem-const-decl "nat" integral_convergence nil)
    (F!1 skolem-const-decl "sequence[integrable[T, S, m]]"
     integral_convergence nil)
    (FF skolem-const-decl "[T -> real]" integral_convergence nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (triangle formula-decl nil real_props nil)
    (upper_bound const-decl "bool" bound_defs reals)
    (abs_neg formula-decl nil abs_lems reals)
    (converges_downto_is_glb formula-decl nil convergence_aux
     metric_space)
    (converges_downto? const-decl "bool" convergence_aux metric_space)
    (bounded_below? const-decl "bool" real_fun_preds reals)
    (greatest_lower_bound? const-decl "bool" bounded_real_defs nil)
    (abs_abs formula-decl nil real_props nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (n!1 skolem-const-decl "nat" integral_convergence nil)
    (H skolem-const-decl "[nat -> [T -> real]]" integral_convergence
     nil)
    (y!1 skolem-const-decl "real" integral_convergence nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (lower_bound? const-decl "bool" bounded_real_defs nil)
    (image const-decl "set[R]" function_image nil)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (decreasing? const-decl "bool" real_fun_preds reals)
    (- const-decl "sequence[[T -> real]]" pointwise_convergence nil)
    (monotone_convergence formula-decl nil integral_convergence nil)
    (nn_integrable_is_nn_integrable formula-decl nil integral nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nn_integrable_le formula-decl nil nn_integral nil)
    (integrable_scal application-judgement "integrable"
     integral_convergence nil)
    (pointwise_decreasing? const-decl "bool" pointwise_convergence nil)
    (n!1 skolem-const-decl "nat" integral_convergence nil)
    (x!1 skolem-const-decl "T" integral_convergence nil)
    (least_upper_bound const-decl "bool" bound_defs reals)
    (pred type-eq-decl nil defined_types nil)
    (integrable_abs judgement-tcc nil integral nil)
    (sup_measurable formula-decl nil measure_space nil)
    (measurable_bounded_above? const-decl "bool" measure_space nil)
    (measurable_bounded_above nonempty-type-eq-decl nil measure_space
     nil)
    (sup const-decl "real" pointwise_convergence nil)
    (pointwise_bounded_above nonempty-type-eq-decl nil
     pointwise_convergence nil)
    (integrable_scal judgement-tcc nil integral nil)
    (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (integrable_abs application-judgement "integrable"
     integral_convergence nil)
    (empty? const-decl "bool" sets nil)
    (EN skolem-const-decl
     "[n: nat -> ({E | FORALL x: NOT E(x) => abs(F!1(n))(x) <= f!1(x)})]"
     integral_convergence nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (negligible_IUnion application-judgement "negligible"
     integral_convergence nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (negligible_union application-judgement "negligible"
     integral_convergence nil)
    (union const-decl "set" sets nil)
    (indefinite_integrable formula-decl nil integral nil)
    (complement const-decl "set" sets nil)
    (X!1 skolem-const-decl "set[T]" integral_convergence nil)
    (F!1 skolem-const-decl "sequence[integrable[T, S, m]]"
     integral_convergence nil)
    (f!1 skolem-const-decl "integrable[T, S, m]" integral_convergence
     nil)
    (metric_converges_to const-decl "bool" metric_space_def
     metric_space)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs_0 formula-decl nil abs_lems reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (subset? const-decl "bool" sets nil)
    (fullset const-decl "set" sets nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (null_set? const-decl "bool" measure_theory nil)
    (null_is_negligible judgement-tcc nil measure_theory nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (member const-decl "bool" sets nil)
    (TRUE const-decl "bool" booleans nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (integral_ae_eq formula-decl nil integral nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae? const-decl "bool" measure_theory nil)
    (subset_algebra_fullset name-judgement "(S)" integral_convergence
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     integral_convergence nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (phi const-decl "nat" measure_space nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_complement judgement-tcc nil measure_space_def nil)
    (ae_convergent? const-decl "bool" measure_theory nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (set type-eq-decl nil sets nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology metric_space)
    (metric_space_is_hausdorff name-judgement "hausdorff"
     convergence_aux metric_space)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (T formal-type-decl nil integral_convergence nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" integral_convergence nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (m formal-const-decl "measure_type" integral_convergence nil)
    (integrable? const-decl "bool" integral nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (sequence type-eq-decl nil sequences nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (pointwise_convergent? const-decl "bool" pointwise_convergence nil)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (convergence? const-decl "bool" topological_convergence topology)
    (O const-decl "T3" function_props nil)
    (integral const-decl "real" integral nil))
   shostak)
  (dominated_convergence-1 "" 3758904537
   (""
    (case "FORALL (F: sequence[integrable], f: integrable[T, S, m]):
               (FORALL n,x: abs(F(n))(x) <= f(x)) AND pointwise_convergent?(F)  =>
                (EXISTS f:
                   pointwise_convergence?(F, f) AND
                    convergence?(integral o F, integral(f)))")
    (("1" (skosimp)
      (("1"
        (case "exists E: forall x: not E(x) => FORALL n: abs(F!1(n))(x) <= f!1(x)")
        (("1"
          (case "EXISTS (E:negligible,f: [T -> real]):
                        FORALL (x: T): not E(x) => convergence?(LAMBDA n: F!1(n)(x), f(x))")
          (("1" (skosimp*)
            (("1" (typepred "union(E!1,E!2)")
              (("1" (expand "negligible_set?")
                (("1" (skosimp)
                  (("1" (lemma "measurable_complement" ("a" "X!1"))
                    (("1"
                      (lemma "indefinite_integrable"
                       ("f" "f!1" "E" "complement[T](X!1)"))
                      (("1"
                        (case "forall n: integrable?(phi(complement[T](X!1)) * F!1(n))")
                        (("1"
                          (inst -8
                           "lambda n: phi(complement[T](X!1)) * F!1(n)"
                           "phi(complement[T](X!1)) * f!1")
                          (("1" (split -8)
                            (("1" (skosimp)
                              (("1"
                                (inst + "f!3")
                                (("1"
                                  (split 1)
                                  (("1"
                                    (hide-all-but (-1 -6 1))
                                    (("1"
                                      (expand "pointwise_convergence?")
                                      (("1"
                                        (expand "ae_convergence?")
                                        (("1"
                                          (expand "fullset")
                                          (("1"
                                            (expand
                                             "ae_convergence_in?")
                                            (("1"
                                              (expand "ae_in?")
                                              (("1"
                                                (inst + "X!1")
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst - "x!1")
                                                    (("1"
                                                      (expand "*")
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but (-2 -6 1 -3 -4))
                                    (("2"
                                      (case-replace
                                       "integral o (LAMBDA n: phi(complement[T](X!1)) * F!1(n))=integral o F!1")
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (expand "o")
                                          (("2"
                                            (hide -1 2)
                                            (("2"
                                              (lemma
                                               "integral_ae_eq"
                                               ("f"
                                                "F!1(x!1)"
                                                "h"
                                                "phi(complement[T](X!1)) * F!1(x!1)"))
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2 -1 -2)
                                                  (("2"
                                                    (expand "ae_eq?")
                                                    (("2"
                                                      (expand
                                                       "pointwise_ae?")
                                                      (("2"
                                                        (expand "ae?")
                                                        (("2"
                                                          (expand
                                                           "fullset")
                                                          (("2"
                                                            (expand
                                                             "ae_in?")
                                                            (("2"
                                                              (inst
                                                               +
                                                               "X!1")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (expand
                                                                   "*")
                                                                  (("1"
                                                                    (expand
                                                                     "complement")
                                                                    (("1"
                                                                      (expand
                                                                       "phi")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (rewrite
                                                                 "null_is_negligible")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "integrable_is_measurable")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but (-4 -5 -7 1))
                              (("2"
                                (skosimp)
                                (("2"
                                  (expand "*")
                                  (("2"
                                    (expand "abs")
                                    (("2"
                                      (inst - "x!1")
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "union")
                                          (("2"
                                            (expand "complement")
                                            (("2"
                                              (expand "phi")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "n!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but (-4 -5 -6 1))
                              (("3"
                                (expand "pointwise_convergent?")
                                (("3"
                                  (inst
                                   +
                                   "phi(complement[T](X!1)) * f!2")
                                  (("3"
                                    (expand "pointwise_convergence?")
                                    (("3"
                                      (skosimp)
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "union")
                                          (("3"
                                            (expand "subset?")
                                            (("3"
                                              (expand "*")
                                              (("3"
                                                (expand "complement")
                                                (("3"
                                                  (expand "phi")
                                                  (("3"
                                                    (expand "member")
                                                    (("3"
                                                      (inst - "x!1")
                                                      (("3"
                                                        (case-replace
                                                         "X!1(x!1)")
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "metric_convergence_def")
                                                            (("1"
                                                              (expand
                                                               "metric_converges_to")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "0")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (expand
                                                                       "ball")
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp)
                          (("2" (rewrite "indefinite_integrable") nil
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil))
                      nil)
                     ("2" (expand "null_set?")
                      (("2" (flatten) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide-all-but (1 -4))
            (("2" (expand "ae_convergent?")
              (("2" (skosimp)
                (("2" (expand "ae_convergence?")
                  (("2" (expand "fullset")
                    (("2" (expand "ae_convergence_in?")
                      (("2" (expand "ae_in?")
                        (("2" (skosimp)
                          (("2" (inst + "E!1" "f!2")
                            (("2" (skosimp)
                              (("2"
                                (inst - "x!1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but (-2 1))
          (("2" (expand "ae_le?")
            (("2" (expand "pointwise_ae?")
              (("2" (expand "ae?")
                (("2" (expand "fullset")
                  (("2" (expand "ae_in?")
                    (("2"
                      (name "EN"
                            "lambda n: choose({E| forall x: not E(x)=> abs(F!1(n))(x) <= f!1(x)})")
                      (("1" (inst + "IUnion(EN)")
                        (("1" (skosimp)
                          (("1" (skosimp)
                            (("1" (expand "IUnion")
                              (("1"
                                (inst - "n!1")
                                (("1"
                                  (inst + "n!1")
                                  (("1"
                                    (expand "EN")
                                    (("1"
                                      (typepred
                                       "choose({E | FORALL x: NOT E(x) => abs(F!1(n!1))(x) <= f!1(x)})")
                                      (("1"
                                        (name-replace
                                         "CHOICE"
                                         "choose({E | FORALL x: NOT E(x) => abs(F!1(n!1))(x) <= f!1(x)})")
                                        (("1"
                                          (inst - "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-2 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "nonempty?")
                                            (("2"
                                              (expand "empty?")
                                              (("2"
                                                (inst - "E!1")
                                                (("2"
                                                  (expand "member")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp)
                          (("2" (inst - "n!1")
                            (("2" (skosimp)
                              (("2"
                                (expand "nonempty?")
                                (("2"
                                  (expand "empty?")
                                  (("2"
                                    (inst - "E!1")
                                    (("2"
                                      (expand "member")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (skosimp)
        (("2" (expand "pointwise_convergent?")
          (("2" (skosimp)
            (("2" (lemma "pointwise_measurable" ("u" "F!1" "f" "f!2"))
              (("2" (assert)
                (("2" (lemma "integral_ae_abs" ("h" "f!2" "f" "f!1"))
                  (("2" (case "forall x: abs(f!2)(x) <= f!1(x)")
                    (("1" (split -2)
                      (("1" (flatten)
                        (("1" (name-replace "FF" "f!2")
                          (("1" (name-replace "GG" "f!1")
                            (("1"
                              (case "forall n: integrable?(F!1(n)-FF)")
                              (("1"
                                (case
                                 "forall n,x: abs(F!1(n)-FF)(x)<=2*GG(x)")
                                (("1"
                                  (case
                                   "pointwise_convergence?(lambda n: abs(F!1(n) - FF), lambda x: 0)")
                                  (("1"
                                    (inst + "FF")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma
                                         "integrable_scal"
                                         ("c" "2" "f" "GG"))
                                        (("1"
                                          (case
                                           "pointwise_bounded_above?[T](LAMBDA n: abs[T]((-[T])(F!1(n), FF)))")
                                          (("1"
                                            (name
                                             "H"
                                             "sup(lambda n: abs(F!1(n) - FF))")
                                            (("1"
                                              (case
                                               "forall n: measurable_function?(H(n))")
                                              (("1"
                                                (case
                                                 "forall n,x: least_upper_bound(<=)
                                                (H(n)(x),
                                                 {y: real |
                                                    EXISTS (i: ({m: nat | m >= n})):
                                                      y = abs(F!1(i) - FF)(x)})")
                                                (("1"
                                                  (case
                                                   "forall n,x: 0<=H(n)(x)&H(n)(x)<=2*GG(x)")
                                                  (("1"
                                                    (case
                                                     "pointwise_decreasing?(H)")
                                                    (("1"
                                                      (case
                                                       "forall n: integrable?(H(n))")
                                                      (("1"
                                                        (lemma
                                                         "monotone_convergence"
                                                         ("F" "-H"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -2)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "lambda (x:T): 0")
                                                                (("1"
                                                                  (rewrite
                                                                   "integral_zero")
                                                                  (("1"
                                                                    (case
                                                                     "pointwise_bounded_above?[T](LAMBDA n: abs[T](F!1(n)))")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_convergence?(H, (lambda (x:T): 0))")
                                                                      (("1"
                                                                        (split
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "converges_upto?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (case
                                                                               "forall n,x: FF(x)-H(n)(x)<= F!1(n)(x)& F!1(n)(x) <= FF(x)+H(n)(x)")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -6
                                                                                  -2
                                                                                  -8
                                                                                  -17
                                                                                  1))
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "metric_convergence_def")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "metric_convergence_def")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "metric_converges_to")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "r!1")
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (inst
                                                                                               +
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "i!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ball")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "abs_mult")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "abs"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "o")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "-"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "integral_opp"
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "neg_neg")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "i!1")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "integral[T, S, m].integral(H(i!1))<r!1")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "integral_nonneg"
                                                                                                                           ("f"
                                                                                                                            "H(i!1)"))
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "integral_ae_le"
                                                                                                                               ("f1"
                                                                                                                                "FF-H(i!1)"
                                                                                                                                "f2"
                                                                                                                                "F!1(i!1)"))
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "integral_diff")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "integral_ae_le"
                                                                                                                                     ("f1"
                                                                                                                                      "F!1(i!1)"
                                                                                                                                      "f2"
                                                                                                                                      "FF+H(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "integral_add")
                                                                                                                                        (("1"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            -2
                                                                                                                                            -3
                                                                                                                                            -4
                                                                                                                                            1))
                                                                                                                                          (("1"
                                                                                                                                            (name-replace
                                                                                                                                             "i_H"
                                                                                                                                             "integral[T, S, m].integral(H(i!1))")
                                                                                                                                            (("1"
                                                                                                                                              (name-replace
                                                                                                                                               "i_F"
                                                                                                                                               "integral[T, S, m].integral(F!1(i!1))")
                                                                                                                                              (("1"
                                                                                                                                                (name-replace
                                                                                                                                                 "i_FF"
                                                                                                                                                 "integral[T, S, m].integral(FF)")
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (1
                                                                                                                                          -4))
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ae_le?")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "pointwise_ae?")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "ae?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "fullset")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ae_in?")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "emptyset[T]")
                                                                                                                                                    (("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "i!1"
                                                                                                                                                         "x!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "+")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (rewrite
                                                                                                                                       "integrable_add")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-3
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ae_le?")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "pointwise_ae?")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "ae?")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "ae_in?")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "emptyset[T]")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "i!1"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "-")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (rewrite
                                                                                                                                 "integrable_diff")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (skosimp)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -4
                                                                                                                                 "i!1"
                                                                                                                                 "x!1")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case-replace
                                                                                                                         "-integral((H(i!1))) < 0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst?
                                                                                                                     -3)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-8
                                                                                  -11
                                                                                  -3
                                                                                  1
                                                                                  -6
                                                                                  -7))
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -4
                                                                                     "n!1"
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "least_upper_bound")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "upper_bound")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -4
                                                                                               "abs(F!1(n!1)-FF)(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "triangle"
                                                                                                     ("x"
                                                                                                      "F!1(n!1)(x!1) - FF(x!1)"
                                                                                                      "y"
                                                                                                      "FF(x!1)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "n!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "upper_bound")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "abs(F!1(n!1)-FF)(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "triangle"
                                                                                                     ("x"
                                                                                                      "F!1(n!1)(x!1)"
                                                                                                      "y"
                                                                                                      "-FF(x!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "abs_neg")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         -1
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "n!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (-1
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "ae_convergence?")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_convergence_in?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "emptyset[T]")
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_convergence?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "-")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "-")
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "metric_convergence_def")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "metric_converges_to")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ball")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "metric_convergence_def")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "metric_converges_to")
                                                                                                            (("1"
                                                                                                              (skosimp)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "r!1")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "n!1")
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "i!1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "ball")
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4
                                                                            -5
                                                                            -6
                                                                            -9
                                                                            -11
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_convergence?")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise_decreasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "_"
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "_"
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -5
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "metric_convergence_def")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "metric_convergence_def")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "converges_downto_is_glb"
                                                                                               ("u"
                                                                                                "LAMBDA n: H(n)(x!1)"
                                                                                                "x"
                                                                                                "0"))
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "converges_downto?")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "metric_convergence_def")
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "bounded_below?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "x!2")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "fullset")
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "image")
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "greatest_lower_bound?")
                                                                                                                  (("3"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "lower_bound?")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "s!1")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "x!2")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "0<y!1")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "lower_bound?")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -7
                                                                                                                                 "y!1/2")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "ball")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "member")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "H(n!1)(x!1)")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -5
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "least_upper_bound")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -6
                                                                                                                                                 "y!1/2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "upper_bound"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "z!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "i!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -9
                                                                                                                                                               "i!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "abs_mult"
                                                                                                                                                                   -9)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs"
                                                                                                                                                                     -9
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "abs"
                                                                                                                                                                       -9
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "abs_abs")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs"
                                                                                                                                                                           -2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "n!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2
                                                                       -1
                                                                       -2
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("2"
                                                                        (expand
                                                                         "pointwise_bounded_above?")
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise?"
                                                                             +)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "bounded_above?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "4*GG(x!1)+abs(FF(x!1))")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -3
                                                                                       "x!2"
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-3
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "abs"
                                                                                           -)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs"
                                                                                             1
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "-"
                                                                                               -)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "triangle"
                                                                                                 ("x"
                                                                                                  "F!1(x!2)(x!1) - FF(x!1)"
                                                                                                  "y"
                                                                                                  "FF(x!1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (lemma
                                                                     "nn_integrable_zero")
                                                                    (("2"
                                                                      (rewrite
                                                                       "nn_integrable_is_integrable")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-2 1))
                                                            (("2"
                                                              (expand
                                                               "ae_increasing?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_decreasing?")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "emptyset[T]")
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("2"
                                                                            (expand
                                                                             "decreasing?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "-")
                                                                                (("2"
                                                                                  (expand
                                                                                   "-")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "x1!1")
                                                            (("2"
                                                              (expand
                                                               "-")
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_opp")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-2 -4 -7 1))
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "n!1")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "n!1"
                                                               "_")
                                                              (("2"
                                                                (lemma
                                                                 "nn_integrable_le"
                                                                 ("g"
                                                                  "H(n!1)"
                                                                  "f"
                                                                  "*[T](2, GG)"))
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (rewrite
                                                                       "nn_integrable_is_integrable")
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (expand
                                                                         "*")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil)
                                                                 ("3"
                                                                  (split)
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x1!1")
                                                                      (("1"
                                                                        (expand
                                                                         "*")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (rewrite
                                                                     "nn_integrable_is_nn_integrable")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "x!1")
                                                                        (("2"
                                                                          (expand
                                                                           "*")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand
                                                         "pointwise_decreasing?")
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (expand
                                                             "decreasing?")
                                                            (("2"
                                                              (skolem
                                                               +
                                                               ("i!1"
                                                                "j!1"))
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -3
                                                                   "i!1"
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     -3
                                                                     "j!1"
                                                                     "x!1")
                                                                    (("2"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -3
                                                                        -4
                                                                        1))
                                                                      (("2"
                                                                        (expand
                                                                         "least_upper_bound")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (expand
                                                                             "upper_bound")
                                                                            (("2"
                                                                              (inst
                                                                               -3
                                                                               "H(i!1)(x!1)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "z!1")
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "i!2")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -5
                                                                                           "abs(F!1(i!2) - FF)(x!1)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             +
                                                                                             "i!2")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1 -7))
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (inst
                                                         -
                                                         "n!1"
                                                         "x!1")
                                                        (("2"
                                                          (expand
                                                           "least_upper_bound")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "upper_bound")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "abs(F!1(n!1) - FF)(x!1)")
                                                                  (("1"
                                                                    (expand
                                                                     "abs"
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     +
                                                                     "n!1")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "2*GG(x!1)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "upper_bound")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (typepred
                                                                         "z!1")
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -4
                                                                               "i!1"
                                                                               "x!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (hide -1 -2)
                                                      (("2"
                                                        (expand "H")
                                                        (("2"
                                                          (expand
                                                           "sup")
                                                          (("2"
                                                            (expand
                                                             "image")
                                                            (("2"
                                                              (typepred
                                                               "sup({y: real |
                                                     EXISTS (x: ({m:nat | m >= n!1})):
                                                       y = abs(F!1(x) - FF)(x!1)})")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1))
                                                                (("2"
                                                                  (split)
                                                                  (("1"
                                                                    (expand
                                                                     "nonempty?")
                                                                    (("1"
                                                                      (expand
                                                                       "empty?")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "abs[T]((-[T])(F!1(n!1), FF))(x!1)")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "pointwise_bounded_above?")
                                                                    (("2"
                                                                      (expand
                                                                       "above_bounded")
                                                                      (("2"
                                                                        (expand
                                                                         "bounded_above?")
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise?")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "upper_bound")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "ceiling(a!1)")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "z!1")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!2")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (rewrite
                                                     "sup_measurable")
                                                    (("1"
                                                      (hide 2 3 -1)
                                                      (("1"
                                                        (expand
                                                         "measurable_bounded_above?")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skosimp)
                                                      (("2"
                                                        (hide-all-but
                                                         (-6 1))
                                                        (("2"
                                                          (inst
                                                           -
                                                           "n!2")
                                                          (("2"
                                                            (rewrite
                                                             "integrable_is_measurable")
                                                            (("2"
                                                              (hide 2)
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_abs")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (1 -3))
                                            (("2"
                                              (expand
                                               "pointwise_bounded_above?")
                                              (("2"
                                                (expand
                                                 "bounded_above?")
                                                (("2"
                                                  (expand "pointwise?")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "_"
                                                       "x!1")
                                                      (("2"
                                                        (inst
                                                         +
                                                         "2 * GG(x!1)")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (expand "pointwise_convergence?")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst -8 "x!1")
                                          (("2"
                                            (hide-all-but (-8 1))
                                            (("2"
                                              (rewrite
                                               "metric_convergence_def")
                                              (("1"
                                                (rewrite
                                                 "metric_convergence_def")
                                                (("1"
                                                  (expand
                                                   "metric_converges_to")
                                                  (("1"
                                                    (skosimp)
                                                    (("1"
                                                      (inst - "r!1")
                                                      (("1"
                                                        (skosimp)
                                                        (("1"
                                                          (inst
                                                           +
                                                           "n!1")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("1"
                                                                (expand
                                                                 "ball")
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (skosimp)
                                    (("2"
                                      (expand "abs" 1)
                                      (("2"
                                        (expand "-" 1)
                                        (("2"
                                          (lemma
                                           "triangle"
                                           ("x"
                                            "F!1(n!1)(x!1)"
                                            "y"
                                            "-FF(x!1)"))
                                          (("2"
                                            (rewrite "abs_neg" -1)
                                            (("2"
                                              (hide-all-but
                                               (-1 -5 -7 1))
                                              (("2"
                                                (inst - "x!1")
                                                (("2"
                                                  (inst - "n!1" "x!1")
                                                  (("2"
                                                    (expand "abs" -2)
                                                    (("2"
                                                      (expand "abs" -3)
                                                      (("2"
                                                        (name-replace
                                                         "LHS"
                                                         "abs(F!1(n!1)(x!1) + -FF(x!1))")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp)
                                (("2"
                                  (rewrite "integrable_diff")
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -2 2)
                        (("2" (expand "ae_le?")
                          (("2" (expand "pointwise_ae?")
                            (("2" (expand "ae?")
                              (("2"
                                (expand "fullset")
                                (("2"
                                  (expand "ae_in?")
                                  (("2"
                                    (inst + "emptyset[T]")
                                    (("2"
                                      (skosimp)
                                      (("2"
                                        (hide 1)
                                        (("2"
                                          (inst - "x!1")
                                          (("2"
                                            (inst - "0" "x!1")
                                            (("2"
                                              (expand "abs")
                                              (("2"
                                                (typepred
                                                 "abs(F!1(0)(x!1))")
                                                (("2"
                                                  (expand "abs" 1 2)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (hide -6)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (-3 -4 1))
                      (("2" (skosimp)
                        (("2" (expand "pointwise_convergence?")
                          (("2" (inst - "_" "x!1")
                            (("2" (inst -2 "x!1")
                              (("2"
                                (rewrite "metric_convergence_def")
                                (("1"
                                  (case
                                   "metric_converges_to(LAMBDA n: abs(F!1(n)(x!1)), abs(f!2(x!1)))")
                                  (("1"
                                    (hide -3)
                                    (("1"
                                      (expand "metric_converges_to")
                                      (("1"
                                        (inst
                                         -
                                         "abs(f!2)(x!1) - f!1(x!1)")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst - "n!1")
                                            (("1"
                                              (inst - "n!1")
                                              (("1"
                                                (expand "ball")
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (expand "abs" -1 4)
                                                    (("1"
                                                      (expand "abs" 1)
                                                      (("1"
                                                        (name-replace
                                                         "LIMIT"
                                                         "abs(f!2(x!1))")
                                                        (("1"
                                                          (expand
                                                           "abs"
                                                           -2)
                                                          (("1"
                                                            (name-replace
                                                             "DRL1"
                                                             "abs(F!1(n!1)(x!1))")
                                                            (("1"
                                                              (expand
                                                               "abs")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2 -1)
                                    (("2"
                                      (expand "metric_converges_to")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "r!1")
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (inst + "n!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "i!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand "ball")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but 1)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pointwise_measurable formula-decl nil measure_space nil)
    (integral_ae_abs formula-decl nil integral nil)
    (pointwise_bounded_above? const-decl "bool" pointwise_convergence
     nil)
    (sup_set type-eq-decl nil bounded_reals reals)
    (above_bounded const-decl "bool" bounded_reals reals)
    (sup const-decl "{x | least_upper_bound(<=)(x, Su)}" bounded_reals
         reals)
    (integrable_opp judgement-tcc nil integral nil)
    (nn_integrable nonempty-type-eq-decl nil nn_integral nil)
    (nn_integrable? const-decl "bool" nn_integral nil)
    (nn_integrable_is_integrable judgement-tcc nil integral nil)
    (nn_integrable_zero formula-decl nil nn_integral nil)
    (integral_zero formula-decl nil integral nil)
    (bounded_above? const-decl "bool" real_fun_preds reals)
    (pointwise? const-decl "bool" pointwise_convergence nil)
    (converges_upto? const-decl "bool" convergence_aux metric_space)
    (integral_nonneg formula-decl nil integral nil)
    (integral_ae_le formula-decl nil integral nil)
    (integral_diff formula-decl nil integral nil)
    (integrable_add judgement-tcc nil integral nil)
    (integral_add formula-decl nil integral nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (integrable_diff judgement-tcc nil integral nil)
    (integral_opp formula-decl nil integral nil)
    (upper_bound const-decl "bool" bound_defs reals)
    (abs_neg formula-decl nil abs_lems reals)
    (converges_downto_is_glb formula-decl nil convergence_aux
     metric_space)
    (converges_downto? const-decl "bool" convergence_aux metric_space)
    (bounded_below? const-decl "bool" real_fun_preds reals)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (decreasing? const-decl "bool" real_fun_preds reals)
    (nn_integrable_is_nn_integrable formula-decl nil integral nil)
    (nn_integrable_le formula-decl nil nn_integral nil)
    (pointwise_decreasing? const-decl "bool" pointwise_convergence nil)
    (least_upper_bound const-decl "bool" bound_defs reals)
    (integrable_abs judgement-tcc nil integral nil)
    (sup_measurable formula-decl nil measure_space nil)
    (measurable_bounded_above? const-decl "bool" measure_space nil)
    (measurable_bounded_above nonempty-type-eq-decl nil measure_space
     nil)
    (sup const-decl "real" pointwise_convergence nil)
    (pointwise_bounded_above nonempty-type-eq-decl nil
     pointwise_convergence nil)
    (integrable_scal judgement-tcc nil integral nil)
    (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (empty? const-decl "bool" sets nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (union const-decl "set" sets nil)
    (indefinite_integrable formula-decl nil integral nil)
    (complement const-decl "set" sets nil)
    (metric_converges_to const-decl "bool" metric_space_def
     metric_space)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (abs_0 formula-decl nil abs_lems reals)
    (subset? const-decl "bool" sets nil)
    (fullset const-decl "set" sets nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (null_set? const-decl "bool" measure_theory nil)
    (null_is_negligible judgement-tcc nil measure_theory nil)
    (member const-decl "bool" sets nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (integral_ae_eq formula-decl nil integral nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (phi const-decl "nat" measure_space nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_complement judgement-tcc nil measure_space_def nil)
    (ae_convergent? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (set type-eq-decl nil sets nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology metric_space)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (integrable? const-decl "bool" integral nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (sequence type-eq-decl nil sequences nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (pointwise_convergent? const-decl "bool" pointwise_convergence nil)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (convergence? const-decl "bool" topological_convergence topology)
    (integral const-decl "real" integral nil))
   shostak)
  (dominated_convergence-2 nil 3722185596
   (""
    (case "FORALL (F: sequence[integrable], f: integrable[T, S, m]):
               (FORALL n,x: abs(F(n))(x) <= f(x)) AND pointwise_convergent?(F)  =>
                (EXISTS f:
                   pointwise_convergence?(F, f) AND
                    convergence?(integral o F, integral(f)))")
    (("1" (skosimp)
      (("1"
        (case "exists E: forall x: not E(x) => FORALL n: abs(F!1(n))(x) <= f!1(x)")
        (("1"
          (case "EXISTS (E:negligible,f: [T -> real]):
                        FORALL (x: T): not E(x) => convergence?(LAMBDA n: F!1(n)(x), f(x))")
          (("1" (skosimp*)
            (("1" (typepred "union(E!1,E!2)")
              (("1" (expand "negligible_set?")
                (("1" (skosimp)
                  (("1" (lemma "measurable_complement" ("a" "X!1"))
                    (("1"
                      (lemma "indefinite_integrable"
                       ("f" "f!1" "E" "complement[T](X!1)"))
                      (("1"
                        (case "forall n: integrable?(phi(complement[T](X!1)) * F!1(n))")
                        (("1"
                          (inst -8
                           "lambda n: phi(complement[T](X!1)) * F!1(n)"
                           "phi(complement[T](X!1)) * f!1")
                          (("1" (split -8)
                            (("1" (skosimp)
                              (("1"
                                (inst + "f!3")
                                (("1"
                                  (split 1)
                                  (("1"
                                    (hide-all-but (-1 -6 1))
                                    (("1"
                                      (expand "pointwise_convergence?")
                                      (("1"
                                        (expand "ae_convergence?")
                                        (("1"
                                          (expand "fullset")
                                          (("1"
                                            (expand
                                             "ae_convergence_in?")
                                            (("1"
                                              (expand "ae_in?")
                                              (("1"
                                                (inst + "X!1")
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst - "x!1")
                                                    (("1"
                                                      (expand "*")
                                                      (("1"
                                                        (expand
                                                         "complement")
                                                        (("1"
                                                          (expand
                                                           "phi")
                                                          (("1"
                                                            (expand
                                                             "member")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "null_is_negligible")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but (-2 -6 1 -3 -4))
                                    (("2"
                                      (case-replace
                                       "integral o (LAMBDA n: phi(complement[T](X!1)) * F!1(n))=integral o F!1")
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (expand "o")
                                          (("2"
                                            (hide -1 2)
                                            (("2"
                                              (lemma
                                               "integral_ae_eq"
                                               ("f"
                                                "F!1(x!1)"
                                                "h"
                                                "phi(complement[T](X!1)) * F!1(x!1)"))
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2 -1 -2)
                                                  (("2"
                                                    (expand "ae_eq?")
                                                    (("2"
                                                      (expand
                                                       "restrict")
                                                      (("2"
                                                        (expand
                                                         "pointwise_ae?")
                                                        (("2"
                                                          (expand
                                                           "ae?")
                                                          (("2"
                                                            (expand
                                                             "fullset")
                                                            (("2"
                                                              (expand
                                                               "ae_in?")
                                                              (("2"
                                                                (inst
                                                                 +
                                                                 "X!1")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (expand
                                                                     "*")
                                                                    (("1"
                                                                      (expand
                                                                       "complement")
                                                                      (("1"
                                                                        (expand
                                                                         "phi")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (rewrite
                                                                   "null_is_negligible")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "integrable_is_measurable")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but (-4 -5 -7 1))
                              (("2"
                                (skosimp)
                                (("2"
                                  (expand "*")
                                  (("2"
                                    (expand "abs")
                                    (("2"
                                      (inst - "x!1")
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (expand "union")
                                          (("2"
                                            (expand "complement")
                                            (("2"
                                              (expand "phi")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (inst - "x!1")
                                                  (("2"
                                                    (case-replace
                                                     "X!1(x!1)")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "n!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but (-4 -5 -6 1))
                              (("3"
                                (expand "pointwise_convergent?")
                                (("3"
                                  (inst
                                   +
                                   "phi(complement[T](X!1)) * f!2")
                                  (("3"
                                    (expand "pointwise_convergence?")
                                    (("3"
                                      (skosimp)
                                      (("3"
                                        (inst - "x!1")
                                        (("3"
                                          (expand "union")
                                          (("3"
                                            (expand "subset?")
                                            (("3"
                                              (expand "*")
                                              (("3"
                                                (expand "complement")
                                                (("3"
                                                  (expand "phi")
                                                  (("3"
                                                    (expand "member")
                                                    (("3"
                                                      (inst - "x!1")
                                                      (("3"
                                                        (case-replace
                                                         "X!1(x!1)")
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "metric_convergence_def")
                                                            (("1"
                                                              (expand
                                                               "metric_converges_to")
                                                              (("1"
                                                                (skosimp)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "0")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (expand
                                                                       "ball")
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp)
                          (("2" (rewrite "indefinite_integrable") nil
                            nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil))
                      nil)
                     ("2" (expand "null_set?")
                      (("2" (flatten) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide-all-but (1 -4))
            (("2" (expand "ae_convergent?")
              (("2" (skosimp)
                (("2" (expand "ae_convergence?")
                  (("2" (expand "fullset")
                    (("2" (expand "ae_convergence_in?")
                      (("2" (expand "ae_in?")
                        (("2" (skosimp)
                          (("2" (inst + "E!1" "f!2")
                            (("2" (skosimp)
                              (("2"
                                (inst - "x!1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but (-2 1))
          (("2" (expand "ae_le?")
            (("2" (expand "pointwise_ae?")
              (("2" (expand "ae?")
                (("2" (expand "fullset")
                  (("2" (expand "ae_in?")
                    (("2"
                      (name "EN"
                            "lambda n: choose({E| forall x: not E(x)=> abs(F!1(n))(x) <= f!1(x)})")
                      (("1" (inst + "IUnion(EN)")
                        (("1" (skosimp)
                          (("1" (skosimp)
                            (("1" (expand "IUnion")
                              (("1"
                                (inst - "n!1")
                                (("1"
                                  (inst + "n!1")
                                  (("1"
                                    (expand "EN")
                                    (("1"
                                      (typepred
                                       "choose({E | FORALL x: NOT E(x) => abs(F!1(n!1))(x) <= f!1(x)})")
                                      (("1"
                                        (name-replace
                                         "CHOICE"
                                         "choose({E | FORALL x: NOT E(x) => abs(F!1(n!1))(x) <= f!1(x)})")
                                        (("1"
                                          (inst - "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-2 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "nonempty?")
                                            (("2"
                                              (expand "empty?")
                                              (("2"
                                                (inst - "E!1")
                                                (("2"
                                                  (expand "member")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp)
                          (("2" (inst - "n!1")
                            (("2" (skosimp)
                              (("2"
                                (expand "nonempty?")
                                (("2"
                                  (expand "empty?")
                                  (("2"
                                    (inst - "E!1")
                                    (("2"
                                      (expand "member")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (skosimp)
        (("2" (expand "pointwise_convergent?")
          (("2" (skosimp)
            (("2" (lemma "pointwise_measurable" ("u" "F!1" "f" "f!2"))
              (("2" (assert)
                (("2" (lemma "integral_ae_abs" ("h" "f!2" "f" "f!1"))
                  (("2" (case "forall x: abs(f!2)(x) <= f!1(x)")
                    (("1" (split -2)
                      (("1" (flatten)
                        (("1" (name-replace "FF" "f!2")
                          (("1" (name-replace "GG" "f!1")
                            (("1"
                              (case "forall n: integrable?(F!1(n)-FF)")
                              (("1"
                                (case
                                 "forall n,x: abs(F!1(n)-FF)(x)<=2*GG(x)")
                                (("1"
                                  (case
                                   "pointwise_convergence?(lambda n: abs(F!1(n) - FF), lambda x: 0)")
                                  (("1"
                                    (inst + "FF")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma
                                         "integrable_scal"
                                         ("c" "2" "f" "GG"))
                                        (("1"
                                          (case
                                           "pointwise_bounded_above?[T](LAMBDA n: abs[T]((-[T])(F!1(n), FF)))")
                                          (("1"
                                            (name
                                             "H"
                                             "sup(lambda n: abs(F!1(n) - FF))")
                                            (("1"
                                              (case
                                               "forall n: measurable_function?(H(n))")
                                              (("1"
                                                (case
                                                 "forall n,x: least_upper_bound(<=)
                                                (H(n)(x),
                                                 {y: real |
                                                    EXISTS (i: ({m: nat | m >= n})):
                                                      y = abs(F!1(i) - FF)(x)})")
                                                (("1"
                                                  (case
                                                   "forall n,x: 0<=H(n)(x)&H(n)(x)<=2*GG(x)")
                                                  (("1"
                                                    (case
                                                     "pointwise_decreasing?(H)")
                                                    (("1"
                                                      (case
                                                       "forall n: integrable?(H(n))")
                                                      (("1"
                                                        (lemma
                                                         "monotone_convergence"
                                                         ("F" "-H"))
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -2)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "lambda (x:T): 0")
                                                                (("1"
                                                                  (rewrite
                                                                   "integral_zero")
                                                                  (("1"
                                                                    (case
                                                                     "pointwise_bounded_above?[T](LAMBDA n: abs[T](F!1(n)))")
                                                                    (("1"
                                                                      (case
                                                                       "pointwise_convergence?(H, (lambda (x:T): 0))")
                                                                      (("1"
                                                                        (split
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "converges_upto?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (case
                                                                               "forall n,x: FF(x)-H(n)(x)<= F!1(n)(x)& F!1(n)(x) <= FF(x)+H(n)(x)")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  -6
                                                                                  -2
                                                                                  -8
                                                                                  -17
                                                                                  1))
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "metric_convergence_def")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "metric_convergence_def")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "metric_converges_to")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "r!1")
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (inst
                                                                                               +
                                                                                               "n!1")
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "i!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ball")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "abs_mult")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "abs"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "o")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "-"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "integral_opp"
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "neg_neg")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "i!1")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "integral[T, S, m].integral(H(i!1))<r!1")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "integral_nonneg"
                                                                                                                           ("f"
                                                                                                                            "H(i!1)"))
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "integral_ae_le"
                                                                                                                               ("f1"
                                                                                                                                "FF-H(i!1)"
                                                                                                                                "f2"
                                                                                                                                "F!1(i!1)"))
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "integral_diff")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "integral_ae_le"
                                                                                                                                     ("f1"
                                                                                                                                      "F!1(i!1)"
                                                                                                                                      "f2"
                                                                                                                                      "FF+H(i!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "integral_add")
                                                                                                                                        (("1"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            -2
                                                                                                                                            -3
                                                                                                                                            -4
                                                                                                                                            1))
                                                                                                                                          (("1"
                                                                                                                                            (name-replace
                                                                                                                                             "i_H"
                                                                                                                                             "integral[T, S, m].integral(H(i!1))")
                                                                                                                                            (("1"
                                                                                                                                              (name-replace
                                                                                                                                               "i_F"
                                                                                                                                               "integral[T, S, m].integral(F!1(i!1))")
                                                                                                                                              (("1"
                                                                                                                                                (name-replace
                                                                                                                                                 "i_FF"
                                                                                                                                                 "integral[T, S, m].integral(FF)")
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (1
                                                                                                                                          -4))
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ae_le?")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "pointwise_ae?")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "ae?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "fullset")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ae_in?")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "emptyset[T]")
                                                                                                                                                    (("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "i!1"
                                                                                                                                                         "x!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "+")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (rewrite
                                                                                                                                       "integrable_add")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-3
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ae_le?")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "pointwise_ae?")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "ae?")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "ae_in?")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "emptyset[T]")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "i!1"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "-")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (rewrite
                                                                                                                                 "integrable_diff")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (skosimp)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -4
                                                                                                                                 "i!1"
                                                                                                                                 "x!1")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case-replace
                                                                                                                         "-integral((H(i!1))) < 0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst?
                                                                                                                     -3)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-8
                                                                                  -11
                                                                                  -3
                                                                                  1
                                                                                  -6
                                                                                  -7))
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -4
                                                                                     "n!1"
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "least_upper_bound")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "upper_bound")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -4
                                                                                               "abs(F!1(n!1)-FF)(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "triangle"
                                                                                                     ("x"
                                                                                                      "F!1(n!1)(x!1) - FF(x!1)"
                                                                                                      "y"
                                                                                                      "FF(x!1)"))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "n!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "upper_bound")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "abs(F!1(n!1)-FF)(x!1)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "triangle"
                                                                                                     ("x"
                                                                                                      "F!1(n!1)(x!1)"
                                                                                                      "y"
                                                                                                      "-FF(x!1)"))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "abs_neg")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "abs"
                                                                                                         -1
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "n!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (-1
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "ae_convergence?")
                                                                            (("2"
                                                                              (expand
                                                                               "fullset")
                                                                              (("2"
                                                                                (expand
                                                                                 "ae_convergence_in?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "emptyset[T]")
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "pointwise_convergence?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "-")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "-")
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "metric_convergence_def")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "metric_converges_to")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ball")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "metric_convergence_def")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "metric_converges_to")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "r!1")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "n!1")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "i!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "ball")
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4
                                                                            -5
                                                                            -6
                                                                            -9
                                                                            -11
                                                                            1))
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise_convergence?")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "pointwise_decreasing?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "_"
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "_"
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -5
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "metric_convergence_def")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "metric_convergence_def")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "converges_downto_is_glb"
                                                                                               ("u"
                                                                                                "LAMBDA n: H(n)(x!1)"
                                                                                                "x"
                                                                                                "0"))
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "converges_downto?")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "metric_convergence_def")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "bounded_below?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "x!2")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "fullset")
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "image")
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "greatest_lower_bound?")
                                                                                                                  (("3"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "lower_bound?")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "s!1")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "x!2")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "0<y!1")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "lower_bound?")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -7
                                                                                                                                 "y!1/2")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "ball")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "member")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "H(n!1)(x!1)")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -5
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "least_upper_bound")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -6
                                                                                                                                                 "y!1/2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "upper_bound"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "z!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "i!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -9
                                                                                                                                                               "i!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "abs_mult"
                                                                                                                                                                   -9)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs"
                                                                                                                                                                     -9
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "abs"
                                                                                                                                                                       -9
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "abs_abs")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs"
                                                                                                                                                                           -2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "n!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2
                                                                       -1
                                                                       -2
                                                                       -3
                                                                       -4
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("2"
                                                                        (expand
                                                                         "pointwise_bounded_above?")
                                                                        (("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "pointwise?"
                                                                             +)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "bounded_above?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "4*GG(x!1)+abs(FF(x!1))")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -3
                                                                                       "x!2"
                                                                                       "x!1")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-3
                                                                                          1))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "abs"
                                                                                           -)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs"
                                                                                             1
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "-"
                                                                                               -)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "triangle"
                                                                                                 ("x"
                                                                                                  "F!1(x!2)(x!1) - FF(x!1)"
                                                                                                  "y"
                                                                                                  "FF(x!1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (lemma
                                                                     "nn_integrable_zero")
                                                                    (("2"
                                                                      (rewrite
                                                                       "nn_integrable_is_integrable")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-2 1))
                                                            (("2"
                                                              (expand
                                                               "ae_increasing?")
                                                              (("2"
                                                                (expand
                                                                 "pointwise_decreasing?")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "emptyset[T]")
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (hide
                                                                       1)
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("2"
                                                                            (expand
                                                                             "decreasing?")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "i!1"
                                                                               "j!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "-")
                                                                                (("2"
                                                                                  (expand
                                                                                   "-")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "x1!1")
                                                            (("2"
                                                              (expand
                                                               "-")
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_opp")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-2 -4 -7 1))
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "n!1")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "n!1"
                                                               "_")
                                                              (("2"
                                                                (lemma
                                                                 "nn_integrable_le"
                                                                 ("g"
                                                                  "H(n!1)"
                                                                  "f"
                                                                  "*[T](2, GG)"))
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (rewrite
                                                                       "nn_integrable_is_integrable")
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (expand
                                                                         "*")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil)
                                                                 ("3"
                                                                  (split)
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x1!1")
                                                                      (("1"
                                                                        (expand
                                                                         "*")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (rewrite
                                                                     "nn_integrable_is_nn_integrable")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "x!1")
                                                                        (("2"
                                                                          (expand
                                                                           "*")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand
                                                         "pointwise_decreasing?")
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (expand
                                                             "decreasing?")
                                                            (("2"
                                                              (skolem
                                                               +
                                                               ("i!1"
                                                                "j!1"))
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -3
                                                                   "i!1"
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     -3
                                                                     "j!1"
                                                                     "x!1")
                                                                    (("2"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -3
                                                                        -4
                                                                        1))
                                                                      (("2"
                                                                        (expand
                                                                         "least_upper_bound")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (expand
                                                                             "upper_bound")
                                                                            (("2"
                                                                              (inst
                                                                               -3
                                                                               "H(i!1)(x!1)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "z!1")
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "i!2")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -5
                                                                                           "abs(F!1(i!2) - FF)(x!1)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             +
                                                                                             "i!2")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1 -7))
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (inst
                                                         -
                                                         "n!1"
                                                         "x!1")
                                                        (("2"
                                                          (expand
                                                           "least_upper_bound")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "upper_bound")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "abs(F!1(n!1) - FF)(x!1)")
                                                                  (("1"
                                                                    (expand
                                                                     "abs"
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     +
                                                                     "n!1")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "2*GG(x!1)")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "upper_bound")
                                                                    (("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (typepred
                                                                         "z!1")
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -4
                                                                               "i!1"
                                                                               "x!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (hide -1 -2)
                                                      (("2"
                                                        (expand "H")
                                                        (("2"
                                                          (expand
                                                           "sup")
                                                          (("2"
                                                            (expand
                                                             "image")
                                                            (("2"
                                                              (typepred
                                                               "sup({y: real |
                                                     EXISTS (x: ({m:nat | m >= n!1})):
                                                       y = abs(F!1(x) - FF)(x!1)})")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1))
                                                                (("2"
                                                                  (split)
                                                                  (("1"
                                                                    (expand
                                                                     "nonempty?")
                                                                    (("1"
                                                                      (expand
                                                                       "empty?")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "abs[T]((-[T])(F!1(n!1), FF))(x!1)")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "n!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "pointwise_bounded_above?")
                                                                    (("2"
                                                                      (expand
                                                                       "above_bounded")
                                                                      (("2"
                                                                        (expand
                                                                         "bounded_above?")
                                                                        (("2"
                                                                          (expand
                                                                           "pointwise?")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "upper_bound")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "ceiling(a!1)")
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "z!1")
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!2")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "H")
                                                  (("2"
                                                    (rewrite
                                                     "sup_measurable")
                                                    (("1"
                                                      (hide 2 3 -1)
                                                      (("1"
                                                        (expand
                                                         "measurable_bounded_above?")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skosimp)
                                                      (("2"
                                                        (hide-all-but
                                                         (-6 1))
                                                        (("2"
                                                          (inst
                                                           -
                                                           "n!2")
                                                          (("2"
                                                            (rewrite
                                                             "integrable_is_measurable")
                                                            (("2"
                                                              (hide 2)
                                                              (("2"
                                                                (rewrite
                                                                 "integrable_abs")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (1 -3))
                                            (("2"
                                              (expand
                                               "pointwise_bounded_above?")
                                              (("2"
                                                (expand
                                                 "bounded_above?")
                                                (("2"
                                                  (expand "pointwise?")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "_"
                                                       "x!1")
                                                      (("2"
                                                        (inst
                                                         +
                                                         "2 * GG(x!1)")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (expand "pointwise_convergence?")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst -8 "x!1")
                                          (("2"
                                            (hide-all-but (-8 1))
                                            (("2"
                                              (rewrite
                                               "metric_convergence_def")
                                              (("2"
                                                (rewrite
                                                 "metric_convergence_def")
                                                (("2"
                                                  (expand
                                                   "metric_converges_to")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst - "r!1")
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (inst
                                                           +
                                                           "n!1")
                                                          (("2"
                                                            (skosimp)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("2"
                                                                (expand
                                                                 "ball")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (skosimp)
                                    (("2"
                                      (expand "abs" 1)
                                      (("2"
                                        (expand "-" 1)
                                        (("2"
                                          (lemma
                                           "triangle"
                                           ("x"
                                            "F!1(n!1)(x!1)"
                                            "y"
                                            "-FF(x!1)"))
                                          (("2"
                                            (rewrite "abs_neg" -1)
                                            (("2"
                                              (hide-all-but
                                               (-1 -5 -7 1))
                                              (("2"
                                                (inst - "x!1")
                                                (("2"
                                                  (inst - "n!1" "x!1")
                                                  (("2"
                                                    (expand "abs" -2)
                                                    (("2"
                                                      (expand "abs" -3)
                                                      (("2"
                                                        (name-replace
                                                         "LHS"
                                                         "abs(F!1(n!1)(x!1) + -FF(x!1))")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp)
                                (("2"
                                  (rewrite "integrable_diff")
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -2 2)
                        (("2" (expand "ae_le?")
                          (("2" (expand "pointwise_ae?")
                            (("2" (expand "ae?")
                              (("2"
                                (expand "fullset")
                                (("2"
                                  (expand "ae_in?")
                                  (("2"
                                    (inst + "emptyset[T]")
                                    (("2"
                                      (skosimp)
                                      (("2"
                                        (hide 1)
                                        (("2"
                                          (inst - "x!1")
                                          (("2"
                                            (inst - "0" "x!1")
                                            (("2"
                                              (expand "abs")
                                              (("2"
                                                (typepred
                                                 "abs(F!1(0)(x!1))")
                                                (("2"
                                                  (expand "abs" 1 2)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (hide -6)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (-3 -4 1))
                      (("2" (skosimp)
                        (("2" (expand "pointwise_convergence?")
                          (("2" (inst - "_" "x!1")
                            (("2" (inst -2 "x!1")
                              (("2"
                                (rewrite "metric_convergence_def")
                                (("2"
                                  (case
                                   "metric_converges_to(LAMBDA n: abs(F!1(n)(x!1)), abs(f!2(x!1)))")
                                  (("1"
                                    (hide -3)
                                    (("1"
                                      (expand "metric_converges_to")
                                      (("1"
                                        (inst
                                         -
                                         "abs(f!2)(x!1) - f!1(x!1)")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst - "n!1")
                                            (("1"
                                              (inst - "n!1")
                                              (("1"
                                                (expand "ball")
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (expand "abs" -1 4)
                                                    (("1"
                                                      (expand "abs" 1)
                                                      (("1"
                                                        (name-replace
                                                         "LIMIT"
                                                         "abs(f!2(x!1))")
                                                        (("1"
                                                          (expand
                                                           "abs"
                                                           -2)
                                                          (("1"
                                                            (name-replace
                                                             "DRL1"
                                                             "abs(F!1(n!1)(x!1))")
                                                            (("1"
                                                              (expand
                                                               "abs")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2 -1)
                                    (("2"
                                      (expand "metric_converges_to")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "r!1")
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (inst + "n!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst - "i!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand "ball")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((integral const-decl "real" integral nil)
    (convergence? const-decl "bool" topological_convergence topology)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (pointwise_convergent? const-decl "bool" pointwise_convergence nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (sequence type-eq-decl nil sequences nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (integrable? const-decl "bool" integral nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology metric_space)
    (set type-eq-decl nil sets nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (ae_convergent? const-decl "bool" measure_theory nil)
    (measurable_complement judgement-tcc nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (phi const-decl "nat" measure_space nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (integral_ae_eq formula-decl nil integral nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (member const-decl "bool" sets nil)
    (null_is_negligible judgement-tcc nil measure_theory nil)
    (null_set? const-decl "bool" measure_theory nil)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (fullset const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (abs_0 formula-decl nil abs_lems reals)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (metric_converges_to const-decl "bool" metric_space_def
     metric_space)
    (complement const-decl "set" sets nil)
    (indefinite_integrable formula-decl nil integral nil)
    (union const-decl "set" sets nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (empty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (integrable_scal judgement-tcc nil integral nil)
    (pointwise_bounded_above nonempty-type-eq-decl nil
     pointwise_convergence nil)
    (sup const-decl "real" pointwise_convergence nil)
    (measurable_bounded_above nonempty-type-eq-decl nil measure_space
     nil)
    (measurable_bounded_above? const-decl "bool" measure_space nil)
    (sup_measurable formula-decl nil measure_space nil)
    (integrable_abs judgement-tcc nil integral nil)
    (least_upper_bound const-decl "bool" bound_defs reals)
    (pointwise_decreasing? const-decl "bool" pointwise_convergence nil)
    (nn_integrable_le formula-decl nil nn_integral nil)
    (nn_integrable_is_nn_integrable formula-decl nil integral nil)
    (decreasing? const-decl "bool" real_fun_preds reals)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (bounded_below? const-decl "bool" real_fun_preds reals)
    (converges_downto? const-decl "bool" convergence_aux metric_space)
    (converges_downto_is_glb formula-decl nil convergence_aux
     metric_space)
    (abs_neg formula-decl nil abs_lems reals)
    (upper_bound const-decl "bool" bound_defs reals)
    (integral_opp formula-decl nil integral nil)
    (integrable_diff judgement-tcc nil integral nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (integral_add formula-decl nil integral nil)
    (integrable_add judgement-tcc nil integral nil)
    (integral_diff formula-decl nil integral nil)
    (integral_ae_le formula-decl nil integral nil)
    (integral_nonneg formula-decl nil integral nil)
    (metric_zero? const-decl "bool" metric_def metric_space)
    (metric_symmetric? const-decl "bool" metric_def metric_space)
    (metric_triangle? const-decl "bool" metric_def metric_space)
    (metric? const-decl "bool" metric_def metric_space)
    (converges_upto? const-decl "bool" convergence_aux metric_space)
    (pointwise? const-decl "bool" pointwise_convergence nil)
    (bounded_above? const-decl "bool" real_fun_preds reals)
    (integral_zero formula-decl nil integral nil)
    (nn_integrable_zero formula-decl nil nn_integral nil)
    (nn_integrable_is_integrable judgement-tcc nil integral nil)
    (nn_integrable? const-decl "bool" nn_integral nil)
    (nn_integrable nonempty-type-eq-decl nil nn_integral nil)
    (integrable_opp judgement-tcc nil integral nil)
    (sup const-decl "{x | least_upper_bound(<=)(x, Su)}" bounded_reals
         reals)
    (above_bounded const-decl "bool" bounded_reals reals)
    (sup_set type-eq-decl nil bounded_reals reals)
    (pointwise_bounded_above? const-decl "bool" pointwise_convergence
     nil)
    (integral_ae_abs formula-decl nil integral nil)
    (pointwise_measurable formula-decl nil measure_space nil))
   nil)))

