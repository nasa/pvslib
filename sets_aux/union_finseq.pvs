%------------------------------------------------------------------------------
% Authors:
%
%		Bruno Berto de Oliveira Ribeiro
%		Universidade de Brasília - Brazil
%
% 		Thaynara Arielly de Lima
% 		Universidade Federal de Goiás - Brazil
%
%		Mauricio Ayala-Rincón
%		Universidade de Brasília - Brazil
%
%               Mariano M. Moscato
%               NASA  Langley  Research  Center - US
%
%------------------------------------------------------------------------------

union_finseq[T:type]: THEORY

  BEGIN

  IMPORTING reals@sigma

  card_union_ineq: LEMMA
    FORALL(A,B: finite_set[T]): card[T](union(A,B)) <= card[T](A) + card[T](B)

  union_finseq_rec(fs: finseq[finite_set[T]], n:nat): RECURSIVE finite_set[T] =
    IF n = 0 OR fs`length < n THEN emptyset[T]
    ELSE union(union_finseq_rec(fs, n-1), fs`seq(n-1)) ENDIF
    MEASURE n

  union_finseq(fs: finseq[finite_set[T]]): set[T] = union_finseq_rec(fs, fs`length)

  union_finseq_subset: LEMMA
    FORALL(a:T, fs: finseq[finite_set[T]]):
      member[T](a, union_finseq(fs)) <=> EXISTS(i:nat| i < fs`length):
      		 		        member[T](a, fs(i))

		       
  union_card_seq(fs: finseq[finite_set[T]]): finseq[real] = (# length := fs`length,
  		     			     		    seq := LAMBDA(i:nat| i < fs`length):card[T](fs(i)) #)


  union_finseq_ineq: LEMMA
    FORALL(fs: finseq[finite_set[T]]):
      IF fs`length = 0 THEN card[T](union_finseq[T](fs)) = 0 ELSE
      card[T](union_finseq[T](fs)) <= sigma(0, fs`length-1, union_card_seq(fs))
      ENDIF

  union_finseq_card_sum(fs: finseq[finite_set[T]], n:nat): RECURSIVE nat =
    IF n = 0 OR fs`length < n THEN 0
    ELSE card[T](fs(n-1)) + union_finseq_card_sum(fs, n-1) ENDIF
    MEASURE n

  union_finseq_ineq2: LEMMA
    FORALL(fs: finseq[finite_set[T]]):
      card[T](union_finseq[T](fs)) <= union_finseq_card_sum(fs, fs`length)
    
  END union_finseq
