(|union_finseq|
 (|card_union_ineq| 0
  (|card_union_ineq-1| NIL 3950273114
   ("" (SKEEP)
    (("" (LEMMA "card_union[T]") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((T FORMAL-TYPE-DECL NIL |union_finseq| NIL)
    (|card_union| FORMULA-DECL NIL |finite_sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_intersection1| APPLICATION-JUDGEMENT "finite_set" |finite_sets|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|union_finseq_rec_TCC1| 0
  (|union_finseq_rec_TCC1-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   NIL
   (|union_finseq_rec| SUBTYPE "(number_fields.-)(union_finseq.n, 1)" "nat")))
 (|union_finseq_rec_TCC2| 0
  (|union_finseq_rec_TCC2-1| NIL 3950273064 ("" (TERMINATION-TCC) NIL NIL) NIL
   NIL
   (|union_finseq_rec| TERMINATION
    "union_finseq.union_finseq_rec(union_finseq.fs, (number_fields.-)(union_finseq.n, 1))"
    "NIL")))
 (|union_finseq_rec_TCC3| 0
  (|union_finseq_rec_TCC3-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   NIL
   (|union_finseq_rec| SUBTYPE "(number_fields.-)(union_finseq.n, 1)"
    "below[fs`length]")))
 (|union_finseq_subset| 0
  (|union_finseq_subset-1| NIL 3950273238
   ("" (SKEEP)
    (("" (PROP)
      (("1" (EXPAND "union_finseq")
        (("1" (EXPAND "finseq_appl")
          (("1"
            (CASE
                "FORALL(n:nat| 0 < n AND n <= fs`length): member[T](a, union_finseq_rec(fs, n)) => EXISTS (i: nat | i < n): member[T](a, fs`seq(i))")
            (("1" (INST -1 "fs`length")
              (("1" (ASSERT) NIL NIL)
               ("2" (CASE-REPLACE "fs`length = 0")
                (("1" (EXPAND "union_finseq_rec")
                  (("1" (EXPAND "member")
                    (("1" (EXPAND "emptyset") (("1" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL)
             ("2" (HIDE-ALL-BUT 1)
              (("2" (MEASURE-INDUCT "n" "n")
                (("2" (SKEEP)
                  (("2" (CASE-REPLACE "x = 1")
                    (("1" (INST 1 "0")
                      (("1" (HIDE -1 -2)
                        (("1" (EXPAND "union_finseq_rec")
                          (("1" (EXPAND "union_finseq_rec")
                            (("1" (REWRITE "union_commutative")
                              (("1" (REWRITE "union_empty") NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (INST -1 "x-1")
                      (("1" (ASSERT)
                        (("1" (PROP)
                          (("1" (SKEEP) (("1" (INST 2 "i") NIL NIL)) NIL)
                           ("2" (EXPAND "union_finseq_rec" -1)
                            (("2" (EXPAND "member")
                              (("2" (EXPAND "union")
                                (("2" (PROP)
                                  (("1" (EXPAND "member")
                                    (("1" (PROPAX) NIL NIL)) NIL)
                                   ("2" (INST 3 "x-1")
                                    (("2" (EXPAND "member")
                                      (("2" (PROPAX) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (TYPEPRED "x") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (EXPAND "finseq_appl")
          (("2" (EXPAND "union_finseq")
            (("2"
              (CASE
                  "FORALL(n:nat| n < fs`length): member[T](a, union_finseq_rec(fs, n+1)) => member[T](a, union_finseq_rec(fs, fs`length))")
              (("1" (INST -1 "i")
                (("1" (PROP)
                  (("1" (EXPAND "union_finseq_rec")
                    (("1" (EXPAND "member")
                      (("1" (EXPAND "union")
                        (("1" (EXPAND "member") (("1" (PROP) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE -1 2)
                (("2" (MEASURE-INDUCT "fs`length-1-n" "n")
                  (("2" (SKEEP)
                    (("2" (CASE-REPLACE "x = fs`length-1")
                      (("1" (SIMPLIFY -3) (("1" (PROPAX) NIL NIL)) NIL)
                       ("2" (INST -1 "x+1")
                        (("1" (PROP)
                          (("1" (EXPAND "union_finseq_rec" 1)
                            (("1" (LIFT-IF)
                              (("1" (PROP)
                                (("1" (TYPEPRED "x") (("1" (ASSERT) NIL NIL))
                                  NIL)
                                 ("2" (EXPAND "member")
                                  (("2" (EXPAND "union")
                                    (("2" (EXPAND "member")
                                      (("2" (PROP) NIL NIL)) NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|x| SKOLEM-CONST-DECL "{n: nat | 0 < n AND n <= fs`length}" |union_finseq|
     NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|union_empty| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|fs| SKOLEM-CONST-DECL "finseq[finite_set[T]]" |union_finseq| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|union_finseq_rec| DEF-DECL "finite_set[T]" |union_finseq| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-TYPE-DECL NIL |union_finseq| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|union_finseq| CONST-DECL "set[T]" |union_finseq| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|x| SKOLEM-CONST-DECL "{n: nat | n < fs`length}" |union_finseq| NIL))
   SHOSTAK))
 (|union_finseq_ineq_TCC1| 0
  (|union_finseq_ineq_TCC1-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|union_finseq| CONST-DECL "set[T]" |union_finseq| NIL)) NIL
   (|union_finseq_ineq| SUBTYPE
    "union_finseq[union_finseq.T].union_finseq(union_finseq.fs)"
    "finite_set[T]")))
 (|union_finseq_ineq_TCC2| 0
  (|union_finseq_ineq_TCC2-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|union_finseq| CONST-DECL "set[T]" |union_finseq| NIL)) NIL
   (|union_finseq_ineq| SUBTYPE
    "union_finseq[union_finseq.T].union_finseq(union_finseq.fs)"
    "finite_set[T]")))
 (|union_finseq_ineq_TCC3| 0
  (|union_finseq_ineq_TCC3-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|union_card_seq| CONST-DECL "finseq[real]" |union_finseq| NIL))
   NIL
   (|union_finseq_ineq| SUBTYPE "0"
    "T_low[below[length(union_card_seq(fs))]]")))
 (|union_finseq_ineq_TCC4| 0
  (|union_finseq_ineq_TCC4-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|union_card_seq| CONST-DECL "finseq[real]" |union_finseq| NIL))
   NIL
   (|union_finseq_ineq| SUBTYPE "(number_fields.-)(union_finseq.fs`length, 1)"
    "T_high[below[length(union_card_seq(fs))]]")))
 (|union_finseq_ineq_TCC5| 0
  (|union_finseq_ineq_TCC5-1| NIL 3950273064 ("" (ASSUMING-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-TYPE-DECL NIL |union_finseq| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|union_card_seq| CONST-DECL "finseq[real]" |union_finseq| NIL))
   NIL
   (|union_finseq_ineq| ASSUMING
    "reals@sigma[below[length(union_card_seq(fs))]].sigma"
    "connected_domain: ASSUMPTION (FORALL (x, y: sigma.T), (z: integers.integer): booleans.IMPLIES(booleans.AND(reals.<=(x, z), reals.<=(z, y)), sigma.T_pred(z)))")))
 (|union_finseq_ineq| 0
  (|union_finseq_ineq-1| NIL 3950273286
   ("" (SKEEP)
    (("" (PROP)
      (("1" (EXPAND "union_finseq")
        (("1" (REPLACES -1)
          (("1" (EXPAND "union_finseq_rec")
            (("1" (REWRITE "card_emptyset") NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (EXPAND "union_finseq")
        (("2"
          (CASE
              "FORALL(n: posnat| n <= fs`length): card(union_finseq_rec(fs, n)) <=
       sigma(0, n - 1, finseq_appl[real](union_card_seq(fs)))")
          (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (HIDE 3)
            (("2" (MEASURE-INDUCT "n" "n")
              (("1" (SKEEP)
                (("1" (CASE-REPLACE "x = 1")
                  (("1" (EXPAND "finseq_appl")
                    (("1" (EXPAND "union_card_seq")
                      (("1" (EXPAND "finseq_appl")
                        (("1" (EXPAND "union_finseq_rec")
                          (("1" (EXPAND "union_finseq_rec")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "sigma")
                                (("1" (REWRITE "union_commutative")
                                  (("1" (REWRITE "union_empty")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (INST -1 "x-1")
                    (("1" (ASSERT)
                      (("1" (EXPAND "union_finseq_rec" 2)
                        (("1" (LEMMA "card_union_ineq")
                          (("1" (INST?)
                            (("1" (EXPAND "sigma" 2)
                              (("1" (EXPAND "finseq_appl")
                                (("1" (EXPAND "union_card_seq")
                                  (("1" (EXPAND "finseq_appl")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL)
               ("3" (HIDE 2 3) (("3" (GRIND) NIL NIL)) NIL)
               ("4" (HIDE 2 3) (("4" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("3" (HIDE 2 3) (("3" (GRIND) NIL NIL)) NIL)
           ("4" (HIDE 2 3) (("4" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |union_finseq| NIL)
    (|card_emptyset| FORMULA-DECL NIL |finite_sets| NIL)
    (|union_finseq_rec| DEF-DECL "finite_set[T]" |union_finseq| NIL)
    (|union_finseq| CONST-DECL "set[T]" |union_finseq| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|union_card_seq| CONST-DECL "finseq[real]" |union_finseq| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|T_high| TYPE-EQ-DECL NIL |sigma| |reals|)
    (|sigma| DEF-DECL "real" |sigma| |reals|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|fs| SKOLEM-CONST-DECL "finseq[finite_set[T]]" |union_finseq| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|union_commutative| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|union_empty| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|card_union_ineq| FORMULA-DECL NIL |union_finseq| NIL)
    (|sigma_nat| APPLICATION-JUDGEMENT "nat" |sigma| |reals|)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|x| SKOLEM-CONST-DECL "{n: posnat | n <= fs`length}" |union_finseq| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|union_finseq_ineq2_TCC1| 0
  (|union_finseq_ineq2_TCC1-1| NIL 3950273064 ("" (SUBTYPE-TCC) NIL NIL)
   ((|union_finseq| CONST-DECL "set[T]" |union_finseq| NIL)) NIL
   (|union_finseq_ineq2| SUBTYPE
    "union_finseq[union_finseq.T].union_finseq(union_finseq.fs)"
    "finite_set[T]")))
 (|union_finseq_ineq2| 0
  (|union_finseq_ineq2-1| NIL 3950273389
   ("" (SKEEP)
    (("" (EXPAND "union_finseq")
      ((""
        (CASE
            "FORALL(n:nat| n <= fs`length): card[T](union_finseq_rec(fs, n)) <=  union_finseq_card_sum(fs, n)")
        (("1" (INST?) NIL NIL)
         ("2" (HIDE 2)
          (("2" (MEASURE-INDUCT "n" "n")
            (("2" (SKEEP)
              (("2" (CASE-REPLACE "x = 0")
                (("1" (EXPAND "union_finseq_card_sum")
                  (("1" (EXPAND "union_finseq_rec")
                    (("1" (REWRITE "card_emptyset") (("1" (ASSERT) NIL NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (INST -1 "x-1")
                  (("1" (ASSERT)
                    (("1" (EXPAND "union_finseq_card_sum" 2)
                      (("1" (EXPAND "finseq_appl")
                        (("1" (EXPAND "union_finseq_rec" 2)
                          (("1" (LEMMA "card_union_ineq")
                            (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|union_finseq| CONST-DECL "set[T]" |union_finseq| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|x| SKOLEM-CONST-DECL "{n: nat | n <= fs`length}" |union_finseq| NIL)
    (|fs| SKOLEM-CONST-DECL "finseq[finite_set[T]]" |union_finseq| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|finite_union| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|card_union_ineq| FORMULA-DECL NIL |union_finseq| NIL)
    (|finseq_appl| CONST-DECL "[below[length(fs)] -> T]" |finite_sequences|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|card_emptyset| FORMULA-DECL NIL |finite_sets| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|union_finseq_card_sum| DEF-DECL "nat" |union_finseq| NIL)
    (|union_finseq_rec| DEF-DECL "finite_set[T]" |union_finseq| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (T FORMAL-TYPE-DECL NIL |union_finseq| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK)))

