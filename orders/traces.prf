(|traces|
 (|reachable_empty| 0
  (|reachable_empty-1| |nil| 3821351824
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "empty?" 1)
          (("1" (SKEEP)
            (("1" (EXPAND "member")
              (("1" (LEMMA "reachable_weak_induction")
                (("1" (INST?)
                  (("1" (INST -1 "LAMBDA(t:T): NOT empty?(init)")
                    (("1" (SPLIT)
                      (("1" (INST -1 "x") (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (SKEEP)
                        (("2" (SPLIT)
                          (("1" (EXPAND "empty?")
                            (("1" (EXPAND "member")
                              (("1" (INST -2 "t_1") NIL NIL)) NIL))
                            NIL)
                           ("2" (SKEEP) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "empty?")
          (("2" (SKEEP)
            (("2" (INSTEEP)
              (("2" (EXPAND "member")
                (("2" (EXPAND "reachable") (("2" (FLATTEN) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL) SHOSTAK))
 (|invariant_rule| 0
  (|invariant_rule-1| |nil| 3821297502
   ("" (SKEEP)
    (("" (LEMMA "reachable_induction")
      (("" (EXPAND "invariant")
        (("" (INST -1 "rel" "init" "inv")
          (("" (SPLIT -1)
            (("1" (SKEEP) (("1" (INSTEEP) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
             ("2" (HIDE 2)
              (("2" (SKEEP)
                (("2" (INST -2 "t")
                  (("2" (ASSERT)
                    (("2" (SKEEP)
                      (("2" (INST -4 "tp" "t") (("2" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL) SHOSTAK))
 (|reachable_tc| 0
  (|reachable_tc-1| |nil| 3821476787
   ("" (SKEEP*)
    (("" (LEMMA "TC_weak_induction")
      (("" (INST -1 "rel" _)
        ((""
          (INST -1
           "LAMBDA(x,y:T):reachable(rel)(init)(x) IMPLIES reachable(rel)(init)(y)")
          (("" (SPLIT)
            (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (HIDE-ALL-BUT 1)
              (("2" (SKEEP)
                (("2" (SPLIT -1)
                  (("1" (EXPAND "reachable" 1)
                    (("1" (FLATTEN)
                      (("1" (INST? 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (SKEEP) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|reachable_iff_tc| 0
  (|reachable_iff_tc-1| |nil| 3821466405
   ("" (SKEEP)
    ((""
      (CASE
          "FORALL (t: T): reachable(rel)(init)(t) IMPLIES init(t) OR EXISTS (tt: (init)): TC(rel)(tt, t)")
      (("1"
        (CASE
            "FORALL (t: T): (init(t) OR EXISTS (tt: (init)): TC(rel)(tt, t)) IMPLIES reachable(rel)(init)(t)")
        (("1" (SKEEP)
          (("1" (INSTEEP) (("1" (INSTEEP) (("1" (GROUND) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (HIDE-ALL-BUT 1)
          (("2" (SKEEP)
            (("2" (EXPAND "reachable")
              (("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (SKEEP -1)
                    (("2" (LEMMA "TC_induction")
                      (("2" (INST -1 "rel" _)
                        (("2"
                          (INST -1
                           "LAMBDA(t1,t2:T): init(t1) IMPLIES reachable(rel)(init)(t2)")
                          (("2" (SPLIT -1)
                            (("1" (INST? -1)
                              (("1" (ASSERT)
                                (("1" (EXPAND "reachable" -1)
                                  (("1" (PROPAX) NIL NIL)) NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT 1)
                              (("2" (SKEEP)
                                (("2" (SPLIT -1)
                                  (("1" (EXPAND "reachable")
                                    (("1" (FLATTEN)
                                      (("1" (INST 2 "x")
                                        (("1" (EXPAND "reachable")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (SKEEP)
                                    (("2" (ASSERT)
                                      (("2" (LEMMA "reachable_tc")
                                        (("2" (INST -1 "rel" "init" "z" "y")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (RULE-INDUCT "reachable")
          (("2" (SKEEP)
            (("2" (ASSERT)
              (("2" (SKEEP -1)
                (("2" (SPLIT -1)
                  (("1" (INST 2 "tp")
                    (("1" (EXPAND "TC") (("1" (FLATTEN) NIL NIL)) NIL)) NIL)
                   ("2" (SKEEP)
                    (("2" (INSTEEP)
                      (("2" (EXPAND "TC" 2)
                        (("2" (FLATTEN)
                          (("2" (INST 3 "tp")
                            (("2" (ASSERT)
                              (("2" (EXPAND "TC" 3) (("2" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL) SHOSTAK))
 (|normalizing_reachable| 0
  (|normalizing_reachable-1| |nil| 3821620584
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "normalizing")
          (("1" (EXPAND "empty?")
            (("1" (EXPAND "member")
              (("1" (SKEEP)
                (("1" (INST -2 "0")
                  (("1" (LEMMA "reachable_iff_tc")
                    (("1" (INST?)
                      (("1" (ASSERT)
                        (("1" (SPLIT -1)
                          (("1" (INSTEEP) NIL NIL)
                           ("2" (SKEEP :PREDS? T)
                            (("2" (REWRITE "iterate_n_tc")
                              (("2" (SKEEP)
                                (("2" (REWRITE "iterate_n_fseq")
                                  (("2" (SKEEP)
                                    (("2"
                                      (INST -4
                                       "LAMBDA(i:nat): IF i <= n THEN fseq(i) ELSE x(i-n) ENDIF")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (EXPAND "ascending?")
                                        (("2" (SKEEP)
                                          (("2" (CASE "n_1 < n")
                                            (("1" (ASSERT)
                                              (("1" (TYPEPRED "fseq")
                                                (("1" (EXPAND "ascending_n?")
                                                  (("1" (INST?) NIL NIL)) NIL))
                                                NIL))
                                              NIL)
                                             ("2" (CASE-REPLACE "n_1=n")
                                              (("1" (ASSERT)
                                                (("1" (REPLACES -4)
                                                  (("1" (TYPEPRED "x")
                                                    (("1" (EXPAND "ascending?")
                                                      (("1" (INST?)
                                                        (("1" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2" (TYPEPRED "x")
                                                  (("2" (EXPAND "ascending?")
                                                    (("2" (INST? -1)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (HIDE-ALL-BUT 1)
                                        (("3" (GRIND) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "normalizing")
          (("2" (EXPAND "empty?")
            (("2" (SKEEP)
              (("2" (INSTEEP)
                (("2" (EXPAND "member")
                  (("2" (INDUCT "i")
                    (("1" (EXPAND "reachable") (("1" (FLATTEN) NIL NIL)) NIL)
                     ("2" (SKEEP)
                      (("2" (EXPAND "reachable" 1)
                        (("2" (FLATTEN)
                          (("2" (INST 2 "x(j)")
                            (("2" (ASSERT)
                              (("2" (TYPEPRED "x")
                                (("2" (EXPAND "ascending?")
                                  (("2" (INST?) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL) SHOSTAK))
 (|terminating_eq_normalizing| 0
  (|terminating_eq_normalizing-1| |nil| 3822240824
   ("" (DECOMPOSE-EQUALITY)
    (("" (REWRITE "terminating_no_ascending_seq")
      (("" (EXPAND "normalizing")
        (("" (EXPAND "empty?")
          (("" (EXPAND "member")
            (("" (IFF)
              (("" (SPLIT)
                (("1" (FLATTEN)
                  (("1" (SKEEP)
                    (("1" (INSTEEP)
                      (("1" (TYPEPRED "x") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN) (("2" (SKEEP) (("2" (INSTEEP) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL) NIL))
 (|normalizing_is_terminating| 0
  (|normalizing_is_terminating-1| |nil| 3821653539
   ("" (SKEEP)
    (("" (REWRITE "normalizing_reachable")
      (("" (REWRITE "terminating_no_ascending_seq")
        (("" (EXPAND "empty?")
          (("" (EXPAND "member")
            (("" (SPLIT)
              (("1" (FLATTEN)
                (("1" (SKEEP)
                  (("1" (INSTEEP)
                    (("1" (EXPAND "ascending?")
                      (("1" (SKEEP)
                        (("1" (INST -1 "i") (("1" (FLATTEN) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (EXPAND "ascending?")
                      (("2" (SKEEP)
                        (("2" (INSTEEP) (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (SKEEP)
                  (("2" (INSTEEP)
                    (("2" (EXPAND "ascending?")
                      (("2" (SKEEP)
                        (("2" (INST -1 "n")
                          (("2" (ASSERT)
                            (("2" (TYPEPRED "x")
                              (("2" (EXPAND "ascending?")
                                (("2" (INSTEEP) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL) SHOSTAK))
 (|normalizing_reachable_normalizable| 0
  (|normalizing_reachable_normalizable-1| |nil| 3821706091
   ("" (SKEEP*)
    (("" (TYPEPRED "rel")
      (("" (REWRITE "normalizing_is_terminating")
        (("" (LEMMA "terminating_is_weakly_terminating")
          ((""
            (INST -1
             "LAMBDA (t1, t2: T):reachable(rel)(init)(t1) AND rel(t1, t2)")
            (("" (EXPAND "weakly_terminating")
              (("" (INSTEEP)
                (("" (EXPAND "normalizable")
                  (("" (SPLIT -1)
                    (("1" (EXPAND "normal") (("1" (FLATTEN) NIL NIL)) NIL)
                     ("2" (SKEEP :PREDS? T)
                      (("2" (TYPEPRED "t")
                        (("2" (CASE "TC(rel)(t,nft)")
                          (("1" (INSTEEP)
                            (("1" (HIDE -4 -5 2)
                              (("1" (EXPAND "normal")
                                (("1" (SKEEP)
                                  (("1" (INSTEEP)
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "reachable_tc")
                                        (("1" (INST -1 "rel" "init" "t" "nft")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE-ALL-BUT (-1 -3 1))
                            (("2" (REWRITE "iterate_n_tc")
                              (("2" (REWRITE "iterate_n_tc")
                                (("2" (SKEEP)
                                  (("2" (INSTEEP)
                                    (("2" (REWRITE "iterate_n_fseq")
                                      (("2" (REWRITE "iterate_n_fseq")
                                        (("2" (SKEEP)
                                          (("2" (INSTEEP)
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (TYPEPRED "fseq")
                                              (("2" (EXPAND "ascending_n?")
                                                (("2" (SKEEP)
                                                  (("2" (INSTEEP)
                                                    (("2" (FLATTEN) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL))
 (|terminating_is_normalizing| 0
  (|terminating_is_normalizing-1| |nil| 3822240958
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (REWRITE "terminating_no_ascending_seq")
          (("1" (EXPAND "normalizing")
            (("1" (EXPAND "empty?")
              (("1" (EXPAND "member")
                (("1" (SKEEP*) (("1" (INSTEEP) (("1" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (INST -1 "LAMBDA(t:T):TRUE")
          (("2" (REWRITE "terminating_eq_normalizing" :DIR RL) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL) SHOSTAK))
 (|none_above| 0
  (|none_above-1| |nil| 3821301708
   ("" (SKEEP :BUT "j")
    (("" (CASE "FORALL (n:nat): none?(tr(i)) IMPLIES none?(tr(i+n))")
      (("1" (SKEEP) (("1" (INST -1 "j-i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (HIDE 2)
        (("2" (INDUCT "n")
          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (SKEEP)
            (("2" (ASSERT)
              (("2" (TYPEPRED "tr")
                (("2" (INST -1 "i+j") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|some_below| 0
  (|some_below-1| |nil| 3821713973
   ("" (SKEEP)
    (("" (TYPEPRED "j")
      (("" (CASE "none?(tr(j))")
        (("1" (LEMMA "none_above")
          (("1" (INST -1 "tr" "j" "i") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (ASSERT) NIL NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|some_before_none| 0
  (|some_before_none-1| |nil| 3822252802
   ("" (SKEEP)
    (("" (LEMMA "none_above")
      (("" (INST -1 "tr" "j" "i")
        (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|length_TCC1| 0
  (|length_TCC1-1| |nil| 3821301700 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|length| SUBTYPE
    "{n: naturalnumbers.nat | Maybe[traces.T].none?(traces.ftr(n))}"
    "(sets[nat].nonempty?)")))
 (|none_after_length| 0
  (|none_after_length-1| |nil| 3821302445
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "length")
      (("" (NAME-LABEL "mm" "min({n: nat | none?(ftr(n))})")
        (("" (TYPEPRED "mm")
          (("" (LEMMA "none_above")
            (("" (INST -1 "ftr" "mm" "i") (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|some_before_length| 0
  (|some_before_length-1| |nil| 3822252239
   ("" (SKEEP* :PREDS? T)
    (("" (EXPAND "length")
      (("" (WITH-TCCS (TYPEPRED "min({n: nat | none?(ftr(n))})"))
        (("" (INST -2 "i") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   (NIL NIL) NIL))
 (|length_is_none| 0
  (|length_is_none-1| |nil| 3821303019
   ("" (SKEEP) (("" (LEMMA "none_after_length") (("" (INST?) NIL NIL)) NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|at_TCC1| 0
  (|at_TCC1-1| |nil| 3822322552
   ("" (SKEEP) (("" (LEMMA "some_before_length") (("" (INST?) NIL NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL (|at| SUBTYPE "traces.ftr(traces.i)" "(Maybe[traces.T].some?)")))
 (|empty_trace_TCC1| 0
  (|empty_trace_TCC1-1| |nil| 3821352934 ("" (SUBTYPE-TCC) NIL NIL) (NIL) NIL
   (|empty_trace| SUBTYPE
    "LAMBDA (i: naturalnumbers.nat): Maybe[traces.T].None" "FiniteTrace")))
 (|empty_trace_length| 0
  (|empty_trace_length-1| |nil| 3821352966
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (DECOMPOSE-EQUALITY)
          (("1" (EXPAND "empty_trace")
            (("1" (LEMMA "none_after_length")
              (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (REPLACES -1)
          (("2" (GRIND)
            (("2" (WITH-TCCS (TYPEPRED "min({n: nat | TRUE})"))
              (("2" (INST -1 "0") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|empty_trace_lenght_eq_0| 0
  (|empty_trace_lenght_eq_0-1| |nil| 3821352941
   ("" (LEMMA "empty_trace_length") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|head_none_empty_trace| 0
  (|head_none_empty_trace-1| |nil| 3821726644
   ("" (SKEEP)
    (("" (GRIND)
      (("" (DECOMPOSE-EQUALITY)
        (("" (CASE-REPLACE "x!1=0")
          (("1" (ASSERT) NIL NIL)
           ("2" (LEMMA "none_above")
            (("2" (INST -1 "tr" "0" "x!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|single_trace_TCC1| 0
  (|single_trace_TCC1-1| |nil| 3821722059
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (SKEEP)
        (("1" (CASE-REPLACE "i_1=0")
          (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "finite_trace?")
        (("2" (INST 1 "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|single_trace| SUBTYPE
    "LAMBDA (i: naturalnumbers.nat): IF i = 0 THEN Maybe[traces.T].Some(traces.t) ELSE Maybe[traces.T].None ENDIF"
    "FiniteTrace")))
 (|single_trace_length| 0
  (|single_trace_length-1| |nil| 3821722225
   ("" (SKEEP)
    (("" (EXPAND "length")
      (("" (WITH-TCCS (TYPEPRED "min({n: nat | none?(single_trace(t)(n))})"))
        (("" (INST -2 "1") (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   (NIL NIL) SHOSTAK))
 (|traces_TCC1| 0
  (|traces_TCC1-1| |nil| 3821301700 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   NIL (|traces| SUBTYPE "traces.tr(traces.n)" "(Maybe[traces.T].some?)")))
 (|traces_TCC2| 0
  (|traces_TCC2-1| |nil| 3821301700 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   NIL (|traces| SUBTYPE "traces.tr(traces.n)" "(Maybe[traces.T].some?)")))
 (|single_iff_normal| 0
  (|single_iff_normal-1| |nil| 3821722477
   ("" (SKEEP*)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "traces")
          (("1" (SKEEP)
            (("1" (CASE-REPLACE "n=0")
              (("1" (ASSERT)
                (("1" (EXPAND "single_trace") (("1" (PROPAX) NIL NIL)) NIL))
                NIL)
               ("2" (HIDE 3)
                (("2" (EXPAND "single_trace") (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "traces")
          (("2" (INST -1 "0")
            (("2" (EXPAND "single_trace") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|single_normal_unique| 0
  (|single_normal_unique-2| |nil| 3821723373
   ("" (SKEEP* :PREDS? T)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (DECOMPOSE-EQUALITY)
          (("1" (CASE-REPLACE "x!1=0")
            (("1" (EXPAND "single_trace")
              (("1" (HIDE-ALL-BUT (-5 1)) (("1" (DECOMPOSE-EQUALITY) NIL NIL))
                NIL))
              NIL)
             ("2" (EXPAND "single_trace")
              (("2" (ASSERT)
                (("2" (EXPAND "traces")
                  (("2" (INST -3 "0")
                    (("2" (ASSERT)
                      (("2" (SPLIT -3)
                        (("1" (FLATTEN)
                          (("1" (HIDE-ALL-BUT (-2 -3))
                            (("1" (EXPAND "normal") (("1" (INST? 1) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (LEMMA "none_above")
                          (("2" (INST -1 "tr" "1" "x!1")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (LEMMA "single_iff_normal")
          (("2" (INST? -1) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL) NIL))
 (|tc_iff_prefix_of_trace_TCC1| 0
  (|tc_iff_prefix_of_trace_TCC1-1| |nil| 3821525849
   ("" (SKEEP) (("" (INST? -1) NIL NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|tc_iff_prefix_of_trace| SUBTYPE "traces.tr(0)"
    "(Maybe[traces.T].some?)")))
 (|tc_iff_prefix_of_trace_TCC2| 0
  (|tc_iff_prefix_of_trace_TCC2-1| |nil| 3821525849
   ("" (SKEEP) (("" (INST? -1) NIL NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL
   (|tc_iff_prefix_of_trace| SUBTYPE "traces.tr(traces.n)"
    "(Maybe[traces.T].some?)")))
 (|tc_iff_prefix_of_trace| 0
  (|tc_iff_prefix_of_trace-1| |nil| 3821525900
   ("" (SKEEP*)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (REWRITE "iterate_n_tc")
          (("1" (SKEEP)
            (("1" (REWRITE "iterate_n_fseq")
              (("1" (SKEEP)
                (("1" (TYPEPRED "fseq")
                  (("1" (EXPAND "ascending_n?")
                    (("1" (CASE "normalizing(LAMBDA(t:T):t=t2)(rel)")
                      (("1" (LEMMA "normalizing_reachable_normalizable")
                        (("1" (INST -1 "LAMBDA(t:T):t=t2" "rel" "t2")
                          (("1" (EXPAND "normalizable")
                            (("1" (SPLIT -1)
                              (("1"
                                (INST 1
                                 "LAMBDA(i:nat): IF i <= n THEN Some(fseq(i)) ELSE None ENDIF"
                                 "n")
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (SPLIT)
                                  (("1" (SKEEP)
                                    (("1" (CASE-REPLACE "i_1 <= n")
                                      (("1" (ASSERT) NIL NIL)
                                       ("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("2" (EXPAND "traces")
                                    (("2" (SKEEP)
                                      (("2" (CASE "n_1 < n")
                                        (("1" (ASSERT)
                                          (("1" (INST? -4) NIL NIL)) NIL)
                                         ("2" (ASSERT)
                                          (("2" (CASE-REPLACE "n_1 = n")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (SKEEP)
                                (("2" (REWRITE "iterate_n_tc")
                                  (("2" (SKOLEM -1 "nn")
                                    (("2" (REWRITE "iterate_n_fseq")
                                      (("2" (SKOLEM -1 "ffseq")
                                        (("2" (FLATTEN)
                                          (("2" (TYPEPRED "nft")
                                            (("2" (TYPEPRED "ffseq")
                                              (("2" (EXPAND "ascending_n?")
                                                (("2"
                                                  (INST 1
                                                   "LAMBDA(i:nat): IF i <= n THEN Some(fseq(i)) ELSIF i <= n+nn THEN Some(ffseq(i-n)) ELSE None ENDIF"
                                                   "n")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (SPLIT)
                                                    (("1" (SKEEP)
                                                      (("1"
                                                        (CASE-REPLACE
                                                         "i_1 <= n")
                                                        (("1" (ASSERT) NIL NIL)
                                                         ("2" (ASSERT)
                                                          (("2"
                                                            (CASE-REPLACE
                                                             "i_1 <= n + nn")
                                                            (("1" (ASSERT) NIL
                                                              NIL)
                                                             ("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (EXPAND "traces")
                                                      (("2" (SKEEP)
                                                        (("2" (CASE "n_1 < n")
                                                          (("1" (ASSERT)
                                                            (("1" (INST? -7)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2"
                                                            (CASE-REPLACE
                                                             "n_1=n")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (INST -2 "0")
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (ASSERT)
                                                              (("2"
                                                                (CASE-REPLACE
                                                                 "n_1 <= n+nn")
                                                                (("1" (SPLIT 4)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (CASE-REPLACE
                                                                       "1 + n_1 <= n + nn")
                                                                      (("1"
                                                                        (INST
                                                                         -4
                                                                         "n_1-n")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (HIDE-ALL-BUT 1)
                                                    (("3" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE-ALL-BUT 1)
                            (("2" (EXPAND "reachable") (("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (EXPAND "normalizing")
                        (("2" (EXPAND "empty?")
                          (("2" (EXPAND "member")
                            (("2" (SKEEP :PREDS? T)
                              (("2" (EXPAND "ascending?")
                                (("2"
                                  (INST 1
                                   "LAMBDA(i:nat): IF i <= n THEN Some(fseq(i)) ELSE Some(x(i-n)) ENDIF"
                                   "n")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (SPLIT)
                                    (("1" (SKEEP)
                                      (("1" (LIFT-IF) (("1" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2" (EXPAND "traces")
                                      (("2" (SKEEP)
                                        (("2" (HIDE 1)
                                          (("2" (CASE "n_1 < n")
                                            (("1" (ASSERT)
                                              (("1" (INST? -4) NIL NIL)) NIL)
                                             ("2" (CASE-REPLACE "n_1 = n")
                                              (("1" (ASSERT)
                                                (("1" (INST -2 "0")
                                                  (("1" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2" (INST -1 "n_1-n")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("3" (HIDE-ALL-BUT 1)
                                    (("3" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (SKEEP)
          (("2" (TYPEPRED "tr")
            (("2" (EXPAND "traces")
              (("2" (REWRITE "iterate_n_tc")
                (("2" (INSTEEP)
                  (("2" (REWRITE "iterate_n_fseq")
                    (("2" (INST 1 "LAMBDA(i:upto(n)):val(tr(i))")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (EXPAND "ascending_n?")
                        (("2" (SKEEP :PREDS? T)
                          (("2" (INST -3 "i_1")
                            (("2" (SPLIT -3)
                              (("1" (INST -4 "i_1") (("1" (ASSERT) NIL NIL))
                                NIL)
                               ("2" (FLATTEN) NIL NIL)
                               ("3" (FLATTEN)
                                (("3" (INST -4 "i_1+1")
                                  (("3" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|terminating_iff_finite_traces| 0
  (|terminating_iff_finite_traces-1| |nil| 3822165873
   ("" (SKEEP)
    (("" (REWRITE "terminating_no_ascending_seq")
      (("" (EXPAND "empty?")
        (("" (EXPAND "member")
          (("" (SPLIT)
            (("1" (FLATTEN)
              (("1" (SKEEP)
                (("1" (EXPAND "finite_trace?")
                  (("1" (INST -1 "LAMBDA(i:nat):val(tr(i))")
                    (("1" (EXPAND "ascending?")
                      (("1" (SKEEP)
                        (("1" (TYPEPRED "tr")
                          (("1" (EXPAND "traces")
                            (("1" (INSTEEP -2)
                              (("1" (SPLIT -2)
                                (("1" (INSTEEP 2) NIL NIL)
                                 ("2" (FLATTEN) NIL NIL)
                                 ("3" (FLATTEN)
                                  (("3" (INST 3 "n+1") (("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (SKEEP)
                      (("2" (INST 2 "i") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2" (SKEEP)
                (("2" (EXPAND "ascending?")
                  (("2" (INST -1 "LAMBDA(i:nat):Some(x(i))")
                    (("1" (EXPAND "finite_trace?") (("1" (PROPAX) NIL NIL))
                      NIL)
                     ("2" (EXPAND "traces") (("2" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|terminating_finite_traces_j| 0
  (|terminating_finite_traces_j-1| |nil| 3822322898
   ("" (SKEEP)
    (("" (LEMMA "terminating_iff_finite_traces")
      (("" (INST?) (("" (ASSERT) (("" (INST? -1) NIL NIL)) NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL)
   NIL
   (|terminating_finite_traces_j| SUBTYPE "traces.x"
    "(traces.finite_trace?)")))
 (|last_of_finite_is_normal_TCC1| 0
  (|last_of_finite_is_normal_TCC1-1| |nil| 3822259718
   ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL (|last_of_finite_is_normal| SUBTYPE "traces.lst" "nat")))
 (|last_of_finite_is_normal| 0
  (|last_of_finite_is_normal-1| |nil| 3822260303
   ("" (SKEEP* :PREDS? T)
    (("" (SKOLETIN)
      (("" (EXPAND "traces")
        (("" (INST -3 "lst")
          (("1" (LEMMA "some_before_length")
            (("1" (INST -1 "tr" "lst")
              (("1" (ASSERT)
                (("1" (SPLIT -4)
                  (("1" (FLATTEN)
                    (("1" (LEMMA "length_is_none")
                      (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|normal| CONST-DECL "bool" |termination| NIL)
    (|val| ADT-ACCESSOR-DECL "[(some?) -> T]" |Maybe| |structures|)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|some?| ADT-RECOGNIZER-DECL "[Maybe -> boolean]" |Maybe| |structures|)
    (|length| CONST-DECL "nat" |traces| NIL)
    (|FiniteTrace| TYPE-EQ-DECL NIL |traces| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-TYPE-DECL NIL |traces| NIL)
    (|Maybe| TYPE-DECL NIL |Maybe| |structures|)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|none?| ADT-RECOGNIZER-DECL "[Maybe -> boolean]" |Maybe| |structures|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Trace| TYPE-EQ-DECL NIL |traces| NIL)
    (|finite_trace?| CONST-DECL "bool" |traces| NIL)
    (|Relation| TYPE-EQ-DECL NIL |termination| NIL)
    (|traces| CONST-DECL "bool" |traces| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|lst| SKOLEM-CONST-DECL "int" |traces| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|tr| SKOLEM-CONST-DECL "(traces(rel))" |traces| NIL)
    (|rel| SKOLEM-CONST-DECL "Relation[T]" |traces| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length_is_none| FORMULA-DECL NIL |traces| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|some_before_length| FORMULA-DECL NIL |traces| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|run_trace_j| 0
  (|run_trace_j-2| |nil| 3822324635 ("" (JUDGEMENT-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL (|run_trace_j| SUBTYPE "traces.x" "(traces.traces(traces.rel))")))
 (|superset_init_run| 0
  (|superset_init_run-1| |nil| 3822309858
   ("" (SKEEP* :PREDS? T)
    (("" (EXPAND "run")
      (("" (FLATTEN)
        (("" (ASSERT)
          (("" (HIDE-ALL-BUT (-4 -5 1)) (("" (GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|normalizing_iff_finite_traces| 0
  (|normalizing_iff_finite_traces-1| |nil| 3822241615
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "normalizing")
          (("1" (EXPAND "empty?")
            (("1" (EXPAND "member")
              (("1" (SKEEP)
                (("1" (EXPAND "finite_trace?")
                  (("1" (TYPEPRED "rn")
                    (("1" (EXPAND "run")
                      (("1" (FLATTEN)
                        (("1" (EXPAND "traces")
                          (("1" (INST -5 "LAMBDA(i:nat):val(rn(i))")
                            (("1" (EXPAND "ascending?")
                              (("1" (SKEEP)
                                (("1" (INSTEEP -2)
                                  (("1" (SPLIT -2)
                                    (("1" (INSTEEP 2) NIL NIL)
                                     ("2" (FLATTEN) NIL NIL)
                                     ("3" (FLATTEN)
                                      (("3" (INST 3 "n+1")
                                        (("3" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKEEP)
                              (("2" (INST 2 "i") (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "normalizing")
          (("2" (EXPAND "empty?")
            (("2" (SKEEP)
              (("2" (EXPAND "member")
                (("2" (INST -1 "LAMBDA(i:nat):Some(x(i))")
                  (("1" (EXPAND "finite_trace?") (("1" (PROPAX) NIL NIL)) NIL)
                   ("2" (EXPAND "run")
                    (("2" (ASSERT)
                      (("2" (EXPAND "traces")
                        (("2" (SKEEP)
                          (("2" (TYPEPRED "x")
                            (("2" (EXPAND "ascending?")
                              (("2" (INSTEEP) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|terminating_finite_runs_j| 0
  (|terminating_finite_runs_j-1| |nil| 3822323627
   ("" (SKEEP)
    (("" (LEMMA "normalizing_iff_finite_traces")
      (("" (INST?)
        (("" (INST?)
          (("" (FLATTEN)
            (("" (HIDE -2)
              (("" (SPLIT -1)
                (("1" (INST -1 "x") NIL NIL)
                 ("2" (LEMMA "terminating_is_normalizing")
                  (("2" (INST?)
                    (("2" (FLATTEN)
                      (("2" (HIDE -2)
                        (("2" (ASSERT) (("2" (INSTEEP) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|terminating_finite_runs_j| SUBTYPE "traces.x" "(traces.finite_trace?)")))
 (|run_empty| 0
  (|run_empty-1| |nil| 3821478499
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "empty?")
          (("1" (SKEEP :PREDS? T)
            (("1" (EXPAND "member")
              (("1" (EXPAND "run")
                (("1" (FLATTEN) (("1" (INST? -2) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "empty?")
          (("2" (SKEEP)
            (("2" (EXPAND "member")
              (("2" (EXPAND "run")
                (("2" (CASE "normal(rel)(x)")
                  (("1"
                    (INST -2
                     "LAMBDA(i:nat): IF i=0 THEN Some(x) ELSE None ENDIF")
                    (("1" (ASSERT)
                      (("1" (EXPAND "traces")
                        (("1" (SKEEP)
                          (("1" (CASE-REPLACE "n=0") (("1" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (EXPAND "normal")
                    (("2" (SKEEP)
                      (("2" (LEMMA "tc_iff_prefix_of_trace")
                        (("2" (INST -1 "rel" "x" "tt")
                          (("2" (CASE-REPLACE "TC(rel)(x,tt)")
                            (("1" (ASSERT)
                              (("1" (SKEEP)
                                (("1" (INST -6 "tr")
                                  (("1" (ASSERT) (("1" (INST -2 "0") NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT (-2 1))
                              (("2" (EXPAND "TC") (("2" (FLATTEN) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK))
 (|empty_trace_not_run| 0
  (|empty_trace_not_run-1| |nil| 3821726326
   ("" (SKEEP)
    (("" (EXPAND "member")
      (("" (EXPAND "run")
        (("" (FLATTEN)
          (("" (EXPAND "empty_trace") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|head_of_run_some| 0
  (|head_of_run_some-1| |nil| 3821726734
   ("" (SKEEP*)
    (("" (LEMMA "empty_trace_not_run")
      (("" (INSTEEP)
        (("" (EXPAND "member")
          (("" (LEMMA "head_none_empty_trace")
            (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL) SHOSTAK))
 (|first_TCC1| 0
  (|first_TCC1-1| |nil| 3822324104
   ("" (LEMMA "head_of_run_some") (("" (PROPAX) NIL NIL)) NIL) (NIL) NIL
   (|first| SUBTYPE "traces.rn(0)" "(Maybe[traces.T].some?)")))
 (|finite_run_finite_trace_j| 0
  (|finite_run_finite_trace_j-1| |nil| 3822325138 ("" (JUDGEMENT-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|finite_run_finite_trace_j| SUBTYPE "traces.x" "(traces.finite_trace?)")))
 (|pos_length_finite_run| 0
  (|pos_length_finite_run-2| |nil| 3822259749
   ("" (SKEEP*)
    (("" (LEMMA "empty_trace_length")
      (("" (INST -1 "frn")
        (("" (LEMMA "empty_trace_not_run")
          (("" (EXPAND "member")
            (("" (INST? -1) (("" (INSTEEP -1) (("" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL))
 (|last_TCC1| 0
  (|last_TCC1-1| |nil| 3822325138
   ("" (SKEEP)
    (("" (LEMMA "pos_length_finite_run")
      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|last| SUBTYPE "(number_fields.-)(traces.length(traces.frn), 1)" "nat")))
 (|last_TCC2| 0
  (|last_TCC2-1| |nil| 3822325138
   ("" (SKEEP)
    (("" (LEMMA "some_before_length")
      (("" (INST?)
        (("" (LEMMA "pos_length_finite_run")
          (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|last| SUBTYPE
    "traces.frn((number_fields.-)(traces.length(traces.frn), 1))"
    "(Maybe[traces.T].some?)")))
 (|last_TCC3| 0
  (|last_TCC3-1| |nil| 3822325138
   ("" (SKEEP :PREDS? T)
    (("" (LEMMA "pos_length_finite_run")
      (("" (INST?)
        (("" (LEMMA "last_of_finite_is_normal")
          (("" (INST?)
            (("" (INST?)
              (("" (ASSERT)
                (("" (REWRITE "finite_run_finite_trace_j") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   NIL
   (|last| SUBTYPE
    "Maybe[traces.T].val(traces.frn((number_fields.-)(traces.length(traces.frn), 1)))"
    "(termination[traces.T].normal(traces.rel))")))
 (|run_all_reachable| 0
  (|run_all_reachable-1| |nil| 3821714349
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (INDUCT "n")
        (("1" (FLATTEN)
          (("1" (EXPAND "reachable")
            (("1" (FLATTEN)
              (("1" (TYPEPRED "tr")
                (("1" (EXPAND "run") (("1" (FLATTEN) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (LEMMA "some_below")
            (("2" (INST -1 "tr" "j+1" "j")
              (("2" (ASSERT)
                (("2" (EXPAND "reachable" 1)
                  (("2" (FLATTEN)
                    (("2" (INST 2 "val(tr(j))")
                      (("2" (ASSERT)
                        (("2" (TYPEPRED "tr")
                          (("2" (EXPAND "run")
                            (("2" (FLATTEN)
                              (("2" (EXPAND "traces")
                                (("2" (INST -2 "j") (("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL) SHOSTAK))
 (|last_reachable_j| 0
  (|last_reachable_j-1| |nil| 3822326940
   ("" (SKEEP)
    (("" (LEMMA "run_all_reachable")
      (("" (EXPAND "last")
        (("" (LEMMA "pos_length_finite_run")
          (("" (INST?)
            (("" (INST? -2)
              (("1" (ASSERT)
                (("1" (LEMMA "some_before_length") (("1" (INST?) NIL NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL)
   NIL
   (|last_reachable_j| SUBTYPE
    "traces.last(traces.rel, traces.init)(traces.frn)"
    "(traces.reachable(traces.rel)(traces.init))")))
 (|reachable_prefix_of_trace_TCC1| 0
  (|reachable_prefix_of_trace_TCC2-1| |nil| 3821715690
   ("" (SKEEP*) (("" (INST? -1) NIL NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|reachable_prefix_of_trace| SUBTYPE "traces.rn(traces.n)"
    "(Maybe[traces.T].some?)")))
 (|reachable_prefix_of_trace| 0
  (|reachable_prefix_of_trace-1| |nil| 3821724570
   ("" (SKEEP* :PREDS? T)
    (("" (REWRITE "reachable_iff_tc")
      (("" (SPLIT)
        (("1" (CASE "normal(rel)(t)")
          (("1" (INST 1 "single_trace(t)" "0")
            (("1" (EXPAND "single_trace") (("1" (PROPAX) NIL NIL)) NIL)
             ("2" (EXPAND "run")
              (("2" (REWRITE "single_iff_normal")
                (("2" (ASSERT)
                  (("2" (EXPAND "single_trace" 1) (("2" (PROPAX) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "normal")
            (("2" (SKEEP -1)
              (("2" (LEMMA "tc_iff_prefix_of_trace")
                (("2" (INST -1 "rel" "t" "tt")
                  (("2" (CASE-REPLACE "TC(rel)(t,tt)")
                    (("1" (ASSERT)
                      (("1" (HIDE -1)
                        (("1" (SKEEP :PREDS? T)
                          (("1" (INST 1 "tr" "0")
                            (("1" (ASSERT)
                              (("1" (SKEEP :PREDS? T)
                                (("1" (INST -5 "0") (("1" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (EXPAND "run")
                              (("2" (ASSERT) (("2" (INST -4 "0") NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE-ALL-BUT (-2 1))
                      (("2" (EXPAND "TC") (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKEEP)
          (("2" (REWRITE "tc_iff_prefix_of_trace")
            (("2" (SKEEP)
              (("2" (INST 1 "tr" "n")
                (("1" (ASSERT) NIL NIL)
                 ("2" (EXPAND "run")
                  (("2" (ASSERT) (("2" (INST -1 "0") NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL) SHOSTAK))
 (|normal_form_iff_last_of_run| 0
  (|normal_form_iff_last_of_run-1| |nil| 3822326080
   ("" (SKEEP*)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "normal_form")
          (("1" (FLATTEN)
            (("1" (LEMMA "reachable_prefix_of_trace")
              (("1" (INST -1 "rel" "init" "t")
                (("1" (SKEEP)
                  (("1" (TYPEPRED "rn")
                    (("1" (CASE "none?(rn(n+1))")
                      (("1" (CASE "finite_trace?(rn)")
                        (("1" (INST 1 "rn")
                          (("1" (EXPAND "run")
                            (("1" (FLATTEN)
                              (("1" (EXPAND "last")
                                (("1" (CASE "length(rn) = n+1")
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (HIDE 2)
                                    (("2" (LEMMA "length_is_none")
                                      (("2" (INST?)
                                        (("2" (LEMMA "some_before_length")
                                          (("2" (INST -1 "rn" "n+1")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (LEMMA "none_after_length")
                                              (("2" (INST -1 "rn" "n")
                                                (("1" (INST -9 "n")
                                                  (("1" (ASSERT) NIL NIL)) NIL)
                                                 ("2" (ASSERT) NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (EXPAND "finite_run?") (("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (EXPAND "finite_trace?")
                            (("2" (INST? 1) NIL NIL)) NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2)
                        (("2" (EXPAND "run")
                          (("2" (FLATTEN)
                            (("2" (EXPAND "traces")
                              (("2" (INSTEEP -2)
                                (("2" (ASSERT)
                                  (("2" (INST -5 "n")
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "normal")
                                        (("2" (INST 2 "val(rn(1+n))")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (EXPAND "normal_form")
          (("2" (SKEEP)
            (("2" (TYPEPRED "last(rel,init)(frn)")
              (("2" (ASSERT) (("2" (POSTPONE) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL))
 (|invariant_run_rule| 0
  (|invariant_run_rule-1| |nil| 3821727494
   ("" (SKEEP*)
    (("" (EXPAND "invariant_run")
      (("" (INDUCT "n")
        (("1" (SKEEP)
          (("1" (INSTEEP) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (SKEEP*)
          (("2" (INSTEEP -1)
            (("2" (LEMMA "some_below")
              (("2" (INST -1 "rn" "j+1" "j")
                (("2" (ASSERT)
                  (("2" (INSTEEP)
                    (("2" (FLATTEN)
                      (("2" (INST -5 "j") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL) SHOSTAK))
 (|invariant_is_invariant_run| 0
  (|invariant_is_invariant_run-1| |nil| 3821730998
   ("" (SKEEP)
    (("" (EXPAND "invariant_run")
      (("" (EXPAND "invariant")
        (("" (SPLIT)
          (("1" (FLATTEN)
            (("1" (SKEEP :PREDS? T)
              (("1" (INST? -4)
                (("1" (LEMMA "run_all_reachable")
                  (("1" (INST -1 "rel" "init" "rn" "n")
                    (("1" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (SKEEP :PREDS? T)
              (("2" (LEMMA "reachable_prefix_of_trace")
                (("2" (INSTEEP)
                  (("2" (SKEEP)
                    (("2" (INST -5 "rn" "n")
                      (("2" (INST -1 "n") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL) NIL)))

