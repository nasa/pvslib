(|well_ordered_traversal|
 (|well_ordering_has_first| 0
  (|well_ordering_has_first-1| |nil| 3318619967
   ("" (GRIND :IF-MATCH NIL)
    (("" (INST -4 "fullset[T]")
      (("" (SPLIT)
        (("1" (SKOLEM!)
          (("1" (INST + "y!1")
            (("1" (SKOSIMP)
              (("1" (INST - "r!1")
                (("1" (INST - "r!1" "y!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "fullset") (("2" (INST + "t!1") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL)
   SHOSTAK))
 (|first_TCC1| 0
  (|first_TCC1-1| |nil| 3318619947
   ("" (SKOLEM-TYPEPRED)
    (("" (FORWARD-CHAIN "well_ordering_has_first") NIL NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|first| SUBTYPE "sets[well_ordered_traversal.T].fullset"
    "(LAMBDA (S: set[well_ordered_traversal.T]): minmax_orders[well_ordered_traversal.T].has_least?(S, closure_ops[well_ordered_traversal.T].reflexive_closure(well_ordered_traversal.<)))")))
 (|last_TCC1| 0
  (|last_TCC1-1| |nil| 3318619947 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL
   (|last| SUBTYPE "sets[well_ordered_traversal.T].fullset"
    "(LAMBDA (S: set[well_ordered_traversal.T]): minmax_orders[well_ordered_traversal.T].has_greatest?(S, closure_ops[well_ordered_traversal.T].reflexive_closure(well_ordered_traversal.<)))")))
 (|has_next?_TCC1| 0
  (|has_next?_TCC1-2| "" 3744701396
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "well_ordered?")
      (("" (FLATTEN)
        (("" (EXPAND "strict_total_order?")
          (("" (FLATTEN)
            (("" (EXPAND "strict_order?")
              (("" (FLATTEN)
                (("" (EXPAND "order?")
                  (("" (ASSERT)
                    (("" (EXPAND "antisymmetric?")
                      (("" (SKEEP)
                        (("" (EXPAND "transitive?")
                          (("" (INST -2 "x" "y" "x")
                            (("" (ASSERT)
                              (("" (EXPAND "irreflexive?")
                                (("" (INST?) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL) SHOSTAK
   (|has_next?| SUBTYPE "well_ordered_traversal.<"
    "(relations_extra[well_ordered_traversal.T].order?)"))
  (|has_next?_TCC1-1| |nil| 3744697368 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL) NIL
   (|has_next?| SUBTYPE "well_ordered_traversal.<"
    "(relations_extra[well_ordered_traversal.T].order?)")))
 (|well_ordering_has_next| 0
  (|well_ordering_has_next-2| "" 3744701592
   ("" (GRIND :IF-MATCH NIL)
    (("" (INST -4 "above(t!1, lessp!1)")
      (("1" (SPLIT)
        (("1" (SKOLEM-TYPEPRED)
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (INST + "y!1")
                (("1" (ASSERT)
                  (("1" (SKOSIMP :PREDS? T)
                    (("1" (INST - "r!1")
                      (("1" (INST - "y!1" "r!1") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (INST 3 "x!1")
          (("2" (ASSERT)
            (("2" (SKOSIMP :PREDS? T)
              (("2" (INST + "x!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (SPLIT 1)
        (("1" (PROPAX) NIL NIL)
         ("2" (SKEEP)
          (("2" (INST -4 "x" "y" "x")
            (("2" (ASSERT) (("2" (INST? -3) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK)
  (|well_ordering_has_next-1| |nil| 3318620127
   ("" (GRIND :IF-MATCH NIL)
    (("" (INST -4 "above(t!1, lessp!1)")
      (("" (SPLIT)
        (("1" (SKOLEM-TYPEPRED)
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (INST + "y!1")
                (("1" (ASSERT)
                  (("1" (SKOSIMP :PREDS? T)
                    (("1" (INST - "r!1")
                      (("1" (INST - "y!1" "r!1") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (INST 3 "x!1")
          (("2" (ASSERT)
            (("2" (SKOSIMP :PREDS? T)
              (("2" (INST + "x!1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   SHOSTAK))
 (|next_TCC1| 0
  (|next_TCC1-1| |nil| 3318619947
   ("" (SKOLEM-TYPEPRED)
    (("" (FORWARD-CHAIN "well_ordering_has_next") NIL NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|next| SUBTYPE
    "ordered_subset[well_ordered_traversal.T].above(well_ordered_traversal.t, well_ordered_traversal.<)"
    "(LAMBDA (S: set[well_ordered_traversal.T]): minmax_orders[well_ordered_traversal.T].has_least?(S, closure_ops[well_ordered_traversal.T].reflexive_closure(well_ordered_traversal.<)))")))
 (|last_no_next| 0
  (|last_no_next-1| |nil| 3318620416
   (""
    (EXPAND* "has_last?" "has_next?" "has_greatest?" "greatest?" "fullset"
     "upper_bound?" "nonempty?" "empty?" "above" "reflexive_closure" "union"
     "irreflexive_kernel" "difference" "member")
    (("" (SKOSIMP* :PREDS? T)
      (("" (INST - "last(lessp!1)")
        (("" (TYPEPRED "well_ordered_traversal.last(lessp!1)")
          ((""
            (EXPAND* "greatest?" "fullset" "upper_bound?" "reflexive_closure"
             "union" "member")
            (("" (INST - "x!1")
              (("" (ASSERT)
                ((""
                  (EXPAND* "well_ordered?" "strict_total_order?"
                   "strict_order?" "irreflexive?" "transitive?")
                  (("" (FLATTEN)
                    (("" (INST - "x!1")
                      (("" (INST - "x!1" "last(lessp!1)" "x!1")
                        (("" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|well_ordered?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (T FORMAL-TYPE-DECL NIL |well_ordered_traversal| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|strict_total_order?| CONST-DECL "bool" |orders| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL) (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|reflexive?| CONST-DECL "bool" |relations| NIL)
    (|last| CONST-DECL
     "(LAMBDA (t: T): (greatest?)(t, fullset[T], reflexive_closure(<)))"
     |well_ordered_traversal| NIL)
    (|has_last?| CONST-DECL "bool" |well_ordered_traversal| NIL)
    (|has_next?| CONST-DECL "bool" |well_ordered_traversal| NIL)
    (|has_greatest?| CONST-DECL "bool" |minmax_orders| NIL)
    (|greatest?| CONST-DECL "bool" |minmax_orders| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (|upper_bound?| CONST-DECL "bool" |bounded_orders| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|above| CONST-DECL "(LAMBDA (S: set[T]): suffix?(S, ord))"
     |ordered_subset| NIL)
    (|reflexive_closure| CONST-DECL "(reflexive?)" |closure_ops| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|irreflexive_kernel| CONST-DECL "(irreflexive?)" |closure_ops| NIL)
    (|difference| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   SHOSTAK))
 (|last_is_last_TCC1| 0
  (|last_is_last_TCC1-2| "" 3744701671
   ("" (SKEEP :PREDS? T)
    (("" (GRIND :IF-MATCH NIL)
      (("" (INST -2 "x!1" "y!1" "x!1")
        (("" (ASSERT) (("" (INST?) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   SHOSTAK
   (|last_is_last| SUBTYPE "well_ordered_traversal.<"
    "(relations_extra[well_ordered_traversal.T].order?)"))
  (|last_is_last_TCC1-1| |nil| 3744697368 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|last_is_last| SUBTYPE "well_ordered_traversal.<"
    "(relations_extra[well_ordered_traversal.T].order?)")))
 (|last_is_last| 0
  (|last_is_last-1| |nil| 3318620611
   ("" (SKOSIMP :PREDS? T)
    (("" (TYPEPRED "well_ordered_traversal.last(lessp!1)")
      (("" (GRIND :IF-MATCH NIL)
        (("" (INST - "x!1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|greatest?| CONST-DECL "bool" |minmax_orders| NIL)
    (|has_last?| CONST-DECL "bool" |well_ordered_traversal| NIL)
    (|fullset| CONST-DECL "set" |sets| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|reflexive?| CONST-DECL "bool" |relations| NIL)
    (|reflexive_closure| CONST-DECL "(reflexive?)" |closure_ops| NIL)
    (|last| CONST-DECL
     "(LAMBDA (t: T): (greatest?)(t, fullset[T], reflexive_closure(<)))"
     |well_ordered_traversal| NIL)
    (|reflexive_closure_preserves_transitive| APPLICATION-JUDGEMENT
     "(preorder?)" |well_ordered_traversal| NIL)
    (|reflexive_closure_dichotomous| APPLICATION-JUDGEMENT "(dichotomous?)"
     |well_ordered_traversal| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|upper_bound?| CONST-DECL "bool" |bounded_orders| NIL)
    (|irreflexive?| CONST-DECL "bool" |relations| NIL)
    (|transitive?| CONST-DECL "bool" |relations| NIL)
    (|strict_order?| CONST-DECL "bool" |orders| NIL)
    (|trichotomous?| CONST-DECL "bool" |orders| NIL)
    (|strict_total_order?| CONST-DECL "bool" |orders| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|has_greatest?| CONST-DECL "bool" |minmax_orders| NIL)
    (|upto| CONST-DECL "(LAMBDA (S: set[T]): prefix?(S, ord))" |ordered_subset|
     NIL)
    (|full?| CONST-DECL "bool" |sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (T FORMAL-TYPE-DECL NIL |well_ordered_traversal| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_ordered?| CONST-DECL "bool" |orders| NIL))
   SHOSTAK))
 (|well_ordering_has_prev| 0
  (|well_ordering_has_prev-1| |nil| 3318620643
   ("" (SKOSIMP :PREDS? T)
    (("" (EXPAND "has_prev?")
      (("" (SKOLEM-TYPEPRED)
        (("" (TYPEPRED "next(lessp!1)(r!1)")
          (("" (REPLACE -4)
            (("" (GRIND :IF-MATCH NIL)
              (("" (INST + "r!1")
                (("" (ASSERT)
                  (("" (SKOSIMP :PREDS? T)
                    (("" (ASSERT)
                      (("" (FLATTEN)
                        (("" (INST - "r!2" "r!1")
                          (("" (ASSERT)
                            (("" (INST - "r!2")
                              (("" (INST - "r!2")
                                (("" (INST - "r!2" "t!1" "r!2")
                                  (("" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|prev_TCC1| 0
  (|prev_TCC1-1| |nil| 3318619947
   ("" (SKOLEM-TYPEPRED)
    (("" (FORWARD-CHAIN "well_ordering_has_prev") NIL NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL) NIL
   (|prev| SUBTYPE
    "ordered_subset[well_ordered_traversal.T].below(well_ordered_traversal.t, well_ordered_traversal.<)"
    "(LAMBDA (S: set[well_ordered_traversal.T]): minmax_orders[well_ordered_traversal.T].has_greatest?(S, closure_ops[well_ordered_traversal.T].reflexive_closure(well_ordered_traversal.<)))"))))

