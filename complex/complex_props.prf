(|complex_props|
 (|add_eq_0| 0
  (|add_eq_0-1| |nil| 3744902909
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (DECOMPOSE-EQUALITY 1)
          (("1" (ISOLATE 1 L 1) (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
            NIL)
           ("2" (ISOLATE 1 L 1) (("2" (ASSERT) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_add1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_add1| FORMULA-DECL NIL |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL))
   SHOSTAK))
 (|minus_eq_0| 0
  (|minus_eq_0-1| |nil| 3743433899
   ("" (SKEEP)
    (("" (SPLIT 1)
      (("1" (FLATTEN)
        (("1" (DECOMPOSE-EQUALITY 1)
          (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
        NIL)
       ("2" (FLATTEN) (("2" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|Re_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_sub1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_mult_unity| 0
  (|complex_mult_unity-1| |nil| 3744904614
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex_mult_1| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_mult_unity2| 0
  (|complex_mult_unity2-1| |nil| 3744904661
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex_1_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_div_unity_TCC1| 0
  (|complex_div_unity_TCC1-1| |nil| 3743433417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|complex_div_unity| SUBTYPE "complex_types.complex_(1, 0)" "nzcomplex")))
 (|complex_div_unity| 0
  (|complex_div_unity-1| |nil| 3744904708
   ("" (SKEEP)
    (("" (REWRITE "complex_div_cancel3")
      (("" (REWRITE "complex_mult_unity") NIL NIL)) NIL))
    NIL)
   ((|complex_mult_1| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel3| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_add_unity| 0
  (|complex_add_unity-1| |nil| 3744904807
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((+ CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex_plus_0| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_minus_unity| 0
  (|complex_minus_unity-1| |nil| 3744904842
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((- CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex_minus_0| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|real_complex_minus| 0
  (|real_complex_minus-1| |nil| 3744905014
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_neg1| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|real_times_real| 0
  (|real_times_real-1| |nil| 3744905667
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_div_eq| 0
  (|complex_div_eq-1| |nil| 3744903233
   ("" (SKEEP)
    (("" (REWRITE "complex_div_cancel3")
      (("" (REWRITE "complex_mult_unity2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|complex_1_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel3| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_div_eq2| 0
  (|complex_div_eq2-1| |nil| 3744904967
   ("" (SKEEP)
    (("" (REWRITE "complex_div_cancel3")
      (("" (REWRITE "real_complex_minus")
        (("" (CASE "-complex_(1, 0) * n0y = -(complex_(1, 0) * n0y)")
          (("1" (REPLACE -1)
            (("1" (REWRITE "complex_mult_unity2") (("1" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|neg_nzcomplex| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|complex_n1_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel3| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|add_div1| 0
  (|add_div1-1| |nil| 3744905573
   ("" (SKEEP)
    (("" (REWRITE "complex_div_cancel4")
      (("" (LEMMA "complex_commutative_mult")
        (("" (INST -1 "(x / n0x) + (y / n0y)" "n0x * n0y")
          (("" (REPLACE -1 :HIDE? T)
            (("" (REWRITE "complex_mult_distrib_plus")
              (("" (CASE "n0x * n0y * (x / n0x) = x * n0y")
                (("1" (REPLACE -1 :HIDE? T)
                  (("1" (CASE "n0x * n0y * (y / n0y) = y * n0x")
                    (("1" (REPLACE -1 :HIDE? T) (("1" (PROPAX) NIL NIL)) NIL)
                     ("2" (HIDE 2)
                      (("2" (REWRITE "complex_associative_mult")
                        (("2" (REWRITE "complex_div_cancel1")
                          (("2" (REWRITE "complex_commutative_mult") NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE 2)
                  (("2" (REWRITE "complex_commutative_mult")
                    (("2" (REWRITE "complex_associative_mult")
                      (("2" (REWRITE "complex_div_cancel1")
                        (("2" (REWRITE "complex_commutative_mult") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((/ CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_div_cancel4| FORMULA-DECL NIL |complex_types| NIL)
    (|mult_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|complex_mult_distrib_plus| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_associative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|add_div2| 0
  (|add_div2-1| |nil| 3745074907
   ("" (SKEEP)
    (("" (REWRITE "complex_div_cancel4")
      (("" (REWRITE "complex_commutative_mult")
        (("" (REWRITE "complex_mult_distrib_plus")
          (("" (CASE "n0y * x = x * n0y")
            (("1" (REPLACE -1 :DIR RL :HIDE? T)
              (("1" (CASE "n0y * (y / n0y) = y")
                (("1" (REPLACE -1 :HIDE? T) (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (HIDE 2) (("2" (REWRITE "complex_div_cancel1") NIL NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (REWRITE "complex_commutative_mult") NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_cancel4| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|complex_mult_distrib_plus| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|minus_div1| 0
  (|minus_div1-1| |nil| 3745074666
   ("" (SKEEP)
    (("" (CASE "(x / n0x) - (y / n0y) = (x / n0x) + -(y / n0y)")
      (("1" (REPLACE -1 :HIDE? T)
        (("1" (CASE "-(y / n0y) = (-y / n0y)")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "add_div1")
              (("1" (CASE "x * n0y + -y * n0x = x * n0y - y * n0x")
                (("1" (REPLACE -1 :HIDE? T) (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (HIDE 2)
                  (("2" (NAME-REPLACE "A" "x * n0y")
                    (("2" (NAME-REPLACE "B" "y")
                      (("2" (NAME-REPLACE "C" "n0x") (("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
      NIL))
    NIL)
   ((- CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|mult_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|add_div1| FORMULA-DECL NIL |complex_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nz_sq_abs_pos| APPLICATION-JUDGEMENT "posreal" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   SHOSTAK))
 (|minus_div2| 0
  (|minus_div2-1| |nil| 3745075339
   ("" (SKEEP)
    (("" (CASE "x - (y / n0y) = x + -(y / n0y)")
      (("1" (REPLACE -1 :HIDE? T)
        (("1" (CASE "-(y / n0y) = -y / n0y")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "add_div2")
              (("1" (CASE "x * n0y + -y = x * n0y - y")
                (("1" (REPLACE -1 :HIDE? T) (("1" (PROPAX) NIL NIL)) NIL)
                 ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
      NIL))
    NIL)
   ((- CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (- CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|add_div2| FORMULA-DECL NIL |complex_props| NIL)
    (|complex_plus_neg| FORMULA-DECL NIL |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nz_sq_abs_pos| APPLICATION-JUDGEMENT "posreal" |complex_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   SHOSTAK))
 (|cross_mult| 0
  (|cross_mult-1| |nil| 3744909143
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (REWRITE "complex_div_cancel3")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (LEMMA "complex_commutative_mult")
              (("1" (INST -1 "y / n0y * n0x" "n0y")
                (("1" (REPLACE -1 :HIDE? T)
                  (("1" (REWRITE "complex_associative_mult" :DIR RL)
                    (("1" (REWRITE "complex_div_cancel1") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (REWRITE "complex_div_cancel3" :DIR RL)
          (("2" (REWRITE "complex_div_def" :DIR RL)
            (("2" (LEMMA "complex_commutative_mult")
              (("2" (INST -1 "x * n0y" "complex_(1, 0) / n0x")
                (("2" (REPLACE -1 :HIDE? T)
                  (("2" (REWRITE "complex_associative_mult" :DIR RL)
                    (("2" (REWRITE "complex_commutative_mult")
                      (("2" (REWRITE "complex_div_def")
                        (("2" (REWRITE "complex_div_cancel4" :DIR RL) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_cancel3| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_associative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_div_cancel4| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_def| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|separate_div| 0
  (|separate_div-1| |nil| 3744908797
   ("" (SKEEP)
    (("" (REWRITE "complex_div_def")
      (("" (REWRITE "cross_mult")
        (("" (LEMMA "complex_commutative_mult")
          (("" (INST -1 "n0x" "n0y")
            (("" (REPLACE -1 :HIDE? T)
              (("" (LEMMA "complex_commutative_mult")
                (("" (INST -1 "x / n0x" "n0y * n0x")
                  (("" (REPLACE -1 :HIDE? T)
                    (("" (REWRITE "complex_associative_mult")
                      (("" (REWRITE "complex_div_cancel1")
                        (("" (REWRITE "complex_commutative_mult") NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_def| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_associative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|cross_mult| FORMULA-DECL NIL |complex_props| NIL)
    (|mult_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL))
   SHOSTAK))
 (|div_div_complex| 0
  (|div_div_complex-1| |nil| 3744908365
   ("" (SKEEP)
    (("" (LEMMA "complex_div_def")
      (("" (INST -1 "n0y" "x/n0x")
        (("" (REPLACE -1 :DIR RL :HIDE? T)
          (("" (REWRITE "separate_div") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_def| FORMULA-DECL NIL |complex_types| NIL)
    (|separate_div| FORMULA-DECL NIL |complex_props| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   SHOSTAK))
 (|real_complex| 0
  (|real_complex-1| |nil| 3744910108
   ("" (SKEEP)
    (("" (EXPAND "real_?")
      (("" (REPLACE -1 1 :DIR RL :HIDE? T)
        (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|real_div_mult1| 0
  (|real_div_mult1-1| |nil| 3744905858
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|real_div_mult2_TCC1| 0
  (|real_div_mult2_TCC1-1| |nil| 3743433417
   ("" (SKEEP)
    (("" (USE "mult_nzcomplex2")
      (("" (EXPAND "/=") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL)
   ((|mult_nzcomplex2| JUDGEMENT-TCC NIL |complex_types| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "complex" |complex_types| NIL))
   NIL
   (|real_div_mult2| SUBTYPE
    "complex_types.*(complex_props.n0x, complex_types.complex_(complex_props.n0r, 0))"
    "nzcomplex")))
 (|real_div_mult2| 0
  (|real_div_mult2-1| |nil| 3744906128
   ("" (SKEEP)
    (("" (LEMMA "complex_div_real_def")
      (("" (INST -1 "n0r" "real_(r)")
        (("" (ASSERT)
          (("" (REWRITE "zero_div")
            (("" (REPLACE -1 1 :DIR RL :HIDE? T)
              (("" (REWRITE "div_div_complex")
                (("" (REWRITE "complex_commutative_mult") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_real_def| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|div_div_complex| FORMULA-DECL NIL |complex_props| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|zero_div| FORMULA-DECL NIL |extra_tegies| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|real_frac_times_complex_TCC1| 0
  (|real_frac_times_complex_TCC1-1| |nil| 3743433417 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|real_frac_times_complex| SUBTYPE
    "complex_types.complex_(complex_props.n0r, 0)" "nzcomplex")))
 (|real_frac_times_complex| 0
  (|real_frac_times_complex-1| |nil| 3744906809
   ("" (SKEEP)
    (("" (REWRITE "complex_div_real" :DIR RL)
      (("" (REWRITE "complex_commutative_mult")
        (("" (LEMMA "complex_commutative_mult")
          (("" (INST -1 "real_(r)" "x")
            (("" (REPLACE -1 :HIDE? T)
              (("" (REWRITE "complex_associative_mult_div") NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_real| FORMULA-DECL NIL |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|complex_associative_mult_div| FORMULA-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|expr_div_complex| 0
  (|expr_div_complex-1| |nil| 3744920600
   ("" (SKEEP)
    (("" (REWRITE "cross_mult")
      (("" (REWRITE "complex_commutative_mult")
        (("" (REWRITE "complex_associative_mult") NIL NIL)) NIL))
      NIL))
    NIL)
   ((* CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|cross_mult| FORMULA-DECL NIL |complex_props| NIL)
    (|mult_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|complex_associative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|inv_div| 0
  (|inv_div-1| |nil| 3744911329
   ("" (SKEEP)
    (("" (REWRITE "cross_mult")
      (("" (REWRITE "complex_div_cancel1")
        (("" (REWRITE "complex_mult_unity2") NIL NIL)) NIL))
      NIL))
    NIL)
   ((/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|cross_mult| FORMULA-DECL NIL |complex_props| NIL)
    (|div_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|mult_nzcomplex1| APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|complex_1_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_cancel| 0
  (|complex_cancel-1| |nil| 3744911429
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (REWRITE "cross_mult")
          (("1" (LEMMA "complex_div_cancel3")
            (("1" (INST -1 "n0x" "x*n0x" "y")
              (("1" (ASSERT)
                (("1" (REWRITE "complex_commutative_mult" -1)
                  (("1" (REWRITE "complex_associative_mult_div" :DIR RL)
                    (("1" (REWRITE "complex_div_cancel1") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (REPLACE -1 1 :DIR RL :HIDE? T) (("2" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|cross_mult| FORMULA-DECL NIL |complex_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_associative_mult_div| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel3| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|complex_mult_cancel| 0
  (|complex_mult_cancel-1| |nil| 3745073319
   ("" (SKEEP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (LEMMA "complex_div_cancel1")
          (("1" (INST -1 "n0x" "x")
            (("1" (REWRITE "complex_associative_mult_div")
              (("1" (REWRITE "complex_commutative_mult")
                (("1" (REPLACE -1 1 :DIR RL :HIDE? T)
                  (("1" (LEMMA "complex_div_cancel1")
                    (("1" (INST -1 "n0x" "y")
                      (("1" (REWRITE "complex_associative_mult_div")
                        (("1" (REWRITE "complex_commutative_mult")
                          (("1" (REPLACE -1 1 :DIR RL :HIDE? T)
                            (("1" (REWRITE "complex_cancel") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (FLATTEN)
        (("2" (REPLACE -1 1 :DIR RL :HIDE? T) (("2" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_associative_mult_div| FORMULA-DECL NIL |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_cancel| FORMULA-DECL NIL |complex_props| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   SHOSTAK))
 (|sq_abs_def| 0
  (|sq_abs_def-1| |nil| 3744911724
   ("" (SKEEP)
    (("" (EXPAND "conjugate") (("" (DECOMPOSE-EQUALITY 1) NIL NIL)) NIL)) NIL)
   ((|conjugate| CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_mul1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   SHOSTAK))
 (|cpow_inv| 0
  (|cpow_inv-1| |nil| 3744921348
   ("" (INDUCT "n")
    (("1" (SKEEP)
      (("1" (EXPAND "cpow") (("1" (REWRITE "complex_div_unity") NIL NIL)) NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (INSTEEP)
          (("2" (EXPAND "cpow" +)
            (("2" (REPLACE -1 :HIDE? T)
              (("2" (REWRITE "complex_div_def")
                (("2" (REWRITE "div_div_complex") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (EXPAND "/=")
      (("3" (HIDE 2)
        (("3" (SKEEP)
          (("3" (TYPEPRED "n0x")
            (("3" (CASE "n = 0")
              (("1" (REPLACE -1 :HIDE? T)
                (("1" (EXPAND "cpow") (("1" (GRIND) NIL NIL)) NIL)) NIL)
               ("2" (REWRITE "cpow_0") NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|div_div_complex| FORMULA-DECL NIL |complex_props| NIL)
    (|complex_div_def| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_unity| FORMULA-DECL NIL |complex_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|pow_nzcomplex| REC-APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|cpow_div| 0
  (|cpow_div-1| |nil| 3744920678
   ("" (SKEEP)
    (("" (REWRITE "complex_div_def" :DIR RL)
      (("" (REWRITE "cpow_mult")
        (("" (CASE "cpow(complex_(1, 0) / n0x)(n) = 1/cpow(n0x)(n)")
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "complex_div_def") NIL NIL)) NIL)
           ("2" (HIDE 2) (("2" (REWRITE "cpow_inv") NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_def| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|pow_nzcomplex| REC-APPLICATION-JUDGEMENT "nzcomplex" |complex_types| NIL)
    (|cpow_inv| FORMULA-DECL NIL |complex_props| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|cpow_mult| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|c_root_inv_TCC1| 0
  (|c_root_inv_TCC1-1| |nil| 3744922608
   ("" (SKEEP) (("" (REWRITE "c_root_zero") NIL NIL)) NIL)
   ((|c_root_zero| FORMULA-DECL NIL |complex_root| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL))
   NIL
   (|c_root_inv| SUBTYPE
    "complex_root.c_root(complex_props.n0x, complex_props.n0)" "nzcomplex")))
 (|c_root_inv| 0
  (|c_root_inv-1| |nil| 3745070135
   ("" (SKEEP)
    ((""
      (CASE "(complex_(1, 0) / c_root(n0x, n0)) * c_root(n0x, n0) = real_(1)")
      (("1" (CASE " real_(1) = c_root((complex_(1, 0) / n0x) * n0x, n0)")
        (("1" (NAME-REPLACE "A" "(complex_(1, 0) / c_root(n0x, n0))")
          (("1" (REPLACE -1 -2 :HIDE? T)
            (("1" (EXPAND "A")
              (("1" (LEMMA "c_root_mult")
                (("1" (INST -1 "n0" "complex_(1, 0) / n0x" "n0x")
                  (("1" (SKEEP)
                    (("1" (LEMMA "roots_of_unity_inverses")
                      (("1" (INST?)
                        (("1" (SKEEP)
                          (("1"
                            (CASE
                                "c_root(complex_(1, 0) / n0x * n0x, n0) = root_of_unity(n0)(n2) * c_root(complex_(1, 0) / n0x, n0) * c_root(n0x, n0)")
                            (("1" (REPLACE -1 -4 :HIDE? T)
                              (("1" (HIDE-ALL-BUT (-3 1))
                                (("1" (INST 1 "n2")
                                  (("1"
                                    (NAME-REPLACE "L"
                                     "complex_(1, 0) / c_root(n0x, n0)")
                                    (("1"
                                      (NAME-REPLACE "R"
                                       "c_root(complex_(1, 0) / n0x, n0)")
                                      (("1"
                                        (NAME-REPLACE "K"
                                         "root_of_unity(n0)(n2)")
                                        (("1"
                                          (NAME-REPLACE "M" "c_root(n0x, n0)")
                                          (("1" (REWRITE "complex_mult_cancel")
                                            (("1" (EXPAND "/=")
                                              (("1" (EXPAND "M")
                                                (("1" (REWRITE "c_root_zero")
                                                  NIL NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE-ALL-BUT (-1 -2 1))
                              (("2" (REWRITE "complex_associative_mult" 1)
                                (("2" (REPLACE -2 :HIDE? T)
                                  (("2"
                                    (REWRITE "complex_associative_mult" 1 :DIR
                                     RL)
                                    (("2"
                                      (REWRITE "complex_commutative_mult" -1)
                                      (("2" (REPLACE -1 :HIDE? T)
                                        (("2" (REWRITE "complex_mult_unity2")
                                          NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE-ALL-BUT 1)
          (("2" (CASE "(complex_(1, 0) / n0x) * n0x = real_(1)")
            (("1" (REPLACE -1 :HIDE? T)
              (("1" (REWRITE "c_root_real_root")
                (("1" (REWRITE "root_1n") NIL NIL)) NIL))
              NIL)
             ("2" (HIDE 2)
              (("2" (LEMMA "complex_div_cancel1")
                (("2" (INST?)
                  (("2" (REWRITE "complex_commutative_mult" -1) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (HIDE 2)
        (("2" (REWRITE "complex_commutative_mult")
          (("2" (REWRITE "complex_div_def")
            (("2" (REWRITE "complex_div_cancel3")
              (("2" (REWRITE "complex_mult_unity2") NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("3" (EXPAND "/=") (("3" (REWRITE "c_root_zero") NIL NIL)) NIL))
      NIL))
    NIL)
   ((|c_root| CONST-DECL
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     |complex_root| NIL)
    (|odd?| CONST-DECL "bool" |integers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (^ DEF-DECL "complex" |complex_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex_div_cancel1| FORMULA-DECL NIL |complex_types| NIL)
    (|root_1n| FORMULA-DECL NIL |root| |power|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|c_root_real_root| FORMULA-DECL NIL |complex_root| NIL)
    (A SKOLEM-CONST-DECL "complex" |complex_props| NIL)
    (|roots_of_unity_inverses| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_mult_unity2| FORMULA-DECL NIL |complex_props| NIL)
    (|complex_associative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|c_root_zero| FORMULA-DECL NIL |complex_root| NIL)
    (M SKOLEM-CONST-DECL "{x: complex |
   x ^ n0 = n0x AND ((Im(n0x) = 0 AND odd?(n0)) IMPLIES Im(x) = 0)}"
     |complex_props| NIL)
    (|complex_mult_cancel| FORMULA-DECL NIL |complex_props| NIL)
    (|root_of_unity| CONST-DECL "complex" |fundamental_algebra| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|c_root_mult| FORMULA-DECL NIL |complex_root| NIL)
    (|complex_1_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_cancel3| FORMULA-DECL NIL |complex_types| NIL)
    (|complex_div_def| FORMULA-DECL NIL |complex_types| NIL))
   SHOSTAK))
 (|c_root_div| 0
  (|c_root_div-1| |nil| 3744921724
   ("" (SKEEP)
    (("" (REWRITE "complex_div_def" :DIR RL)
      (("1"
        (CASE
            " EXISTS (m: nat | m <= n0): complex_(1, 0) / c_root(n0x, n0) = root_of_unity(n0)(m) * c_root(1/n0x, n0)")
        (("1" (SKEEP)
          (("1" (REPLACE -1 :HIDE? T)
            (("1" (REWRITE "complex_associative_mult" :DIR RL)
              (("1" (REWRITE "complex_commutative_mult")
                (("1" (LEMMA "c_root_mult")
                  (("1" (INST -1 "n0" "x" "complex_(1, 0) / n0x")
                    (("1" (REWRITE "complex_div_def")
                      (("1" (SKEEP)
                        (("1" (REWRITE "complex_associative_mult")
                          (("1" (REPLACE -1 :HIDE? T)
                            (("1" (REWRITE "complex_associative_mult" :DIR RL)
                              (("1" (LEMMA "roots_of_unity_closed")
                                (("1" (INST -1 "n0" "m" "m!1")
                                  (("1" (SKEEP)
                                    (("1" (REPLACE -1 :HIDE? T)
                                      (("1" (INST 1 "n3") NIL NIL)) NIL))
                                    NIL)
                                   ("2" (CASE "m!1 = 0")
                                    (("1" (REPLACE -1 :HIDE? T)
                                      (("1" (INST 2 "m")
                                        (("1"
                                          (NAME-REPLACE "A"
                                           "root_of_unity(n0)(m)")
                                          (("1" (EXPAND "root_of_unity")
                                            (("1"
                                              (CASE
                                                  "complex_(2, 0) * complex_i * complex_(pi, 0) * complex_(0, 0) /
                                                          complex_(n0, 0) = real_(0)")
                                              (("1" (REPLACE -1 :HIDE? T)
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (CASE
                                                        "exp(complex_(0, 0)) = real_(1)")
                                                    (("1" (REPLACE -1 :HIDE? T)
                                                      (("1"
                                                        (REWRITE
                                                         "complex_mult_unity")
                                                        NIL NIL))
                                                      NIL)
                                                     ("2" (HIDE-ALL-BUT 1)
                                                      (("2" (GRIND)
                                                        (("1"
                                                          (LEMMA "sin_k_pi")
                                                          (("1" (INST -1 "0")
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (LEMMA "cos_2k_pi")
                                                          (("2" (INST -1 "0")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE-ALL-BUT 1)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (LEMMA "c_root_inv") (("2" (INST -1 "n0" "n0x") NIL NIL)) NIL))
          NIL)
         ("3" (SKEEP) (("3" (REWRITE "c_root_zero") NIL NIL)) NIL))
        NIL)
       ("2" (EXPAND "/=")
        (("2" (TYPEPRED "n0x") (("2" (REWRITE "c_root_zero") NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|complex_div_def| FORMULA-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (^ DEF-DECL "complex" |complex_types| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|odd?| CONST-DECL "bool" |integers| NIL)
    (|c_root| CONST-DECL
     "{x: complex | x ^ n = z AND ((Im(z) = 0 AND odd?(n)) IMPLIES Im(x) = 0)}"
     |complex_root| NIL)
    (|c_root_zero| FORMULA-DECL NIL |complex_root| NIL)
    (|c_root_inv| FORMULA-DECL NIL |complex_props| NIL)
    (|complex_associative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (|c_root_mult| FORMULA-DECL NIL |complex_root| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|m!1| SKOLEM-CONST-DECL "{m: nat | m <= n0}" |complex_props| NIL)
    (|n0| SKOLEM-CONST-DECL "posnat" |complex_props| NIL)
    (|pi| CONST-DECL "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}" |pi_def|
     |trig|)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|cos| CONST-DECL "real" |sincos_def| |trig|)
    (< CONST-DECL "bool" |reals| NIL)
    (|complex_i| CONST-DECL "nzcomplex" |complex_types| NIL)
    (|cos_2k_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|int_times_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|times_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|sin_k_pi| FORMULA-DECL NIL |sincos| |trig|)
    (|pi_bound| NAME-JUDGEMENT
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" |pi_def| |trig|)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|sin_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|cos_range| APPLICATION-JUDGEMENT "real_abs_le1" |sincos| |trig|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|exp_0| FORMULA-DECL NIL |ln_exp| |lnexp|)
    (|complex_mult_unity| FORMULA-DECL NIL |complex_props| NIL)
    (|exp| CONST-DECL "nzcomplex" |complex_lnexp| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|posreal_times_posreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|nnreal_plus_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal" |real_types|
     NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|even_plus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|even_times_int_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|posint_times_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|even_minus_even_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnrat_div_posrat_is_nnrat| APPLICATION-JUDGEMENT "nonneg_rat" |rationals|
     NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|roots_of_unity_closed| FORMULA-DECL NIL |fundamental_algebra| NIL)
    (|complex_commutative_mult| FORMULA-DECL NIL |complex_types| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|root_of_unity| CONST-DECL "complex" |fundamental_algebra| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK)))

