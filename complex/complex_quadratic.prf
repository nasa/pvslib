(|complex_quadratic|
 (|cpoly_quadratic_real| 0
  (|cpoly_quadratic_real-1| NIL 3931118904 ("" (GRIND) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|cpoly_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|cpolynomial_real?| CONST-DECL "bool" |cpolynomial_real| NIL))
   SHOSTAK))
 (|c_quadratic_eq_cpolynomial_quadratic| 0
  (|c_quadratic_eq_cpolynomial_quadratic-1| NIL 3931119083
   ("" (SKEEP) (("" (DECOMPOSE-EQUALITY) (("" (GRIND) NIL NIL)) NIL)) NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|cpoly_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|cpolynomial| CONST-DECL "complex" |fundamental_algebra| NIL)
    (|sequence| TYPE-EQ-DECL NIL |sequences| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|c_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|cpow| DEF-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |fundamental_algebra| NIL)
    (|csigma| DEF-DECL "complex" |fundamental_algebra| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   SHOSTAK))
 (|c_term_quadratic_TCC1| 0
  (|c_term_quadratic_TCC1-1| |nil| 3722895528 ("" (SUBTYPE-TCC) NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|c_term_quadratic| SUBTYPE "(number_fields.-)(complex_quadratic.d)"
    "nonneg_real")))
 (|c_term_quadratic_TCC2| 0
  (|c_term_quadratic_TCC2-1| |nil| 3770600482 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|c_term_quadratic| SUBTYPE
    "complex_types.complex_((number_fields.*(2, complex_quadratic.a)), 0)"
    "nzcomplex")))
 (|c_term_quadratic_d_eq_0| 0
  (|c_term_quadratic_d_eq_0-1| |nil| 3721320816 ("" (GRIND) NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|c_term_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|))
   SHOSTAK))
 (|c_term_quadratic_d_ge_0| 0
  (|c_term_quadratic_d_ge_0-1| |nil| 3721320935
   ("" (SKEEP) (("" (EXPAND "c_term_quadratic") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|c_term_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK))
 (|c_term_quadratic_d_lt_0_TCC1| 0
  (|c_term_quadratic_d_lt_0_TCC1-1| |nil| 3721321068 ("" (SUBTYPE-TCC) NIL NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|c_term_quadratic_d_lt_0| SUBTYPE "(number_fields.-)(complex_quadratic.d)"
    "nonneg_real")))
 (|c_term_quadratic_d_lt_0_TCC2| 0
  (|c_term_quadratic_d_lt_0_TCC2-1| |nil| 3722881522 ("" (SUBTYPE-TCC) NIL NIL)
   ((|complex_| CONST-DECL "complex" |complex_types| NIL)) NIL
   (|c_term_quadratic_d_lt_0| SUBTYPE
    "complex_types.complex_((number_fields.*(2, complex_quadratic.a)), 0)"
    "nzcomplex")))
 (|c_term_quadratic_d_lt_0| 0
  (|c_term_quadratic_d_lt_0-1| |nil| 3721321087
   ("" (SKEEP) (("" (EXPAND "c_term_quadratic") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|c_term_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|c_term_quadratic_eq| 0
  (|c_term_quadratic_eq-1| |nil| 3721323160
   ("" (SKEEP)
    (("" (CASE-REPLACE "d=0")
      (("1" (ASSERT)
        (("1" (REWRITE "c_term_quadratic_d_eq_0")
          (("1" (REWRITE "c_term_quadratic_d_eq_0") NIL NIL)) NIL))
        NIL)
       ("2" (CASE "d > 0")
        (("1" (REWRITE "c_term_quadratic_d_ge_0")
          (("1" (REWRITE "c_term_quadratic_d_ge_0")
            (("1" (ASSERT) (("1" (FIELD -2) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (REWRITE "c_term_quadratic_d_lt_0")
            (("2" (REWRITE "c_term_quadratic_d_lt_0")
              (("2" (REWRITE "complex_ext")
                (("2" (TYPEPRED "eps") (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|c_term_quadratic_d_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|sign_neg_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|c_term_quadratic_d_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|c_term_quadratic_d_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (> CONST-DECL "bool" |reals| NIL))
   SHOSTAK))
 (|c_term_quadratic_real| 0
  (|c_term_quadratic_real-1| |nil| 3721400915
   ("" (SKEEP)
    (("" (CASE-REPLACE "d >= 0")
      (("1" (ASSERT)
        (("1" (SKEEP)
          (("1" (REWRITE "c_term_quadratic_d_ge_0") (("1" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (INST -1 "1")
          (("2" (REWRITE "c_term_quadratic_d_lt_0") (("2" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|c_term_quadratic_d_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|c_term_quadratic_d_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|c_term_quadratic_conj| 0
  (|c_term_quadratic_conj-1| |nil| 3721322470
   ("" (SKEEP)
    (("" (CASE-REPLACE "d < 0")
      (("1" (ASSERT)
        (("1" (REWRITE "c_term_quadratic_d_lt_0")
          (("1" (REWRITE "c_term_quadratic_d_lt_0")
            (("1" (EXPAND "conjugate")
              (("1" (ASSERT) (("1" (REWRITE "complex_ext") NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE-REPLACE "d>0")
        (("1" (ASSERT)
          (("1" (REWRITE "c_term_quadratic_d_ge_0")
            (("1" (REWRITE "c_term_quadratic_d_ge_0")
              (("1" (EXPAND "conjugate")
                (("1" (ASSERT) (("1" (FIELD -2) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (CASE-REPLACE "d=0")
            (("1" (REWRITE "c_term_quadratic_d_eq_0")
              (("1" (REWRITE "c_term_quadratic_d_eq_0")
                (("1" (LEMMA "conjugate_eq")
                  (("1" (INST? -1)
                    (("1" (ASSERT)
                      (("1" (EXPAND "real_?") (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|c_term_quadratic_d_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|conjugate| CONST-DECL "complex" |complex_types| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|Re_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|Re_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|Im_div1| FORMULA-DECL NIL |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|sign_neg_clos| APPLICATION-JUDGEMENT "Sign" |sign| |reals|)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|c_term_quadratic_d_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|conjugate_eq| FORMULA-DECL NIL |complex_types| NIL)
    (|real_is_real| FORMULA-DECL NIL |complex_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|both_sides_times1| FORMULA-DECL NIL |real_props| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|c_term_quadratic_d_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (> CONST-DECL "bool" |reals| NIL))
   SHOSTAK))
 (|c_term_quadratic_non_real| 0
  (|c_term_quadratic_non_real-1| |nil| 3721323357
   ("" (SKEEP)
    (("" (CASE-REPLACE "d < 0")
      (("1" (ASSERT)
        (("1" (SKEEP)
          (("1" (REWRITE "c_term_quadratic_d_lt_0")
            (("1" (GRIND) (("1" (FIELD -2) NIL NIL)) NIL)) NIL))
          NIL))
        NIL)
       ("2" (ASSERT)
        (("2" (LEMMA "c_term_quadratic_real")
          (("2" (INSTEEP)
            (("2" (ASSERT)
              (("2" (INST -1 "1") (("2" (INST -2 "1") NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nonzero_times3| FORMULA-DECL NIL |real_props| NIL)
    (|both_sides_times1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (|nnreal| TYPE-EQ-DECL NIL |real_types| NIL)
    (|sqrt| CONST-DECL "{nnz: nnreal | nnz * nnz = nnx}" |sqrt| |reals|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|c_term_quadratic_d_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|c_term_quadratic_real| FORMULA-DECL NIL |complex_quadratic| NIL))
   SHOSTAK))
 (|discr_eq_0| 0
  (|discr_eq_0-1| |nil| 3721399479
   ("" (SKEEP)
    (("" (LEMMA "c_term_quadratic_eq")
      (("" (EXPAND "quadratic_root") (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   ((|c_term_quadratic_eq| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL))
   SHOSTAK))
 (|discr_ge_0| 0
  (|discr_ge_0-1| |nil| 3721412648
   ("" (SKEEP)
    (("" (EXPAND "quadratic_root")
      (("" (LEMMA "c_term_quadratic_real") (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   ((|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|c_term_quadratic_real| FORMULA-DECL NIL |complex_quadratic| NIL))
   SHOSTAK))
 (|discr_le_0| 0
  (|discr_le_0-1| |nil| 3721412803
   ("" (SKEEP)
    (("" (LEMMA "c_term_quadratic_conj")
      (("" (EXPAND "quadratic_root") (("" (INST?) NIL NIL)) NIL)) NIL))
    NIL)
   ((|c_term_quadratic_conj| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL))
   SHOSTAK))
 (|discr_lt_0| 0
  (|discr_lt_0-1| |nil| 3721412873
   ("" (SKEEP)
    (("" (EXPAND "quadratic_root")
      (("" (LEMMA "c_term_quadratic_non_real") (("" (INST?) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|c_term_quadratic_non_real| FORMULA-DECL NIL |complex_quadratic| NIL))
   SHOSTAK))
 (|c_quadratic_decomposition| 0
  (|c_quadratic_decomposition-1| |nil| 3721583978
   ("" (SKEEP)
    (("" (EXPAND "quadratic_root")
      (("" (NAME "D" "discr(a, b, c)")
        (("" (REPLACE -1)
          (("" (CASE "D >= 0")
            (("1" (REWRITE "c_term_quadratic_d_ge_0")
              (("1" (REWRITE "c_term_quadratic_d_ge_0") (("1" (GRIND) NIL NIL))
                NIL))
              NIL)
             ("2" (REWRITE "c_term_quadratic_d_lt_0")
              (("2" (REWRITE "c_term_quadratic_d_lt_0") (("2" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|c_term_quadratic_d_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|c_term_quadratic_d_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|c_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (+ CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL))
 (|quadratic_root_correct| 0
  (|quadratic_root_correct-1| |nil| 3721583948
   ("" (SKEEP)
    (("" (REWRITE "c_quadratic_decomposition")
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (REWRITE "zero_times")
            (("1" (SPLIT)
              (("1" (INST 1 "1")
                (("1" (NAME-REPLACE "R" "quadratic_root(a,b,c,1)")
                  (("1" (GRIND :REWRITES "complex_ext") NIL NIL)) NIL))
                NIL)
               ("2" (INST 1 "-1")
                (("2" (NAME-REPLACE "R" "quadratic_root(a,b,c,-1)")
                  (("2" (GRIND :REWRITES "complex_ext") NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (SKEEP)
            (("2" (TYPEPRED "eps")
              (("2" (SPLIT -2)
                (("1" (REPLACES -1)
                  (("1" (REPLACES -2 :DIR RL)
                    (("1" (REWRITE "complex_sub_zero")
                      (("1" (REWRITE "zero_times")
                        (("1" (FLATTEN)
                          (("1" (HIDE 3)
                            (("1" (GRIND :REWRITES "complex_ext") NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (REPLACES -1)
                  (("2" (REPLACES -2 :DIR RL)
                    (("2" (REWRITE "complex_sub_zero")
                      (("2" (REWRITE "zero_times") NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|c_quadratic_decomposition| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|complex_sub_zero| FORMULA-DECL NIL |complex_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex_ext| FORMULA-DECL NIL |complex_types| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (* CONST-DECL "complex" |complex_types| NIL)
    (|zero_times| FORMULA-DECL NIL |complex_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   SHOSTAK))
 (|quadratic_root_correct_discr_0| 0
  (|quadratic_root_correct_discr_0-1| |nil| 3722879459
   ("" (SKEEP*)
    (("" (LEMMA "quadratic_root_correct")
      (("" (INSTEEP)
        (("" (REPLACES -1)
          (("" (EXPAND "quadratic_root")
            (("" (LEMMA "c_term_quadratic_d_eq_0")
              (("" (INSTEEP :BUT "eps")
                (("" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (SKEEP)
                      (("1" (INSTEEP) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2" (INST -2 "1")
                      (("2" (INST 1 "1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|quadratic_root_correct| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|c_term_quadratic_d_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|quadratic_roots_TCC1| 0
  (|quadratic_roots_TCC1-1| NIL 3930728930
   ("" (SKEEP)
    (("" (LEMMA "discr_eq_0")
      (("" (INSTEEP :BUT (("eps" "1")))
        (("" (ASSERT)
          (("" (REPLACES -1 :DIR RL)
            (("" (SPLASH 1)
              (("" (EXPAND "quadratic_root")
                (("" (EXPAND "c_term_quadratic")
                  (("" (REPLACES -1 :DIR RL)
                    (("" (REPLACES -2) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|discr_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|c_term_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|sqrt_0| FORMULA-DECL NIL |sqrt| |reals|)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|nnreal_times_nnreal_is_nnreal| APPLICATION-JUDGEMENT "nnreal"
     |real_types| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|quadratic_roots| SUBTYPE
    "(complex_types.complex_(complex_quadratic.r, 0), complex_types.complex_(complex_quadratic.r, 0))"
    "{roots: [complex_types.complex, complex_types.complex] | booleans.AND(roots`1 = complex_quadratic.quadratic_root(complex_quadratic.a, complex_quadratic.b, complex_quadratic.c, 1), roots`2 = complex_quadratic.quadratic_root(complex_quadratic.a, complex_quadratic.b, complex_quadratic.c, -1))}")))
 (|quadratic_roots_TCC2| 0
  (|quadratic_roots_TCC4-1| |nil| 3721325506
   ("" (SKEEP*) (("" (ASSERT) NIL NIL)) NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL (|quadratic_roots| SUBTYPE "complex_quadratic.D" "nonneg_real")))
 (|quadratic_roots_TCC3| 0
  (|quadratic_roots_TCC3-1| NIL 3930731050
   ("" (SKEEP) (("" (ASSERT) NIL NIL)) NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   NIL (|quadratic_roots| SUBTYPE "sqrt.sqrt(complex_quadratic.D)" "nzreal")))
 (|quadratic_roots_TCC4| 0
  (|quadratic_roots_TCC4-1| NIL 3930728930
   ("" (SKEEP*)
    ((""
      (CASE
          "FORALL (eps) : complex_((-b + eps*sqrtd) / a2, 0) = quadratic_root(a, b, c, eps)")
      (("1" (INST-CP -1 "1")
        (("1" (INST -1 "-1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (HIDE 3)
        (("2" (SKEEP)
          (("2" (EXPAND "quadratic_root")
            (("2" (EXPAND "c_term_quadratic") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nznum| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (/ CONST-DECL "[numfield, nznum -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|c_term_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|eq_rew| FORMULA-DECL NIL |complex_types| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|quadratic_roots| SUBTYPE
    "(complex_types.complex_(number_fields./(((number_fields.+)((number_fields.-)(complex_quadratic.b), complex_quadratic.sqrtd)), complex_quadratic.a2), 0), complex_types.complex_(number_fields./(((number_fields.-)((number_fields.-)(complex_quadratic.b), complex_quadratic.sqrtd)), complex_quadratic.a2), 0))"
    "{roots: [complex_types.complex, complex_types.complex] | booleans.AND(roots`1 = complex_quadratic.quadratic_root(complex_quadratic.a, complex_quadratic.b, complex_quadratic.c, 1), roots`2 = complex_quadratic.quadratic_root(complex_quadratic.a, complex_quadratic.b, complex_quadratic.c, -1))}")))
 (|quadratic_roots_TCC5| 0
  (|quadratic_roots_TCC6-2| |nil| 3722881825
   ("" (SKEEP*) (("" (ASSERT) NIL NIL)) NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|quadratic_roots| SUBTYPE "(number_fields.-)(complex_quadratic.D)"
    "nonneg_real"))
  (|quadratic_roots_TCC6-1| |nil| 3721390109
   ("" (SKEEP*) (("" (ASSERT) NIL NIL)) NIL) NIL NIL
   (|quadratic_roots| SUBTYPE "(number_fields.-)(complex_quadratic.D)"
    "nonneg_real")))
 (|quadratic_roots_TCC6| 0
  (|quadratic_roots_TCC6-1| NIL 3930731050
   ("" (SKEEP*) (("" (ASSERT) NIL NIL)) NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|quadratic_roots| SUBTYPE
    "sqrt.sqrt((number_fields.-)(complex_quadratic.D))" "nzreal")))
 (|quadratic_roots_TCC7| 0
  (|quadratic_roots_TCC3-1| NIL 3930728930 ("" (SUBTYPE-TCC) NIL NIL)
   ((|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL))
   NIL
   (|quadratic_roots| SUBTYPE "complex_types.complex_(complex_quadratic.a2, 0)"
    "nzcomplex")))
 (|quadratic_roots_TCC8| 0
  (|quadratic_roots_TCC7-1| NIL 3930728930
   ("" (SKEEP*)
    ((""
      (CASE
          "FORALL (eps) :  complex_(-b, eps*sqrtd) / complex_(a2, 0) = quadratic_root(a, b, c, eps)")
      (("1" (INST-CP -1 "1")
        (("1" (INST -1 "-1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
       ("2" (HIDE 4)
        (("2" (SKEEP)
          (("2" (EXPAND "quadratic_root")
            (("2" (EXPAND "c_term_quadratic") (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzreal_times_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal"
     |real_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|nzcomplex| NONEMPTY-TYPE-EQ-DECL NIL |complex_types| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|c_term_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL
   (|quadratic_roots| SUBTYPE
    "(complex_types./(complex_types.complex_((number_fields.-)(complex_quadratic.b), complex_quadratic.sqrtd), complex_types.complex_(complex_quadratic.a2, 0)), complex_types./(complex_types.complex_((number_fields.-)(complex_quadratic.b), (number_fields.-)(complex_quadratic.sqrtd)), complex_types.complex_(complex_quadratic.a2, 0)))"
    "{roots: [complex_types.complex, complex_types.complex] | booleans.AND(roots`1 = complex_quadratic.quadratic_root(complex_quadratic.a, complex_quadratic.b, complex_quadratic.c, 1), roots`2 = complex_quadratic.quadratic_root(complex_quadratic.a, complex_quadratic.b, complex_quadratic.c, -1))}")))
 (|quadratic_roots_correct| 0
  (|quadratic_roots_correct-1| |nil| 3721324048
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (SKEEP)
        (("" (TYPEPRED "quadratic_roots(a, b, c)")
          (("" (REPLACES (-1 -2))
            (("" (LEMMA "quadratic_root_correct")
              (("" (INSTEEP)
                (("" (FLATTEN)
                  (("" (SPLIT 1)
                    (("1" (FLATTEN)
                      (("1" (ASSERT)
                        (("1" (HIDE -3)
                          (("1" (REPLACES (-3 -4))
                            (("1" (SKEEP)
                              (("1" (TYPEPRED "eps")
                                (("1" (SPLIT)
                                  (("1" (ASSERT) NIL NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN)
                      (("2" (ASSERT)
                        (("2" (HIDE -2)
                          (("2" (SPLIT -1)
                            (("1" (INST 2 "1") (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (INST 2 "-1") (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|c_quadratic| CONST-DECL "complex" |complex_quadratic| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|quadratic_root_correct| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL))
   SHOSTAK))
 (|quadratic_roots_real| 0
  (|quadratic_roots_real-1| NIL 3930742853
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (NAME-REPLACE "QR" "quadratic_roots(a,b,c)" :HIDE? NIL)
        (("" (TYPEPRED "QR")
          (("" (REPLACES (-1 -2))
            (("" (HIDE -1)
              (("" (LEMMA "discr_eq_0")
                (("" (INSTEEP -1 :BUT (("eps" "1")))
                  (("" (SPLIT 1)
                    (("1" (FLATTEN)
                      (("1" (ASSERT)
                        (("1" (HIDE -3)
                          (("1" (SPLIT)
                            (("1" (ASSERT) NIL NIL)
                             ("2" (LEMMA "discr_ge_0")
                              (("2" (INST?)
                                (("2" (ASSERT)
                                  (("2" (INST -1 "1") (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|discr_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|discr_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL))
   SHOSTAK))
 (|quadratic_roots_reals| 0
  (|quadratic_roots_reals-1| NIL 3930747339
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (NAME-REPLACE "QR" "quadratic_roots(a, b, c)" :HIDE? NIL)
        (("" (TYPEPRED "QR")
          (("" (REPLACES (-1 -2))
            (("" (SPLIT)
              (("1" (FLATTEN)
                (("1" (LEMMA "discr_eq_0")
                  (("1" (INSTEEP -1 :BUT (("eps" "1")))
                    (("1" (ASSERT)
                      (("1" (LEMMA "discr_ge_0")
                        (("1" (INSTEEP)
                          (("1" (ASSERT)
                            (("1" (INST-CP -1 "1")
                              (("1" (INST -1 "-1") (("1" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (LEMMA "discr_eq_0")
                  (("2" (INST?)
                    (("2" (ASSERT)
                      (("2" (LEMMA "discr_lt_0")
                        (("2" (INSTEEP)
                          (("2" (ASSERT)
                            (("2" (INST-CP -1 "1")
                              (("2" (INST -1 "-1") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|discr_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|discr_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|discr_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|quadratic_roots_complex| 0
  (|quadratic_roots_complex-1| NIL 3930748322
   ("" (SKEEP)
    (("" (SKOLETIN)
      (("" (NAME-REPLACE "QR" "quadratic_roots(a, b, c)" :HIDE? NIL)
        (("" (TYPEPRED "QR")
          (("" (REPLACES (-1 -2))
            (("" (HIDE -1)
              (("" (SPLIT)
                (("1" (FLATTEN)
                  (("1" (LEMMA "discr_eq_0")
                    (("1" (INSTEEP -1 :BUT (("eps" "1")))
                      (("1" (ASSERT)
                        (("1" (LEMMA "discr_le_0")
                          (("1" (INSTEEP -1 :BUT (("eps" "1")))
                            (("1" (ASSERT)
                              (("1" (LEMMA "discr_lt_0")
                                (("1" (INSTEEP)
                                  (("1" (ASSERT)
                                    (("1" (INST-CP -1 "1")
                                      (("1" (INST -1 "-1")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (LEMMA "discr_ge_0")
                    (("2" (INSTEEP)
                      (("2" (ASSERT)
                        (("2" (INST-CP -1 "1")
                          (("2" (INST -1 "-1") (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (|quadratic_root| CONST-DECL "complex" |complex_quadratic| NIL)
    (|Sign| TYPE-EQ-DECL NIL |sign| |reals|)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzint| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nzreal| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|complex| TYPE-EQ-DECL NIL |complex_types| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|conjugate| CONST-DECL "complex" |complex_types| NIL)
    (|real_?| CONST-DECL "bool" |complex_types| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|nonzero_real| NONEMPTY-TYPE-EQ-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|discr_ge_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|discr_le_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|discr_lt_0| FORMULA-DECL NIL |complex_quadratic| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|discr_eq_0| FORMULA-DECL NIL |complex_quadratic| NIL))
   SHOSTAK))
 (|qtest_r| 0
  (|qtest_r-1| |nil| 3721327717 ("" (GRIND) NIL NIL)
   ((|sq| CONST-DECL "nonneg_real" |sq| |reals|)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL))
   SHOSTAK))
 (|qtest_rr| 0
  (|qtest_rr-1| |nil| 3721327748
   ("" (GRIND)
    (("1" (EVAL-EXPR "sq(7)")
      (("1" (REPLACES -1 :DIR RL)
        (("1" (REWRITE "reals@sqrt_sq") (("1" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL)
     ("2" (EVAL-EXPR "sq(7)")
      (("2" (REPLACES -1 :DIR RL)
        (("2" (REWRITE "reals@sqrt_sq") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|minus_u8_u8| APPLICATION-JUDGEMENT "int16" |integertypes| NIL)
    (|minus_i32_u32| APPLICATION-JUDGEMENT "int64" |integertypes| NIL)
    (|minus_i16_u16| APPLICATION-JUDGEMENT "int32" |integertypes| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|sqrt_sq| FORMULA-DECL NIL |sqrt| |reals|)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|rat_div_nzrat_is_rat| APPLICATION-JUDGEMENT "rat" |rationals| NIL)
    (|minus_i8_u8| APPLICATION-JUDGEMENT "int16" |integertypes| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|posrat_div_posrat_is_posrat| APPLICATION-JUDGEMENT "posrat" |rationals|
     NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_div_nzreal_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   NIL))
 (|qtest_cc| 0
  (|qtest_cc-1| |nil| 3721327778 ("" (GRIND) NIL NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|nzreal_div_nzreal_is_nzreal| APPLICATION-JUDGEMENT "nzreal" |real_types|
     NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sq_nz_pos| APPLICATION-JUDGEMENT "posreal" |sq| |reals|)
    (|sqrt_pos| APPLICATION-JUDGEMENT "posreal" |sqrt| |reals|)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posreal_plus_nnreal_is_posreal| APPLICATION-JUDGEMENT "posreal"
     |real_types| NIL)
    (|quadratic_roots| CONST-DECL "{roots: [complex, complex] |
   LET (r1, r2) = roots IN
     r1 = quadratic_root(a, b, c, 1) AND r2 = quadratic_root(a, b, c, -1)}"
     |complex_quadratic| NIL)
    (/ CONST-DECL "complex" |complex_types| NIL)
    (|sq_abs| CONST-DECL "nnreal" |complex_types| NIL)
    (|complex_| CONST-DECL "complex" |complex_types| NIL)
    (|sqrt_4| FORMULA-DECL NIL |sqrt| |reals|)
    (|discr| CONST-DECL "real" |quadratic| |reals|)
    (|sq| CONST-DECL "nonneg_real" |sq| |reals|))
   SHOSTAK)))

